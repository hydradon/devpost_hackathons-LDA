[
    {
        "url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019/issues/2",
        "repository_url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019",
        "labels_url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019/issues/2/labels{/name}",
        "comments_url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019/issues/2/comments",
        "events_url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019/issues/2/events",
        "html_url": "https://github.com/AryanAfrouzi/Starterhacks-2019/pull/2",
        "id": 398599076,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ0MjQ2ODkz",
        "number": 2,
        "title": "Front End",
        "user": {
            "login": "mathlord2",
            "id": 42785168,
            "node_id": "MDQ6VXNlcjQyNzg1MTY4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/42785168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mathlord2",
            "html_url": "https://github.com/mathlord2",
            "followers_url": "https://api.github.com/users/mathlord2/followers",
            "following_url": "https://api.github.com/users/mathlord2/following{/other_user}",
            "gists_url": "https://api.github.com/users/mathlord2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mathlord2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mathlord2/subscriptions",
            "organizations_url": "https://api.github.com/users/mathlord2/orgs",
            "repos_url": "https://api.github.com/users/mathlord2/repos",
            "events_url": "https://api.github.com/users/mathlord2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mathlord2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-01-12T22:41:39Z",
        "updated_at": "2019-01-12T23:06:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019/pulls/2",
            "html_url": "https://github.com/AryanAfrouzi/Starterhacks-2019/pull/2",
            "diff_url": "https://github.com/AryanAfrouzi/Starterhacks-2019/pull/2.diff",
            "patch_url": "https://github.com/AryanAfrouzi/Starterhacks-2019/pull/2.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019/issues/1",
        "repository_url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019",
        "labels_url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019/issues/1/labels{/name}",
        "comments_url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019/issues/1/comments",
        "events_url": "https://api.github.com/repos/AryanAfrouzi/Starterhacks-2019/issues/1/events",
        "html_url": "https://github.com/AryanAfrouzi/Starterhacks-2019/issues/1",
        "id": 398595430,
        "node_id": "MDU6SXNzdWUzOTg1OTU0MzA=",
        "number": 1,
        "title": "@srikt6882",
        "user": {
            "login": "mathlord2",
            "id": 42785168,
            "node_id": "MDQ6VXNlcjQyNzg1MTY4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/42785168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mathlord2",
            "html_url": "https://github.com/mathlord2",
            "followers_url": "https://api.github.com/users/mathlord2/followers",
            "following_url": "https://api.github.com/users/mathlord2/following{/other_user}",
            "gists_url": "https://api.github.com/users/mathlord2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mathlord2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mathlord2/subscriptions",
            "organizations_url": "https://api.github.com/users/mathlord2/orgs",
            "repos_url": "https://api.github.com/users/mathlord2/repos",
            "events_url": "https://api.github.com/users/mathlord2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mathlord2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-01-12T21:50:20Z",
        "updated_at": "2019-01-12T21:56:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "``from tkinter import *\r\n\r\nclass Window(Frame):\r\n\r\n    # Define settings upon initialization. Here you can specify\r\n    def __init__(self, master=None):\r\n        \r\n        # parameters that you want to send through the Frame class. \r\n        Frame.__init__(self, master)   \r\n\r\n        #reference to the master widget, which is the tk window                 \r\n        self.master = master\r\n\r\n        #with that, we want to then run init_window, which doesn't yet exist\r\n        self.init_window()\r\n\r\n    #Creation of init_window\r\n    def init_window(self):\r\n\r\n        # changing the title of our master widget      \r\n        self.master.title(\"GUI\")\r\n\r\n        # allowing the widget to take the full space of the root window\r\n        self.pack(fill=BOTH, expand=1)\r\n\r\n        # creating a menu instance\r\n        menu = Menu(self.master)\r\n        self.master.config(menu=menu)\r\n\r\n        # create the file object)\r\n        file = Menu(menu)\r\n\r\n        # adds a command to the menu option, calling it exit, and the\r\n        # command it runs on event is client_exit\r\n        file.add_command(label=\"Exit\", command=self.client_exit)\r\n\r\n        #added \"file\" to our menu\r\n        menu.add_cascade(label=\"File\", menu=file)\r\n\r\n        # create the file object)\r\n        edit = Menu(menu)\r\n\r\n        # adds a command to the menu option, calling it exit, and the\r\n        # command it runs on event is client_exit\r\n        edit.add_command(label=\"Undo\")\r\n\r\n        #added \"file\" to our menu\r\n        menu.add_cascade(label=\"Edit\", menu=edit)\r\n\r\n    \r\n    def client_exit(self):\r\n        exit()\r\n\r\nroot = Tk()\r\n\r\nroot.geometry(\"400x300\")\r\n\r\n#creation of an instance\r\napp = Window(root)\r\n\r\n#mainloop \r\nroot.mainloop()"
    }
]