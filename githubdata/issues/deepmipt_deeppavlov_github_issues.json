[
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1129",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1129/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1129/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1129/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1129",
        "id": 564455939,
        "node_id": "MDU6SXNzdWU1NjQ0NTU5Mzk=",
        "number": 1129,
        "title": "What are supported list of languages in Multi-lang model",
        "user": {
            "login": "helloworldkr",
            "id": 9402190,
            "node_id": "MDQ6VXNlcjk0MDIxOTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9402190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/helloworldkr",
            "html_url": "https://github.com/helloworldkr",
            "followers_url": "https://api.github.com/users/helloworldkr/followers",
            "following_url": "https://api.github.com/users/helloworldkr/following{/other_user}",
            "gists_url": "https://api.github.com/users/helloworldkr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/helloworldkr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/helloworldkr/subscriptions",
            "organizations_url": "https://api.github.com/users/helloworldkr/orgs",
            "repos_url": "https://api.github.com/users/helloworldkr/repos",
            "events_url": "https://api.github.com/users/helloworldkr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/helloworldkr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-13T05:49:42Z",
        "updated_at": "2020-02-13T05:49:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi guys,\r\nI could not find anywhere the list of languages that are supported by your Multi-lang QnA model."
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1128",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1128/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1128/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1128/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1128",
        "id": 563983551,
        "node_id": "MDU6SXNzdWU1NjM5ODM1NTE=",
        "number": 1128,
        "title": "Link for Russian FAQ dataset is broken",
        "user": {
            "login": "bespaloff",
            "id": 12160343,
            "node_id": "MDQ6VXNlcjEyMTYwMzQz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/12160343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bespaloff",
            "html_url": "https://github.com/bespaloff",
            "followers_url": "https://api.github.com/users/bespaloff/followers",
            "following_url": "https://api.github.com/users/bespaloff/following{/other_user}",
            "gists_url": "https://api.github.com/users/bespaloff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bespaloff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bespaloff/subscriptions",
            "organizations_url": "https://api.github.com/users/bespaloff/orgs",
            "repos_url": "https://api.github.com/users/bespaloff/repos",
            "events_url": "https://api.github.com/users/bespaloff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bespaloff/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-12T12:58:41Z",
        "updated_at": "2020-02-12T13:00:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Link for the dataset in documentation to train FAQ bot in Russian is broken:\r\nOrigin in docs: https://github.com/deepmipt/DeepPavlov/blob/master/docs/features/skills/faq.rst\r\nBroken Link: http://www.ftl.name/page/989\r\n\r\nAs well as following links for files: \r\nhttp://files.deeppavlov.ai/faq/school/faq_tfidf_cos_model.pkl"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1127",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1127/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1127/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1127/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1127",
        "id": 562597344,
        "node_id": "MDU6SXNzdWU1NjI1OTczNDQ=",
        "number": 1127,
        "title": "Confidence and start/stop index in NER",
        "user": {
            "login": "Grossmend",
            "id": 31373974,
            "node_id": "MDQ6VXNlcjMxMzczOTc0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/31373974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Grossmend",
            "html_url": "https://github.com/Grossmend",
            "followers_url": "https://api.github.com/users/Grossmend/followers",
            "following_url": "https://api.github.com/users/Grossmend/following{/other_user}",
            "gists_url": "https://api.github.com/users/Grossmend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Grossmend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Grossmend/subscriptions",
            "organizations_url": "https://api.github.com/users/Grossmend/orgs",
            "repos_url": "https://api.github.com/users/Grossmend/repos",
            "events_url": "https://api.github.com/users/Grossmend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Grossmend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-10T14:28:08Z",
        "updated_at": "2020-02-10T14:28:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Good day!\r\n\r\nIt is possible return from NER model **confidence** and (or) **start/stop** position entities?\r\nBy default model return `[\"x_tokens\", \"y_pred\"]`"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1126",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1126/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1126/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1126/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1126",
        "id": 562056654,
        "node_id": "MDU6SXNzdWU1NjIwNTY2NTQ=",
        "number": 1126,
        "title": "No way to read 'test.csv' without labels",
        "user": {
            "login": "DrMatters",
            "id": 22641583,
            "node_id": "MDQ6VXNlcjIyNjQxNTgz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/22641583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DrMatters",
            "html_url": "https://github.com/DrMatters",
            "followers_url": "https://api.github.com/users/DrMatters/followers",
            "following_url": "https://api.github.com/users/DrMatters/following{/other_user}",
            "gists_url": "https://api.github.com/users/DrMatters/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DrMatters/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DrMatters/subscriptions",
            "organizations_url": "https://api.github.com/users/DrMatters/orgs",
            "repos_url": "https://api.github.com/users/DrMatters/repos",
            "events_url": "https://api.github.com/users/DrMatters/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DrMatters/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-08T18:09:13Z",
        "updated_at": "2020-02-08T18:10:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hello!\r\nI'm trying to read train.csv and test.csv files with this call:\r\n`\r\ndataset = BasicClassificationDatasetReader()\r\n`\r\n`\r\ndataset.read('/data/', train='train.csv', test='test.csv', x='text', y='target')\r\n`\r\nThat finishes with an error, because 'test.csv' has no 'target'. How to read dataset without labels to make a predictions on it?"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1125",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1125/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1125/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1125/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1125",
        "id": 558199500,
        "node_id": "MDU6SXNzdWU1NTgxOTk1MDA=",
        "number": 1125,
        "title": "Can't figure out how to use this for general chatbot",
        "user": {
            "login": "memologyserver",
            "id": 60271550,
            "node_id": "MDQ6VXNlcjYwMjcxNTUw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/60271550?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/memologyserver",
            "html_url": "https://github.com/memologyserver",
            "followers_url": "https://api.github.com/users/memologyserver/followers",
            "following_url": "https://api.github.com/users/memologyserver/following{/other_user}",
            "gists_url": "https://api.github.com/users/memologyserver/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/memologyserver/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/memologyserver/subscriptions",
            "organizations_url": "https://api.github.com/users/memologyserver/orgs",
            "repos_url": "https://api.github.com/users/memologyserver/repos",
            "events_url": "https://api.github.com/users/memologyserver/events{/privacy}",
            "received_events_url": "https://api.github.com/users/memologyserver/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-31T15:29:58Z",
        "updated_at": "2020-01-31T15:29:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi, I am interested in developing a general purpose chatbot that you can do two things. Have normal conversations with and ask for specific things like cheapest resturant. Having looked at this i'm struggling to work out how i can use this for this purpose\r\n\r\nAny help would be appreciated"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1124",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1124/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1124/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1124/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/pull/1124",
        "id": 556278996,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY4MDcxNTM3",
        "number": 1124,
        "title": "fix: rollback to tf-1.14.0",
        "user": {
            "login": "yoptar",
            "id": 5615053,
            "node_id": "MDQ6VXNlcjU2MTUwNTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5615053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yoptar",
            "html_url": "https://github.com/yoptar",
            "followers_url": "https://api.github.com/users/yoptar/followers",
            "following_url": "https://api.github.com/users/yoptar/following{/other_user}",
            "gists_url": "https://api.github.com/users/yoptar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yoptar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yoptar/subscriptions",
            "organizations_url": "https://api.github.com/users/yoptar/orgs",
            "repos_url": "https://api.github.com/users/yoptar/repos",
            "events_url": "https://api.github.com/users/yoptar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yoptar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-28T15:18:55Z",
        "updated_at": "2020-01-28T15:18:55Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/deepmipt/DeepPavlov/pulls/1124",
            "html_url": "https://github.com/deepmipt/DeepPavlov/pull/1124",
            "diff_url": "https://github.com/deepmipt/DeepPavlov/pull/1124.diff",
            "patch_url": "https://github.com/deepmipt/DeepPavlov/pull/1124.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1122",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1122/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1122/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1122/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1122",
        "id": 554134041,
        "node_id": "MDU6SXNzdWU1NTQxMzQwNDE=",
        "number": 1122,
        "title": "building go-bot in russian",
        "user": {
            "login": "Grossmend",
            "id": 31373974,
            "node_id": "MDQ6VXNlcjMxMzczOTc0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/31373974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Grossmend",
            "html_url": "https://github.com/Grossmend",
            "followers_url": "https://api.github.com/users/Grossmend/followers",
            "following_url": "https://api.github.com/users/Grossmend/following{/other_user}",
            "gists_url": "https://api.github.com/users/Grossmend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Grossmend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Grossmend/subscriptions",
            "organizations_url": "https://api.github.com/users/Grossmend/orgs",
            "repos_url": "https://api.github.com/users/Grossmend/repos",
            "events_url": "https://api.github.com/users/Grossmend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Grossmend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "jen1995",
            "id": 26380691,
            "node_id": "MDQ6VXNlcjI2MzgwNjkx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/26380691?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jen1995",
            "html_url": "https://github.com/jen1995",
            "followers_url": "https://api.github.com/users/jen1995/followers",
            "following_url": "https://api.github.com/users/jen1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/jen1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jen1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jen1995/subscriptions",
            "organizations_url": "https://api.github.com/users/jen1995/orgs",
            "repos_url": "https://api.github.com/users/jen1995/repos",
            "events_url": "https://api.github.com/users/jen1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jen1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jen1995",
                "id": 26380691,
                "node_id": "MDQ6VXNlcjI2MzgwNjkx",
                "avatar_url": "https://avatars1.githubusercontent.com/u/26380691?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jen1995",
                "html_url": "https://github.com/jen1995",
                "followers_url": "https://api.github.com/users/jen1995/followers",
                "following_url": "https://api.github.com/users/jen1995/following{/other_user}",
                "gists_url": "https://api.github.com/users/jen1995/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jen1995/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jen1995/subscriptions",
                "organizations_url": "https://api.github.com/users/jen1995/orgs",
                "repos_url": "https://api.github.com/users/jen1995/repos",
                "events_url": "https://api.github.com/users/jen1995/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jen1995/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-23T12:43:24Z",
        "updated_at": "2020-01-28T14:59:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Good day!\r\n\r\nI want to build a go-bot using DeepPavlov in russian language (on example of this [notebook](https://colab.research.google.com/github/deepmipt/DeepPavlov/blob/master/examples/gobot_extended_tutorial.ipynb)).\r\nI created dataset by DSTC2 format. Now i want add NER training in go bot config pipline. Because my dataset includes **_names_** and **_phones_**. All possible variants i **can't** include in slot_vals.json\r\n\r\nIt is possible to implement on DeepPavlov?"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1120",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1120/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1120/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1120/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1120",
        "id": 553406822,
        "node_id": "MDU6SXNzdWU1NTM0MDY4MjI=",
        "number": 1120,
        "title": "FileNotFoundError - No such file or directory: 'deeppavlov/configs/ner/ner_ontonotes.json'",
        "user": {
            "login": "pearly-ang",
            "id": 43221298,
            "node_id": "MDQ6VXNlcjQzMjIxMjk4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/43221298?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pearly-ang",
            "html_url": "https://github.com/pearly-ang",
            "followers_url": "https://api.github.com/users/pearly-ang/followers",
            "following_url": "https://api.github.com/users/pearly-ang/following{/other_user}",
            "gists_url": "https://api.github.com/users/pearly-ang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pearly-ang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pearly-ang/subscriptions",
            "organizations_url": "https://api.github.com/users/pearly-ang/orgs",
            "repos_url": "https://api.github.com/users/pearly-ang/repos",
            "events_url": "https://api.github.com/users/pearly-ang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pearly-ang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-01-22T09:17:01Z",
        "updated_at": "2020-02-12T15:55:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "<img width=\"1016\" alt=\"Screen Shot 2020-01-22 at 5 14 26 PM\" src=\"https://user-images.githubusercontent.com/43221298/72880899-bad2dc00-3d3a-11ea-80ee-6d4be0369368.png\">\r\n\r\nI am unable to load the pre-trained model on Onto Notes 5. Would appreciate any good suggestions. Thanks!"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1119",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1119/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1119/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1119/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1119",
        "id": 552542767,
        "node_id": "MDU6SXNzdWU1NTI1NDI3Njc=",
        "number": 1119,
        "title": "ValueError: not enough values to unpack (expected 2, got 1)",
        "user": {
            "login": "sadaction",
            "id": 6422522,
            "node_id": "MDQ6VXNlcjY0MjI1MjI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6422522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sadaction",
            "html_url": "https://github.com/sadaction",
            "followers_url": "https://api.github.com/users/sadaction/followers",
            "following_url": "https://api.github.com/users/sadaction/following{/other_user}",
            "gists_url": "https://api.github.com/users/sadaction/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sadaction/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sadaction/subscriptions",
            "organizations_url": "https://api.github.com/users/sadaction/orgs",
            "repos_url": "https://api.github.com/users/sadaction/repos",
            "events_url": "https://api.github.com/users/sadaction/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sadaction/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "dilyararimovna",
            "id": 14152126,
            "node_id": "MDQ6VXNlcjE0MTUyMTI2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/14152126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dilyararimovna",
            "html_url": "https://github.com/dilyararimovna",
            "followers_url": "https://api.github.com/users/dilyararimovna/followers",
            "following_url": "https://api.github.com/users/dilyararimovna/following{/other_user}",
            "gists_url": "https://api.github.com/users/dilyararimovna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dilyararimovna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dilyararimovna/subscriptions",
            "organizations_url": "https://api.github.com/users/dilyararimovna/orgs",
            "repos_url": "https://api.github.com/users/dilyararimovna/repos",
            "events_url": "https://api.github.com/users/dilyararimovna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dilyararimovna/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "dilyararimovna",
                "id": 14152126,
                "node_id": "MDQ6VXNlcjE0MTUyMTI2",
                "avatar_url": "https://avatars2.githubusercontent.com/u/14152126?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dilyararimovna",
                "html_url": "https://github.com/dilyararimovna",
                "followers_url": "https://api.github.com/users/dilyararimovna/followers",
                "following_url": "https://api.github.com/users/dilyararimovna/following{/other_user}",
                "gists_url": "https://api.github.com/users/dilyararimovna/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dilyararimovna/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dilyararimovna/subscriptions",
                "organizations_url": "https://api.github.com/users/dilyararimovna/orgs",
                "repos_url": "https://api.github.com/users/dilyararimovna/repos",
                "events_url": "https://api.github.com/users/dilyararimovna/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dilyararimovna/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-01-20T22:58:34Z",
        "updated_at": "2020-01-26T17:22:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "\u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435!\r\n\u043f\u0440\u043e\u0431\u0443\u044e \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e \u0432\u0430\u0448\u0438\u043c \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u043c \u0432 https://github.com/deepmipt/DeepPavlov/issues/890\r\n\u043f\u043e\u043b\u0443\u0447\u0430\u044e \u043e\u0448\u0438\u0431\u043a\u0443 ValueError: not enough values to unpack (expected 2, got 1)\r\n\r\n\u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043b \u0438 \u0432\u044b\u0447\u0438\u0441\u0442\u0438\u043b  \u043f\u0435\u0440\u0435\u043d\u043e\u0441 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0435 text \u0432 train.csv\r\ntrain.csv \u0438\u043c\u0435\u0435\u0442 \u0432\u0438\u0434: \r\ntext,classes,classes_1,classes_2\r\n\"\u041f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u044b\u043f\u0430\u0434\u0430\u0435\u0442 \u0442\u0430\u0431\u043b\u043e '\u041d\u0435\u0438\u0441\u043f\u0440\u0430\u0432\u043d\u043e\u0441\u0442\u044c \u0421\u0413\u0418\u0423'. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 \u0436\u0443\u0440\u043d\u0430\u043b\u0435 1\u0428\u0421\u041a\u0414 '\u043d\u0435\u0442 \u0441\u0432\u044f\u0437\u0438 \u0441 \u0428\u0421\u041a\u0414 \u043f\u043e \u043a\u0430\u043d\u0430\u043b\u0443 100 BASE 2FX'.\",0,3,249\r\n\"\u041d\u0435 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043b\u0443\u0431\u0440\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043e\u043c\u043f\u0440\u0435\u0441\u0441\u043e\u0440\u0430 \u21162.\",0,2,211\r\n\"\u041d\u0435\u0442 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441 '\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0430' \u043d\u0430 \u0440\u0443\u0447\u043d\u043e\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434.\",0,2,217\r\n\r\n classes.dict \u0438\u043c\u0435\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0432\u0438\u0434\r\nclasses\t0\r\nclasses_1\t3\r\nclasses_2\t249\r\nName: 9622, dtype: object\t1\r\nclasses\t0\r\nclasses_1\t2\r\nclasses_2\t173\r\nName: 5283, dtype: object\t1\r\nclasses        0\r\nclasses_1      2\r\nclasses_2    166\r\nName: 7745, dtype: object\t1\r\nclasses       1\r\nclasses_1     2\r\nclasses_2    33\r\nName: 14129, dtype: object\t1\r\n\r\n\u043c\u0435\u0436\u0434\u0443 classes \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0441\u0442\u043e\u044f\u0442 \u043f\u0440\u043e\u0431\u0435\u043b\u044b, \u0445\u043e\u0442\u044f \u043a\u0430\u043a \u044f \u043f\u043e\u043d\u044f\u043b \u0438\u0437 \u043a\u043e\u0434\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0435\u043c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0437\u043d\u0430\u043a \u0442\u0430\u0431\u0443\u043b\u044f\u0446\u0438\u0438.\r\n\r\n\u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0438\u0433\u0430\r\n{\r\n  \"dataset_reader\": {\r\n    \"class_name\": \"basic_classification_reader\",\r\n    \"x\": \"text\",\r\n    \"y\": [\"classes\",\"classes_1\",\"classes_2\"],\r\n    \"data_path\": \"/var/local/\",\r\n    \"train\": \"train_main.csv\",\r\n    \"test\": \"train_test.csv\"\r\n  },\r\n  \"dataset_iterator\": {\r\n    \"class_name\": \"basic_classification_iterator\",\r\n    \"seed\": 42,\r\n    \"split_seed\": 23,\r\n    \"field_to_split\": \"train\",\r\n    \"split_fields\": [\r\n      \"train\",\r\n      \"valid\"\r\n    ],\r\n    \"split_proportions\": [\r\n      0.9,\r\n      0.1\r\n    ]\r\n  },\r\n  \"chainer\": {\r\n    \"in\": [\r\n      \"x\"\r\n    ],\r\n    \"in_y\": [\r\n      \"y\"\r\n    ],\r\n    \"pipe\": [\r\n      {\r\n        \"class_name\": \"bert_preprocessor\",\r\n        \"n_classes\":3,\r\n        \"vocab_file\": \"/.deeppavlov/downloads/bert_models/rubert_cased_L-12_H-768_A-12_v1/vocab.txt\",\r\n        \"do_lower_case\": false,\r\n        \"max_seq_length\": 64,\r\n        \"in\": [\r\n          \"x\"\r\n        ],\r\n        \"out\": [\r\n          \"bert_features\"\r\n        ]\r\n      },\r\n      {\r\n        \"id\": \"classes_vocab\",\r\n        \"class_name\": \"simple_vocab\",\r\n        \"fit_on\": [\r\n          \"y\"\r\n        ],\r\n        \"save_path\": \"/var/local/classes.dict\",\r\n        \"load_path\": \"/var/local/classes.dict\",\r\n        \"in\": \"y\",\r\n        \"out\": \"y_ids\"\r\n      },\r\n      {\r\n        \"in\": \"y_ids\",\r\n        \"out\": \"y_onehot\",\r\n        \"class_name\": \"one_hotter\",\r\n        \"depth\": \"#classes_vocab.len\",\r\n        \"single_vector\": true\r\n      },\r\n      {\r\n        \"class_name\": \"bert_classifier\",\r\n        \"n_classes\": 3,\r\n        \"return_probas\": true,\r\n        \"one_hot_labels\": true,\r\n        \"bert_config_file\": \"/.deeppavlov/downloads/bert_models/rubert_cased_L-12_H-768_A-12_v1/bert_config.json\",\r\n        \"pretrained_bert\": \"/.deeppavlov/downloads/bert_models/rubert_cased_L-12_H-768_A-12_v1/bert_model.ckpt\",\r\n        \"save_path\": \"/var/local/models/model\",\r\n        \"load_path\": \"/var/local/models/model\",\r\n        \"keep_prob\": 0.5,\r\n        \"optimizer\": \"tf.train:AdamOptimizer\",\r\n        \"learning_rate\": 1e-05,\r\n        \"learning_rate_drop_patience\": 3,\r\n        \"learning_rate_drop_div\": 2.0,\r\n        \"in\": [\r\n          \"bert_features\"\r\n        ],\r\n        \"in_y\": [\r\n          \"y_onehot\"\r\n        ],\r\n        \"out\": [\r\n          \"y_pred_probas\"\r\n        ]\r\n      },\r\n      {\r\n        \"in\": \"y_pred_probas\",\r\n        \"out\": \"y_pred_ids\",\r\n        \"class_name\": \"proba2labels\",\r\n        \"max_proba\": true\r\n      },\r\n      {\r\n        \"in\": \"y_pred_ids\",\r\n        \"out\": \"y_pred_labels\",\r\n        \"ref\": \"classes_vocab\"\r\n      }\r\n    ],\r\n    \"out\": [\r\n      \"y_pred_labels\"\r\n    ]\r\n  },\r\n  \"train\": {\r\n    \"batch_size\": 4,\r\n    \"epochs\": 40,\r\n    \"metrics\": [\r\n      \"sets_accuracy\"\r\n      ],\r\n    \"validation_patience\": 3,\r\n    \"val_every_n_epochs\": 1,\r\n    \"log_every_n_epochs\": 1,\r\n    \"show_examples\": false,\r\n    \"evaluation_targets\": [\r\n      \"train\",\r\n      \"valid\",\r\n      \"test\"\r\n    ],\r\n    \"class_name\": \"nn_trainer\",\r\n    \"tensorboard_log_dir\": \"/var/local/models/\"\r\n  },\r\n  \"metadata\": {\r\n    \"requirements\": [\r\n      \"{DEEPPAVLOV_PATH}/requirements/tf.txt\",\r\n      \"{DEEPPAVLOV_PATH}/requirements/bert_dp.txt\"\r\n    ]\r\n          }\r\n}"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1118",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1118/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1118/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1118/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1118",
        "id": 550666232,
        "node_id": "MDU6SXNzdWU1NTA2NjYyMzI=",
        "number": 1118,
        "title": "Changing start_message in sever_config.json does not change message in Telegram bot",
        "user": {
            "login": "JonasNothnagel",
            "id": 46482413,
            "node_id": "MDQ6VXNlcjQ2NDgyNDEz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/46482413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JonasNothnagel",
            "html_url": "https://github.com/JonasNothnagel",
            "followers_url": "https://api.github.com/users/JonasNothnagel/followers",
            "following_url": "https://api.github.com/users/JonasNothnagel/following{/other_user}",
            "gists_url": "https://api.github.com/users/JonasNothnagel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JonasNothnagel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JonasNothnagel/subscriptions",
            "organizations_url": "https://api.github.com/users/JonasNothnagel/orgs",
            "repos_url": "https://api.github.com/users/JonasNothnagel/repos",
            "events_url": "https://api.github.com/users/JonasNothnagel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JonasNothnagel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "IgnatovFedor",
            "id": 11364929,
            "node_id": "MDQ6VXNlcjExMzY0OTI5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11364929?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IgnatovFedor",
            "html_url": "https://github.com/IgnatovFedor",
            "followers_url": "https://api.github.com/users/IgnatovFedor/followers",
            "following_url": "https://api.github.com/users/IgnatovFedor/following{/other_user}",
            "gists_url": "https://api.github.com/users/IgnatovFedor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IgnatovFedor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IgnatovFedor/subscriptions",
            "organizations_url": "https://api.github.com/users/IgnatovFedor/orgs",
            "repos_url": "https://api.github.com/users/IgnatovFedor/repos",
            "events_url": "https://api.github.com/users/IgnatovFedor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IgnatovFedor/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "IgnatovFedor",
                "id": 11364929,
                "node_id": "MDQ6VXNlcjExMzY0OTI5",
                "avatar_url": "https://avatars1.githubusercontent.com/u/11364929?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/IgnatovFedor",
                "html_url": "https://github.com/IgnatovFedor",
                "followers_url": "https://api.github.com/users/IgnatovFedor/followers",
                "following_url": "https://api.github.com/users/IgnatovFedor/following{/other_user}",
                "gists_url": "https://api.github.com/users/IgnatovFedor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/IgnatovFedor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/IgnatovFedor/subscriptions",
                "organizations_url": "https://api.github.com/users/IgnatovFedor/orgs",
                "repos_url": "https://api.github.com/users/IgnatovFedor/repos",
                "events_url": "https://api.github.com/users/IgnatovFedor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/IgnatovFedor/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-01-16T09:01:45Z",
        "updated_at": "2020-01-16T14:46:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I built the telegram bot as described in the tutorials. It works fine and gives me context driven inferences to my questions. However, changing the \"start_message\" and \"help_message\" entries in the server_config.json file does not change anything in the bot. How can I edit my telegram bot accordingly? Thank you!"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1117",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1117/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1117/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1117/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1117",
        "id": 550512800,
        "node_id": "MDU6SXNzdWU1NTA1MTI4MDA=",
        "number": 1117,
        "title": "What are the steps for creating another language support (eg: Korean)?",
        "user": {
            "login": "Eugen2525",
            "id": 13747115,
            "node_id": "MDQ6VXNlcjEzNzQ3MTE1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13747115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Eugen2525",
            "html_url": "https://github.com/Eugen2525",
            "followers_url": "https://api.github.com/users/Eugen2525/followers",
            "following_url": "https://api.github.com/users/Eugen2525/following{/other_user}",
            "gists_url": "https://api.github.com/users/Eugen2525/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Eugen2525/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Eugen2525/subscriptions",
            "organizations_url": "https://api.github.com/users/Eugen2525/orgs",
            "repos_url": "https://api.github.com/users/Eugen2525/repos",
            "events_url": "https://api.github.com/users/Eugen2525/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Eugen2525/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-01-16T00:58:50Z",
        "updated_at": "2020-01-17T10:07:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi, \r\n\r\nI am considering creating language support for the Korean language, and I am interested in what are the requirements, steps I need to take?\r\n\r\nCould you please elaborate on the steps and also on the feasibility of doing so?\r\n\r\nThanks!"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1111",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1111/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1111/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1111/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1111",
        "id": 547432925,
        "node_id": "MDU6SXNzdWU1NDc0MzI5MjU=",
        "number": 1111,
        "title": "Debug mode to log compute time of elements in chainer pipeline",
        "user": {
            "login": "yurakuratov",
            "id": 9271630,
            "node_id": "MDQ6VXNlcjkyNzE2MzA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9271630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yurakuratov",
            "html_url": "https://github.com/yurakuratov",
            "followers_url": "https://api.github.com/users/yurakuratov/followers",
            "following_url": "https://api.github.com/users/yurakuratov/following{/other_user}",
            "gists_url": "https://api.github.com/users/yurakuratov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yurakuratov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yurakuratov/subscriptions",
            "organizations_url": "https://api.github.com/users/yurakuratov/orgs",
            "repos_url": "https://api.github.com/users/yurakuratov/repos",
            "events_url": "https://api.github.com/users/yurakuratov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yurakuratov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-09T11:54:31Z",
        "updated_at": "2020-01-09T11:54:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "It would be good for debugging purposes to log compute time (single call / total time) of elements in chainer pipeline, like profiler for chainer."
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1109",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1109/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1109/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1109/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1109",
        "id": 541698872,
        "node_id": "MDU6SXNzdWU1NDE2OTg4NzI=",
        "number": 1109,
        "title": "method download_decompress downloads non-existing files",
        "user": {
            "login": "acriptis",
            "id": 2207706,
            "node_id": "MDQ6VXNlcjIyMDc3MDY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2207706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acriptis",
            "html_url": "https://github.com/acriptis",
            "followers_url": "https://api.github.com/users/acriptis/followers",
            "following_url": "https://api.github.com/users/acriptis/following{/other_user}",
            "gists_url": "https://api.github.com/users/acriptis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acriptis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acriptis/subscriptions",
            "organizations_url": "https://api.github.com/users/acriptis/orgs",
            "repos_url": "https://api.github.com/users/acriptis/repos",
            "events_url": "https://api.github.com/users/acriptis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acriptis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 753483004,
                "node_id": "MDU6TGFiZWw3NTM0ODMwMDQ=",
                "url": "https://api.github.com/repos/deepmipt/DeepPavlov/labels/bug",
                "name": "bug",
                "color": "ee0701",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "yoptar",
            "id": 5615053,
            "node_id": "MDQ6VXNlcjU2MTUwNTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5615053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yoptar",
            "html_url": "https://github.com/yoptar",
            "followers_url": "https://api.github.com/users/yoptar/followers",
            "following_url": "https://api.github.com/users/yoptar/following{/other_user}",
            "gists_url": "https://api.github.com/users/yoptar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yoptar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yoptar/subscriptions",
            "organizations_url": "https://api.github.com/users/yoptar/orgs",
            "repos_url": "https://api.github.com/users/yoptar/repos",
            "events_url": "https://api.github.com/users/yoptar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yoptar/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "yoptar",
                "id": 5615053,
                "node_id": "MDQ6VXNlcjU2MTUwNTM=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/5615053?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/yoptar",
                "html_url": "https://github.com/yoptar",
                "followers_url": "https://api.github.com/users/yoptar/followers",
                "following_url": "https://api.github.com/users/yoptar/following{/other_user}",
                "gists_url": "https://api.github.com/users/yoptar/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/yoptar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yoptar/subscriptions",
                "organizations_url": "https://api.github.com/users/yoptar/orgs",
                "repos_url": "https://api.github.com/users/yoptar/repos",
                "events_url": "https://api.github.com/users/yoptar/events{/privacy}",
                "received_events_url": "https://api.github.com/users/yoptar/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-12-23T10:49:40Z",
        "updated_at": "2019-12-23T10:51:52Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "I've used method download_decompress to load the file from remote storage. It seems that if I provide [broken URL](http://files.deeppavlov.ai/spelling_crrectors/elmo_weights_ckpt3.tar.gz) the method downloads content without check of file validity and tries to unpack it (although it is not archieve) and silently continues on fail. \r\n\r\nI think expected behavior is to raise exception for missed file on broken URL and wrong archive formats."
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1108",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1108/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1108/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1108/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/pull/1108",
        "id": 541696628,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzU2Mjc5Nzk2",
        "number": 1108,
        "title": "Separate class network",
        "user": {
            "login": "jen1995",
            "id": 26380691,
            "node_id": "MDQ6VXNlcjI2MzgwNjkx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/26380691?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jen1995",
            "html_url": "https://github.com/jen1995",
            "followers_url": "https://api.github.com/users/jen1995/followers",
            "following_url": "https://api.github.com/users/jen1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/jen1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jen1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jen1995/subscriptions",
            "organizations_url": "https://api.github.com/users/jen1995/orgs",
            "repos_url": "https://api.github.com/users/jen1995/repos",
            "events_url": "https://api.github.com/users/jen1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jen1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-12-23T10:44:00Z",
        "updated_at": "2019-12-26T11:00:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/deepmipt/DeepPavlov/pulls/1108",
            "html_url": "https://github.com/deepmipt/DeepPavlov/pull/1108",
            "diff_url": "https://github.com/deepmipt/DeepPavlov/pull/1108.diff",
            "patch_url": "https://github.com/deepmipt/DeepPavlov/pull/1108.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1107",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1107/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1107/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1107/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1107",
        "id": 540189776,
        "node_id": "MDU6SXNzdWU1NDAxODk3NzY=",
        "number": 1107,
        "title": "Document everything useful that we have in files.deeppavlov.ai",
        "user": {
            "login": "yoptar",
            "id": 5615053,
            "node_id": "MDQ6VXNlcjU2MTUwNTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5615053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yoptar",
            "html_url": "https://github.com/yoptar",
            "followers_url": "https://api.github.com/users/yoptar/followers",
            "following_url": "https://api.github.com/users/yoptar/following{/other_user}",
            "gists_url": "https://api.github.com/users/yoptar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yoptar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yoptar/subscriptions",
            "organizations_url": "https://api.github.com/users/yoptar/orgs",
            "repos_url": "https://api.github.com/users/yoptar/repos",
            "events_url": "https://api.github.com/users/yoptar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yoptar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 753483006,
                "node_id": "MDU6TGFiZWw3NTM0ODMwMDY=",
                "url": "https://api.github.com/repos/deepmipt/DeepPavlov/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-12-19T09:32:45Z",
        "updated_at": "2019-12-19T09:32:45Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1104",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1104/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1104/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1104/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1104",
        "id": 538717049,
        "node_id": "MDU6SXNzdWU1Mzg3MTcwNDk=",
        "number": 1104,
        "title": "multi_squad_noans_infer: output empty answer for no-answer text",
        "user": {
            "login": "luke4u",
            "id": 45267576,
            "node_id": "MDQ6VXNlcjQ1MjY3NTc2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/45267576?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke4u",
            "html_url": "https://github.com/luke4u",
            "followers_url": "https://api.github.com/users/luke4u/followers",
            "following_url": "https://api.github.com/users/luke4u/following{/other_user}",
            "gists_url": "https://api.github.com/users/luke4u/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luke4u/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luke4u/subscriptions",
            "organizations_url": "https://api.github.com/users/luke4u/orgs",
            "repos_url": "https://api.github.com/users/luke4u/repos",
            "events_url": "https://api.github.com/users/luke4u/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luke4u/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "yurakuratov",
            "id": 9271630,
            "node_id": "MDQ6VXNlcjkyNzE2MzA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9271630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yurakuratov",
            "html_url": "https://github.com/yurakuratov",
            "followers_url": "https://api.github.com/users/yurakuratov/followers",
            "following_url": "https://api.github.com/users/yurakuratov/following{/other_user}",
            "gists_url": "https://api.github.com/users/yurakuratov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yurakuratov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yurakuratov/subscriptions",
            "organizations_url": "https://api.github.com/users/yurakuratov/orgs",
            "repos_url": "https://api.github.com/users/yurakuratov/repos",
            "events_url": "https://api.github.com/users/yurakuratov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yurakuratov/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "yurakuratov",
                "id": 9271630,
                "node_id": "MDQ6VXNlcjkyNzE2MzA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/9271630?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/yurakuratov",
                "html_url": "https://github.com/yurakuratov",
                "followers_url": "https://api.github.com/users/yurakuratov/followers",
                "following_url": "https://api.github.com/users/yurakuratov/following{/other_user}",
                "gists_url": "https://api.github.com/users/yurakuratov/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/yurakuratov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yurakuratov/subscriptions",
                "organizations_url": "https://api.github.com/users/yurakuratov/orgs",
                "repos_url": "https://api.github.com/users/yurakuratov/repos",
                "events_url": "https://api.github.com/users/yurakuratov/events{/privacy}",
                "received_events_url": "https://api.github.com/users/yurakuratov/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-12-16T22:41:42Z",
        "updated_at": "2019-12-19T11:40:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi Guys,\r\n\r\nFor config (multi_squad_noans_infer), I wonder how the model determines if there is no answer in a text? and if we can reset the probability (if there is such a parameter)? Can anyone explain how squad_noans works?\r\n\r\nIn the model file, [here ](https://github.com/deepmipt/DeepPavlov/blob/a95149294bc7fa30baaa15c629adad4c1cba264e/deeppavlov/models/squad/squad.py#L306): but not sure how it work.\r\n\r\nAs pointed out here (https://github.com/HKUST-KnowComp/R-Net/issues/48), \r\n\r\n> R-net uses boundary model presented in \"Machine Comprehension Using Match-LSTM and Answer Pointer\". It will give an answer whether the true answer exists or not.\r\n\r\n  So back to the question ...\r\n\r\nThanks so much. \r\nLuke"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1097",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1097/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1097/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1097/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1097",
        "id": 536361615,
        "node_id": "MDU6SXNzdWU1MzYzNjE2MTU=",
        "number": 1097,
        "title": "NER fine-tuninng using pretrained using ner_ontonotes_bert_mult",
        "user": {
            "login": "igormis",
            "id": 6599037,
            "node_id": "MDQ6VXNlcjY1OTkwMzc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6599037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/igormis",
            "html_url": "https://github.com/igormis",
            "followers_url": "https://api.github.com/users/igormis/followers",
            "following_url": "https://api.github.com/users/igormis/following{/other_user}",
            "gists_url": "https://api.github.com/users/igormis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/igormis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/igormis/subscriptions",
            "organizations_url": "https://api.github.com/users/igormis/orgs",
            "repos_url": "https://api.github.com/users/igormis/repos",
            "events_url": "https://api.github.com/users/igormis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/igormis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2019-12-11T13:13:50Z",
        "updated_at": "2019-12-17T09:44:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I am trying to use Bert for NER recognition of standard and some custom entities. For instance, I have the following entities:\r\n`'financial_instrument', 'amount', 'percent', 'hashtag', 'exchange', 'number', 'sector', 'period', 'location', 'media_type', 'analyst', 'ticker', 'person', 'price_movement', 'rating_agency', 'product', 'amount_price_target', 'financial_topic', 'publication', 'company', 'event'`\r\nand some of them I can map to the existing ones in BIO format, such as:\r\n`EVENT, PERCENT, NUMBER, GPE, PERIOD, NORG`, etc.\r\nHowever, some of my entities are new and cannot be mapped.\r\nI was wondering if I can use the pretrained ner_ontonotes_bert_mult and just add my specific entities to fine-tune the model?\r\nIs this possible and could you provide to me sample code?\r\n\r\nTnx"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1095",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1095/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1095/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1095/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/pull/1095",
        "id": 535779257,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzUxNDMwMjA0",
        "number": 1095,
        "title": "Fix bug with tab sep",
        "user": {
            "login": "PaGul",
            "id": 6019507,
            "node_id": "MDQ6VXNlcjYwMTk1MDc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6019507?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PaGul",
            "html_url": "https://github.com/PaGul",
            "followers_url": "https://api.github.com/users/PaGul/followers",
            "following_url": "https://api.github.com/users/PaGul/following{/other_user}",
            "gists_url": "https://api.github.com/users/PaGul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PaGul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PaGul/subscriptions",
            "organizations_url": "https://api.github.com/users/PaGul/orgs",
            "repos_url": "https://api.github.com/users/PaGul/repos",
            "events_url": "https://api.github.com/users/PaGul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PaGul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-12-10T14:49:32Z",
        "updated_at": "2019-12-10T14:49:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/deepmipt/DeepPavlov/pulls/1095",
            "html_url": "https://github.com/deepmipt/DeepPavlov/pull/1095",
            "diff_url": "https://github.com/deepmipt/DeepPavlov/pull/1095.diff",
            "patch_url": "https://github.com/deepmipt/DeepPavlov/pull/1095.patch"
        },
        "body": "Added the ability to work correctly if the data has a '\\t' separator in vocab's value"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1085",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1085/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1085/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1085/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1085",
        "id": 529188248,
        "node_id": "MDU6SXNzdWU1MjkxODgyNDg=",
        "number": 1085,
        "title": "Is there any way to build docker image for new trained NER model?",
        "user": {
            "login": "DLNSimha",
            "id": 42237247,
            "node_id": "MDQ6VXNlcjQyMjM3MjQ3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/42237247?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DLNSimha",
            "html_url": "https://github.com/DLNSimha",
            "followers_url": "https://api.github.com/users/DLNSimha/followers",
            "following_url": "https://api.github.com/users/DLNSimha/following{/other_user}",
            "gists_url": "https://api.github.com/users/DLNSimha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DLNSimha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DLNSimha/subscriptions",
            "organizations_url": "https://api.github.com/users/DLNSimha/orgs",
            "repos_url": "https://api.github.com/users/DLNSimha/repos",
            "events_url": "https://api.github.com/users/DLNSimha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DLNSimha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-11-27T08:21:03Z",
        "updated_at": "2019-11-27T09:07:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "How to build a docker image for the newly trained NER model by DeepPavlov?"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1083",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1083/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1083/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1083/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1083",
        "id": 528846475,
        "node_id": "MDU6SXNzdWU1Mjg4NDY0NzU=",
        "number": 1083,
        "title": "DS_Store exception",
        "user": {
            "login": "w95",
            "id": 6433752,
            "node_id": "MDQ6VXNlcjY0MzM3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6433752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w95",
            "html_url": "https://github.com/w95",
            "followers_url": "https://api.github.com/users/w95/followers",
            "following_url": "https://api.github.com/users/w95/following{/other_user}",
            "gists_url": "https://api.github.com/users/w95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/w95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/w95/subscriptions",
            "organizations_url": "https://api.github.com/users/w95/orgs",
            "repos_url": "https://api.github.com/users/w95/repos",
            "events_url": "https://api.github.com/users/w95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/w95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 753483004,
                "node_id": "MDU6TGFiZWw3NTM0ODMwMDQ=",
                "url": "https://api.github.com/repos/deepmipt/DeepPavlov/labels/bug",
                "name": "bug",
                "color": "ee0701",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-26T16:44:41Z",
        "updated_at": "2019-12-05T09:16:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "When I use dataset_format txt, the training fails because of the DS_Store system file, maybe it would be good to add exceptions for all operating systems.\r\n`\r\nrika@MacBook-Pro adp % python -m deeppavlov train -d train.json\r\n2019-11-26 20:25:46.276 INFO in 'deeppavlov.dataset_readers.odqa_reader'['odqa_reader'] at line 57: Reading files...\r\n2019-11-26 20:25:46.277 INFO in 'deeppavlov.dataset_readers.odqa_reader'['odqa_reader'] at line 134: Building the database...\r\n 28%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f  | 84/301 [00:00<00:00, 3976.14it/s]\r\nmultiprocessing.pool.RemoteTraceback: \r\n\r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/Users/rika/.pyenv/versions/3.7.0/lib/python3.7/multiprocessing/pool.py\", line 121, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"/Users/rika/.pyenv/versions/3.7.0/lib/python3.7/site-packages/deeppavlov/dataset_readers/odqa_reader.py\", line 181, in _get_file_contents\r\n    text = fin.read()\r\n  File \"/Users/rika/.pyenv/versions/3.7.0/lib/python3.7/codecs.py\", line 322, in decode\r\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xe8 in position 10: invalid continuation byte\r\n\"\"\"\r\n`"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1081",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1081/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1081/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1081/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1081",
        "id": 528578471,
        "node_id": "MDU6SXNzdWU1Mjg1Nzg0NzE=",
        "number": 1081,
        "title": "How to train my data on Bert ranking ?",
        "user": {
            "login": "dimwael",
            "id": 32783348,
            "node_id": "MDQ6VXNlcjMyNzgzMzQ4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/32783348?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dimwael",
            "html_url": "https://github.com/dimwael",
            "followers_url": "https://api.github.com/users/dimwael/followers",
            "following_url": "https://api.github.com/users/dimwael/following{/other_user}",
            "gists_url": "https://api.github.com/users/dimwael/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dimwael/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dimwael/subscriptions",
            "organizations_url": "https://api.github.com/users/dimwael/orgs",
            "repos_url": "https://api.github.com/users/dimwael/repos",
            "events_url": "https://api.github.com/users/dimwael/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dimwael/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-11-26T08:56:10Z",
        "updated_at": "2019-11-26T11:27:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Please correct me if I am wrong, instead TF_IDF we can use Bert for classification like for the insuranceQA V1 ? (configs.rankings.ranking_insurance_interact model )\r\nIf yes, how can we train it on csv file ?"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1079",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1079/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1079/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1079/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1079",
        "id": 527086736,
        "node_id": "MDU6SXNzdWU1MjcwODY3MzY=",
        "number": 1079,
        "title": "fine-tuning RuBERT | data format for Text Classification Task",
        "user": {
            "login": "vcjob",
            "id": 51916323,
            "node_id": "MDQ6VXNlcjUxOTE2MzIz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/51916323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vcjob",
            "html_url": "https://github.com/vcjob",
            "followers_url": "https://api.github.com/users/vcjob/followers",
            "following_url": "https://api.github.com/users/vcjob/following{/other_user}",
            "gists_url": "https://api.github.com/users/vcjob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vcjob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vcjob/subscriptions",
            "organizations_url": "https://api.github.com/users/vcjob/orgs",
            "repos_url": "https://api.github.com/users/vcjob/repos",
            "events_url": "https://api.github.com/users/vcjob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vcjob/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "dilyararimovna",
            "id": 14152126,
            "node_id": "MDQ6VXNlcjE0MTUyMTI2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/14152126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dilyararimovna",
            "html_url": "https://github.com/dilyararimovna",
            "followers_url": "https://api.github.com/users/dilyararimovna/followers",
            "following_url": "https://api.github.com/users/dilyararimovna/following{/other_user}",
            "gists_url": "https://api.github.com/users/dilyararimovna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dilyararimovna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dilyararimovna/subscriptions",
            "organizations_url": "https://api.github.com/users/dilyararimovna/orgs",
            "repos_url": "https://api.github.com/users/dilyararimovna/repos",
            "events_url": "https://api.github.com/users/dilyararimovna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dilyararimovna/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "dilyararimovna",
                "id": 14152126,
                "node_id": "MDQ6VXNlcjE0MTUyMTI2",
                "avatar_url": "https://avatars2.githubusercontent.com/u/14152126?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dilyararimovna",
                "html_url": "https://github.com/dilyararimovna",
                "followers_url": "https://api.github.com/users/dilyararimovna/followers",
                "following_url": "https://api.github.com/users/dilyararimovna/following{/other_user}",
                "gists_url": "https://api.github.com/users/dilyararimovna/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dilyararimovna/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dilyararimovna/subscriptions",
                "organizations_url": "https://api.github.com/users/dilyararimovna/orgs",
                "repos_url": "https://api.github.com/users/dilyararimovna/repos",
                "events_url": "https://api.github.com/users/dilyararimovna/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dilyararimovna/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-11-22T09:34:00Z",
        "updated_at": "2019-11-22T18:34:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hello everyone!\r\n\r\nI have the following problem: I've got a dataset (currently - very small, ~550 documents. In the future - around 10k documents) and I need to do a multi-classification task on it, moreover, each document may have multiple class labels attached to it. \r\nI've read the paper https://blog.insightdatascience.com/using-transfer-learning-for-nlp-with-small-data-71e10baf99a6 , which states that even with 500 samples there is quite a gain in BERT accuracy. So I want to give BERT a try. I've tried to use it's embedding as an input to RandomForest, and the results were worse than with tf-idf. So I hope that having BERT fine-tuned on the target domain documents will improve it's accuracy up to overcoming the RandomForest on tf-idf (with 10k dataset)/\r\n\r\nI've red the issue [#1065](https://github.com/deepmipt/DeepPavlov/issues/1065) and understood I need to follow google's guide and use DeepPavlov's ruBERT and vocab as well. But the question I have is, what should the dataset look like?\r\nI need to do classification. I suppose I may use just BERT's embedding, and do using it a one-verse-the-rest classification with other classifiers. So, should I just fine-tune the BERT somehow in unsupervised manner, like providing the plain text? Or I must provide the class labels as well? In that case, having like 10 classes, while most of the documents are sharing multiple classes each, what would be the right way to fine-tune BERT to obtain better embeddings? Is that possible after all? Or the only way is to tine-tune multiple BERT models (which is .. insane).\r\n\r\nThank you a lot for any suggestions!"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1074",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1074/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1074/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1074/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1074",
        "id": 524249440,
        "node_id": "MDU6SXNzdWU1MjQyNDk0NDA=",
        "number": 1074,
        "title": "What parameters of RuBert training?",
        "user": {
            "login": "K-Mike",
            "id": 22145213,
            "node_id": "MDQ6VXNlcjIyMTQ1MjEz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/22145213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/K-Mike",
            "html_url": "https://github.com/K-Mike",
            "followers_url": "https://api.github.com/users/K-Mike/followers",
            "following_url": "https://api.github.com/users/K-Mike/following{/other_user}",
            "gists_url": "https://api.github.com/users/K-Mike/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/K-Mike/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/K-Mike/subscriptions",
            "organizations_url": "https://api.github.com/users/K-Mike/orgs",
            "repos_url": "https://api.github.com/users/K-Mike/repos",
            "events_url": "https://api.github.com/users/K-Mike/events{/privacy}",
            "received_events_url": "https://api.github.com/users/K-Mike/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-11-18T09:44:46Z",
        "updated_at": "2019-11-18T10:26:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Especially I interested in max_len\r\nand what corpse did you use?"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1072",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1072/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1072/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1072/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1072",
        "id": 524021904,
        "node_id": "MDU6SXNzdWU1MjQwMjE5MDQ=",
        "number": 1072,
        "title": "Can kbqa support english version? Or, could it possible one detailed instruction written and everyone else can do it for their own native language",
        "user": {
            "login": "daqulazhang",
            "id": 13996471,
            "node_id": "MDQ6VXNlcjEzOTk2NDcx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13996471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daqulazhang",
            "html_url": "https://github.com/daqulazhang",
            "followers_url": "https://api.github.com/users/daqulazhang/followers",
            "following_url": "https://api.github.com/users/daqulazhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/daqulazhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daqulazhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daqulazhang/subscriptions",
            "organizations_url": "https://api.github.com/users/daqulazhang/orgs",
            "repos_url": "https://api.github.com/users/daqulazhang/repos",
            "events_url": "https://api.github.com/users/daqulazhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daqulazhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-11-17T18:11:43Z",
        "updated_at": "2019-11-26T17:35:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Can kbqa support english version? Or, could it possible one detailed instruction written and everyone else can do it for their own native language"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1071",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1071/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1071/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1071/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1071",
        "id": 523507541,
        "node_id": "MDU6SXNzdWU1MjM1MDc1NDE=",
        "number": 1071,
        "title": "ner_few_shot_ru  | Fine-tuning the model",
        "user": {
            "login": "vcjob",
            "id": 51916323,
            "node_id": "MDQ6VXNlcjUxOTE2MzIz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/51916323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vcjob",
            "html_url": "https://github.com/vcjob",
            "followers_url": "https://api.github.com/users/vcjob/followers",
            "following_url": "https://api.github.com/users/vcjob/following{/other_user}",
            "gists_url": "https://api.github.com/users/vcjob/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vcjob/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vcjob/subscriptions",
            "organizations_url": "https://api.github.com/users/vcjob/orgs",
            "repos_url": "https://api.github.com/users/vcjob/repos",
            "events_url": "https://api.github.com/users/vcjob/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vcjob/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-11-15T14:40:29Z",
        "updated_at": "2019-11-21T12:01:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hello everyone! \r\n\r\nI read the documentation at http://docs.deeppavlov.ai/en/master/features/models/ner.html#few-shot-language-model-based and it says, that I need to tag at least 10 sentences to start training. So with all the info from the page in mind, I came up with the following questions: \r\n1. If we have 10 sentences with entity marks, what about the number of the ones without? also 10? 10k or maybe a couple of millions? Should they just be in format \"word per line, empty line between sentences\"?\r\n2. In that case, the SVM is used.  Is it trained on those 10 sentences and used afterwards to classify the rest sentences? What is the \"K\" number?\r\n3. Is it fine-tuning the BERT model, or training from scratch with the help of LM?\r\n4. It says also, that if there are more than 1k sentences available, better to use ner_few_shot_ru_simulate. Nevertheless, if execute the code from the same documentary page:\r\n_from deeppavlov import configs, train_model\r\nner_model = train_model(configs.ner.ner_few_shot_ru, download=True)_\r\nit downloads a huge training, testing and validation sets and starts to train the model (moreover, on the cpu). Have I misunderstood anything?\r\n5. May I use my own tags, like \"DOCS\"?\r\n6. Still, how many sentences are recommended to fine-tune the model with addition of new tags; How many sentences do I need to train the model from scratch? \r\n\r\nThank you a lot for the answers! Looking forward to them!"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1070",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1070/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1070/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1070/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1070",
        "id": 523469970,
        "node_id": "MDU6SXNzdWU1MjM0Njk5NzA=",
        "number": 1070,
        "title": "Add console logging of model outputs into a file in a tensor board dir",
        "user": {
            "login": "kudep",
            "id": 11869257,
            "node_id": "MDQ6VXNlcjExODY5MjU3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11869257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kudep",
            "html_url": "https://github.com/kudep",
            "followers_url": "https://api.github.com/users/kudep/followers",
            "following_url": "https://api.github.com/users/kudep/following{/other_user}",
            "gists_url": "https://api.github.com/users/kudep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kudep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kudep/subscriptions",
            "organizations_url": "https://api.github.com/users/kudep/orgs",
            "repos_url": "https://api.github.com/users/kudep/repos",
            "events_url": "https://api.github.com/users/kudep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kudep/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 753483006,
                "node_id": "MDU6TGFiZWw3NTM0ODMwMDY=",
                "url": "https://api.github.com/repos/deepmipt/DeepPavlov/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "yoptar",
            "id": 5615053,
            "node_id": "MDQ6VXNlcjU2MTUwNTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5615053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yoptar",
            "html_url": "https://github.com/yoptar",
            "followers_url": "https://api.github.com/users/yoptar/followers",
            "following_url": "https://api.github.com/users/yoptar/following{/other_user}",
            "gists_url": "https://api.github.com/users/yoptar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yoptar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yoptar/subscriptions",
            "organizations_url": "https://api.github.com/users/yoptar/orgs",
            "repos_url": "https://api.github.com/users/yoptar/repos",
            "events_url": "https://api.github.com/users/yoptar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yoptar/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "yoptar",
                "id": 5615053,
                "node_id": "MDQ6VXNlcjU2MTUwNTM=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/5615053?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/yoptar",
                "html_url": "https://github.com/yoptar",
                "followers_url": "https://api.github.com/users/yoptar/followers",
                "following_url": "https://api.github.com/users/yoptar/following{/other_user}",
                "gists_url": "https://api.github.com/users/yoptar/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/yoptar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yoptar/subscriptions",
                "organizations_url": "https://api.github.com/users/yoptar/orgs",
                "repos_url": "https://api.github.com/users/yoptar/repos",
                "events_url": "https://api.github.com/users/yoptar/events{/privacy}",
                "received_events_url": "https://api.github.com/users/yoptar/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-11-15T13:28:44Z",
        "updated_at": "2019-11-15T13:31:50Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Deeppavlov have no file to which model console logs would be written"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1067",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1067/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1067/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1067/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1067",
        "id": 519094475,
        "node_id": "MDU6SXNzdWU1MTkwOTQ0NzU=",
        "number": 1067,
        "title": "Broken install on alpine docker",
        "user": {
            "login": "DaniloZZZ",
            "id": 13188417,
            "node_id": "MDQ6VXNlcjEzMTg4NDE3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13188417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DaniloZZZ",
            "html_url": "https://github.com/DaniloZZZ",
            "followers_url": "https://api.github.com/users/DaniloZZZ/followers",
            "following_url": "https://api.github.com/users/DaniloZZZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/DaniloZZZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DaniloZZZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DaniloZZZ/subscriptions",
            "organizations_url": "https://api.github.com/users/DaniloZZZ/orgs",
            "repos_url": "https://api.github.com/users/DaniloZZZ/repos",
            "events_url": "https://api.github.com/users/DaniloZZZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DaniloZZZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "litinsky",
            "id": 22733410,
            "node_id": "MDQ6VXNlcjIyNzMzNDEw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22733410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/litinsky",
            "html_url": "https://github.com/litinsky",
            "followers_url": "https://api.github.com/users/litinsky/followers",
            "following_url": "https://api.github.com/users/litinsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/litinsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/litinsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/litinsky/subscriptions",
            "organizations_url": "https://api.github.com/users/litinsky/orgs",
            "repos_url": "https://api.github.com/users/litinsky/repos",
            "events_url": "https://api.github.com/users/litinsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/litinsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "litinsky",
                "id": 22733410,
                "node_id": "MDQ6VXNlcjIyNzMzNDEw",
                "avatar_url": "https://avatars3.githubusercontent.com/u/22733410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/litinsky",
                "html_url": "https://github.com/litinsky",
                "followers_url": "https://api.github.com/users/litinsky/followers",
                "following_url": "https://api.github.com/users/litinsky/following{/other_user}",
                "gists_url": "https://api.github.com/users/litinsky/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/litinsky/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/litinsky/subscriptions",
                "organizations_url": "https://api.github.com/users/litinsky/orgs",
                "repos_url": "https://api.github.com/users/litinsky/repos",
                "events_url": "https://api.github.com/users/litinsky/events{/privacy}",
                "received_events_url": "https://api.github.com/users/litinsky/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-11-07T07:37:38Z",
        "updated_at": "2020-02-12T23:57:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Using this Dockerfile, deeppavlov installes, but the installation seems to be broken\r\n\r\n```\r\nfrom python:3.7-alpine\r\nrun apk add g++ python3-dev git make cmake\r\n\r\n# Use wheels, because building scipy from source is a pain. https://github.com/pypa/pip/issues/3969\r\nrun echo \"manylinux1_compatible = True\" >> /usr/local/lib/python3.7/_manylinux.py\r\nrun pip3 install deeppavlov\r\nrun python3 -c \"from deeppavlov import train_model\"\r\n\r\n```\r\nI get error on last command\r\n`ImportError: cannot import name 'train_model' from 'deeppavlov' (/usr/local/lib/python3.7/site-packages/deeppavlov/__init__.py)`\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1055",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1055/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1055/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1055/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/pull/1055",
        "id": 512902105,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyODEyNzU1",
        "number": 1055,
        "title": "add f1_samples metric",
        "user": {
            "login": "MrTsepa",
            "id": 14216640,
            "node_id": "MDQ6VXNlcjE0MjE2NjQw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/14216640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrTsepa",
            "html_url": "https://github.com/MrTsepa",
            "followers_url": "https://api.github.com/users/MrTsepa/followers",
            "following_url": "https://api.github.com/users/MrTsepa/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrTsepa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrTsepa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrTsepa/subscriptions",
            "organizations_url": "https://api.github.com/users/MrTsepa/orgs",
            "repos_url": "https://api.github.com/users/MrTsepa/repos",
            "events_url": "https://api.github.com/users/MrTsepa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrTsepa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-27T00:26:34Z",
        "updated_at": "2019-10-28T11:31:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/deepmipt/DeepPavlov/pulls/1055",
            "html_url": "https://github.com/deepmipt/DeepPavlov/pull/1055",
            "diff_url": "https://github.com/deepmipt/DeepPavlov/pull/1055.diff",
            "patch_url": "https://github.com/deepmipt/DeepPavlov/pull/1055.patch"
        },
        "body": "This metric is useful for multilabel classification"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1053",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1053/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1053/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1053/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/pull/1053",
        "id": 512145142,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyMjEyMTc5",
        "number": 1053,
        "title": "doc: localize levenshtein_searcher",
        "user": {
            "login": "kudep",
            "id": 11869257,
            "node_id": "MDQ6VXNlcjExODY5MjU3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11869257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kudep",
            "html_url": "https://github.com/kudep",
            "followers_url": "https://api.github.com/users/kudep/followers",
            "following_url": "https://api.github.com/users/kudep/following{/other_user}",
            "gists_url": "https://api.github.com/users/kudep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kudep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kudep/subscriptions",
            "organizations_url": "https://api.github.com/users/kudep/orgs",
            "repos_url": "https://api.github.com/users/kudep/repos",
            "events_url": "https://api.github.com/users/kudep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kudep/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-24T19:46:49Z",
        "updated_at": "2019-11-25T11:12:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/deepmipt/DeepPavlov/pulls/1053",
            "html_url": "https://github.com/deepmipt/DeepPavlov/pull/1053",
            "diff_url": "https://github.com/deepmipt/DeepPavlov/pull/1053.diff",
            "patch_url": "https://github.com/deepmipt/DeepPavlov/pull/1053.patch"
        },
        "body": "resolves #1052"
    },
    {
        "url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1052",
        "repository_url": "https://api.github.com/repos/deepmipt/DeepPavlov",
        "labels_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1052/labels{/name}",
        "comments_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1052/comments",
        "events_url": "https://api.github.com/repos/deepmipt/DeepPavlov/issues/1052/events",
        "html_url": "https://github.com/deepmipt/DeepPavlov/issues/1052",
        "id": 511976206,
        "node_id": "MDU6SXNzdWU1MTE5NzYyMDY=",
        "number": 1052,
        "title": "There are Russian comments in this file, is it legal?",
        "user": {
            "login": "kudep",
            "id": 11869257,
            "node_id": "MDQ6VXNlcjExODY5MjU3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11869257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kudep",
            "html_url": "https://github.com/kudep",
            "followers_url": "https://api.github.com/users/kudep/followers",
            "following_url": "https://api.github.com/users/kudep/following{/other_user}",
            "gists_url": "https://api.github.com/users/kudep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kudep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kudep/subscriptions",
            "organizations_url": "https://api.github.com/users/kudep/orgs",
            "repos_url": "https://api.github.com/users/kudep/repos",
            "events_url": "https://api.github.com/users/kudep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kudep/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "AlexeySorokin",
            "id": 13086672,
            "node_id": "MDQ6VXNlcjEzMDg2Njcy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13086672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexeySorokin",
            "html_url": "https://github.com/AlexeySorokin",
            "followers_url": "https://api.github.com/users/AlexeySorokin/followers",
            "following_url": "https://api.github.com/users/AlexeySorokin/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexeySorokin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexeySorokin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexeySorokin/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexeySorokin/orgs",
            "repos_url": "https://api.github.com/users/AlexeySorokin/repos",
            "events_url": "https://api.github.com/users/AlexeySorokin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexeySorokin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "AlexeySorokin",
                "id": 13086672,
                "node_id": "MDQ6VXNlcjEzMDg2Njcy",
                "avatar_url": "https://avatars3.githubusercontent.com/u/13086672?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/AlexeySorokin",
                "html_url": "https://github.com/AlexeySorokin",
                "followers_url": "https://api.github.com/users/AlexeySorokin/followers",
                "following_url": "https://api.github.com/users/AlexeySorokin/following{/other_user}",
                "gists_url": "https://api.github.com/users/AlexeySorokin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/AlexeySorokin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AlexeySorokin/subscriptions",
                "organizations_url": "https://api.github.com/users/AlexeySorokin/orgs",
                "repos_url": "https://api.github.com/users/AlexeySorokin/repos",
                "events_url": "https://api.github.com/users/AlexeySorokin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/AlexeySorokin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-24T14:18:09Z",
        "updated_at": "2019-10-24T14:18:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "There are Russian comments in this file, is it legal?\r\n\r\n_Originally posted by @kudep in https://github.com/deepmipt/DeepPavlov/pull/1046_"
    }
]