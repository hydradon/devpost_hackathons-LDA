[
    {
        "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1",
        "repository_url": "https://api.github.com/repos/shamatar/EllipticSwift",
        "labels_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/labels{/name}",
        "comments_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/comments",
        "events_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/events",
        "html_url": "https://github.com/shamatar/EllipticSwift/issues/1",
        "id": 362960849,
        "node_id": "MDU6SXNzdWUzNjI5NjA4NDk=",
        "number": 1,
        "title": "Hello friend! We both wrote Pure Swift ECC SDKs this summer",
        "user": {
            "login": "Sajjon",
            "id": 864410,
            "node_id": "MDQ6VXNlcjg2NDQxMA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sajjon",
            "html_url": "https://github.com/Sajjon",
            "followers_url": "https://api.github.com/users/Sajjon/followers",
            "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
            "organizations_url": "https://api.github.com/users/Sajjon/orgs",
            "repos_url": "https://api.github.com/users/Sajjon/repos",
            "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sajjon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2018-09-23T17:28:41Z",
        "updated_at": "2018-09-29T09:51:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "We seem to have been working on the same thing :D \r\n\r\nHave a look at [EllipticCurveKit](github.com/Sajjon/EllipticCurveKit). My goal is to finish my rewrite using [EquationKit](github.com/Sajjon/EquationKit), I have got it working already in the [equations branch](https://github.com/Sajjon/EllipticCurveKit/blob/equations/Source/EllipticCurve/Curve/CurveForms/ShortWeierstra%C3%9FCurve.swift) which allows for pretty cool syntax:\r\n\r\n```swift\r\n///\r\n/// Elliptic Curve on Short Weierstrass form (`\ud835\udc46`)\r\n/// - Covers all elliptic curves char\u2260\ud835\udfda,\ud835\udfdb\r\n/// - Mixed Jacobian coordinates have been the speed leader for a long time.\r\n///\r\n///\r\n/// # Equation\r\n///      \ud835\udc46: \ud835\udc66\u00b2 = \ud835\udc65\u00b3 + \ud835\udc4e\ud835\udc65 + \ud835\udc4f\r\n/// - Requires: `\ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2260 \ud835\udfd8`\r\n///\r\npublic struct ShortWeierstra\u00dfCurve: CurveForm {\r\n\r\n\r\n    private let a: Number\r\n    private let b: Number\r\n    public let galoisField: Field\r\n    public let equation: Polynomial\r\n\r\n    private let \ud835\udc65\uff07: Polynomial\r\n    private let \ud835\udc66\uff07: Polynomial\r\n\r\n    public init?(\r\n        a: Number,\r\n        b: Number,\r\n        galoisField: Field\r\n        ) {\r\n\r\n        let \ud835\udc5d = galoisField.modulus\r\n\r\n        guard \ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2262 \ud835\udfd8 % \ud835\udc5d \u21a4 [ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] else { return nil }\r\n\r\n        self.a = a\r\n        self.b = b\r\n        self.galoisField = galoisField\r\n        self.equation = EllipticCurveForm.Weierstra\u00df.short.substitute() {[ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] }\r\n        self.\ud835\udc65\uff07 = equation.differentiateWithRespectTo(\ud835\udc65)!\r\n        self.\ud835\udc66\uff07 = equation.differentiateWithRespectTo(\ud835\udc66)!\r\n    }\r\n}\r\n```\r\n\r\nI have also begun implemented other curve forms than ShortWeierstra\u00df, such as TwistedEdwards and Montgomery.\r\n\r\nI saw you [PR in CryptoSwift adding support for Scrypt](https://github.com/krzyzanowskim/CryptoSwift/pull/645) which I am also working on currently. \r\n\r\nI'm in need of it in the [Zilliqa Swift SDK](https://github.com/OpenZesame/Zilliqa-Swift-SDK) I am developing, for the export wallet function. "
    }
]