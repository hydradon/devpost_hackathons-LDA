[
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/121",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/121/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/121/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/121/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/121",
        "id": 553935628,
        "node_id": "MDU6SXNzdWU1NTM5MzU2Mjg=",
        "number": 121,
        "title": "Google API Keys not accepted while using gmplot.GoogleMapPlotter.from_geocode",
        "user": {
            "login": "neerajmontu",
            "id": 30919266,
            "node_id": "MDQ6VXNlcjMwOTE5MjY2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/30919266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neerajmontu",
            "html_url": "https://github.com/neerajmontu",
            "followers_url": "https://api.github.com/users/neerajmontu/followers",
            "following_url": "https://api.github.com/users/neerajmontu/following{/other_user}",
            "gists_url": "https://api.github.com/users/neerajmontu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neerajmontu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neerajmontu/subscriptions",
            "organizations_url": "https://api.github.com/users/neerajmontu/orgs",
            "repos_url": "https://api.github.com/users/neerajmontu/repos",
            "events_url": "https://api.github.com/users/neerajmontu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neerajmontu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-23T04:54:37Z",
        "updated_at": "2020-01-23T04:54:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Below code fails, but should work:-\r\n\r\nimport gmplot\r\ngmap2 = gmplot.GoogleMapPlotter.from_geocode(\"Jonkoping, Sweden\", 13)\r\ngmap2.draw(\".\\\\out\\\\map12.html\")\r\n\r\n**Root cause:**\r\n1. from_geocode creates a new instance, and then even when API key passed during instance creation is lost while doing this.\r\n2. http is no longer allowed by google, so geocode fails in any case.\r\n\r\n**Fix for this (proper):**\r\ngmplot.py:-\r\nfrom_geocode should have APIKey as a new parameter.\r\nAnd then cls() should use that parameter as well.\r\nThis parameter should then be extended to geocode method, and accordingly the conditioning be done for http or https in geocode.\r\n\r\nI have tested a fix for this and works:-\r\n   def from_geocode(cls, location_string, zoom=13, pApiKey=''):\r\n        lat, lng = cls.geocode(location_string, pApiKey)\r\n        return cls(lat, lng, zoom, pApiKey)\r\n\r\n   def geocode(self, location_string, pApikey=''):\r\n        if pApikey == '':\r\n            geocode = requests.get(\r\n                'http://maps.googleapis.com/maps/api/geocode/json?address=\"%s\"' % location_string)\r\n        else:\r\n            geocode = requests.get(\r\n                'https://maps.googleapis.com/maps/api/geocode/json?address=\"%s\"' % location_string + \"&key=\" + pApikey)\r\n\r\n These two pieces shall solve it.\r\n\r\nRegards,\r\nNeeraj Kumar"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/119",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/119/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/119/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/119/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/119",
        "id": 541880766,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzU2NDMzMzc5",
        "number": 119,
        "title": "add support for InfoWindows",
        "user": {
            "login": "VictorNorman",
            "id": 6807900,
            "node_id": "MDQ6VXNlcjY4MDc5MDA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6807900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VictorNorman",
            "html_url": "https://github.com/VictorNorman",
            "followers_url": "https://api.github.com/users/VictorNorman/followers",
            "following_url": "https://api.github.com/users/VictorNorman/following{/other_user}",
            "gists_url": "https://api.github.com/users/VictorNorman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VictorNorman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VictorNorman/subscriptions",
            "organizations_url": "https://api.github.com/users/VictorNorman/orgs",
            "repos_url": "https://api.github.com/users/VictorNorman/repos",
            "events_url": "https://api.github.com/users/VictorNorman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VictorNorman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-12-23T19:43:06Z",
        "updated_at": "2019-12-23T19:43:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/119",
            "html_url": "https://github.com/vgm64/gmplot/pull/119",
            "diff_url": "https://github.com/vgm64/gmplot/pull/119.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/119.patch"
        },
        "body": "Add support for the user to create an InfoWindow for each marker. The InfoWindow can contain HTML, including images and links, lists, etc."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/118",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/118/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/118/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/118/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/118",
        "id": 540545955,
        "node_id": "MDU6SXNzdWU1NDA1NDU5NTU=",
        "number": 118,
        "title": "does not show the marker without modifications",
        "user": {
            "login": "mzramna",
            "id": 21228660,
            "node_id": "MDQ6VXNlcjIxMjI4NjYw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/21228660?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzramna",
            "html_url": "https://github.com/mzramna",
            "followers_url": "https://api.github.com/users/mzramna/followers",
            "following_url": "https://api.github.com/users/mzramna/following{/other_user}",
            "gists_url": "https://api.github.com/users/mzramna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mzramna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mzramna/subscriptions",
            "organizations_url": "https://api.github.com/users/mzramna/orgs",
            "repos_url": "https://api.github.com/users/mzramna/repos",
            "events_url": "https://api.github.com/users/mzramna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mzramna/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-12-19T20:30:33Z",
        "updated_at": "2020-01-14T19:12:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "to show the marker i've changed a little the lib source to this:\r\n`import math\r\nimport requests\r\nimport json\r\nimport os\r\n\r\nfrom .color_dicts import mpl_color_map, html_color_codes\r\n\r\n\r\ndef safe_iter(var):\r\n    try:\r\n        return iter(var)\r\n    except TypeError:\r\n        return [var]\r\n\r\n\r\nclass GoogleMapPlotter(object):\r\n\r\n    def __init__(self, center_lat, center_lng, zoom, apikey=''):\r\n        self.center = (float(center_lat), float(center_lng))\r\n        self.zoom = int(zoom)\r\n        self.apikey = str(apikey)\r\n        self.grids = None\r\n        self.paths = []\r\n        self.shapes = []\r\n        self.points = []\r\n        self.heatmap_points = []\r\n        self.radpoints = []\r\n        self.gridsetting = None\r\n        self.coloricon = os.path.join(os.path.dirname(__file__), 'markers/%s.png')\r\n        self.color_dict = mpl_color_map\r\n        self.html_color_codes = html_color_codes\r\n\r\n    @classmethod\r\n    def from_geocode(cls, location_string, zoom=13):\r\n        lat, lng = cls.geocode(location_string)\r\n        return cls(lat, lng, zoom)\r\n\r\n    @classmethod\r\n    def geocode(self, location_string):\r\n        geocode = requests.get(\r\n            'http://maps.googleapis.com/maps/api/geocode/json?address=\"%s\"' % location_string)\r\n        geocode = json.loads(geocode.text)\r\n        latlng_dict = geocode['results'][0]['geometry']['location']\r\n        return latlng_dict['lat'], latlng_dict['lng']\r\n\r\n    def grid(self, slat, elat, latin, slng, elng, lngin):\r\n        self.gridsetting = [slat, elat, latin, slng, elng, lngin]\r\n\r\n    def marker(self, lat, lng, color='#FF0000', c=None, title=\"no implementation\"):\r\n        if c:\r\n            color = c\r\n        color = self.color_dict.get(color, color)\r\n        color = self.html_color_codes.get(color, color)\r\n        self.points.append((lat, lng, color[1:], title))\r\n\r\n    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, **kwargs):\r\n        color = color or c\r\n        size = size or s or 40\r\n        kwargs[\"color\"] = color\r\n        kwargs[\"size\"] = size\r\n        settings = self._process_kwargs(kwargs)\r\n        for lat, lng in zip(lats, lngs):\r\n            if marker:\r\n                self.marker(lat, lng, settings['color'])\r\n            else:\r\n                self.circle(lat, lng, size, **settings)\r\n\r\n    def circle(self, lat, lng, radius, color=None, c=None, **kwargs):\r\n        color = color or c\r\n        kwargs.setdefault('face_alpha', 0.5)\r\n        kwargs.setdefault('face_color', \"#000000\")\r\n        kwargs.setdefault(\"color\", color)\r\n        settings = self._process_kwargs(kwargs)\r\n        path = self.get_cycle(lat, lng, radius)\r\n        self.shapes.append((path, settings))\r\n\r\n    def _process_kwargs(self, kwargs):\r\n        settings = dict()\r\n        settings[\"edge_color\"] = kwargs.get(\"color\", None) or \\\r\n                                 kwargs.get(\"edge_color\", None) or \\\r\n                                 kwargs.get(\"ec\", None) or \\\r\n                                 \"#000000\"\r\n\r\n        settings[\"edge_alpha\"] = kwargs.get(\"alpha\", None) or \\\r\n                                 kwargs.get(\"edge_alpha\", None) or \\\r\n                                 kwargs.get(\"ea\", None) or \\\r\n                                 1.0\r\n        settings[\"edge_width\"] = kwargs.get(\"edge_width\", None) or \\\r\n                                 kwargs.get(\"ew\", None) or \\\r\n                                 1.0\r\n        settings[\"face_alpha\"] = kwargs.get(\"alpha\", None) or \\\r\n                                 kwargs.get(\"face_alpha\", None) or \\\r\n                                 kwargs.get(\"fa\", None) or \\\r\n                                 0.3\r\n        settings[\"face_color\"] = kwargs.get(\"color\", None) or \\\r\n                                 kwargs.get(\"face_color\", None) or \\\r\n                                 kwargs.get(\"fc\", None) or \\\r\n                                 \"#000000\"\r\n\r\n        settings[\"color\"] = kwargs.get(\"color\", None) or \\\r\n                            kwargs.get(\"c\", None) or \\\r\n                            settings[\"edge_color\"] or \\\r\n                            settings[\"face_color\"]\r\n\r\n        # Need to replace \"plum\" with \"#DDA0DD\" and \"c\" with \"#00FFFF\" (cyan).\r\n        for key, color in settings.items():\r\n            if 'color' in key:\r\n                color = self.color_dict.get(color, color)\r\n                color = self.html_color_codes.get(color, color)\r\n                settings[key] = color\r\n\r\n        settings[\"closed\"] = kwargs.get(\"closed\", None)\r\n\r\n        return settings\r\n\r\n    def plot(self, lats, lngs, color=None, c=None, **kwargs):\r\n        color = color or c\r\n        kwargs.setdefault(\"color\", color)\r\n        settings = self._process_kwargs(kwargs)\r\n        path = zip(lats, lngs)\r\n        self.paths.append((path, settings))\r\n\r\n    def heatmap(self, lats, lngs, threshold=10, radius=10, gradient=None, opacity=0.6, dissipating=True):\r\n        \"\"\"\r\n        :param lats: list of latitudes\r\n        :param lngs: list of longitudes\r\n        :param threshold:\r\n        :param radius: The hardest param. Example (string):\r\n        :return:\r\n        \"\"\"\r\n        settings = {}\r\n        settings['threshold'] = threshold\r\n        settings['radius'] = radius\r\n        settings['gradient'] = gradient\r\n        settings['opacity'] = opacity\r\n        settings['dissipating'] = dissipating\r\n        settings = self._process_heatmap_kwargs(settings)\r\n\r\n        heatmap_points = []\r\n        for lat, lng in zip(lats, lngs):\r\n            heatmap_points.append((lat, lng))\r\n        self.heatmap_points.append((heatmap_points, settings))\r\n\r\n    def _process_heatmap_kwargs(self, settings_dict):\r\n        settings_string = ''\r\n        settings_string += \"heatmap.set('threshold', %d);\\n\" % settings_dict['threshold']\r\n        settings_string += \"heatmap.set('radius', %d);\\n\" % settings_dict['radius']\r\n        settings_string += \"heatmap.set('opacity', %f);\\n\" % settings_dict['opacity']\r\n\r\n        dissipation_string = 'true' if settings_dict['dissipating'] else 'false'\r\n        settings_string += \"heatmap.set('dissipating', %s);\\n\" % (dissipation_string)\r\n\r\n        gradient = settings_dict['gradient']\r\n        if gradient:\r\n            gradient_string = \"var gradient = [\\n\"\r\n            for r, g, b, a in gradient:\r\n                gradient_string += \"\\t\" + \"'rgba(%d, %d, %d, %d)',\\n\" % (r, g, b, a)\r\n            gradient_string += '];' + '\\n'\r\n            gradient_string += \"heatmap.set('gradient', gradient);\\n\"\r\n\r\n            settings_string += gradient_string\r\n\r\n        return settings_string\r\n\r\n    def polygon(self, lats, lngs, color=None, c=None, **kwargs):\r\n        color = color or c\r\n        kwargs.setdefault(\"color\", color)\r\n        settings = self._process_kwargs(kwargs)\r\n        shape = zip(lats, lngs)\r\n        self.shapes.append((shape, settings))\r\n\r\n    # create the html file which include one google map and all points and\r\n    # paths\r\n    def draw(self, htmlfile):\r\n        f = open(htmlfile, 'w')\r\n        f.write('<html>\\n')\r\n        f.write('<head>\\n')\r\n        f.write(\r\n            '<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\\n')\r\n        f.write(\r\n            '<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/>\\n')\r\n        f.write('<title>Google Maps - pygmaps </title>\\n')\r\n        if self.apikey:\r\n            f.write('<script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?libraries=visualization&sensor=true_or_false&key=%s\"></script>\\n' % self.apikey )\r\n        else:\r\n            f.write('<script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?libraries=visualization&sensor=true_or_false\"></script>\\n' )\r\n        f.write('<script type=\"text/javascript\">\\n')\r\n        f.write('\\tfunction initialize() {\\n')\r\n        self.write_map(f)\r\n        self.write_grids(f)\r\n        self.write_points(f)\r\n        self.write_paths(f)\r\n        self.write_shapes(f)\r\n        self.write_heatmap(f)\r\n        f.write('\\t}\\n')\r\n        f.write('</script>\\n')\r\n        f.write('</head>\\n')\r\n        f.write(\r\n            '<body style=\"margin:0px; padding:0px;\" onload=\"initialize()\">\\n')\r\n        f.write(\r\n            '\\t<div id=\"map_canvas\" style=\"width: 100%; height: 100%;\"></div>\\n')\r\n        f.write('</body>\\n')\r\n        f.write('</html>\\n')\r\n        f.close()\r\n\r\n    #############################################\r\n    # # # # # # Low level Map Drawing # # # # # #\r\n    #############################################\r\n\r\n    def write_grids(self, f):\r\n        if self.gridsetting is None:\r\n            return\r\n        slat = self.gridsetting[0]\r\n        elat = self.gridsetting[1]\r\n        latin = self.gridsetting[2]\r\n        slng = self.gridsetting[3]\r\n        elng = self.gridsetting[4]\r\n        lngin = self.gridsetting[5]\r\n        self.grids = []\r\n\r\n        r = [\r\n            slat + float(x) * latin for x in range(0, int((elat - slat) / latin))]\r\n        for lat in r:\r\n            self.grids.append(\r\n                [(lat + latin / 2.0, slng + lngin / 2.0), (lat + latin / 2.0, elng + lngin / 2.0)])\r\n\r\n        r = [\r\n            slng + float(x) * lngin for x in range(0, int((elng - slng) / lngin))]\r\n        for lng in r:\r\n            self.grids.append(\r\n                [(slat + latin / 2.0, lng + lngin / 2.0), (elat + latin / 2.0, lng + lngin / 2.0)])\r\n\r\n        for line in self.grids:\r\n            settings = self._process_kwargs({\"color\": \"#000000\"})\r\n            self.write_polyline(f, line, settings)\r\n\r\n    def write_points(self, f):\r\n        for point in self.points:\r\n            self.write_point(f, point[0], point[1], point[2], point[3])\r\n\r\n    def get_cycle(self, lat, lng, rad):\r\n        # unit of radius: meter\r\n        cycle = []\r\n        d = (rad / 1000.0) / 6378.8\r\n        lat1 = (math.pi / 180.0) * lat\r\n        lng1 = (math.pi / 180.0) * lng\r\n\r\n        r = [x * 10 for x in range(36)]\r\n        for a in r:\r\n            tc = (math.pi / 180.0) * a\r\n            y = math.asin(\r\n                math.sin(lat1) * math.cos(d) + math.cos(lat1) * math.sin(d) * math.cos(tc))\r\n            dlng = math.atan2(math.sin(\r\n                tc) * math.sin(d) * math.cos(lat1), math.cos(d) - math.sin(lat1) * math.sin(y))\r\n            x = ((lng1 - dlng + math.pi) % (2.0 * math.pi)) - math.pi\r\n            cycle.append(\r\n                (float(y * (180.0 / math.pi)), float(x * (180.0 / math.pi))))\r\n        return cycle\r\n\r\n    def write_paths(self, f):\r\n        for path, settings in self.paths:\r\n            self.write_polyline(f, path, settings)\r\n\r\n    def write_shapes(self, f):\r\n        for shape, settings in self.shapes:\r\n            self.write_polygon(f, shape, settings)\r\n\r\n    # TODO: Add support for mapTypeId: google.maps.MapTypeId.SATELLITE\r\n    def write_map(self,  f):\r\n        f.write('\\t\\tvar centerlatlng = new google.maps.LatLng(%f, %f);\\n' %\r\n                (self.center[0], self.center[1]))\r\n        f.write('\\t\\tvar myOptions = {\\n')\r\n        f.write('\\t\\t\\tzoom: %d,\\n' % (self.zoom))\r\n        f.write('\\t\\t\\tcenter: centerlatlng,\\n')\r\n        f.write('\\t\\t\\tmapTypeId: google.maps.MapTypeId.ROADMAP\\n')\r\n        f.write('\\t\\t};\\n')\r\n        f.write(\r\n            '\\t\\tvar map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\\n')\r\n        f.write('\\n')\r\n\r\n    def write_point(self, f, lat, lon, color, title):\r\n        f.write('\\t\\tvar latlng = new google.maps.LatLng(%f, %f);\\n' %\r\n                (lat, lon))\r\n        #f.write('\\t\\tvar img = new google.maps.MarkerImage(\\'%s\\');\\n' %\r\n                #(self.coloricon % color))\r\n        f.write('\\t\\tvar marker = new google.maps.Marker({\\n')\r\n        f.write('\\t\\ttitle: \"%s\",\\n' % title)\r\n        #f.write('\\t\\ticon: img,\\n')\r\n        f.write('\\t\\tposition: latlng\\n')\r\n        f.write('\\t\\t});\\n')\r\n        f.write('\\t\\tmarker.setMap(map);\\n')\r\n        f.write('\\n')\r\n\r\n    def write_polyline(self, f, path, settings):\r\n        clickable = False\r\n        geodesic = True\r\n        strokeColor = settings.get('color') or settings.get('edge_color')\r\n        strokeOpacity = settings.get('edge_alpha')\r\n        strokeWeight = settings.get('edge_width')\r\n\r\n        f.write('var PolylineCoordinates = [\\n')\r\n        for coordinate in path:\r\n            f.write('new google.maps.LatLng(%f, %f),\\n' %\r\n                    (coordinate[0], coordinate[1]))\r\n        f.write('];\\n')\r\n        f.write('\\n')\r\n\r\n        f.write('var Path = new google.maps.Polyline({\\n')\r\n        f.write('clickable: %s,\\n' % (str(clickable).lower()))\r\n        f.write('geodesic: %s,\\n' % (str(geodesic).lower()))\r\n        f.write('path: PolylineCoordinates,\\n')\r\n        f.write('strokeColor: \"%s\",\\n' % (strokeColor))\r\n        f.write('strokeOpacity: %f,\\n' % (strokeOpacity))\r\n        f.write('strokeWeight: %d\\n' % (strokeWeight))\r\n        f.write('});\\n')\r\n        f.write('\\n')\r\n        f.write('Path.setMap(map);\\n')\r\n        f.write('\\n\\n')\r\n\r\n    def write_polygon(self, f, path, settings):\r\n        clickable = False\r\n        geodesic = True\r\n        strokeColor = settings.get('edge_color') or settings.get('color')\r\n        strokeOpacity = settings.get('edge_alpha')\r\n        strokeWeight = settings.get('edge_width')\r\n        fillColor = settings.get('face_color') or settings.get('color')\r\n        fillOpacity= settings.get('face_alpha')\r\n        f.write('var coords = [\\n')\r\n        for coordinate in path:\r\n            f.write('new google.maps.LatLng(%f, %f),\\n' %\r\n                    (coordinate[0], coordinate[1]))\r\n        f.write('];\\n')\r\n        f.write('\\n')\r\n\r\n        f.write('var polygon = new google.maps.Polygon({\\n')\r\n        f.write('clickable: %s,\\n' % (str(clickable).lower()))\r\n        f.write('geodesic: %s,\\n' % (str(geodesic).lower()))\r\n        f.write('fillColor: \"%s\",\\n' % (fillColor))\r\n        f.write('fillOpacity: %f,\\n' % (fillOpacity))\r\n        f.write('paths: coords,\\n')\r\n        f.write('strokeColor: \"%s\",\\n' % (strokeColor))\r\n        f.write('strokeOpacity: %f,\\n' % (strokeOpacity))\r\n        f.write('strokeWeight: %d\\n' % (strokeWeight))\r\n        f.write('});\\n')\r\n        f.write('\\n')\r\n        f.write('polygon.setMap(map);\\n')\r\n        f.write('\\n\\n')\r\n\r\n    def write_heatmap(self, f):\r\n        for heatmap_points, settings_string in self.heatmap_points:\r\n            f.write('var heatmap_points = [\\n')\r\n            for heatmap_lat, heatmap_lng in heatmap_points:\r\n                f.write('new google.maps.LatLng(%f, %f),\\n' %\r\n                        (heatmap_lat, heatmap_lng))\r\n            f.write('];\\n')\r\n            f.write('\\n')\r\n            f.write('var pointArray = new google.maps.MVCArray(heatmap_points);' + '\\n')\r\n            f.write('var heatmap;' + '\\n')\r\n            f.write('heatmap = new google.maps.visualization.HeatmapLayer({' + '\\n')\r\n            f.write('\\n')\r\n            f.write('data: pointArray' + '\\n')\r\n            f.write('});' + '\\n')\r\n            f.write('heatmap.setMap(map);' + '\\n')\r\n            f.write(settings_string)\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    mymap = GoogleMapPlotter(37.428, -122.145, 16)\r\n    # mymap = GoogleMapPlotter.from_geocode(\"Stanford University\")\r\n\r\n    mymap.grid(37.42, 37.43, 0.001, -122.15, -122.14, 0.001)\r\n    mymap.marker(37.427, -122.145, \"yellow\")\r\n    mymap.marker(37.428, -122.146, \"cornflowerblue\")\r\n    mymap.marker(37.429, -122.144, \"k\")\r\n    lat, lng = mymap.geocode(\"Stanford University\")\r\n    mymap.marker(lat, lng, \"red\")\r\n    mymap.circle(37.429, -122.145, 100, \"#FF0000\", ew=2)\r\n    path = [(37.429, 37.428, 37.427, 37.427, 37.427),\r\n             (-122.145, -122.145, -122.145, -122.146, -122.146)]\r\n    path2 = [[i+.01 for i in path[0]], [i+.02 for i in path[1]]]\r\n    path3 = [(37.433302 , 37.431257 , 37.427644 , 37.430303), (-122.14488, -122.133121, -122.137799, -122.148743)]\r\n    path4 = [(37.423074, 37.422700, 37.422410, 37.422188, 37.422274, 37.422495, 37.422962, 37.423552, 37.424387, 37.425920, 37.425937),\r\n         (-122.150288, -122.149794, -122.148936, -122.148142, -122.146747, -122.14561, -122.144773, -122.143936, -122.142992, -122.147863, -122.145953)]\r\n    mymap.plot(path[0], path[1], \"plum\", edge_width=10)\r\n    mymap.plot(path2[0], path2[1], \"red\")\r\n    mymap.polygon(path3[0], path3[1], edge_color=\"cyan\", edge_width=5, face_color=\"blue\", face_alpha=0.1)\r\n    mymap.heatmap(path4[0], path4[1], threshold=10, radius=40)\r\n    mymap.heatmap(path3[0], path3[1], threshold=10, radius=40, dissipating=False, gradient=[(30,30,30,0), (30,30,30,1), (50, 50, 50, 1)])\r\n    mymap.scatter(path4[0], path4[1], c='r', marker=True)\r\n    mymap.scatter(path4[0], path4[1], s=90, marker=False, alpha=0.1)\r\n    # Get more points with:\r\n    # http://www.findlatitudeandlongitude.com/click-lat-lng-list/\r\n    scatter_path = ([37.424435, 37.424417, 37.424417, 37.424554, 37.424775, 37.425099, 37.425235, 37.425082, 37.424656, 37.423957, 37.422952, 37.421759, 37.420447, 37.419135, 37.417822, 37.417209],\r\n                    [-122.142048, -122.141275, -122.140503, -122.139688, -122.138872, -122.138078, -122.137241, -122.136405, -122.135568, -122.134731, -122.133894, -122.133057, -122.13222, -122.131383, -122.130557, -122.129999])\r\n    mymap.scatter(scatter_path[0], scatter_path[1], c='r', marker=True)\r\n    mymap.draw('./mymap.html')\r\n`\r\n\r\nwithout this,the marker turns into transparent so it is invisible"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/117",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/117/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/117/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/117/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/117",
        "id": 520102470,
        "node_id": "MDU6SXNzdWU1MjAxMDI0NzA=",
        "number": 117,
        "title": "Marker does not work after it marks 256 points. And it wipes out all the marks.",
        "user": {
            "login": "satnaik",
            "id": 52396519,
            "node_id": "MDQ6VXNlcjUyMzk2NTE5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/52396519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/satnaik",
            "html_url": "https://github.com/satnaik",
            "followers_url": "https://api.github.com/users/satnaik/followers",
            "following_url": "https://api.github.com/users/satnaik/following{/other_user}",
            "gists_url": "https://api.github.com/users/satnaik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/satnaik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/satnaik/subscriptions",
            "organizations_url": "https://api.github.com/users/satnaik/orgs",
            "repos_url": "https://api.github.com/users/satnaik/repos",
            "events_url": "https://api.github.com/users/satnaik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/satnaik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-08T16:15:54Z",
        "updated_at": "2019-11-08T18:46:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I am trying to mark a bunch of points on the map and observed that after a certain point it stops marking and wipes out all the previously marked points. I debugged the gmplot.py module and saw that when the length of array exceeds 256 this issue is coming in to picture. "
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/116",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/116/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/116/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/116/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/116",
        "id": 517116441,
        "node_id": "MDU6SXNzdWU1MTcxMTY0NDE=",
        "number": 116,
        "title": "Project dead?",
        "user": {
            "login": "Xenoamor",
            "id": 7109951,
            "node_id": "MDQ6VXNlcjcxMDk5NTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7109951?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Xenoamor",
            "html_url": "https://github.com/Xenoamor",
            "followers_url": "https://api.github.com/users/Xenoamor/followers",
            "following_url": "https://api.github.com/users/Xenoamor/following{/other_user}",
            "gists_url": "https://api.github.com/users/Xenoamor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Xenoamor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Xenoamor/subscriptions",
            "organizations_url": "https://api.github.com/users/Xenoamor/orgs",
            "repos_url": "https://api.github.com/users/Xenoamor/repos",
            "events_url": "https://api.github.com/users/Xenoamor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Xenoamor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-11-04T12:20:15Z",
        "updated_at": "2019-11-04T15:23:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Has the maintainer @vgm64 ceased to maintain this project? It looks like he hasn't been active in over a year.\r\nThere seems to be a bunch of pull requests that would really benefit the codebase if they were merged.\r\n\r\nIf we don't hear from him his email is in setup.py that I'll give a try but failing that I guess we might want to look at moving to a new repo so this project can continue until his return"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/115",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/115/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/115/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/115/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/115",
        "id": 512778690,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyNzI3Mjc4",
        "number": 115,
        "title": "Add support for custom map types.",
        "user": {
            "login": "frslm",
            "id": 8406475,
            "node_id": "MDQ6VXNlcjg0MDY0NzU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8406475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frslm",
            "html_url": "https://github.com/frslm",
            "followers_url": "https://api.github.com/users/frslm/followers",
            "following_url": "https://api.github.com/users/frslm/following{/other_user}",
            "gists_url": "https://api.github.com/users/frslm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frslm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frslm/subscriptions",
            "organizations_url": "https://api.github.com/users/frslm/orgs",
            "repos_url": "https://api.github.com/users/frslm/repos",
            "events_url": "https://api.github.com/users/frslm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frslm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-26T02:19:28Z",
        "updated_at": "2019-10-26T02:19:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/115",
            "html_url": "https://github.com/vgm64/gmplot/pull/115",
            "diff_url": "https://github.com/vgm64/gmplot/pull/115.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/115.patch"
        },
        "body": "This was a TODO in the source code - this allows users to change their map type."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/114",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/114/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/114/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/114/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/114",
        "id": 510995127,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzMxMjc1Njg3",
        "number": 114,
        "title": "Added new marker capabilities.",
        "user": {
            "login": "jurrutiag",
            "id": 26842073,
            "node_id": "MDQ6VXNlcjI2ODQyMDcz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/26842073?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jurrutiag",
            "html_url": "https://github.com/jurrutiag",
            "followers_url": "https://api.github.com/users/jurrutiag/followers",
            "following_url": "https://api.github.com/users/jurrutiag/following{/other_user}",
            "gists_url": "https://api.github.com/users/jurrutiag/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jurrutiag/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jurrutiag/subscriptions",
            "organizations_url": "https://api.github.com/users/jurrutiag/orgs",
            "repos_url": "https://api.github.com/users/jurrutiag/repos",
            "events_url": "https://api.github.com/users/jurrutiag/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jurrutiag/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-10-23T00:05:49Z",
        "updated_at": "2019-10-23T00:12:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/114",
            "html_url": "https://github.com/vgm64/gmplot/pull/114",
            "diff_url": "https://github.com/vgm64/gmplot/pull/114.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/114.patch"
        },
        "body": "Now a marker can have a label and an infowindow that pops up whenever the marker is clicked. The infowindow data has to be passed as a dict."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/113",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/113/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/113/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/113/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/113",
        "id": 509513173,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzMwMDYwNzA4",
        "number": 113,
        "title": "Rename scatter plot types to match Matplotlib.",
        "user": {
            "login": "frslm",
            "id": 8406475,
            "node_id": "MDQ6VXNlcjg0MDY0NzU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8406475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frslm",
            "html_url": "https://github.com/frslm",
            "followers_url": "https://api.github.com/users/frslm/followers",
            "following_url": "https://api.github.com/users/frslm/following{/other_user}",
            "gists_url": "https://api.github.com/users/frslm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frslm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frslm/subscriptions",
            "organizations_url": "https://api.github.com/users/frslm/orgs",
            "repos_url": "https://api.github.com/users/frslm/repos",
            "events_url": "https://api.github.com/users/frslm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frslm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-19T21:40:56Z",
        "updated_at": "2019-10-19T21:40:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/113",
            "html_url": "https://github.com/vgm64/gmplot/pull/113",
            "diff_url": "https://github.com/vgm64/gmplot/pull/113.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/113.patch"
        },
        "body": "To address #69."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/112",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/112/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/112/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/112/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/112",
        "id": 509507287,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzMwMDU2Mjkx",
        "number": 112,
        "title": "Create license file.",
        "user": {
            "login": "frslm",
            "id": 8406475,
            "node_id": "MDQ6VXNlcjg0MDY0NzU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8406475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frslm",
            "html_url": "https://github.com/frslm",
            "followers_url": "https://api.github.com/users/frslm/followers",
            "following_url": "https://api.github.com/users/frslm/following{/other_user}",
            "gists_url": "https://api.github.com/users/frslm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frslm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frslm/subscriptions",
            "organizations_url": "https://api.github.com/users/frslm/orgs",
            "repos_url": "https://api.github.com/users/frslm/repos",
            "events_url": "https://api.github.com/users/frslm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frslm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-19T20:41:42Z",
        "updated_at": "2019-10-19T20:42:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/112",
            "html_url": "https://github.com/vgm64/gmplot/pull/112",
            "diff_url": "https://github.com/vgm64/gmplot/pull/112.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/112.patch"
        },
        "body": "Since the setup file lists the license as \"MIT\", I propose adding this GitHub-generated MIT license file."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/111",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/111/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/111/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/111/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/111",
        "id": 509501501,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzMwMDUxOTky",
        "number": 111,
        "title": "Add API key argument to geocode functions.",
        "user": {
            "login": "frslm",
            "id": 8406475,
            "node_id": "MDQ6VXNlcjg0MDY0NzU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8406475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frslm",
            "html_url": "https://github.com/frslm",
            "followers_url": "https://api.github.com/users/frslm/followers",
            "following_url": "https://api.github.com/users/frslm/following{/other_user}",
            "gists_url": "https://api.github.com/users/frslm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frslm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frslm/subscriptions",
            "organizations_url": "https://api.github.com/users/frslm/orgs",
            "repos_url": "https://api.github.com/users/frslm/repos",
            "events_url": "https://api.github.com/users/frslm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frslm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-19T19:50:05Z",
        "updated_at": "2019-10-20T18:51:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/111",
            "html_url": "https://github.com/vgm64/gmplot/pull/111",
            "diff_url": "https://github.com/vgm64/gmplot/pull/111.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/111.patch"
        },
        "body": "As per #58, #82, #88, and #101, Google Maps API requires a valid key for its geocoding functionality; this PR simply allows you to pass in an API key to the geocoding functions."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/110",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/110/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/110/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/110/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/110",
        "id": 509489964,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzMwMDQ0MDE1",
        "number": 110,
        "title": "Embed marker icons in the html file.",
        "user": {
            "login": "frslm",
            "id": 8406475,
            "node_id": "MDQ6VXNlcjg0MDY0NzU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8406475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frslm",
            "html_url": "https://github.com/frslm",
            "followers_url": "https://api.github.com/users/frslm/followers",
            "following_url": "https://api.github.com/users/frslm/following{/other_user}",
            "gists_url": "https://api.github.com/users/frslm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frslm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frslm/subscriptions",
            "organizations_url": "https://api.github.com/users/frslm/orgs",
            "repos_url": "https://api.github.com/users/frslm/repos",
            "events_url": "https://api.github.com/users/frslm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frslm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-10-19T18:15:11Z",
        "updated_at": "2019-10-27T18:07:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/110",
            "html_url": "https://github.com/vgm64/gmplot/pull/110",
            "diff_url": "https://github.com/vgm64/gmplot/pull/110.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/110.patch"
        },
        "body": "This allows HTML files with markers to be shared  (#73), since all required marker icons are now embedded in the HTML file itself.\r\n\r\nAlso has the added benefit of rendering markers on Windows machines (#18, #57, #62, #63, and #97)."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/109",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/109/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/109/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/109/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/109",
        "id": 507791236,
        "node_id": "MDU6SXNzdWU1MDc3OTEyMzY=",
        "number": 109,
        "title": "How heatmap works?",
        "user": {
            "login": "Fundoprajakta",
            "id": 37836476,
            "node_id": "MDQ6VXNlcjM3ODM2NDc2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/37836476?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Fundoprajakta",
            "html_url": "https://github.com/Fundoprajakta",
            "followers_url": "https://api.github.com/users/Fundoprajakta/followers",
            "following_url": "https://api.github.com/users/Fundoprajakta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Fundoprajakta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Fundoprajakta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Fundoprajakta/subscriptions",
            "organizations_url": "https://api.github.com/users/Fundoprajakta/orgs",
            "repos_url": "https://api.github.com/users/Fundoprajakta/repos",
            "events_url": "https://api.github.com/users/Fundoprajakta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Fundoprajakta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-10-16T11:30:31Z",
        "updated_at": "2019-10-16T20:58:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hello,\r\n\r\nI could not find a proper documentation for gmplot heatmap. \r\nIs there a way, I can draw weighted heatmap?\r\nFor example: earthquake data with long, lat and intensity of earthquake.\r\n"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/108",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/108/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/108/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/108/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/108",
        "id": 506639301,
        "node_id": "MDU6SXNzdWU1MDY2MzkzMDE=",
        "number": 108,
        "title": "Turn map object into html source code",
        "user": {
            "login": "elisavetliv",
            "id": 47605861,
            "node_id": "MDQ6VXNlcjQ3NjA1ODYx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/47605861?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elisavetliv",
            "html_url": "https://github.com/elisavetliv",
            "followers_url": "https://api.github.com/users/elisavetliv/followers",
            "following_url": "https://api.github.com/users/elisavetliv/following{/other_user}",
            "gists_url": "https://api.github.com/users/elisavetliv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elisavetliv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elisavetliv/subscriptions",
            "organizations_url": "https://api.github.com/users/elisavetliv/orgs",
            "repos_url": "https://api.github.com/users/elisavetliv/repos",
            "events_url": "https://api.github.com/users/elisavetliv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elisavetliv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-10-14T13:01:36Z",
        "updated_at": "2019-10-17T00:49:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hello! I'm trying to run  gmplot from Azure Databricks and it seems to be a really nice tool for map visualization.\r\nThe problem is that gmap.draw(\"my_map.html\") doesn't show anything.\r\n\r\nIs there a way to turn map object into html source code?"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/107",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/107/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/107/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/107/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/107",
        "id": 504233130,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI1OTI1Nzkz",
        "number": 107,
        "title": "Update README.rst",
        "user": {
            "login": "vicelikedust",
            "id": 19546812,
            "node_id": "MDQ6VXNlcjE5NTQ2ODEy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/19546812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vicelikedust",
            "html_url": "https://github.com/vicelikedust",
            "followers_url": "https://api.github.com/users/vicelikedust/followers",
            "following_url": "https://api.github.com/users/vicelikedust/following{/other_user}",
            "gists_url": "https://api.github.com/users/vicelikedust/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vicelikedust/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vicelikedust/subscriptions",
            "organizations_url": "https://api.github.com/users/vicelikedust/orgs",
            "repos_url": "https://api.github.com/users/vicelikedust/repos",
            "events_url": "https://api.github.com/users/vicelikedust/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vicelikedust/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-10-08T19:27:56Z",
        "updated_at": "2019-10-19T20:08:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/107",
            "html_url": "https://github.com/vgm64/gmplot/pull/107",
            "diff_url": "https://github.com/vgm64/gmplot/pull/107.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/107.patch"
        },
        "body": "added notes"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/105",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/105/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/105/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/105/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/105",
        "id": 484185387,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwMTE4Mjky",
        "number": 105,
        "title": "Remove sensor key",
        "user": {
            "login": "scornelissen85",
            "id": 5145555,
            "node_id": "MDQ6VXNlcjUxNDU1NTU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5145555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scornelissen85",
            "html_url": "https://github.com/scornelissen85",
            "followers_url": "https://api.github.com/users/scornelissen85/followers",
            "following_url": "https://api.github.com/users/scornelissen85/following{/other_user}",
            "gists_url": "https://api.github.com/users/scornelissen85/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scornelissen85/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scornelissen85/subscriptions",
            "organizations_url": "https://api.github.com/users/scornelissen85/orgs",
            "repos_url": "https://api.github.com/users/scornelissen85/repos",
            "events_url": "https://api.github.com/users/scornelissen85/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scornelissen85/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-22T20:02:41Z",
        "updated_at": "2019-08-22T20:02:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/105",
            "html_url": "https://github.com/vgm64/gmplot/pull/105",
            "diff_url": "https://github.com/vgm64/gmplot/pull/105.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/105.patch"
        },
        "body": "As Google wants that the sensor key should be removed (according to this page: https://developers.google.com/maps/documentation/javascript/error-messages#sensor-not-required) this PR removes the sensor key."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/104",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/104/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/104/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/104/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/104",
        "id": 482020595,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzA4MzgyNDAy",
        "number": 104,
        "title": "Add opacity option to ground overlay.",
        "user": {
            "login": "andibarg",
            "id": 47257059,
            "node_id": "MDQ6VXNlcjQ3MjU3MDU5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/47257059?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andibarg",
            "html_url": "https://github.com/andibarg",
            "followers_url": "https://api.github.com/users/andibarg/followers",
            "following_url": "https://api.github.com/users/andibarg/following{/other_user}",
            "gists_url": "https://api.github.com/users/andibarg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andibarg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andibarg/subscriptions",
            "organizations_url": "https://api.github.com/users/andibarg/orgs",
            "repos_url": "https://api.github.com/users/andibarg/repos",
            "events_url": "https://api.github.com/users/andibarg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andibarg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-18T18:01:30Z",
        "updated_at": "2019-08-18T18:09:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/104",
            "html_url": "https://github.com/vgm64/gmplot/pull/104",
            "diff_url": "https://github.com/vgm64/gmplot/pull/104.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/104.patch"
        },
        "body": "The update allows the user to set the opacity of the image overlay, as is included in the GroundOverlay class of the API (see https://developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay)."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/103",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/103/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/103/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/103/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/103",
        "id": 473762559,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxODQ0MTk5",
        "number": 103,
        "title": "Add README code highlighting.",
        "user": {
            "login": "ZekeMedley",
            "id": 30676292,
            "node_id": "MDQ6VXNlcjMwNjc2Mjky",
            "avatar_url": "https://avatars0.githubusercontent.com/u/30676292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZekeMedley",
            "html_url": "https://github.com/ZekeMedley",
            "followers_url": "https://api.github.com/users/ZekeMedley/followers",
            "following_url": "https://api.github.com/users/ZekeMedley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZekeMedley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZekeMedley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZekeMedley/subscriptions",
            "organizations_url": "https://api.github.com/users/ZekeMedley/orgs",
            "repos_url": "https://api.github.com/users/ZekeMedley/repos",
            "events_url": "https://api.github.com/users/ZekeMedley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZekeMedley/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-07-28T16:39:05Z",
        "updated_at": "2019-07-30T15:56:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/103",
            "html_url": "https://github.com/vgm64/gmplot/pull/103",
            "diff_url": "https://github.com/vgm64/gmplot/pull/103.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/103.patch"
        },
        "body": "Really appreciate you guys putting this together. It's worked perfectly for me so far.\r\n\r\nThought it might be worthwhile to add code highlighting to the README :)"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/102",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/102/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/102/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/102/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/102",
        "id": 430093359,
        "node_id": "MDU6SXNzdWU0MzAwOTMzNTk=",
        "number": 102,
        "title": "Invalid syntax error with async",
        "user": {
            "login": "Luana-Leticia",
            "id": 46802605,
            "node_id": "MDQ6VXNlcjQ2ODAyNjA1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/46802605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Luana-Leticia",
            "html_url": "https://github.com/Luana-Leticia",
            "followers_url": "https://api.github.com/users/Luana-Leticia/followers",
            "following_url": "https://api.github.com/users/Luana-Leticia/following{/other_user}",
            "gists_url": "https://api.github.com/users/Luana-Leticia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Luana-Leticia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Luana-Leticia/subscriptions",
            "organizations_url": "https://api.github.com/users/Luana-Leticia/orgs",
            "repos_url": "https://api.github.com/users/Luana-Leticia/repos",
            "events_url": "https://api.github.com/users/Luana-Leticia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Luana-Leticia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-04-07T01:21:00Z",
        "updated_at": "2019-05-10T19:36:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I'm trying to use SOM in Python 3.7\r\n\r\n```\r\ndef\r\n\r\n insertapikey(fname, apikey):\r\n    \"\"\"put the google api key in a html file\"\"\"\r\n    def putkey(htmltxt, apikey, apistring=None):\r\n        \"\"\"put the apikey in the htmltxt and return soup\"\"\"\r\n        if not apistring:\r\n            apistring = \"https://maps.googleapis.com/maps/api/js?key=%s&callback=initMap\"\r\n        soup = BeautifulSoup(htmltxt, 'html.parser')\r\n        body = soup.body\r\n        src = apistring % (apikey,)\r\n     **tscript = soup.new_tag(\"script\", src=src, async=\"defer\")**\r\n        body.insert(-1, tscript)\r\n        return soup\r\n    htmltxt = open(fname, 'r').read()\r\n    soup = putkey(htmltxt, apikey)\r\n    newtxt = soup.prettify()\r\n    open(fname, `'w').write(newtxt)\r\n\r\n```\r\nAnd when I tried to run it, I received a SyntaxError: \r\n\r\n```\r\n File \"<ipython-input-1-a2f7ce0b4338>\", line 75\r\n    tscript = soup.new_tag(\"script\", src=src, async=\"defer\")\r\n                                                ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nWhat can be wrong?\r\n"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/101",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/101/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/101/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/101/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/101",
        "id": 422884795,
        "node_id": "MDU6SXNzdWU0MjI4ODQ3OTU=",
        "number": 101,
        "title": "Geocode Bugs",
        "user": {
            "login": "TimorChow",
            "id": 18365403,
            "node_id": "MDQ6VXNlcjE4MzY1NDAz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18365403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TimorChow",
            "html_url": "https://github.com/TimorChow",
            "followers_url": "https://api.github.com/users/TimorChow/followers",
            "following_url": "https://api.github.com/users/TimorChow/following{/other_user}",
            "gists_url": "https://api.github.com/users/TimorChow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TimorChow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TimorChow/subscriptions",
            "organizations_url": "https://api.github.com/users/TimorChow/orgs",
            "repos_url": "https://api.github.com/users/TimorChow/repos",
            "events_url": "https://api.github.com/users/TimorChow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TimorChow/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-03-19T18:21:24Z",
        "updated_at": "2019-03-19T18:21:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "GoogleMapPlotter.geocode\r\nIt needs a API to get results.\r\n\r\nChange: `'http://maps.googleapis.com/maps/api/geocode/json?address=\"%s\"' % location_string)`\r\n\r\nTo: `'https://maps.googleapis.com/maps/api/geocode/json?address={}&key={}'.format(location_string, self.apikey))`\r\n"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/100",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/100/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/100/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/100/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/100",
        "id": 415985161,
        "node_id": "MDU6SXNzdWU0MTU5ODUxNjE=",
        "number": 100,
        "title": "change source url from goolgemap to openstreetmap",
        "user": {
            "login": "qy-yang",
            "id": 35950574,
            "node_id": "MDQ6VXNlcjM1OTUwNTc0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/35950574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qy-yang",
            "html_url": "https://github.com/qy-yang",
            "followers_url": "https://api.github.com/users/qy-yang/followers",
            "following_url": "https://api.github.com/users/qy-yang/following{/other_user}",
            "gists_url": "https://api.github.com/users/qy-yang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/qy-yang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/qy-yang/subscriptions",
            "organizations_url": "https://api.github.com/users/qy-yang/orgs",
            "repos_url": "https://api.github.com/users/qy-yang/repos",
            "events_url": "https://api.github.com/users/qy-yang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/qy-yang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-03-01T08:01:56Z",
        "updated_at": "2019-03-01T14:21:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "change source url from goolgemap to openstreetmap"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/98",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/98/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/98/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/98/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/98",
        "id": 412984312,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjU1MDcxMDYz",
        "number": 98,
        "title": "Added precision keyword argument",
        "user": {
            "login": "ArthurGoodman",
            "id": 7889765,
            "node_id": "MDQ6VXNlcjc4ODk3NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7889765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ArthurGoodman",
            "html_url": "https://github.com/ArthurGoodman",
            "followers_url": "https://api.github.com/users/ArthurGoodman/followers",
            "following_url": "https://api.github.com/users/ArthurGoodman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ArthurGoodman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ArthurGoodman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ArthurGoodman/subscriptions",
            "organizations_url": "https://api.github.com/users/ArthurGoodman/orgs",
            "repos_url": "https://api.github.com/users/ArthurGoodman/repos",
            "events_url": "https://api.github.com/users/ArthurGoodman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ArthurGoodman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-02-21T15:32:11Z",
        "updated_at": "2019-02-21T15:32:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/98",
            "html_url": "https://github.com/vgm64/gmplot/pull/98",
            "diff_url": "https://github.com/vgm64/gmplot/pull/98.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/98.patch"
        },
        "body": "Sometimes default floating point precision of Python's `%` operator is not enough to get smooth lines on map with large zoom. This Pull Request adds a parameter for controlling that."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/97",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/97/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/97/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/97/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/97",
        "id": 412154501,
        "node_id": "MDU6SXNzdWU0MTIxNTQ1MDE=",
        "number": 97,
        "title": "Pins don't get placed on Windwows",
        "user": {
            "login": "TrueDoctor",
            "id": 21245806,
            "node_id": "MDQ6VXNlcjIxMjQ1ODA2",
            "avatar_url": "https://avatars1.githubusercontent.com/u/21245806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TrueDoctor",
            "html_url": "https://github.com/TrueDoctor",
            "followers_url": "https://api.github.com/users/TrueDoctor/followers",
            "following_url": "https://api.github.com/users/TrueDoctor/following{/other_user}",
            "gists_url": "https://api.github.com/users/TrueDoctor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TrueDoctor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TrueDoctor/subscriptions",
            "organizations_url": "https://api.github.com/users/TrueDoctor/orgs",
            "repos_url": "https://api.github.com/users/TrueDoctor/repos",
            "events_url": "https://api.github.com/users/TrueDoctor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TrueDoctor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-02-19T22:28:19Z",
        "updated_at": "2019-02-20T11:10:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "The Path describing the icon location in the generated html document contains a mix of \\ and / wich confuses the Webbrowser."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/95",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/95/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/95/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/95/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/95",
        "id": 395612874,
        "node_id": "MDU6SXNzdWUzOTU2MTI4NzQ=",
        "number": 95,
        "title": "Is there a way to use client_id and private_key instead of API key?",
        "user": {
            "login": "AlessandroPerina",
            "id": 7589671,
            "node_id": "MDQ6VXNlcjc1ODk2NzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7589671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlessandroPerina",
            "html_url": "https://github.com/AlessandroPerina",
            "followers_url": "https://api.github.com/users/AlessandroPerina/followers",
            "following_url": "https://api.github.com/users/AlessandroPerina/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlessandroPerina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlessandroPerina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlessandroPerina/subscriptions",
            "organizations_url": "https://api.github.com/users/AlessandroPerina/orgs",
            "repos_url": "https://api.github.com/users/AlessandroPerina/repos",
            "events_url": "https://api.github.com/users/AlessandroPerina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlessandroPerina/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-01-03T15:26:05Z",
        "updated_at": "2019-01-04T08:56:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hello,\r\nI have some problems with API key. I own a Maps API for Business license, and I must use my client ID to authenticate, not an API key. Is there a way to do this?\r\n\r\nThanks\r\nAlessandro\r\n"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/93",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/93/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/93/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/93/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/93",
        "id": 378299361,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjI5MDM2NDQw",
        "number": 93,
        "title": "Added label, title, info box to markers",
        "user": {
            "login": "brentbiseda",
            "id": 33010843,
            "node_id": "MDQ6VXNlcjMzMDEwODQz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/33010843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brentbiseda",
            "html_url": "https://github.com/brentbiseda",
            "followers_url": "https://api.github.com/users/brentbiseda/followers",
            "following_url": "https://api.github.com/users/brentbiseda/following{/other_user}",
            "gists_url": "https://api.github.com/users/brentbiseda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brentbiseda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brentbiseda/subscriptions",
            "organizations_url": "https://api.github.com/users/brentbiseda/orgs",
            "repos_url": "https://api.github.com/users/brentbiseda/repos",
            "events_url": "https://api.github.com/users/brentbiseda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brentbiseda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-11-07T13:59:40Z",
        "updated_at": "2019-02-28T20:03:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/93",
            "html_url": "https://github.com/vgm64/gmplot/pull/93",
            "diff_url": "https://github.com/vgm64/gmplot/pull/93.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/93.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/91",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/91/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/91/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/91/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/91",
        "id": 375053333,
        "node_id": "MDU6SXNzdWUzNzUwNTMzMzM=",
        "number": 91,
        "title": "Elevation for points",
        "user": {
            "login": "chinmay9",
            "id": 10503036,
            "node_id": "MDQ6VXNlcjEwNTAzMDM2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10503036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chinmay9",
            "html_url": "https://github.com/chinmay9",
            "followers_url": "https://api.github.com/users/chinmay9/followers",
            "following_url": "https://api.github.com/users/chinmay9/following{/other_user}",
            "gists_url": "https://api.github.com/users/chinmay9/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chinmay9/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chinmay9/subscriptions",
            "organizations_url": "https://api.github.com/users/chinmay9/orgs",
            "repos_url": "https://api.github.com/users/chinmay9/repos",
            "events_url": "https://api.github.com/users/chinmay9/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chinmay9/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-10-29T14:48:52Z",
        "updated_at": "2018-10-29T14:48:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Is it possible to return the elevation values as well from the markers on Google Maps?"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/89",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/89/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/89/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/89/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/89",
        "id": 360318777,
        "node_id": "MDU6SXNzdWUzNjAzMTg3Nzc=",
        "number": 89,
        "title": "Ability to toggle data layers on and off",
        "user": {
            "login": "paololucchino",
            "id": 14344614,
            "node_id": "MDQ6VXNlcjE0MzQ0NjE0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/14344614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paololucchino",
            "html_url": "https://github.com/paololucchino",
            "followers_url": "https://api.github.com/users/paololucchino/followers",
            "following_url": "https://api.github.com/users/paololucchino/following{/other_user}",
            "gists_url": "https://api.github.com/users/paololucchino/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paololucchino/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paololucchino/subscriptions",
            "organizations_url": "https://api.github.com/users/paololucchino/orgs",
            "repos_url": "https://api.github.com/users/paololucchino/repos",
            "events_url": "https://api.github.com/users/paololucchino/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paololucchino/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-09-14T14:04:49Z",
        "updated_at": "2018-09-14T14:04:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Is anyone interested in a feature like this? @vgm64 \r\n\r\nEx: https://developers.google.com/maps/documentation/javascript/examples/polyline-remove\r\n\r\nI could use it in a project I'm working on, but equally don't strictly need it, so wanted to gauge general interest. \r\n\r\nThanks!"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/88",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/88/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/88/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/88/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/88",
        "id": 359413631,
        "node_id": "MDU6SXNzdWUzNTk0MTM2MzE=",
        "number": 88,
        "title": "You have exceeded your request quota for this API",
        "user": {
            "login": "112617",
            "id": 43204383,
            "node_id": "MDQ6VXNlcjQzMjA0Mzgz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/43204383?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/112617",
            "html_url": "https://github.com/112617",
            "followers_url": "https://api.github.com/users/112617/followers",
            "following_url": "https://api.github.com/users/112617/following{/other_user}",
            "gists_url": "https://api.github.com/users/112617/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/112617/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/112617/subscriptions",
            "organizations_url": "https://api.github.com/users/112617/orgs",
            "repos_url": "https://api.github.com/users/112617/repos",
            "events_url": "https://api.github.com/users/112617/events{/privacy}",
            "received_events_url": "https://api.github.com/users/112617/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-09-12T10:21:56Z",
        "updated_at": "2019-06-16T10:43:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I can use this code before, but I got trouble with \"Google Maps JavaScript API warning: NoApiKey\" these days because Google changed their policy. How can I fix this? / Where shall I correct?"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/87",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/87/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/87/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/87/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/87",
        "id": 355811910,
        "node_id": "MDU6SXNzdWUzNTU4MTE5MTA=",
        "number": 87,
        "title": "Error: 'google' is undefined.",
        "user": {
            "login": "yyykkkyyy",
            "id": 42021062,
            "node_id": "MDQ6VXNlcjQyMDIxMDYy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/42021062?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yyykkkyyy",
            "html_url": "https://github.com/yyykkkyyy",
            "followers_url": "https://api.github.com/users/yyykkkyyy/followers",
            "following_url": "https://api.github.com/users/yyykkkyyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/yyykkkyyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yyykkkyyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yyykkkyyy/subscriptions",
            "organizations_url": "https://api.github.com/users/yyykkkyyy/orgs",
            "repos_url": "https://api.github.com/users/yyykkkyyy/repos",
            "events_url": "https://api.github.com/users/yyykkkyyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yyykkkyyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-08-31T01:52:45Z",
        "updated_at": "2018-08-31T06:25:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi,\r\nI use this wonderful package. \r\nI' d like to ask about an error that \"google is undefined.\". This occurred at line 9 which contained in the generated HTML by this package.\r\nWhen I get this error, Google map is not presented on browser.\r\n\r\nI don't have google map's api key. So, is this error occurred by missing api key ?\r\n\r\nHowever, I can use this package without this error on chrome and firefox with developer mode.\r\nThis error occurs on IE and Microsoft Edge.\r\n\r\nWhat can I do to solve this problem ?\r\n\r\nThanks."
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/86",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/86/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/86/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/86/events",
        "html_url": "https://github.com/vgm64/gmplot/issues/86",
        "id": 355305905,
        "node_id": "MDU6SXNzdWUzNTUzMDU5MDU=",
        "number": 86,
        "title": "How do you actually use heatmap.",
        "user": {
            "login": "bfayers",
            "id": 7032777,
            "node_id": "MDQ6VXNlcjcwMzI3Nzc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7032777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bfayers",
            "html_url": "https://github.com/bfayers",
            "followers_url": "https://api.github.com/users/bfayers/followers",
            "following_url": "https://api.github.com/users/bfayers/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfayers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bfayers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfayers/subscriptions",
            "organizations_url": "https://api.github.com/users/bfayers/orgs",
            "repos_url": "https://api.github.com/users/bfayers/repos",
            "events_url": "https://api.github.com/users/bfayers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bfayers/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2018-08-29T19:45:31Z",
        "updated_at": "2019-04-15T06:02:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I would like to use heatmap however there is no proper documentation"
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/issues/85",
        "repository_url": "https://api.github.com/repos/vgm64/gmplot",
        "labels_url": "https://api.github.com/repos/vgm64/gmplot/issues/85/labels{/name}",
        "comments_url": "https://api.github.com/repos/vgm64/gmplot/issues/85/comments",
        "events_url": "https://api.github.com/repos/vgm64/gmplot/issues/85/events",
        "html_url": "https://github.com/vgm64/gmplot/pull/85",
        "id": 354151584,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwOTg2MzAx",
        "number": 85,
        "title": "Updated Marker Plotting to Refer to CDN for Marker Images ",
        "user": {
            "login": "JLDevOps",
            "id": 5734261,
            "node_id": "MDQ6VXNlcjU3MzQyNjE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5734261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JLDevOps",
            "html_url": "https://github.com/JLDevOps",
            "followers_url": "https://api.github.com/users/JLDevOps/followers",
            "following_url": "https://api.github.com/users/JLDevOps/following{/other_user}",
            "gists_url": "https://api.github.com/users/JLDevOps/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JLDevOps/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JLDevOps/subscriptions",
            "organizations_url": "https://api.github.com/users/JLDevOps/orgs",
            "repos_url": "https://api.github.com/users/JLDevOps/repos",
            "events_url": "https://api.github.com/users/JLDevOps/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JLDevOps/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-08-27T01:42:35Z",
        "updated_at": "2018-10-23T04:49:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vgm64/gmplot/pulls/85",
            "html_url": "https://github.com/vgm64/gmplot/pull/85",
            "diff_url": "https://github.com/vgm64/gmplot/pull/85.diff",
            "patch_url": "https://github.com/vgm64/gmplot/pull/85.patch"
        },
        "body": "I updated the gmplot.py to refer to a github cdn, so that when the html map is created, it creates image without having to rely on the local machines file directory.\r\n\r\nThis is to:\r\n1. Solve the issue where Marker images won't load on window machines.\r\n2. Allow users to transfer their html maps to other users without a loss of markers."
    }
]