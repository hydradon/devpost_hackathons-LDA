[
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1751",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1751/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1751/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1751/events",
        "html_url": "https://github.com/gophish/gophish/issues/1751",
        "id": 563795732,
        "node_id": "MDU6SXNzdWU1NjM3OTU3MzI=",
        "number": 1751,
        "title": "Email sent twice to some of the recipients and landing page stopped working for some time",
        "user": {
            "login": "bhagoria",
            "id": 45088626,
            "node_id": "MDQ6VXNlcjQ1MDg4NjI2",
            "avatar_url": "https://avatars1.githubusercontent.com/u/45088626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhagoria",
            "html_url": "https://github.com/bhagoria",
            "followers_url": "https://api.github.com/users/bhagoria/followers",
            "following_url": "https://api.github.com/users/bhagoria/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhagoria/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhagoria/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhagoria/subscriptions",
            "organizations_url": "https://api.github.com/users/bhagoria/orgs",
            "repos_url": "https://api.github.com/users/bhagoria/repos",
            "events_url": "https://api.github.com/users/bhagoria/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhagoria/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-12T07:04:13Z",
        "updated_at": "2020-02-12T07:04:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "What version of Gophish are you using?: \r\n0.7.1 (This would probably be 0.8)\r\n\r\nBrief description of the issue: \r\nI noticed a few issues, not just one and mentioned below. The target list contained 33K email IDs and the campaign landing page had a login page to check who submitted the data.\r\n- Campaign Stopped sending emails after sending 12K emails out of 33K but the campaign continued running. I had to create another campaign to deliver the rest of the emails. \r\n- Landing Page did not open in the browser for a long period of time, probably due to high load but it continued the tracking. Gophish service was running between 100 to 200% CPU. When load reduced then only landing page opened in the browser.\r\n- The campaign sent emails twice to some of the recipients, not to the entire target list.\r\n- Few Misc issues such as - Gophish service stopped once and landing page configuration page pointed to the old domain used in the past campaign.\r\n\r\nWhat are you expecting to see happen? :\r\n- The campaign must deliver emails to the uploaded list of targets, should not stop after sending a few emails.\r\n- Landing page should open in the browser despite the high cpu load, not sure if this caused it though)\r\n- The campaign should not send an email twice. The email sent twice to 5% of people out of total people. \r\n\r\nWhat are you seeing happen?\r\nSame as mentioned in the brief description.\r\n\r\nIf this question is related to email templates or landing pages not working as expected, please provide your template or landing page below:\r\n\r\n```html\r\nInsert code here\r\n```\r\n\r\nPlease provide any terminal output that may be relevant below:\r\n\r\n```\r\nInsert output here\r\n```\r\n\r\nPlease provide as many steps as you can to reproduce the problem:\r\n * Step 1 - \r\n * Step 2 - \r\n \r\n \r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1748",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1748/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1748/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1748/events",
        "html_url": "https://github.com/gophish/gophish/issues/1748",
        "id": 561644534,
        "node_id": "MDU6SXNzdWU1NjE2NDQ1MzQ=",
        "number": 1748,
        "title": "email reporting error:  \"imap: unexpected completion status ... The specified charset is not supported\"",
        "user": {
            "login": "ldunzweiler",
            "id": 36317921,
            "node_id": "MDQ6VXNlcjM2MzE3OTIx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/36317921?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ldunzweiler",
            "html_url": "https://github.com/ldunzweiler",
            "followers_url": "https://api.github.com/users/ldunzweiler/followers",
            "following_url": "https://api.github.com/users/ldunzweiler/following{/other_user}",
            "gists_url": "https://api.github.com/users/ldunzweiler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ldunzweiler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ldunzweiler/subscriptions",
            "organizations_url": "https://api.github.com/users/ldunzweiler/orgs",
            "repos_url": "https://api.github.com/users/ldunzweiler/repos",
            "events_url": "https://api.github.com/users/ldunzweiler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ldunzweiler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2020-02-07T13:41:49Z",
        "updated_at": "2020-02-12T05:48:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "What version of Gophish are you using?:\r\nGophish-v0.9 on linux\r\nIMAP Email on Exchange 2016\r\n\r\nBrief description of the issue:\r\nIn 'Reporting Settings' I put in all the details, left advanced settings alone. I click 'Test Settings' and get a nice big green checkmark. \r\n\r\nSo what is the end user supposed to do to get a successful report? In my testing I have tried forwarding, replying (with the To address changed) and sending as attachment to the configured imap account. Gophish dashboard is not reporting a successful report.  "
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1746",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1746/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1746/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1746/events",
        "html_url": "https://github.com/gophish/gophish/issues/1746",
        "id": 561493281,
        "node_id": "MDU6SXNzdWU1NjE0OTMyODE=",
        "number": 1746,
        "title": "imap: command not allowed in the current state",
        "user": {
            "login": "channadsc",
            "id": 60209466,
            "node_id": "MDQ6VXNlcjYwMjA5NDY2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/60209466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/channadsc",
            "html_url": "https://github.com/channadsc",
            "followers_url": "https://api.github.com/users/channadsc/followers",
            "following_url": "https://api.github.com/users/channadsc/following{/other_user}",
            "gists_url": "https://api.github.com/users/channadsc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/channadsc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/channadsc/subscriptions",
            "organizations_url": "https://api.github.com/users/channadsc/orgs",
            "repos_url": "https://api.github.com/users/channadsc/repos",
            "events_url": "https://api.github.com/users/channadsc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/channadsc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-02-07T08:33:25Z",
        "updated_at": "2020-02-12T05:25:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "What version of Gophish are you using?: \r\nGophish-v0.9\r\nBrief description of the issue: \r\nnot able to setup the imap account detials for report settings.\r\n\r\nHave the following error at the terminal when setting the imap account.\r\n```\r\nimap: command not allowed in the current state\r\n```\r\nfor the below imap setting:\r\n````\r\nHost          : imap.mail.yahoo.com\r\nport           : 993\r\nusername  :  ******@yahoo.com\r\npassword  : *****\r\n````\r\nAnd when i change the email-id whithout the \"@yahoomail.com\"\r\n````\r\nusername  : ****\r\n````\r\nI get the following error.\r\n```\r\nimap: unexpected completion status (\"NRXHC3 BAD [CLIENTBUG] SELECT Command is not valid in this state\")\r\n```\r\n\r\n \r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1745",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1745/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1745/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1745/events",
        "html_url": "https://github.com/gophish/gophish/issues/1745",
        "id": 560210491,
        "node_id": "MDU6SXNzdWU1NjAyMTA0OTE=",
        "number": 1745,
        "title": "Would restarting a Gophish service impact the running campaign?",
        "user": {
            "login": "bhagoria",
            "id": 45088626,
            "node_id": "MDQ6VXNlcjQ1MDg4NjI2",
            "avatar_url": "https://avatars1.githubusercontent.com/u/45088626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhagoria",
            "html_url": "https://github.com/bhagoria",
            "followers_url": "https://api.github.com/users/bhagoria/followers",
            "following_url": "https://api.github.com/users/bhagoria/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhagoria/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhagoria/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhagoria/subscriptions",
            "organizations_url": "https://api.github.com/users/bhagoria/orgs",
            "repos_url": "https://api.github.com/users/bhagoria/repos",
            "events_url": "https://api.github.com/users/bhagoria/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhagoria/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-05T08:20:41Z",
        "updated_at": "2020-02-12T04:12:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi Team,\r\n\r\nIf I restart a Gophish service, would it impact the running campaign?\r\nI am targetting 33K recipients and all of sudden the phishing link (used for the landing page stopped working - it says page can not be displayed) and I am halfway through sending out the emails. \r\n\r\nWould a restart help? And, would it impact the emails that are about to be delivered and campaign?\r\n\r\nAppreciate all your help and support!"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1738",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1738/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1738/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1738/events",
        "html_url": "https://github.com/gophish/gophish/issues/1738",
        "id": 558419125,
        "node_id": "MDU6SXNzdWU1NTg0MTkxMjU=",
        "number": 1738,
        "title": "Gmail does not receive emails when sent in bulk (I think)",
        "user": {
            "login": "BeeSting12",
            "id": 22053757,
            "node_id": "MDQ6VXNlcjIyMDUzNzU3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22053757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BeeSting12",
            "html_url": "https://github.com/BeeSting12",
            "followers_url": "https://api.github.com/users/BeeSting12/followers",
            "following_url": "https://api.github.com/users/BeeSting12/following{/other_user}",
            "gists_url": "https://api.github.com/users/BeeSting12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BeeSting12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BeeSting12/subscriptions",
            "organizations_url": "https://api.github.com/users/BeeSting12/orgs",
            "repos_url": "https://api.github.com/users/BeeSting12/repos",
            "events_url": "https://api.github.com/users/BeeSting12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BeeSting12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-01-31T23:01:33Z",
        "updated_at": "2020-02-01T14:08:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "What version of Gophish are you using?: v0.9.0\r\n\r\nBrief description of the issue: \r\n\r\nFirst my setup. I am running GoPhish as a service on an AWS instance. The phishing account is a new gmail account I created two days ago. I have tested the landing page and tracking with my personal gmail account, my personal yahoo account, and a friend on a separate internet connection confirmed with his gmail account that it worked. I did my testing on a campaign with 6 people. \r\n\r\nNow the issue: I made the real campaign for an experiment I'm doing (don't worry, I have permission). It has 81 people, the majority of them use gmail. I started the campaign at 6:30am and all the emails were sent by 7:00am. Since then (it is 6:00pm now), I've only had two people open it. Both of them use icloud accounts. So I know tracking is still working. I'm wondering if gmail noticed the vast quantity of emails I was sending out and sent them to spam for those people with gmail accounts. I find it highly improbable that only 2 out of 81 people clicked on the email in the 11 hours the campaign has been live. \r\n\r\nI understand this isn't likely to be an issue with GoPhish itself, but I'd appreciate any help I can get with this.\r\n\r\nWhat are you expecting to see happen? : More clicks on the email than I have.\r\n\r\nWhat are you seeing happen? Only two, and those are from people with icloud accounts.\r\n\r\n \r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1731",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1731/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1731/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1731/events",
        "html_url": "https://github.com/gophish/gophish/issues/1731",
        "id": 555599472,
        "node_id": "MDU6SXNzdWU1NTU1OTk0NzI=",
        "number": 1731,
        "title": "GoPhish Panic on Delete Group",
        "user": {
            "login": "glennzw",
            "id": 3966613,
            "node_id": "MDQ6VXNlcjM5NjY2MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3966613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glennzw",
            "html_url": "https://github.com/glennzw",
            "followers_url": "https://api.github.com/users/glennzw/followers",
            "following_url": "https://api.github.com/users/glennzw/following{/other_user}",
            "gists_url": "https://api.github.com/users/glennzw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glennzw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glennzw/subscriptions",
            "organizations_url": "https://api.github.com/users/glennzw/orgs",
            "repos_url": "https://api.github.com/users/glennzw/repos",
            "events_url": "https://api.github.com/users/glennzw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glennzw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 66533354,
                "node_id": "MDU6TGFiZWw2NjUzMzM1NA==",
                "url": "https://api.github.com/repos/gophish/gophish/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-01-27T14:10:51Z",
        "updated_at": "2020-01-30T13:17:25Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "body": "\r\n**Please scroll to the bottom as my original observation was slightly erroneous.**\r\n\r\n***\r\n\r\nWhat version of Gophish are you using?: 0.9.0\r\n\r\nBrief description of the issue: \r\n\r\nGophish binary crashes about 50% of the time after quickly sending a sequence of three API requests:\r\n\r\nThe crash output:\r\n```\r\npanic: runtime error: index out of range [0] with length 0\r\n\r\ngoroutine 210 [running]:\r\ngithub.com/gophish/gophish/mailer.(*MailWorker).Start.func1(0xce1ce0, 0xc00002c078, 0x138f9c0, 0x0, 0x0)\r\n        /home/user/go/src/github.com/gophish/gophish/mailer/mailer.go:84 +0xe5\r\ncreated by github.com/gophish/gophish/mailer.(*MailWorker).Start\r\n        /home/user/go/src/github.com/gophish/gophish/mailer/mailer.go:83 +0x81\r\n```\r\n\r\nThe sequence of requests is below, which is an automated test. We create a group with one user, send a campaign, and then delete the group. Gophish crashes on the DELETE request.\r\n\r\n```\r\nPOST /api/groups/ HTTP/1.1\r\n\r\n{\"name\":\"_testCampaignGroup5675\",\"targets\":[{\"first_name\":\"Bobby\",\"last_name\":\"Phisher\",\"email\":\"glenn@blahblah.com\",\"position\":\"Space Janitor\"}]}\r\n``` \r\n(Response 200 OK, returning group id of '8')\r\n\r\n```\r\nPOST /api/campaigns/ HTTP/1.1\r\n\r\n{\"name\":\"Test Campaign-5675\",\"template\":{\"name\":\"Test Template\"},\"url\":\"https://blah.com\",\"page\":{\"name\":\"Test Campaign\"},\"smtp\":{\"name\":\"Test\"},\"groups\":[{\"name\":\"_testCampaignGroup5675\"}]}\r\n```\r\n(Response 200 OK)\r\n\r\n```\r\nDELETE /api/groups/8 HTTP/1.1\r\n```\r\n(No response as server crashes.)\r\n\r\n\r\nThe code I'm working with today was working a few months ago on (i) an older version of Gophish and (ii) sqlite rather than the above which is postgres.\r\n\r\nWhen I restart Gophish, the campaign email is dispatched, but the group I tried to delete in the final request is still present. If I resend the exact same DELETE, the group is successfully deleted."
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1726",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1726/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1726/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1726/events",
        "html_url": "https://github.com/gophish/gophish/issues/1726",
        "id": 552960091,
        "node_id": "MDU6SXNzdWU1NTI5NjAwOTE=",
        "number": 1726,
        "title": "Debugging sending performance issue",
        "user": {
            "login": "edermi",
            "id": 7430871,
            "node_id": "MDQ6VXNlcjc0MzA4NzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7430871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edermi",
            "html_url": "https://github.com/edermi",
            "followers_url": "https://api.github.com/users/edermi/followers",
            "following_url": "https://api.github.com/users/edermi/following{/other_user}",
            "gists_url": "https://api.github.com/users/edermi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edermi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edermi/subscriptions",
            "organizations_url": "https://api.github.com/users/edermi/orgs",
            "repos_url": "https://api.github.com/users/edermi/repos",
            "events_url": "https://api.github.com/users/edermi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edermi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 66533354,
                "node_id": "MDU6TGFiZWw2NjUzMzM1NA==",
                "url": "https://api.github.com/repos/gophish/gophish/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2020-01-21T15:44:07Z",
        "updated_at": "2020-01-28T04:23:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "What version of Gophish are you using?: \r\nc553d7d9255bd686f4e169f9471da5ece0aefcb7\r\n\r\nBrief description of the issue: \r\nAs several users have already reported, sending performance of Gophish degrades for a large number of targets.\r\n\r\nWhat are you expecting to see happen? :\r\nFast mail sending even for a large number of targets.\r\n\r\nWhat are you seeing happen?\r\n\r\nI did some deep dive and identified the root cause of the issue. I took care to write down all steps in order to allow you to reproduce the issue with minimal manual work. Grab a drink and take a seat..\r\n\r\n## Setup\r\n\r\n- The test is conducted on a Debian Buster VM running on my local machine. All actions take place locally, therefore it is **not** required to have Internet connectivity (apart from installing required packages and getting sources), an external mail server, domain configured etc. The used Go version is `go1.11.6 linux/amd64`.\r\n- `go get` Gophish from c553d7d9255bd686f4e169f9471da5ece0aefcb7\r\n- `go build` Gophish\r\n- Download latest MailHog release (https://github.com/mailhog/MailHog/releases/download/v1.0.0/MailHog_linux_amd64)\r\n- Run mailhog with default options\r\n- Verify web interface works (http://localhost:8025)\r\n- To verify the mail server works and to get an idea for its performance, I use the following Python script that sends 5k Mails and measures times:\r\n\r\n~~~python\r\nimport smtplib\r\nfrom email.message import EmailMessage\r\nfrom timeit import default_timer as timer\r\n\r\nstart = timer()\r\n\r\ns = smtplib.SMTP('localhost:1025')\r\n\r\nfor number in range(0, 5000):\r\n    msg = EmailMessage()\r\n    msg.set_content(\"Mail from python\")\r\n    msg['Subject'] = f'Test {number}'\r\n    msg['From'] = \"sender@example.com\"\r\n    msg['To'] = \"receiver@example.com\"\r\n\r\n    s.send_message(msg)\r\n\r\ns.quit()\r\nend = timer()\r\nprint(end - start) \r\n~~~\r\n\r\nOn my small test VM (2 notebook cores, <4GB RAM) this takes about 24 seconds:\r\n\r\n~~~bash\r\n$ python3 --version\r\nPython 3.7.3\r\n$ python3 python-gophishdbg-sendmail.py\r\n23.703909114999988\r\n~~~\r\n\r\n- In mailhog, we can see that all mails have been received by mailhog and no mail was lost. \r\n\r\n![verify_mailhog_works](https://user-images.githubusercontent.com/7430871/72819016-c061f080-3c6c-11ea-8793-3a5fdb716400.png)\r\n- Since this is a rather simple use case and a lab setup involving no authentication, only small message sizes, in memory storage and no network latency, I'd say that it would be OK for Gophish to send 5k mails in less than 5 minutes.\r\n\r\n- Now fire up gophish. The following script is used to automatically provision the server with meaningful test data so we can compare the performance and probably spot the bug later on\r\n\r\n- Use the following python script to fill the instance with meaningful data and start sending mails:\r\n\r\n~~~python\r\nfrom gophish import Gophish # pip3 install gophish\r\nfrom gophish.models import *\r\nfrom faker import Faker # pip3 install Faker\r\nfrom faker.providers import internet\r\n\r\n# You may need to adjust this\r\napi_key = \"e53caa153515308abf60dd2bddb05caed4be0d4f1806d88b04e244f29f7abcef\"\r\napi = Gophish(api_key, host='https://localhost:3333', verify=False)\r\n\r\n\r\ndef create_sending_profile():\r\n    smtp = SMTP(name='Test SMTP')\r\n    smtp.host = \"localhost:025\"\r\n    smtp.from_address = \"Example <example@example.com>\"\r\n    smtp.interface_type = \"SMTP\"\r\n    smtp.ignore_cert_errors = True\r\n    try:\r\n        smtp = api.smtp.post(smtp)\r\n        print(\"Created sending profile with ID {}\".format(smtp.id))\r\n    except Error:\r\n        print(\"Sending profile already exists, skipping\")\r\n    \r\n\r\ndef create_targets(num: int=5000):\r\n    fake = Faker()\r\n    fake.add_provider(internet)\r\n    targets = []\r\n    for i in range(0, num):\r\n        targets.append(User(first_name=f\"User_{i}\", last_name=\"\", email=fake.email()))\r\n    group = Group(name=\"Performance Debugging User Set\", targets=targets)\r\n    try:\r\n        group = api.groups.post(group)\r\n        print(\"Created group with ID {}\".format(group.id))\r\n    except Error:\r\n        print(\"Group already exists, skipping\")\r\n\r\ndef create_landing_page():\r\n    page = Page(name='Test Page', html='<html><body>Click <a href=\"{{.URL}}\">here</a></body></html>')\r\n    try:\r\n        page = api.pages.post(page)\r\n        print(\"Created test page with ID {}\".format(page.id))\r\n    except Error:\r\n        print(\"Landing page already exists, skipping\")\r\n\r\n\r\ndef create_mail_template():\r\n    template = Template(name='Test Template', html='<html><body>Click <a href=\"{{.URL}}\">here</a></body></html>')\r\n    try:\r\n        template = api.templates.post(template)\r\n        print(\"Created test template with ID {}\".format(template.id))\r\n    except Error:\r\n        print(\"Template already exists, skipping\")\r\n\r\n\r\ndef create_campaign():\r\n    groups = [Group(name='Performance Debugging User Set')]\r\n    page = Page(name='Test Page')\r\n    template = Template(name='Test Template')\r\n    smtp = SMTP(name='Test SMTP')\r\n    url = 'http://phishing_server' # doesn't matter\r\n    campaign = Campaign(name='Example Campaign', groups=groups, page=page, template=template, smtp=smtp)\r\n    input(\"Everything is ready, hit <Enter> to start the campaign\\n\")\r\n    try:\r\n        campaign = api.campaigns.post(campaign)\r\n        print(\"Created test campaign with ID {}\".format(campaign.id))\r\n    except Error:\r\n        print(\"Campaign already exists, skipping\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    create_sending_profile()\r\n    create_targets()\r\n    create_landing_page()\r\n    create_mail_template()\r\n    create_campaign()\r\n~~~\r\n\r\n## Identifying the issue\r\n\r\nAs you can see in mailhog, E-Mails are sent comparably slow - according to the info log about 2-4 mails per second.\r\n\r\nDuring the sending time frame, gophish also generates quite high load on the machine.\r\n\r\n![gophish_high_load_during_send](https://user-images.githubusercontent.com/7430871/72819014-c061f080-3c6c-11ea-9558-84c98d921604.png)\r\n\r\nSending all 5000 Mails took (according to timestamps in log) 40 minutes and 22 seconds - also 13 messages have not been transmitted (this is something for another issue...):\r\n\r\n![lost_mails](https://user-images.githubusercontent.com/7430871/72819015-c061f080-3c6c-11ea-8f3e-216076619176.png)\r\n\r\nInterestingly, sending 100 instead of 5000 mails goes significantly faster, therefore I assume that Gophish becomes slower depending on the size of the set or target emails. This behaviour makes it also trickier to nail down the bug, since mail sending is fast for small recipient sets.\r\n\r\nI modified the send loop in `mailer.go` to contain some simple time measurements:\r\n\r\n~~~go\r\nfor i, m := range ms {\r\n\t\tstart := time.Now()\r\n\t\tselect {\r\n\t\tcase <-ctx.Done():\r\n\t\t\treturn\r\n\t\tdefault:\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tselectTiming := time.Since(start)\r\n\t\tstart = time.Now()\r\n\t\tmessage.Reset()\r\n\t\tresetTiming := time.Since(start)\r\n\t\tstart = time.Now()\r\n\t\terr = m.Generate(message)\r\n\t\tif err != nil {\r\n\t\t\tlog.Warn(err)\r\n\t\t\tm.Error(err)\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tgenerationTiming := time.Since(start)\r\n\t\tstart = time.Now()\r\n\t\terr = gomail.Send(sender, message)\r\n\t\terrorTiming := time.Since(start)\r\n\t\tstart = time.Now()\r\n\t\tif err != nil {\r\n\t\t\tif te, ok := err.(*textproto.Error); ok {\r\n\t\t\t\tswitch {\r\n\t\t\t\t// If it's a temporary error, we should backoff and try again later.\r\n\t\t\t\t// We'll reset the connection so future messages don't incur a\r\n\t\t\t\t// different error (see https://github.com/gophish/gophish/issues/787).\r\n\t\t\t\tcase te.Code >= 400 && te.Code <= 499:\r\n\t\t\t\t\tlog.WithFields(logrus.Fields{\r\n\t\t\t\t\t\t\"code\":  te.Code,\r\n\t\t\t\t\t\t\"email\": message.GetHeader(\"To\")[0],\r\n\t\t\t\t\t}).Warn(err)\r\n\t\t\t\t\tm.Backoff(err)\r\n\t\t\t\t\tsender.Reset()\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t// Otherwise, if it's a permanent error, we shouldn't backoff this message,\r\n\t\t\t\t// since the RFC specifies that running the same commands won't work next time.\r\n\t\t\t\t// We should reset our sender and error this message out.\r\n\t\t\t\tcase te.Code >= 500 && te.Code <= 599:\r\n\t\t\t\t\tlog.WithFields(logrus.Fields{\r\n\t\t\t\t\t\t\"code\":  te.Code,\r\n\t\t\t\t\t\t\"email\": message.GetHeader(\"To\")[0],\r\n\t\t\t\t\t}).Warn(err)\r\n\t\t\t\t\tm.Error(err)\r\n\t\t\t\t\tsender.Reset()\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t// If something else happened, let's just error out and reset the\r\n\t\t\t\t// sender\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlog.WithFields(logrus.Fields{\r\n\t\t\t\t\t\t\"code\":  \"unknown\",\r\n\t\t\t\t\t\t\"email\": message.GetHeader(\"To\")[0],\r\n\t\t\t\t\t}).Warn(err)\r\n\t\t\t\t\tm.Error(err)\r\n\t\t\t\t\tsender.Reset()\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// This likely indicates that something happened to the underlying\r\n\t\t\t\t// connection. We'll try to reconnect and, if that fails, we'll\r\n\t\t\t\t// error out the remaining emails.\r\n\t\t\t\tlog.WithFields(logrus.Fields{\r\n\t\t\t\t\t\"email\": message.GetHeader(\"To\")[0],\r\n\t\t\t\t}).Warn(err)\r\n\t\t\t\torigErr := err\r\n\t\t\t\tsender, err = dialHost(ctx, dialer)\r\n\t\t\t\tif err != nil {\r\n\t\t\t\t\terrorMail(err, ms[i:])\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tm.Backoff(origErr)\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t}\r\n\t\terrorHandlingTiming := time.Since(start)\r\n\t\tlog.WithFields(logrus.Fields{\r\n\t\t\t\"email\":               message.GetHeader(\"To\")[0],\r\n\t\t\t\"selectTiming\":        selectTiming,\r\n\t\t\t\"resetTiming\":         resetTiming,\r\n\t\t\t\"generationTiming\":    generationTiming,\r\n\t\t\t\"errorTiming\":         errorTiming,\r\n\t\t\t\"errorHandlingTiming\": errorHandlingTiming,\r\n\t\t}).Info(\"Email sent\")\r\n\t\tm.Success()\r\n    }\r\n~~~\r\n\r\nHere are some results for mails from the 100-targets-run:\r\n~~~\r\ntime=\"2020-01-21T14:41:49+01:00\" level=info msg=\"Email sent\" email=michele70@griffin.info errorHandlingTiming=156ns errorTiming=3.994391ms generationTiming=14.584268ms resetTiming=\"1.094\u00b5s\" selectTiming=454ns\r\ntime=\"2020-01-21T14:41:49+01:00\" level=info msg=\"Email sent\" email=iwright@hotmail.com errorHandlingTiming=144ns errorTiming=2.447298ms generationTiming=5.096648ms resetTiming=\"1.373\u00b5s\" selectTiming=376ns\r\ntime=\"2020-01-21T14:41:49+01:00\" level=info msg=\"Email sent\" email=mwhite@yahoo.com errorHandlingTiming=132ns errorTiming=2.632184ms generationTiming=15.213952ms resetTiming=\"1.006\u00b5s\" selectTiming=479ns\r\ntime=\"2020-01-21T14:41:49+01:00\" level=info msg=\"Email sent\" email=estesdavid@duncan.com errorHandlingTiming=143ns errorTiming=1.572142ms generationTiming=13.906821ms resetTiming=\"1.061\u00b5s\" selectTiming=458ns\r\ntime=\"2020-01-21T14:41:49+01:00\" level=info msg=\"Email sent\" email=anthonyescobar@gmail.com errorHandlingTiming=860ns errorTiming=2.739628ms generationTiming=5.999564ms resetTiming=\"1.64\u00b5s\" selectTiming=488ns\r\ntime=\"2020-01-21T14:41:49+01:00\" level=info msg=\"Email sent\" email=evansautumn@yahoo.com errorHandlingTiming=145ns errorTiming=4.33192ms generationTiming=6.889167ms resetTiming=\"1.357\u00b5s\" selectTiming=393ns\r\n~~~\r\n\r\nThese are from a run with 5k targets:\r\n\r\n~~~\r\n01-21T14:43:58+01:00\" level=info msg=\"Email sent\" email=sandrasmith@hess.com errorHandlingTiming=167ns errorTiming=1.843308ms generationTiming=146.712995ms resetTiming=\"1.286\u00b5s\" selectTiming=602ns\r\ntime=\"2020-01-21T14:43:58+01:00\" level=info msg=\"Email sent\" email=emilysims@hotmail.com errorHandlingTiming=185ns errorTiming=1.393477ms generationTiming=159.945886ms resetTiming=\"1.193\u00b5s\" selectTiming=549ns\r\ntime=\"2020-01-21T14:43:59+01:00\" level=info msg=\"Email sent\" email=stephenssean@hotmail.com errorHandlingTiming=187ns errorTiming=1.923179ms generationTiming=154.307453ms resetTiming=\"1.428\u00b5s\" selectTiming=631ns\r\ntime=\"2020-01-21T14:43:59+01:00\" level=info msg=\"Email sent\" email=jacob32@davis.net errorHandlingTiming=153ns errorTiming=1.582331ms generationTiming=189.721859ms resetTiming=\"1.451\u00b5s\" selectTiming=581ns\r\ntime=\"2020-01-21T14:43:59+01:00\" level=info msg=\"Email sent\" email=sabrinamorrow@yahoo.com errorHandlingTiming=162ns errorTiming=1.066675ms generationTiming=153.22342ms resetTiming=\"1.03\u00b5s\" selectTiming=628ns\r\ntime=\"2020-01-21T14:44:00+01:00\" level=info msg=\"Email sent\" email=oliverchristine@day-cruz.com errorHandlingTiming=161ns errorTiming=1.432362ms generationTiming=147.885443ms resetTiming=\"1.355\u00b5s\" selectTiming=430ns\r\n~~~\r\n\r\nAs you can see, the fastest generation took about 5ms in the 100 targets run whereas the 5k run has elements with nearly 190ms.\r\n\r\nSo, let's take a closer look at `Generate()` in `models/maillog.go` by adding some timers:\r\n\r\n~~~go\r\n// Generate fills in the details of a gomail.Message instance with\r\n// the correct headers and body from the campaign and recipient listed in\r\n// the maillog. We accept the gomail.Message as an argument so that the caller\r\n// can choose to re-use the message across recipients.\r\nfunc (m *MailLog) Generate(msg *gomail.Message) error {\r\n\tstart := time.Now()\r\n\tr, err := GetResult(m.RId)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\tc, err := GetCampaign(m.CampaignId, m.UserId)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\r\n\tf, err := mail.ParseAddress(c.SMTP.FromAddress)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\tmsg.SetAddressHeader(\"From\", f.Address, f.Name)\r\n\telapsedQueryData := time.Since(start)\r\n\r\n\tstart = time.Now()\r\n\tptx, err := NewPhishingTemplateContext(&c, r.BaseRecipient, r.RId)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\telapsedPTC := time.Since(start)\r\n\r\n\tstart = time.Now()\r\n\t// Add the transparency headers\r\n\tmsg.SetHeader(\"X-Mailer\", config.ServerName)\r\n\tif conf.ContactAddress != \"\" {\r\n\t\tmsg.SetHeader(\"X-Gophish-Contact\", conf.ContactAddress)\r\n\t}\r\n\r\n\t// Add Message-Id header as described in RFC 2822.\r\n\tmessageID, err := m.generateMessageID()\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\tmsg.SetHeader(\"Message-Id\", messageID)\r\n\r\n\t// Parse the customHeader templates\r\n\tfor _, header := range c.SMTP.Headers {\r\n\t\tkey, err := ExecuteTemplate(header.Key, ptx)\r\n\t\tif err != nil {\r\n\t\t\tlog.Warn(err)\r\n\t\t}\r\n\r\n\t\tvalue, err := ExecuteTemplate(header.Value, ptx)\r\n\t\tif err != nil {\r\n\t\t\tlog.Warn(err)\r\n\t\t}\r\n\r\n\t\t// Add our header immediately\r\n\t\tmsg.SetHeader(key, value)\r\n\t}\r\n\r\n\telapsedHeaders := time.Since(start)\r\n\tstart = time.Now()\r\n\t// Parse remaining templates\r\n\tsubject, err := ExecuteTemplate(c.Template.Subject, ptx)\r\n\tif err != nil {\r\n\t\tlog.Warn(err)\r\n\t}\r\n\telapsedTemplate := time.Since(start)\r\n\tstart = time.Now()\r\n\t// don't set Subject header if the subject is empty\r\n\tif len(subject) != 0 {\r\n\t\tmsg.SetHeader(\"Subject\", subject)\r\n\t}\r\n\r\n\tmsg.SetHeader(\"To\", r.FormatAddress())\r\n\tif c.Template.Text != \"\" {\r\n\t\ttext, err := ExecuteTemplate(c.Template.Text, ptx)\r\n\t\tif err != nil {\r\n\t\t\tlog.Warn(err)\r\n\t\t}\r\n\t\tmsg.SetBody(\"text/plain\", text)\r\n\t}\r\n\telapsedRemainingHeaders := time.Since(start)\r\n\tstart = time.Now()\r\n\tif c.Template.HTML != \"\" {\r\n\t\thtml, err := ExecuteTemplate(c.Template.HTML, ptx)\r\n\t\tif err != nil {\r\n\t\t\tlog.Warn(err)\r\n\t\t}\r\n\t\tif c.Template.Text == \"\" {\r\n\t\t\tmsg.SetBody(\"text/html\", html)\r\n\t\t} else {\r\n\t\t\tmsg.AddAlternative(\"text/html\", html)\r\n\t\t}\r\n\t}\r\n\telapsedHTML := time.Since(start)\r\n\tstart = time.Now()\r\n\t// Attach the files\r\n\tfor _, a := range c.Template.Attachments {\r\n\t\tmsg.Attach(func(a Attachment) (string, gomail.FileSetting, gomail.FileSetting) {\r\n\t\t\th := map[string][]string{\"Content-ID\": {fmt.Sprintf(\"<%s>\", a.Name)}}\r\n\t\t\treturn a.Name, gomail.SetCopyFunc(func(w io.Writer) error {\r\n\t\t\t\tdecoder := base64.NewDecoder(base64.StdEncoding, strings.NewReader(a.Content))\r\n\t\t\t\t_, err = io.Copy(w, decoder)\r\n\t\t\t\treturn err\r\n\t\t\t}), gomail.SetHeader(h)\r\n\t\t}(a))\r\n\t}\r\n\telapsedAttachments := time.Since(start)\r\n\r\n\tlog.WithFields(logrus.Fields{\r\n\t\t\"elapsedQueryData\":        elapsedQueryData,\r\n\t\t\"elapsedPTC\":              elapsedPTC,\r\n\t\t\"elapsedHeaders\":          elapsedHeaders,\r\n\t\t\"elapsedTemplate\":         elapsedTemplate,\r\n\t\t\"elapsedRemainingHeaders\": elapsedRemainingHeaders,\r\n\t\t\"elapsedHTML\":             elapsedHTML,\r\n\t\t\"elapsedAttachments\":      elapsedAttachments,\r\n\t}).Info(\"Email sent\")\r\n\r\n\treturn nil\r\n}\r\n~~~\r\n\r\nThe results indicate that the most expensive operation is querying data (5k users).\r\n\r\n~~~\r\ntime=\"2020-01-21T15:19:31+01:00\" level=info msg=\"Email sent\" elapsedAttachments=79ns elapsedHTML=\"16.385\u00b5s\" elapsedHeaders=\"16.811\u00b5s\" elapsedPTC=\"27.208\u00b5s\" elapsedQueryData=147.391754ms elapsedRemainingHeaders=566ns elapsedTemplate=\"3.529\u00b5s\"\r\ntime=\"2020-01-21T15:19:31+01:00\" level=info msg=\"Email sent\" email=annacoleman@hotmail.com generationTiming=147.529328ms\r\ntime=\"2020-01-21T15:19:32+01:00\" level=info msg=\"Email sent\" elapsedAttachments=117ns elapsedHTML=\"25.834\u00b5s\" elapsedHeaders=\"29.639\u00b5s\" elapsedPTC=\"579.586\u00b5s\" elapsedQueryData=148.520964ms elapsedRemainingHeaders=833ns elapsedTemplate=\"14.256\u00b5s\"\r\ntime=\"2020-01-21T15:19:32+01:00\" level=info msg=\"Email sent\" email=connie91@sullivan-stone.com generationTiming=149.388801ms\r\ntime=\"2020-01-21T15:19:32+01:00\" level=info msg=\"Email sent\" elapsedAttachments=76ns elapsedHTML=\"20.441\u00b5s\" elapsedHeaders=\"17.493\u00b5s\" elapsedPTC=\"113.009\u00b5s\" elapsedQueryData=158.642195ms elapsedRemainingHeaders=527ns elapsedTemplate=\"8.678\u00b5s\"\r\ntime=\"2020-01-21T15:19:32+01:00\" level=info msg=\"Email sent\" email=rdavis@gmail.com generationTiming=158.913708ms\r\ntime=\"2020-01-21T15:19:32+01:00\" level=info msg=\"Email sent\" elapsedAttachments=77ns elapsedHTML=\"31.888\u00b5s\" elapsedHeaders=\"26.208\u00b5s\" elapsedPTC=\"62.666\u00b5s\" elapsedQueryData=147.374994ms elapsedRemainingHeaders=509ns elapsedTemplate=\"4.141\u00b5s\"\r\ntime=\"2020-01-21T15:19:32+01:00\" level=info msg=\"Email sent\" email=jasonsmith@yahoo.com generationTiming=147.574892ms\r\ntime=\"2020-01-21T15:19:33+01:00\" level=info msg=\"Email sent\" elapsedAttachments=177ns elapsedHTML=\"60.164\u00b5s\" elapsedHeaders=\"31.445\u00b5s\" elapsedPTC=22.0101ms elapsedQueryData=159.384985ms elapsedRemainingHeaders=799ns elapsedTemplate=\"14.785\u00b5s\"\r\n~~~\r\n\r\nAgain, **what** exactly is slow?\r\n\r\n~~~go\r\nfunc (m *MailLog) Generate(msg *gomail.Message) error {\r\n\tstart := time.Now()\r\n\tr, err := GetResult(m.RId)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\telapsedGetResult := time.Since(start)\r\n\tstart = time.Now()\r\n\tc, err := GetCampaign(m.CampaignId, m.UserId)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\telapsedGetCampaign := time.Since(start)\r\n\tstart = time.Now()\r\n\tf, err := mail.ParseAddress(c.SMTP.FromAddress)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\tmsg.SetAddressHeader(\"From\", f.Address, f.Name)\r\n\telapsedParseAddress := time.Since(start)\r\n\r\n\tptx, err := NewPhishingTemplateContext(&c, r.BaseRecipient, r.RId)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\r\n\tlog.WithFields(logrus.Fields{\r\n\t\t\"elapsedGetResult\":    elapsedGetResult,\r\n\t\t\"elapsedGetCampaign\":  elapsedGetCampaign,\r\n\t\t\"elapsedParseAddress\": elapsedParseAddress,\r\n\t}).Info(\"Email sent\")\r\n\r\n\t// Add the transparency headers\r\n~~~\r\n\r\nResult:\r\n\r\n~~~\r\ntime=\"2020-01-21T15:28:15+01:00\" level=info msg=\"Email sent\" elapsedGetCampaign=144.87673ms elapsedGetResult=\"948.977\u00b5s\" elapsedParseAddress=\"8.167\u00b5s\"\r\ntime=\"2020-01-21T15:28:15+01:00\" level=info msg=\"Email sent\" email=jacksonthomas@yahoo.com generationTiming=146.047505ms\r\ntime=\"2020-01-21T15:28:16+01:00\" level=info msg=\"Email sent\" elapsedGetCampaign=150.072904ms elapsedGetResult=1.613692ms elapsedParseAddress=\"7.988\u00b5s\"\r\ntime=\"2020-01-21T15:28:16+01:00\" level=info msg=\"Email sent\" email=jasonthompson@yahoo.com generationTiming=152.102629ms\r\ntime=\"2020-01-21T15:28:16+01:00\" level=info msg=\"Email sent\" elapsedGetCampaign=149.681185ms elapsedGetResult=\"865.732\u00b5s\" elapsedParseAddress=\"8.829\u00b5s\"\r\ntime=\"2020-01-21T15:28:16+01:00\" level=info msg=\"Email sent\" email=suecollins@hotmail.com generationTiming=150.753832ms\r\ntime=\"2020-01-21T15:28:16+01:00\" level=info msg=\"Email sent\" elapsedGetCampaign=164.984759ms elapsedGetResult=\"902.753\u00b5s\" elapsedParseAddress=\"8.743\u00b5s\"\r\ntime=\"2020-01-21T15:28:16+01:00\" level=info msg=\"Email sent\" email=annacoleman@hotmail.com generationTiming=166.232961ms\r\ntime=\"2020-01-21T15:28:17+01:00\" level=info msg=\"Email sent\" elapsedGetCampaign=144.901844ms elapsedGetResult=\"896.696\u00b5s\" elapsedParseAddress=\"12.833\u00b5s\"\r\ntime=\"2020-01-21T15:28:17+01:00\" level=info msg=\"Email sent\" email=connie91@sullivan-stone.com generationTiming=146.169969ms\r\ntime=\"2020-01-21T15:28:17+01:00\" level=info msg=\"Email sent\" elapsedGetCampaign=149.204837ms elapsedGetResult=1.422603ms elapsedParseAddress=\"8.264\u00b5s\"\r\ntime=\"2020-01-21T15:28:17+01:00\" level=info msg=\"Email sent\" email=rdavis@gmail.com generationTiming=150.96901ms\r\ntime=\"2020-01-21T15:28:17+01:00\" level=info msg=\"Email sent\" elapsedGetCampaign=149.987239ms elapsedGetResult=1.021825ms elapsedParseAddress=\"8.303\u00b5s\"\r\n~~~\r\n\r\n**Result: The call to `GetCampaign()` massively slows down E-Mail sending with many recipients.** Fetching complete campaign info for every mail from the database also may explain the high load and slow web interface during sending.\r\n\r\n## Solution\r\n\r\nIn my opinion there isn't a single obvious solution to the problem. Probably it is a good idea to take load from the database. As far as I see the ms slice passed to `sendMail()` may contain mails from different campaigns - if I'm mistaken and this is not the case, I'd vouch for querying the campaign once before going to the send loop and passing the object to each `Generate()` call. Otherwise, I'd probably use a simple cache, e.g. a two-dimensional map that is queried in `GetCampaign()` before going the long way down to the database.\r\n\r\nI'd love to hear your opinions and solutions to the problem; Once @jordan-wright has decided what's probably best I can also send in a PR in order to hopefully solve the problem finally.\r\n\r\nIf there are any further questions or remarks, please feel free to ask.\r\n \r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1721",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1721/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1721/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1721/events",
        "html_url": "https://github.com/gophish/gophish/issues/1721",
        "id": 550649306,
        "node_id": "MDU6SXNzdWU1NTA2NDkzMDY=",
        "number": 1721,
        "title": "DSO missing from command line",
        "user": {
            "login": "klifer",
            "id": 26668823,
            "node_id": "MDQ6VXNlcjI2NjY4ODIz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/26668823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/klifer",
            "html_url": "https://github.com/klifer",
            "followers_url": "https://api.github.com/users/klifer/followers",
            "following_url": "https://api.github.com/users/klifer/following{/other_user}",
            "gists_url": "https://api.github.com/users/klifer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/klifer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/klifer/subscriptions",
            "organizations_url": "https://api.github.com/users/klifer/orgs",
            "repos_url": "https://api.github.com/users/klifer/repos",
            "events_url": "https://api.github.com/users/klifer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/klifer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-16T08:25:03Z",
        "updated_at": "2020-01-16T08:25:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hey\r\ntrying to install and compile gopfish on the fresh installation of Ubuntu srv. \r\n```\r\nroot@srv01:/home/r/gophish# uname -a\r\nLinux srv01 4.15.0-74-generic #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\nafter go build it's return:\r\n\r\n```\r\nroot@srv01:/home/r/gophish# go build\r\n# _/home/r/gophish\r\n/usr/bin/ld: $WORK/b001/_pkg1_.a(_x011.o): undefined reference to symbol 'pthread_mutexattr_settype@@GLIBC_2.2.5'\r\n//lib/x86_64-linux-gnu/libpthread.so.0: error adding symbols: DSO missing from command line\r\ncollect2: error: ld returned 1 exit status\r\n```\r\n any ideas? thx\r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1708",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1708/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1708/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1708/events",
        "html_url": "https://github.com/gophish/gophish/issues/1708",
        "id": 546366591,
        "node_id": "MDU6SXNzdWU1NDYzNjY1OTE=",
        "number": 1708,
        "title": "Block Auto Fill on \"Send Emails By\" Field on new Campaign Screen",
        "user": {
            "login": "SteveT76",
            "id": 43610298,
            "node_id": "MDQ6VXNlcjQzNjEwMjk4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/43610298?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SteveT76",
            "html_url": "https://github.com/SteveT76",
            "followers_url": "https://api.github.com/users/SteveT76/followers",
            "following_url": "https://api.github.com/users/SteveT76/following{/other_user}",
            "gists_url": "https://api.github.com/users/SteveT76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SteveT76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SteveT76/subscriptions",
            "organizations_url": "https://api.github.com/users/SteveT76/orgs",
            "repos_url": "https://api.github.com/users/SteveT76/repos",
            "events_url": "https://api.github.com/users/SteveT76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SteveT76/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 66533354,
                "node_id": "MDU6TGFiZWw2NjUzMzM1NA==",
                "url": "https://api.github.com/repos/gophish/gophish/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-01-07T16:03:56Z",
        "updated_at": "2020-02-07T15:25:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "What version of Gophish are you using?: \r\n0.7.1\r\n\r\nBrief description of the issue:\r\nUsing Chrome with Auto address fill in enabled. When trying to enter a date/time into the 'Send Emails By Date' field, Chrome sees this as an email field and displays a list of 'auto complete addressed over the date/time picker. So unable to select a date/time.\r\n\r\nWhat are you expecting to see happen? :\r\nTo see the date/time picker \r\n\r\nWhat are you seeing happen?\r\nA chrome address selection list displays over the top of the date/time picker.\r\n\r\nPossible Solution:\r\nAdd autocomplete=\"no\" html directive to the field\r\n![Capture](https://user-images.githubusercontent.com/43610298/71909146-4bb88d80-3167-11ea-9f63-1853934ae67c.PNG)\r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1707",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1707/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1707/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1707/events",
        "html_url": "https://github.com/gophish/gophish/issues/1707",
        "id": 545654474,
        "node_id": "MDU6SXNzdWU1NDU2NTQ0NzQ=",
        "number": 1707,
        "title": "Unable to create group using python code",
        "user": {
            "login": "sreekanth99850",
            "id": 44702953,
            "node_id": "MDQ6VXNlcjQ0NzAyOTUz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/44702953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sreekanth99850",
            "html_url": "https://github.com/sreekanth99850",
            "followers_url": "https://api.github.com/users/sreekanth99850/followers",
            "following_url": "https://api.github.com/users/sreekanth99850/following{/other_user}",
            "gists_url": "https://api.github.com/users/sreekanth99850/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sreekanth99850/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sreekanth99850/subscriptions",
            "organizations_url": "https://api.github.com/users/sreekanth99850/orgs",
            "repos_url": "https://api.github.com/users/sreekanth99850/repos",
            "events_url": "https://api.github.com/users/sreekanth99850/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sreekanth99850/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 319459886,
                "node_id": "MDU6TGFiZWwzMTk0NTk4ODY=",
                "url": "https://api.github.com/repos/gophish/gophish/labels/support",
                "name": "support",
                "color": "207de5",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-01-06T10:29:31Z",
        "updated_at": "2020-01-09T07:16:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "**Thanks for reaching out! We're happy to help resolve issues as quickly as possible.**\r\n\r\n**Please use this template when creating a new issue. If you do not follow this template format, your issue may be closed without comment.**\r\n\r\nBefore filing a new issue, please use the search bar at the top of the browser to search for similar issues. Also, please make sure you have read our [documentation](https://getgophish.com/documentation/), which covers how to use Gophish.\r\n\r\nWhat version of Gophish are you using?: \r\n\r\nBrief description of the issue: \r\n\r\nWhat are you expecting to see happen? :\r\n\r\nWhat are you seeing happen?\r\n\r\nIf this question is related to email templates or landing pages not working as expected, please provide your template or landing page below:\r\n\r\n```html\r\nInsert code here\r\n```\r\n\r\nPlease provide any terminal output that may be relevant below:\r\n\r\n```\r\nInsert output here\r\n```\r\n\r\nPlease provide as many steps as you can to reproduce the problem:\r\n * Step 1 - \r\n * Step 2 - \r\n \r\n \r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1698",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1698/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1698/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1698/events",
        "html_url": "https://github.com/gophish/gophish/issues/1698",
        "id": 539755080,
        "node_id": "MDU6SXNzdWU1Mzk3NTUwODA=",
        "number": 1698,
        "title": "Harden Cipher list",
        "user": {
            "login": "S0larflare",
            "id": 8939757,
            "node_id": "MDQ6VXNlcjg5Mzk3NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8939757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/S0larflare",
            "html_url": "https://github.com/S0larflare",
            "followers_url": "https://api.github.com/users/S0larflare/followers",
            "following_url": "https://api.github.com/users/S0larflare/following{/other_user}",
            "gists_url": "https://api.github.com/users/S0larflare/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/S0larflare/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/S0larflare/subscriptions",
            "organizations_url": "https://api.github.com/users/S0larflare/orgs",
            "repos_url": "https://api.github.com/users/S0larflare/repos",
            "events_url": "https://api.github.com/users/S0larflare/events{/privacy}",
            "received_events_url": "https://api.github.com/users/S0larflare/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 66533356,
                "node_id": "MDU6TGFiZWw2NjUzMzM1Ng==",
                "url": "https://api.github.com/repos/gophish/gophish/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-12-18T15:33:32Z",
        "updated_at": "2020-01-24T08:36:41Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "body": "Off the back of #1689 and #1691 can we also harden the allowed cipher list? Something along the lines of:\r\n\r\n```\r\n        ps.server.TLSConfig = &tls.Config{\r\n  MinVersion: tls.VersionTLS12,\r\n        CurvePreferences:         []tls.CurveID{tls.CurveP521, tls.CurveP384, tls.CurveP256},\r\n                PreferServerCipherSuites: true,\r\n                CipherSuites: []uint16{\r\n                        tls.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,\r\n                        tls.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,\r\n},\r\n}\r\n\r\n        as.server.TLSConfig = &tls.Config{\r\n  MinVersion: tls.VersionTLS12,\r\n        CurvePreferences:         []tls.CurveID{tls.CurveP521, tls.CurveP384, tls.CurveP256},\r\n                PreferServerCipherSuites: true,\r\n                CipherSuites: []uint16{\r\n                        tls.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,\r\n                        tls.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,\r\n},\r\n}\r\n```\r\nI appreciate it's a little restrictive (so perhaps only do it for the admin server?) but it is something that is popping up on vulnerability scans for weak/deprecated cipher suites."
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1694",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1694/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1694/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1694/events",
        "html_url": "https://github.com/gophish/gophish/issues/1694",
        "id": 537962197,
        "node_id": "MDU6SXNzdWU1Mzc5NjIxOTc=",
        "number": 1694,
        "title": "accents (\u00e9 and \u00e0) not well encoded in users bulk import",
        "user": {
            "login": "Obyka",
            "id": 28777250,
            "node_id": "MDQ6VXNlcjI4Nzc3MjUw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/28777250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Obyka",
            "html_url": "https://github.com/Obyka",
            "followers_url": "https://api.github.com/users/Obyka/followers",
            "following_url": "https://api.github.com/users/Obyka/following{/other_user}",
            "gists_url": "https://api.github.com/users/Obyka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Obyka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Obyka/subscriptions",
            "organizations_url": "https://api.github.com/users/Obyka/orgs",
            "repos_url": "https://api.github.com/users/Obyka/repos",
            "events_url": "https://api.github.com/users/Obyka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Obyka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-12-14T20:33:24Z",
        "updated_at": "2019-12-14T21:11:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "**Thanks for reaching out! We're happy to help resolve issues as quickly as possible.**\r\n\r\n**Please use this template when creating a new issue. If you do not follow this template format, your issue may be closed without comment.**\r\n\r\nBefore filing a new issue, please use the search bar at the top of the browser to search for similar issues. Also, please make sure you have read our [documentation](https://getgophish.com/documentation/), which covers how to use Gophish.\r\n\r\nWhat version of Gophish are you using?: \r\n 0.7.1 \r\nBrief description of the issue: \r\nWhen I import users via CSV, those with a name containing an accent (e.g \u00e9) are not correctly encoded.\r\nWhat are you expecting to see happen? :\r\nAccents supported the same way as when you create a user manually\r\nWhat are you seeing happen?\r\n![image](https://user-images.githubusercontent.com/28777250/70854231-3b3f2b00-1eb9-11ea-95c0-ac1d4f0c1538.png)\r\n\r\nIf this question is related to email templates or landing pages not working as expected, please provide your template or landing page below:\r\n\r\n```html\r\nInsert code here\r\n```\r\n\r\nPlease provide any terminal output that may be relevant below:\r\n\r\n```\r\nInsert output here\r\n```\r\n\r\nPlease provide as many steps as you can to reproduce the problem:\r\n * Step 1 - Creating a new group\r\n * Step 2 -  Importing users via CSV containing name such as Andr\u00e9, M\u00e9lanie, ...\r\n \r\n \r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1690",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1690/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1690/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1690/events",
        "html_url": "https://github.com/gophish/gophish/issues/1690",
        "id": 534257828,
        "node_id": "MDU6SXNzdWU1MzQyNTc4Mjg=",
        "number": 1690,
        "title": "Issue: Connection to email being left open and only closing by timeout, causing performance issues",
        "user": {
            "login": "davidmritter",
            "id": 30492270,
            "node_id": "MDQ6VXNlcjMwNDkyMjcw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30492270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmritter",
            "html_url": "https://github.com/davidmritter",
            "followers_url": "https://api.github.com/users/davidmritter/followers",
            "following_url": "https://api.github.com/users/davidmritter/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmritter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmritter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmritter/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmritter/orgs",
            "repos_url": "https://api.github.com/users/davidmritter/repos",
            "events_url": "https://api.github.com/users/davidmritter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmritter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-12-06T21:07:11Z",
        "updated_at": "2019-12-10T00:41:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "What version of Gophish are you using?: 0.8.0\r\n\r\nBrief description of the issue: Campaign emails are being slowed down due the connection to the server remaining open for 600 seconds.\r\n\r\nWhat are you expecting to see happen? : I expect the connection to terminate after the email has been sent.\r\n\r\nWe are currently running a campaign at a large company with ~14,000 individuals with email accounts. We were able to create a script to upload our target list and setup the campaign, but when running it the send rate drops bellow 10 per second after some time. One of the cybersecurity guys ran a packet capture and found that the connections that are created to send the email to our exchange server are not being shut down after the message is sent, but are timing out after 600 seconds when the exchange server gets tired of the keep alive messages.\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1684",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1684/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1684/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1684/events",
        "html_url": "https://github.com/gophish/gophish/issues/1684",
        "id": 530703359,
        "node_id": "MDU6SXNzdWU1MzA3MDMzNTk=",
        "number": 1684,
        "title": "[Feature] Monitoring pressing a link",
        "user": {
            "login": "CG-root",
            "id": 25037744,
            "node_id": "MDQ6VXNlcjI1MDM3NzQ0",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25037744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CG-root",
            "html_url": "https://github.com/CG-root",
            "followers_url": "https://api.github.com/users/CG-root/followers",
            "following_url": "https://api.github.com/users/CG-root/following{/other_user}",
            "gists_url": "https://api.github.com/users/CG-root/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CG-root/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CG-root/subscriptions",
            "organizations_url": "https://api.github.com/users/CG-root/orgs",
            "repos_url": "https://api.github.com/users/CG-root/repos",
            "events_url": "https://api.github.com/users/CG-root/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CG-root/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-12-01T09:48:38Z",
        "updated_at": "2020-01-28T16:31:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Is it possible to add an option that in addition to capturing a data from the user, it will be possible to add a link to the landing page and once a user clicks on it, it will send an update to the GoPhish server and add it in the statistics ?\r\nThanks! "
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1678",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1678/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1678/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1678/events",
        "html_url": "https://github.com/gophish/gophish/issues/1678",
        "id": 528047620,
        "node_id": "MDU6SXNzdWU1MjgwNDc2MjA=",
        "number": 1678,
        "title": "Static images for email template",
        "user": {
            "login": "DKhalaf",
            "id": 23449056,
            "node_id": "MDQ6VXNlcjIzNDQ5MDU2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/23449056?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DKhalaf",
            "html_url": "https://github.com/DKhalaf",
            "followers_url": "https://api.github.com/users/DKhalaf/followers",
            "following_url": "https://api.github.com/users/DKhalaf/following{/other_user}",
            "gists_url": "https://api.github.com/users/DKhalaf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DKhalaf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DKhalaf/subscriptions",
            "organizations_url": "https://api.github.com/users/DKhalaf/orgs",
            "repos_url": "https://api.github.com/users/DKhalaf/repos",
            "events_url": "https://api.github.com/users/DKhalaf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DKhalaf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-11-25T12:14:37Z",
        "updated_at": "2019-12-23T15:05:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hello\r\n\r\nI'm using GoPhish version 0.8.0 on a Ubuntu Server\r\nWhen sending an email with GoPhish, the recipient doesn't see the images.\r\n\r\nThe images are uploaded here, e.g: .../static/endpoint/image1.png - I can access the images via http://phishingserver/static/image1.png and there seems to be no issue.\r\n\r\nBut when the recipient receives the email, the content is blocked. Hitting \"Show content\" just loads and nothing really happens. I've tried sending it to different mail clients (Office365, outlook and gmail)\r\n\r\nDoes anyone know a fix for this? :-)"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1677",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1677/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1677/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1677/events",
        "html_url": "https://github.com/gophish/gophish/issues/1677",
        "id": 528003077,
        "node_id": "MDU6SXNzdWU1MjgwMDMwNzc=",
        "number": 1677,
        "title": "Duplicate emails being sent.",
        "user": {
            "login": "KiransHub",
            "id": 4026553,
            "node_id": "MDQ6VXNlcjQwMjY1NTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4026553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KiransHub",
            "html_url": "https://github.com/KiransHub",
            "followers_url": "https://api.github.com/users/KiransHub/followers",
            "following_url": "https://api.github.com/users/KiransHub/following{/other_user}",
            "gists_url": "https://api.github.com/users/KiransHub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KiransHub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KiransHub/subscriptions",
            "organizations_url": "https://api.github.com/users/KiransHub/orgs",
            "repos_url": "https://api.github.com/users/KiransHub/repos",
            "events_url": "https://api.github.com/users/KiransHub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KiransHub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-11-25T10:48:17Z",
        "updated_at": "2019-11-26T17:30:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi,\r\n\r\nWe're using the latest version of gophish (v0.8.0).\r\n\r\nI know that there's another ticket for this but it has been closed and I can't see a way to re-open it. \r\n\r\nWe are sending to 3324 users, we found that the email is being sent out twice to some of them. \r\nI'm also seeing captures going down. People who have clicked the link and we're losing the results.\r\n\r\nThis is not great as we're running a live test at the moment.\r\n\r\nI have a hunch that this might be caused by the race condition detailed in other messages. I know that you get around this by applying a lock but it's possible that the two threads are getting to the email simultaneously before one thread has an opportunity to lock the record. If this is the case then one way to get around this is to perhaps use an odd/even approach where you have two threads. One will only touch the even numbers the other will only touch the odd ones. Or just have a single thread that sends the emails out one at a time. \r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1672",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1672/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1672/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1672/events",
        "html_url": "https://github.com/gophish/gophish/issues/1672",
        "id": 526194306,
        "node_id": "MDU6SXNzdWU1MjYxOTQzMDY=",
        "number": 1672,
        "title": "From First name and Last name not showing",
        "user": {
            "login": "bhaizlett123",
            "id": 32133844,
            "node_id": "MDQ6VXNlcjMyMTMzODQ0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/32133844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhaizlett123",
            "html_url": "https://github.com/bhaizlett123",
            "followers_url": "https://api.github.com/users/bhaizlett123/followers",
            "following_url": "https://api.github.com/users/bhaizlett123/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhaizlett123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhaizlett123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhaizlett123/subscriptions",
            "organizations_url": "https://api.github.com/users/bhaizlett123/orgs",
            "repos_url": "https://api.github.com/users/bhaizlett123/repos",
            "events_url": "https://api.github.com/users/bhaizlett123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhaizlett123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 319459886,
                "node_id": "MDU6TGFiZWwzMTk0NTk4ODY=",
                "url": "https://api.github.com/repos/gophish/gophish/labels/support",
                "name": "support",
                "color": "207de5",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-11-20T20:44:47Z",
        "updated_at": "2020-01-28T22:29:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I keep testing out a campaign, and have configured the profile to use firstname lastname<email@domain.com> But for some reason every time i get the email, i only see the email address, without first last  name.\r\n\r\nGophish Version = 0.7.1"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1658",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1658/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1658/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1658/events",
        "html_url": "https://github.com/gophish/gophish/issues/1658",
        "id": 521546966,
        "node_id": "MDU6SXNzdWU1MjE1NDY5NjY=",
        "number": 1658,
        "title": "Who is using GoPhish? (Companies)",
        "user": {
            "login": "skeltontom",
            "id": 57670675,
            "node_id": "MDQ6VXNlcjU3NjcwNjc1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/57670675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skeltontom",
            "html_url": "https://github.com/skeltontom",
            "followers_url": "https://api.github.com/users/skeltontom/followers",
            "following_url": "https://api.github.com/users/skeltontom/following{/other_user}",
            "gists_url": "https://api.github.com/users/skeltontom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skeltontom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skeltontom/subscriptions",
            "organizations_url": "https://api.github.com/users/skeltontom/orgs",
            "repos_url": "https://api.github.com/users/skeltontom/repos",
            "events_url": "https://api.github.com/users/skeltontom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skeltontom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 323398546,
                "node_id": "MDU6TGFiZWwzMjMzOTg1NDY=",
                "url": "https://api.github.com/repos/gophish/gophish/labels/rfc",
                "name": "rfc",
                "color": "5319e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-11-12T13:21:16Z",
        "updated_at": "2020-01-31T15:38:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi all,\r\n\r\nDoes anyone have information on which companies are using GoPhish currently? I've been tasked at work to investigate if any larger scale companies are using GoPhish, and if so, who they are.\r\n\r\nAny help / guidance would be much appreciated :+1: "
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1607",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1607/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1607/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1607/events",
        "html_url": "https://github.com/gophish/gophish/issues/1607",
        "id": 498781208,
        "node_id": "MDU6SXNzdWU0OTg3ODEyMDg=",
        "number": 1607,
        "title": "RFC: Alternative tracking of clicks",
        "user": {
            "login": "quelsan",
            "id": 52572277,
            "node_id": "MDQ6VXNlcjUyNTcyMjc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/52572277?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quelsan",
            "html_url": "https://github.com/quelsan",
            "followers_url": "https://api.github.com/users/quelsan/followers",
            "following_url": "https://api.github.com/users/quelsan/following{/other_user}",
            "gists_url": "https://api.github.com/users/quelsan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quelsan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quelsan/subscriptions",
            "organizations_url": "https://api.github.com/users/quelsan/orgs",
            "repos_url": "https://api.github.com/users/quelsan/repos",
            "events_url": "https://api.github.com/users/quelsan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quelsan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-09-26T09:52:13Z",
        "updated_at": "2019-09-26T18:36:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Some mail gateways and spam filters extracts hyperlinks from e-mails and performs requests to the target resource for inspection.\r\n\r\nIn this type of setup, the spam filter request will likely affect the Gophish results and make it tricky to determine \"real\" clicks from the recipients.\r\n\r\nOne solution to this problem is to add a snippet of JavaScript code that performs a request during page load to a specific endpoint, with a specific URL parameter or similar. This would require that at least JavaScript has been executed by client, which could be an indicator that a real browser performed the request.\r\n\r\nWhile not fool-proof, it may help reduce false positives.\r\n\r\nI imagine the workflow looking something like this:\r\n\r\n- User creates a landing page and includes a macro/variable named \"{{JavaScriptClick}}\"\r\n- User creates a campaign and toggles the option \"Track clicks using JavaScript\"\r\n- Recipient clicks on a link and loads the landing page\r\n- Recipients browser performs a request to \"{{URL}}?js_rid={{RID}}\"\r\n\r\nThis would require some changes to the Gophish, but it seems to be doable.\r\n\r\nIf anyone has expired similar problems with this type of spam filters or have any suggestions regarding how this \"validation\" would work, please provide some comments or feedback.\r\n\r\n \r\n \r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1601",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1601/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1601/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1601/events",
        "html_url": "https://github.com/gophish/gophish/issues/1601",
        "id": 496503216,
        "node_id": "MDU6SXNzdWU0OTY1MDMyMTY=",
        "number": 1601,
        "title": "TLS Handshake Error: unknown certificate",
        "user": {
            "login": "hahnsolo13",
            "id": 37385187,
            "node_id": "MDQ6VXNlcjM3Mzg1MTg3",
            "avatar_url": "https://avatars1.githubusercontent.com/u/37385187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hahnsolo13",
            "html_url": "https://github.com/hahnsolo13",
            "followers_url": "https://api.github.com/users/hahnsolo13/followers",
            "following_url": "https://api.github.com/users/hahnsolo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/hahnsolo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hahnsolo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hahnsolo13/subscriptions",
            "organizations_url": "https://api.github.com/users/hahnsolo13/orgs",
            "repos_url": "https://api.github.com/users/hahnsolo13/repos",
            "events_url": "https://api.github.com/users/hahnsolo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hahnsolo13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-09-20T19:05:12Z",
        "updated_at": "2019-09-24T11:13:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "**Thanks for reaching out! We're happy to help resolve issues as quickly as possible.**\r\n\r\n**Please use this template when creating a new issue. If you do not follow this template format, your issue may be closed without comment.**\r\n\r\nBefore filing a new issue, please use the search bar at the top of the browser to search for similar issues. Also, please make sure you have read our [documentation](https://getgophish.com/documentation/), which covers how to use Gophish.\r\n\r\nWhat version of Gophish are you using?: v 0.8\r\n\r\nBrief description of the issue: We scheduled a campaign, and it froze when scheduled. Only 1/4 of the emails sent, and now gophish is showing TLS errors.\r\n\r\nWhat are you expecting to see happen? : Successful campaign\r\n\r\nWhat are you seeing happen? Gophish is sending errors during a scheduled campaign. The emails aren't being reported back into gophish.\r\n\r\nIf this question is related to email templates or landing pages not working as expected, please provide your template or landing page below:\r\n\r\n```html\r\nInsert code here\r\n```\r\n\r\nPlease provide any terminal output that may be relevant below:\r\n\r\n![image](https://user-images.githubusercontent.com/37385187/65352128-73cbb300-dbaf-11e9-8564-0c007c544fb9.png)\r\n\r\n\r\nPlease provide as many steps as you can to reproduce the problem:\r\n * Step 1 - \r\n * Step 2 - \r\n \r\n \r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1589",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1589/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1589/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1589/events",
        "html_url": "https://github.com/gophish/gophish/issues/1589",
        "id": 493692957,
        "node_id": "MDU6SXNzdWU0OTM2OTI5NTc=",
        "number": 1589,
        "title": "RFC: Gophish Community Store",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 843315229,
                "node_id": "MDU6TGFiZWw4NDMzMTUyMjk=",
                "url": "https://api.github.com/repos/gophish/gophish/labels/discussion",
                "name": "discussion",
                "color": "c2cdf9",
                "default": false,
                "description": null
            },
            {
                "id": 323398546,
                "node_id": "MDU6TGFiZWwzMjMzOTg1NDY=",
                "url": "https://api.github.com/repos/gophish/gophish/labels/rfc",
                "name": "rfc",
                "color": "5319e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2019-09-15T04:10:16Z",
        "updated_at": "2020-01-04T03:44:24Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "body": "Shortly after creating Gophish, I created the [gophish/templates](https://github.com/gophish/templates) repository that was meant to be a place where community members could share the templates and landing pages they created.\r\n\r\nThis never really took off, since it wasn't really clear what the guidelines would be for content that could be added, as well as how members could actually use the content.\r\n\r\nI've been thinking more about this and I think we can make this happen. This RFC contains notes on where my head is at right now, but more than anything I'd love feedback to make sure we're both adding value and approaching things the best way possible.\r\n\r\n**Tl;dr - I'd like to make a platform for community members to share their templates and landing pages, and make it easy to import them into Gophish**\r\n\r\n# Sharing Templates and Landing Pages\r\n\r\nIf you use Gophish, there's a good chance that the templates or landing pages you've created would be useful to someone else. By working together, we can create a dataset of valuable templates that would let new users get up and running more quickly, and give new simulation ideas to existing users.\r\n\r\nWhile right now I'm considering templates and landing pages to be separate, there's some interesting ideas from @glennzw in #1587 around wrapping these in a \"scenario\" that's worth some thinking about.\r\n\r\nIn this new model, sharing new templates or landing pages would simply involve creating a pull request with the data. We'd have a set of Github Actions that validate some of the rules mentioned below, as well as doing some plumbing in the background to make sure everything gets merged successfully.\r\n\r\n# Restrictions on What is Accepted\r\n\r\nWe would need some ground rules both to protect Gophish, our users, as well as service provider brands. Here are just some rough thoughts:\r\n\r\n* **No brand names or logos can be included.** This is both to protect the trust between users and service providers as well as to try and protect Gophish from trademark issues.\r\n* **All assets must be included and referenced locally.** We would update Gophish to automatically handle putting these assets in the `static/endpoint` folder.\r\n* **Minimal, if any, Javascript. And no minification** - I just don't want to spend all my time trying to review large blocks of JS looking for potential sneakiness\r\n\r\nIf these (and other as we think of them) requirements are met, we would consider merging the new data into the store.\r\n\r\n# Accessing The Data\r\n\r\nThe open-source platform I'd like to make would live at community.getgophish.com, or similar. It would expose an API that lists the items in the Github repo, letting users browse the available entries directly from within Gophish.\r\n\r\nEach entry in the community would have a SHA256 hash (or manifest containing hashes for every file in the entry) associated with it, which would be verified when the contents are downloaded.\r\n\r\nAfter verifying the contents and saving the files, you should be good to go! We can figure out some kind of update mechanism, making it easy for users to install new versions of the entries as they are updated upstream.\r\n\r\n# Feedback Appreciated!\r\n\r\nWhile I'm excited about the possibilities here, there's definitely a lot to consider. I'd love to hear y'all's thoughts and any other ideas you have on how this can provide the most value to our amazing community.\r\n\r\n\ud83d\udc9a "
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1587",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1587/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1587/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1587/events",
        "html_url": "https://github.com/gophish/gophish/issues/1587",
        "id": 493344363,
        "node_id": "MDU6SXNzdWU0OTMzNDQzNjM=",
        "number": 1587,
        "title": "Discussion: Changing GoPhish Architecture / Simulation Library",
        "user": {
            "login": "glennzw",
            "id": 3966613,
            "node_id": "MDQ6VXNlcjM5NjY2MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3966613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glennzw",
            "html_url": "https://github.com/glennzw",
            "followers_url": "https://api.github.com/users/glennzw/followers",
            "following_url": "https://api.github.com/users/glennzw/following{/other_user}",
            "gists_url": "https://api.github.com/users/glennzw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glennzw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glennzw/subscriptions",
            "organizations_url": "https://api.github.com/users/glennzw/orgs",
            "repos_url": "https://api.github.com/users/glennzw/repos",
            "events_url": "https://api.github.com/users/glennzw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glennzw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 66533356,
                "node_id": "MDU6TGFiZWw2NjUzMzM1Ng==",
                "url": "https://api.github.com/repos/gophish/gophish/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            },
            {
                "id": 323398546,
                "node_id": "MDU6TGFiZWwzMjMzOTg1NDY=",
                "url": "https://api.github.com/repos/gophish/gophish/labels/rfc",
                "name": "rfc",
                "color": "5319e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-09-13T14:05:04Z",
        "updated_at": "2019-09-14T03:52:00Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "body": "I find that the way landing pages/email templates/sending profiles is structured is a little counter-intuitive and disconnected. I think these should be collapsed into one 'thing', of which the name I've been using is 'simulation' or 'phishing simulation'. If I want to send, say, a DropBox phish it's going to be a DropBox email, DropBox landing page, and sent from a dropbox looking email. I don't see the benefit of having these three things separate and then having to match them up when sending a campaign.\r\n\r\nAt the least, I'd favour collapsing the sender email address/name from Sending Profile into Email Template. I think a Sending Profile should just be the SMTP details. I have one SMTP server, and it feels redundant having to create 10 Sending Profiles with identical SMTP settings for 10 different phishing templates.\r\n\r\nIt's also a little hard to get a feel for what a campaign will look like; I need to manually go to three different tabs and click edit buttons and source buttons to see what a campaign will actually look like.\r\n\r\nTo illustrate how I envisage my proposal I've created a 'Simulation Library' tab in GoPhish:\r\n\r\n<img width=\"1438\" alt=\"simLib\" src=\"https://user-images.githubusercontent.com/3966613/64864272-a82ef480-d62e-11e9-9d25-2a3a74f5d7b4.png\">\r\n\r\nThe library aggregates Email Templates, Landing Pages, and Sending Profiles that have the same *name* into cards in the Simulation Library tab. The images are loaded from `/endpoint/library/<NAME>/landing.png` and `/endpoint/library/<NAME>/email.png` (if you click the image it'll flip between a picture of the landing page and the email).\r\n\r\nClicking `Test` allows you to send the Simulation to a single email address:  \r\n\r\n<img width=\"845\" alt=\"testSim\" src=\"https://user-images.githubusercontent.com/3966613/64864561-4de26380-d62f-11e9-9fab-e1ee96918791.png\">\r\n\r\nClicking `Launch` leads you through a minimal Wizard to get the campaign launched:  \r\n\r\n<img width=\"1115\" alt=\"simWiz\" src=\"https://user-images.githubusercontent.com/3966613/64864939-1c1dcc80-d630-11e9-806d-0e16e01dedbe.png\">\r\n\r\nHere's a demo video: [GoPhish Simulation Library Demo](https://www.youtube.com/watch?v=bBLRNKTm7w8)\r\n\r\nI've also restructured the menu on the left. The `GoPhish Main` menu is your high level options; your dashboard, simulation library, and staff (targets and groups). This section is for day to day phishing campaign management, and many users would only spend their time here.\r\n\r\nThe `Build Simulations` menu is for 'power users' who want to add / manage simulations, and then settings and help at the bottom.\r\n\r\n_N.B This is all front end, no API/back end changes._\r\n\r\nI think GoPhish in its current form is better suited for red teamers or one off assessments, but doesn't lend itself to ongoing phishing tests by blue teams or busy IT admins. If a power user can setup the library then it's much easier going forward to just login, grab a simulation and pop it off.\r\n\r\n\r\nI'd rate this library option as a short term fix, it's rather hacky. I'd favour a longer term solution to re-architect Email Templates, Landing Pages, and Sending Profiles into this style. My final thought is that the GoPhish listener should also be incorporated into a simulation, maybe with an advanced option to override this at launch time. So a power user would build a single simulation which includes;\r\n * Email templates (including sender email and name)\r\n * Landing Page & Redirect\r\n * GoPhish listener (which I'd imagine either being the same for all sims, or invidual domains matching each [e.g upateserver-dropbox.uk.to for a dropbox one])\r\n\r\nThen a 'regular' user can just browse the library, click a sim, choose targets, and send it off (without having to figure out complexities of listener IPs/domains etc).\r\n\r\nGiven the recent chatter to upgrade the UI to React/etc I think it's important to double check the back end architecture. However, all of the above could be built on top of the existing APIs. The next most simple change would be to have a `Library` table in the database, to get around my current hack that just matches names (then in the Library tab we could have a builder whereby you select which landing page etc you want)."
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1578",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1578/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1578/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1578/events",
        "html_url": "https://github.com/gophish/gophish/pull/1578",
        "id": 490591348,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzE1MTY2NTI1",
        "number": 1578,
        "title": "Import email templates from file",
        "user": {
            "login": "dmaciejak",
            "id": 2658335,
            "node_id": "MDQ6VXNlcjI2NTgzMzU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2658335?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmaciejak",
            "html_url": "https://github.com/dmaciejak",
            "followers_url": "https://api.github.com/users/dmaciejak/followers",
            "following_url": "https://api.github.com/users/dmaciejak/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmaciejak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmaciejak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmaciejak/subscriptions",
            "organizations_url": "https://api.github.com/users/dmaciejak/orgs",
            "repos_url": "https://api.github.com/users/dmaciejak/repos",
            "events_url": "https://api.github.com/users/dmaciejak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmaciejak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-09-07T04:47:24Z",
        "updated_at": "2019-09-07T04:47:24Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "pull_request": {
            "url": "https://api.github.com/repos/gophish/gophish/pulls/1578",
            "html_url": "https://github.com/gophish/gophish/pull/1578",
            "diff_url": "https://github.com/gophish/gophish/pull/1578.diff",
            "patch_url": "https://github.com/gophish/gophish/pull/1578.patch"
        },
        "body": "The idea is to add a new button \"Import Email File\" to let the users upload a local EML file, it's easier to manage if you have multiple EML templates. The previous button is still here but has been renamed \"Paste Raw Email\"."
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1566",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1566/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1566/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1566/events",
        "html_url": "https://github.com/gophish/gophish/issues/1566",
        "id": 487239688,
        "node_id": "MDU6SXNzdWU0ODcyMzk2ODg=",
        "number": 1566,
        "title": "too many open files error",
        "user": {
            "login": "maanhyo",
            "id": 35122420,
            "node_id": "MDQ6VXNlcjM1MTIyNDIw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/35122420?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maanhyo",
            "html_url": "https://github.com/maanhyo",
            "followers_url": "https://api.github.com/users/maanhyo/followers",
            "following_url": "https://api.github.com/users/maanhyo/following{/other_user}",
            "gists_url": "https://api.github.com/users/maanhyo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maanhyo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maanhyo/subscriptions",
            "organizations_url": "https://api.github.com/users/maanhyo/orgs",
            "repos_url": "https://api.github.com/users/maanhyo/repos",
            "events_url": "https://api.github.com/users/maanhyo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maanhyo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-30T01:16:51Z",
        "updated_at": "2019-08-30T01:16:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I used gophish service.\r\nBut I can see the error message on service. what's the problem?\r\nmy gophish service is discontinued after this error messages.\r\n(12189 is gophish service port)\r\n\r\n----------error message-------------\r\n\r\nMozilla/5.0 (iPhone; CPU iPhone OS 11_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15G77\"\r\n2019/08/29 08:31:51 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 5ms\r\n2019/08/29 08:31:51 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 10ms\r\n2019/08/29 08:31:51 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 20ms\r\n2019/08/29 08:31:51 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 40ms\r\n2019/08/29 08:31:51 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 80ms\r\n2019/08/29 08:31:51 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 160ms\r\n2019/08/29 08:31:51 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 320ms\r\n\r\n\"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)\"\r\n2019/08/29 08:31:53 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 10ms\r\n2019/08/29 08:31:53 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 20ms\r\n2019/08/29 08:31:53 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 40ms\r\n2019/08/29 08:31:54 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 80ms\r\n2019/08/29 08:31:54 http: Accept error: accept tcp [::]:12189: accept4: too many open files; retrying in 160ms\r\ntime=\"2019-08-29T08:31:54+09:00\" level=fatal msg=\"open static/db/geolite2-city.mmdb: too many open files\"\r\n--------------------------------------\r\n\r\nI want to know the cause in order to prevent recurrence.\r\n\r\nThank you."
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1557",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1557/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1557/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1557/events",
        "html_url": "https://github.com/gophish/gophish/pull/1557",
        "id": 485749290,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzExMzM0MDYw",
        "number": 1557,
        "title": "Added support to specify email sending frequency",
        "user": {
            "login": "glennzw",
            "id": 3966613,
            "node_id": "MDQ6VXNlcjM5NjY2MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3966613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glennzw",
            "html_url": "https://github.com/glennzw",
            "followers_url": "https://api.github.com/users/glennzw/followers",
            "following_url": "https://api.github.com/users/glennzw/following{/other_user}",
            "gists_url": "https://api.github.com/users/glennzw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glennzw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glennzw/subscriptions",
            "organizations_url": "https://api.github.com/users/glennzw/orgs",
            "repos_url": "https://api.github.com/users/glennzw/repos",
            "events_url": "https://api.github.com/users/glennzw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glennzw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 66533356,
                "node_id": "MDU6TGFiZWw2NjUzMzM1Ng==",
                "url": "https://api.github.com/repos/gophish/gophish/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-08-27T11:20:38Z",
        "updated_at": "2019-10-20T15:53:18Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "pull_request": {
            "url": "https://api.github.com/repos/gophish/gophish/pulls/1557",
            "html_url": "https://github.com/gophish/gophish/pull/1557",
            "diff_url": "https://github.com/gophish/gophish/pull/1557.diff",
            "patch_url": "https://github.com/gophish/gophish/pull/1557.patch"
        },
        "body": "Using the 'Send Emails By' option in the campaign allows for the sending of emails at set intervals, but requires some mental arithmetic. For example; \r\n\r\nA campaign has 1,000 emails, and I want them sent at 5 second intervals so as to not overload my mail server (or help desk). I want it to start now (say 11am). Therefore, 11h00 + (1000 * 5) = 5,000 seconds, so I'd need to set a 'Send Emails By' of 12h23.\r\n\r\nThis pull request helps by adding a new input field called 'Send Rate'. It's a drop down option underneath the 'Send Emails By' option consisting of a few common send rates:\r\n\r\n- As fast as possible\r\n- Every 5 seconds\r\n- Every 30 seconds\r\n- Every minute\r\n- Every five minutes\r\n- Add Custom\r\n\r\nThe 'As fast as possible' option  just clears the 'Send Emails By' calendar option, setting the form to its default state.\r\n\r\nThe final option in the dropdown is 'Add Custom', allowing you to set a custom send rate. When selecting a Send Rate the 'Send Emails By' calendar will be calculated, giving the estimated finish time.\r\n\r\nSo for our example above, selecting a start time of 11am for 1,000 targets, and selecting the Send Rate as 'Every 5 seconds' the calendar will be automatically updated to 12h23. \r\n\r\nConversely, if the user selects a 'Send Emails By' option then the 'Send Rate' below it will be automatically calculated, so the user has a feel for how quickly emails will be dispatched.\r\n\r\nFinally, as the user adds and removes target groups the calendar or send rate are updated to reflect the total number of targets. The last option edited between the calendar and the rate is the one that will stay fixed, with the other one changing to match the number of targets.\r\n\r\nThese are all front end changes and the send rate is approximate, as noted in [this discussion](https://github.com/gophish/gophish/issues/1262) (there's a burst of emails as the campaign starts). This allows us to have no backend changes for this pull request as we're only doing time calculations in Javascript and updating the 'Send Emails By'.\r\n\r\nHere are some screenshots:\r\n\r\n- [New Campaign Layout](https://user-images.githubusercontent.com/3966613/63766859-fec4d080-c8c3-11e9-8a77-fb320eea29b7.png)\r\n- [Selecting a Rate](https://user-images.githubusercontent.com/3966613/63766877-084e3880-c8c4-11e9-8f23-cdb5886e87e5.png)\r\n- [Rate Set](https://user-images.githubusercontent.com/3966613/63766875-07b5a200-c8c4-11e9-87a9-909e09381537.png)\r\n- [Select Custom Rate](https://user-images.githubusercontent.com/3966613/63766874-07b5a200-c8c4-11e9-8410-ec5055d76dfd.png)\r\n- [Custom Rate Set](https://user-images.githubusercontent.com/3966613/63766872-071d0b80-c8c4-11e9-8b1e-b1d83afc250a.png)\r\n\r\nOther additions:\r\n\r\n- Added a mouse over tooltip to the user/groups at the bottom to indicate how many targets are in said group. Example [here](https://user-images.githubusercontent.com/3966613/63765557-341bef00-c8c1-11e9-901e-b31d2514b2b4.png).\r\n\r\n- Fixed a problem whereby selecting the 'Send Emails By' calendar in Chrome would result in a text autocomplete dropping down, making it impossible to select a date. Example of the problem \r\n[here](https://user-images.githubusercontent.com/3966613/63765316-a93af480-c8c0-11e9-9b60-75829ad0f599.png); the calendar is hidden behind the autocomplete.\r\n\r\nThis pull request is a PoC to gauge enthusiasm for this change, there are probably some bugs/inefficiencies but wanted to get a feel from maintainers before putting more work into it. I've just noticed there are also some left over debugging statements too."
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1554",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1554/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1554/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1554/events",
        "html_url": "https://github.com/gophish/gophish/issues/1554",
        "id": 484083177,
        "node_id": "MDU6SXNzdWU0ODQwODMxNzc=",
        "number": 1554,
        "title": "'Add Tracking Image' not adding tracker if </body> is missing",
        "user": {
            "login": "glennzw",
            "id": 3966613,
            "node_id": "MDQ6VXNlcjM5NjY2MTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3966613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glennzw",
            "html_url": "https://github.com/glennzw",
            "followers_url": "https://api.github.com/users/glennzw/followers",
            "following_url": "https://api.github.com/users/glennzw/following{/other_user}",
            "gists_url": "https://api.github.com/users/glennzw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glennzw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glennzw/subscriptions",
            "organizations_url": "https://api.github.com/users/glennzw/orgs",
            "repos_url": "https://api.github.com/users/glennzw/repos",
            "events_url": "https://api.github.com/users/glennzw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glennzw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-08-22T16:00:11Z",
        "updated_at": "2019-08-28T07:59:30Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "body": "What version of Gophish are you using?: \r\n0.7.1\r\n\r\nBrief description of the issue: \r\nTracking image doesn't appear unless `</body>` tag is present.\r\n\r\nWhat are you expecting to see happen? :\r\n{{.Tracker}} to be added when hitting save even if `</body>` is not present.\r\n\r\nWhat are you seeing happen?\r\nWhen the 'Add Tracking Image' tickbox is selected but not `</body>` tag is present the {{.Tracker}} tag will not be added, and the user is not notified of this condition.\r\n\r\n\r\nThis might be a PEBKAC problem on my side, but I could not figure out why my tracking image was not being added when the 'Add Tracking Image' tickbox was selected. Digging through the code I see in [template.js](https://github.com/gophish/gophish/blob/master/static/js/src/app/templates.js#L30) we extract the HTML from the edit box and place the {{.Tracker}} tag at the end of the body. So the assumption is that there will be a `</body>` tag present, even if in the plain text editor.\r\n\r\nI'd suggest two things:\r\n\r\n1. Remove the 'Add Tracking Image' tickbox if in the Plain Text editor.\r\n2. Either notify the user that there's no `</body>` tag when they try save so they have a chance to edit their HTML, or just append {{.Tracker}} to the end of template.html. We could add a 'Test Template' option so the user can view the template with an admin tracking image to make sure its rendering correctly, and notify them if it's not.\r\n\r\nI'm happy to implement the above, or something else if it's preferred (or leave it as is).\r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1538",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1538/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1538/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1538/events",
        "html_url": "https://github.com/gophish/gophish/issues/1538",
        "id": 481073696,
        "node_id": "MDU6SXNzdWU0ODEwNzM2OTY=",
        "number": 1538,
        "title": "Password policy and login management",
        "user": {
            "login": "eickeh",
            "id": 33962585,
            "node_id": "MDQ6VXNlcjMzOTYyNTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/33962585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eickeh",
            "html_url": "https://github.com/eickeh",
            "followers_url": "https://api.github.com/users/eickeh/followers",
            "following_url": "https://api.github.com/users/eickeh/following{/other_user}",
            "gists_url": "https://api.github.com/users/eickeh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eickeh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eickeh/subscriptions",
            "organizations_url": "https://api.github.com/users/eickeh/orgs",
            "repos_url": "https://api.github.com/users/eickeh/repos",
            "events_url": "https://api.github.com/users/eickeh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eickeh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 843315229,
                "node_id": "MDU6TGFiZWw4NDMzMTUyMjk=",
                "url": "https://api.github.com/repos/gophish/gophish/labels/discussion",
                "name": "discussion",
                "color": "c2cdf9",
                "default": false,
                "description": null
            },
            {
                "id": 66533356,
                "node_id": "MDU6TGFiZWw2NjUzMzM1Ng==",
                "url": "https://api.github.com/repos/gophish/gophish/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2019-08-15T09:38:57Z",
        "updated_at": "2019-10-17T02:47:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "What version of Gophish are you using?: 0.7.1\r\n\r\nBrief description of the issue: \r\n**Thanks again for your great work!**\r\nWe have several suggestions to improve the password policy and login management of GoPhish. In this thread we would like to discuss several ways to implement it. We are also open to provide some pull requests after some final decisions have been made.\r\nIf you're more comfortable with splitting this into several issues, I'll be happy to open them.\r\n\r\nHere are our findings:\r\n1) At the moment, there are no restrictions concerning the password complexity. I suggest a minimum length of 12 characters optionally also with enforced numbers.\r\n\r\n2) To prevent session abuse one could enhance the functionality to log out a user automatically after some time of inactivity. At the moment, the standard value is at 5 days, which is a lot. A standard value could be 30 minutes. Moreover one could add an option to change this value or to deactivate it completely.\r\n\r\n3) This is the most complicated point. At the moment, there is no protection against password brute forcing. To make such attacks more difficult, one could add progressive delays upon failed logins. \r\nAn example implementation could do the following: After e.g. 3 failed login attempts for an user, one has to wait a minute to try again. If he/she fails 3 times again afterwards, he has to wait twice the time before trying again. This should have an upper bound (lets say 3 hours) to prevent that the account is practically locked forever.\r\nWith a view to the upcoming RBAC support, one could also think about locking (non admin) accounts and an option for the admin to re enable them."
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1528",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1528/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1528/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1528/events",
        "html_url": "https://github.com/gophish/gophish/issues/1528",
        "id": 475456167,
        "node_id": "MDU6SXNzdWU0NzU0NTYxNjc=",
        "number": 1528,
        "title": "Lock up on campaign launch",
        "user": {
            "login": "alecisec",
            "id": 26102968,
            "node_id": "MDQ6VXNlcjI2MTAyOTY4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/26102968?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alecisec",
            "html_url": "https://github.com/alecisec",
            "followers_url": "https://api.github.com/users/alecisec/followers",
            "following_url": "https://api.github.com/users/alecisec/following{/other_user}",
            "gists_url": "https://api.github.com/users/alecisec/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alecisec/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alecisec/subscriptions",
            "organizations_url": "https://api.github.com/users/alecisec/orgs",
            "repos_url": "https://api.github.com/users/alecisec/repos",
            "events_url": "https://api.github.com/users/alecisec/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alecisec/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 319459886,
                "node_id": "MDU6TGFiZWwzMTk0NTk4ODY=",
                "url": "https://api.github.com/repos/gophish/gophish/labels/support",
                "name": "support",
                "color": "207de5",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-08-01T03:47:28Z",
        "updated_at": "2019-08-05T06:06:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Currently running 7,1 release, all seems OK until I launch the campaign, I did have to manually create the users table in the DB and suspect it may be related to that. This is using AWS 'serverless' RDS (MySQL compatible)\r\n\r\n\r\n172.17.0.4 - - [01/Aug/2019:03:42:54 +0000] \"POST /api/campaigns/?api_key=1976819f2281a5f5e54e8e74718d9c62c301fee14e5a9c30a49b4efba488a3 HTTP/1.0\" 201 1310 \"https://gophish.t2sjthqs75.ap-southeast-2.elasticbeanstalk.com:3333/campaigns\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36\"\r\n\r\n03:42:54\r\npanic: runtime error: index out of range\r\n\r\n03:42:54\r\ngoroutine 1165 [running]:\r\n\r\n03:42:54\r\ngithub.com/gophish/gophish/mailer.(*MailWorker).Start.func1(0xb5a180, 0xc420210140, 0x107d5d0, 0x0, 0x0)\r\n\r\n03:42:54\r\n/go/src/github.com/gophish/gophish/mailer/mailer.go:86 +0xe3\r\n\r\n03:42:54\r\ncreated by github.com/gophish/gophish/mailer.(*MailWorker).Start\r\n\r\n03:42:54\r\n/go/src/github.com/gophish/gophish/mailer/mailer.go:85 +0x81\r\n"
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1525",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1525/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1525/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1525/events",
        "html_url": "https://github.com/gophish/gophish/pull/1525",
        "id": 473423928,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNTk0MjY4",
        "number": 1525,
        "title": "Embed or attach files based on their file extension",
        "user": {
            "login": "dzsibi",
            "id": 4534880,
            "node_id": "MDQ6VXNlcjQ1MzQ4ODA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4534880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzsibi",
            "html_url": "https://github.com/dzsibi",
            "followers_url": "https://api.github.com/users/dzsibi/followers",
            "following_url": "https://api.github.com/users/dzsibi/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzsibi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzsibi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzsibi/subscriptions",
            "organizations_url": "https://api.github.com/users/dzsibi/orgs",
            "repos_url": "https://api.github.com/users/dzsibi/repos",
            "events_url": "https://api.github.com/users/dzsibi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzsibi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-07-26T15:48:30Z",
        "updated_at": "2019-08-27T12:07:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/gophish/gophish/pulls/1525",
            "html_url": "https://github.com/gophish/gophish/pull/1525",
            "diff_url": "https://github.com/gophish/gophish/pull/1525.diff",
            "patch_url": "https://github.com/gophish/gophish/pull/1525.patch"
        },
        "body": "There have been a few discussions about embedding images in e-mails (#251, #884). As it is right now, while Content-IDs were added, the Content-Disposition header was still set to attachment for all files, and as such, e-mail clients showed them as attached files. My proposed solution makes the judgement on whether a file should be embedded or attached based on its extension - jpg, jpeg, png and gif files are embedded (and have a Content-ID set), while other file types are attached. \r\n\r\nIt might be better on the long run to offer a checkbox to set whether a file should be attached or embedded, but I believe that 99% of the time images are only added to a message to be shown inline. With these changes, adding images to a message will work as expected, while other files can still be added as attachments."
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/issues/1524",
        "repository_url": "https://api.github.com/repos/gophish/gophish",
        "labels_url": "https://api.github.com/repos/gophish/gophish/issues/1524/labels{/name}",
        "comments_url": "https://api.github.com/repos/gophish/gophish/issues/1524/comments",
        "events_url": "https://api.github.com/repos/gophish/gophish/issues/1524/events",
        "html_url": "https://github.com/gophish/gophish/pull/1524",
        "id": 473420501,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNTkxNDE3",
        "number": 1524,
        "title": "Add autocomplete entry for .Now and un-escape template tags",
        "user": {
            "login": "dzsibi",
            "id": 4534880,
            "node_id": "MDQ6VXNlcjQ1MzQ4ODA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4534880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzsibi",
            "html_url": "https://github.com/dzsibi",
            "followers_url": "https://api.github.com/users/dzsibi/followers",
            "following_url": "https://api.github.com/users/dzsibi/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzsibi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzsibi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzsibi/subscriptions",
            "organizations_url": "https://api.github.com/users/dzsibi/orgs",
            "repos_url": "https://api.github.com/users/dzsibi/repos",
            "events_url": "https://api.github.com/users/dzsibi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzsibi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-07-26T15:40:36Z",
        "updated_at": "2019-07-26T15:40:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/gophish/gophish/pulls/1524",
            "html_url": "https://github.com/gophish/gophish/pull/1524",
            "diff_url": "https://github.com/gophish/gophish/pull/1524.diff",
            "patch_url": "https://github.com/gophish/gophish/pull/1524.patch"
        },
        "body": "The previous pull request (#1451) was not merged due to some functional issues, I started fixing these. I added two entries to the autocomplete list, and added an additional step before template execution that unescapes any text found withing the template tags. I consider this a sub-optimal solution, as it would be best to do this on the client side, when the original encoding happens, but this modification had a much lower impact (being only a few extra lines of code when the template is loaded)."
    }
]