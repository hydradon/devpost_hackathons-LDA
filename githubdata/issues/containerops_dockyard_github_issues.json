[
    {
        "url": "https://api.github.com/repos/Huawei/dockyard/issues/178",
        "repository_url": "https://api.github.com/repos/Huawei/dockyard",
        "labels_url": "https://api.github.com/repos/Huawei/dockyard/issues/178/labels{/name}",
        "comments_url": "https://api.github.com/repos/Huawei/dockyard/issues/178/comments",
        "events_url": "https://api.github.com/repos/Huawei/dockyard/issues/178/events",
        "html_url": "https://github.com/Huawei/dockyard/issues/178",
        "id": 247626546,
        "node_id": "MDU6SXNzdWUyNDc2MjY1NDY=",
        "number": 178,
        "title": "Latest code found elsewhere",
        "user": {
            "login": "macropin",
            "id": 247192,
            "node_id": "MDQ6VXNlcjI0NzE5Mg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/247192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/macropin",
            "html_url": "https://github.com/macropin",
            "followers_url": "https://api.github.com/users/macropin/followers",
            "following_url": "https://api.github.com/users/macropin/following{/other_user}",
            "gists_url": "https://api.github.com/users/macropin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/macropin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/macropin/subscriptions",
            "organizations_url": "https://api.github.com/users/macropin/orgs",
            "repos_url": "https://api.github.com/users/macropin/repos",
            "events_url": "https://api.github.com/users/macropin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/macropin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2017-08-03T08:15:44Z",
        "updated_at": "2019-08-16T08:39:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Looks like development here has stalled. See https://github.com/Huawei/containerops/tree/master/dockyard for latest code."
    },
    {
        "url": "https://api.github.com/repos/Huawei/dockyard/issues/176",
        "repository_url": "https://api.github.com/repos/Huawei/dockyard",
        "labels_url": "https://api.github.com/repos/Huawei/dockyard/issues/176/labels{/name}",
        "comments_url": "https://api.github.com/repos/Huawei/dockyard/issues/176/comments",
        "events_url": "https://api.github.com/repos/Huawei/dockyard/issues/176/events",
        "html_url": "https://github.com/Huawei/dockyard/issues/176",
        "id": 190281825,
        "node_id": "MDU6SXNzdWUxOTAyODE4MjU=",
        "number": 176,
        "title": "Initial setup documentation",
        "user": {
            "login": "dsanader",
            "id": 2196854,
            "node_id": "MDQ6VXNlcjIxOTY4NTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2196854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsanader",
            "html_url": "https://github.com/dsanader",
            "followers_url": "https://api.github.com/users/dsanader/followers",
            "following_url": "https://api.github.com/users/dsanader/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsanader/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsanader/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsanader/subscriptions",
            "organizations_url": "https://api.github.com/users/dsanader/orgs",
            "repos_url": "https://api.github.com/users/dsanader/repos",
            "events_url": "https://api.github.com/users/dsanader/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsanader/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-11-18T10:11:43Z",
        "updated_at": "2016-11-18T10:11:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "First, thanks for the work.\r\n\r\nI've installed dockyard with `go get`, then launched it from a random directory since the `dockyard` command was in my $PATH.\r\n\r\nI had trouble then figuring out that the binary was not finding the configuration file (the error message was not obvious). The [README](/Huawei/dockyard/blob/master/README.md) seems to imply that the project should be fetch with `git clone`, be build with `go build` and run in place `./dockyard`.\r\n\r\nMaybe, detailing a bit the installation and documenting the possible configuration file path and format would be useful (eg: toml in either `/etc/containerops`, `$HOME/.containerops`, `./conf`).\r\n\r\nSmall thing, the [README](/Huawei/dockyard/blob/master/README.md) is also mentioning a `daemon run` subcommand.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/Huawei/dockyard/issues/175",
        "repository_url": "https://api.github.com/repos/Huawei/dockyard",
        "labels_url": "https://api.github.com/repos/Huawei/dockyard/issues/175/labels{/name}",
        "comments_url": "https://api.github.com/repos/Huawei/dockyard/issues/175/comments",
        "events_url": "https://api.github.com/repos/Huawei/dockyard/issues/175/events",
        "html_url": "https://github.com/Huawei/dockyard/issues/175",
        "id": 190276277,
        "node_id": "MDU6SXNzdWUxOTAyNzYyNzc=",
        "number": 175,
        "title": "DB variable uninitialized",
        "user": {
            "login": "dsanader",
            "id": 2196854,
            "node_id": "MDQ6VXNlcjIxOTY4NTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2196854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsanader",
            "html_url": "https://github.com/dsanader",
            "followers_url": "https://api.github.com/users/dsanader/followers",
            "following_url": "https://api.github.com/users/dsanader/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsanader/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsanader/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsanader/subscriptions",
            "organizations_url": "https://api.github.com/users/dsanader/orgs",
            "repos_url": "https://api.github.com/users/dsanader/repos",
            "events_url": "https://api.github.com/users/dsanader/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsanader/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-11-18T09:46:01Z",
        "updated_at": "2016-11-18T09:46:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hello,\r\n\r\nThe web server is panicing on every request because of the DB variable being nil.\r\n\r\nI've added a call to models.OpenDatabase() in SetDockyardMacaron function to prevent that as a quick fix. Not sure where you would wish to put that. There, or in a init function.\r\n\r\nRegards."
    },
    {
        "url": "https://api.github.com/repos/Huawei/dockyard/issues/174",
        "repository_url": "https://api.github.com/repos/Huawei/dockyard",
        "labels_url": "https://api.github.com/repos/Huawei/dockyard/issues/174/labels{/name}",
        "comments_url": "https://api.github.com/repos/Huawei/dockyard/issues/174/comments",
        "events_url": "https://api.github.com/repos/Huawei/dockyard/issues/174/events",
        "html_url": "https://github.com/Huawei/dockyard/issues/174",
        "id": 182195443,
        "node_id": "MDU6SXNzdWUxODIxOTU0NDM=",
        "number": 174,
        "title": "How do I create the database?",
        "user": {
            "login": "Rayco",
            "id": 249454,
            "node_id": "MDQ6VXNlcjI0OTQ1NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/249454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Rayco",
            "html_url": "https://github.com/Rayco",
            "followers_url": "https://api.github.com/users/Rayco/followers",
            "following_url": "https://api.github.com/users/Rayco/following{/other_user}",
            "gists_url": "https://api.github.com/users/Rayco/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Rayco/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Rayco/subscriptions",
            "organizations_url": "https://api.github.com/users/Rayco/orgs",
            "repos_url": "https://api.github.com/users/Rayco/repos",
            "events_url": "https://api.github.com/users/Rayco/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Rayco/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-10-11T07:49:14Z",
        "updated_at": "2016-10-11T07:49:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I'm interested in using Dockyard, but I'm having difficulty creating the database. How do I create the migrations?\n\nMy Runtinme configuration about database is:\n\n> [database]\n> driver = mysql\n> uri = myuser:mypass@/mydockyarkdb\n\nThe README says \"Initlization Tables\":\n\n`dockyard db --action sync`\n\nHowever:\n\n> Error: unknown command \"db\" for \"dockyard\"\n> Run 'dockyard --help' for usage.\n> unknown command \"db\" for \"dockyard\"\n\nI tried to run:\n\n`dockyard database migrate`\n\nBut I get the following error:\n\n> `` is not officially supported, running under compatibility mode.\n> FATA[0000] Initlization database connection error.\n"
    },
    {
        "url": "https://api.github.com/repos/Huawei/dockyard/issues/173",
        "repository_url": "https://api.github.com/repos/Huawei/dockyard",
        "labels_url": "https://api.github.com/repos/Huawei/dockyard/issues/173/labels{/name}",
        "comments_url": "https://api.github.com/repos/Huawei/dockyard/issues/173/comments",
        "events_url": "https://api.github.com/repos/Huawei/dockyard/issues/173/events",
        "html_url": "https://github.com/Huawei/dockyard/issues/173",
        "id": 181169207,
        "node_id": "MDU6SXNzdWUxODExNjkyMDc=",
        "number": 173,
        "title": "How do I get started?",
        "user": {
            "login": "petems",
            "id": 1064715,
            "node_id": "MDQ6VXNlcjEwNjQ3MTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1064715?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petems",
            "html_url": "https://github.com/petems",
            "followers_url": "https://api.github.com/users/petems/followers",
            "following_url": "https://api.github.com/users/petems/following{/other_user}",
            "gists_url": "https://api.github.com/users/petems/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petems/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petems/subscriptions",
            "organizations_url": "https://api.github.com/users/petems/orgs",
            "repos_url": "https://api.github.com/users/petems/repos",
            "events_url": "https://api.github.com/users/petems/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petems/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-10-05T14:21:50Z",
        "updated_at": "2016-10-05T14:21:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I'm super interested in using Dockyard, as I'm interested in something that makes Clair easy to use.\n\nHowever, I'm having difficulty understanding how I get the app running. How do I get started? \n\nI see reference to a makefile in some issues, but it was removed in 0f4050edeb45779f414b8969aca9a8b2b7e295e9\n- How do I get started running the app?\n- Is it possible to create a docker-compose setup for running dockyard?\n"
    },
    {
        "url": "https://api.github.com/repos/Huawei/dockyard/issues/165",
        "repository_url": "https://api.github.com/repos/Huawei/dockyard",
        "labels_url": "https://api.github.com/repos/Huawei/dockyard/issues/165/labels{/name}",
        "comments_url": "https://api.github.com/repos/Huawei/dockyard/issues/165/comments",
        "events_url": "https://api.github.com/repos/Huawei/dockyard/issues/165/events",
        "html_url": "https://github.com/Huawei/dockyard/issues/165",
        "id": 173176235,
        "node_id": "MDU6SXNzdWUxNzMxNzYyMzU=",
        "number": 165,
        "title": "content scan feature",
        "user": {
            "login": "liangchenye",
            "id": 13341875,
            "node_id": "MDQ6VXNlcjEzMzQxODc1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13341875?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangchenye",
            "html_url": "https://github.com/liangchenye",
            "followers_url": "https://api.github.com/users/liangchenye/followers",
            "following_url": "https://api.github.com/users/liangchenye/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangchenye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangchenye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangchenye/subscriptions",
            "organizations_url": "https://api.github.com/users/liangchenye/orgs",
            "repos_url": "https://api.github.com/users/liangchenye/repos",
            "events_url": "https://api.github.com/users/liangchenye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangchenye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2016-08-25T11:14:43Z",
        "updated_at": "2016-08-26T03:11:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "# Snapshot : scan backend\n\nupdateservice/snapshot is an interface, developers could add different plugins to do their scan work.\nNow I just adding a simple 'appv1' plugin which get the md5 of an appv1 package.\n## why call it 'Snapshot'\n\n In the traditional repositories provider, like SUSE/Redhat distribution host servers, their are not only provide simple metadata, but also provide detail information. It helps user to 'search' required packages and download them. \n## why under updateservice\n\nIn TUF framework, there is a similar snapshot concept. If a package admin want to provide a secure snapshot service to his user, he/she can signature/encrypt snapshot.\n## How does it work -- Plugin mode\n\nJust like other services under updateservice, we can develop/use Snapshot by a single interface. The interface will choose the suitable scan plugin.\n### Plugin Developer\n\nThere are two key functions:\n- Supported(proto string) bool\n  \n  This is to tell which protocol this plugin supports. For example, if a plugin could scan 'appv1', \n  Supported(\"appv1\") should be 'true'\n  We also have `Description` function which is easier for user to understand what this plugin do.\n- Process (url, id, callback)\n  - URL\n    \n    URL is a local url of an appv1 package or a local dir of a docker image. A plugin developer could read its content and do what ever he want.\n  - ID\n    \n    ID is the callbackID (scan taskID), but was encrypted in order not to expose the inner database details. Plugin developer should use this to tell 'Plugin user' the scan result.\n  - callback\n  \n  If the Plugin User provides this 'callback' function to plugin developer, the developer MUST call it in his/her plugin.\n  Or the developer should post the scan result to Dockyard by RestAPI which will mentioned later.\n### Plugin User (or we can call them dockyard handler developer)\n\nPlugin User provides should choose the right plugin and calling it. He/she can query the scan status by callbackID and collected the scan result by this ID too.\n\nI added four APIs:\n- RegistScanHook (POST)\n  \n  Dockyard will have lots plugins. A dockyard user could choose one (or several in the future) suitable plugin for his/her repository.  I call this action 'regist'.\n- ActiveScanHook (POST)\n  A dockyard user could scan a package. Dockyard will find the registered scan plugin and use that to scan the package. I call this action 'active'\n-  CallbackScanHook (POST)\n  This is used for a plugin developer, he/she can post his/her scan result to dockyard by this ID.\n- QueryResultScanHook (GET)\n  This is not done. It is also for dockyard user, he/she can query the scan result by calling this API.\n"
    },
    {
        "url": "https://api.github.com/repos/Huawei/dockyard/issues/135",
        "repository_url": "https://api.github.com/repos/Huawei/dockyard",
        "labels_url": "https://api.github.com/repos/Huawei/dockyard/issues/135/labels{/name}",
        "comments_url": "https://api.github.com/repos/Huawei/dockyard/issues/135/comments",
        "events_url": "https://api.github.com/repos/Huawei/dockyard/issues/135/events",
        "html_url": "https://github.com/Huawei/dockyard/issues/135",
        "id": 157272483,
        "node_id": "MDU6SXNzdWUxNTcyNzI0ODM=",
        "number": 135,
        "title": "librados.h file not found",
        "user": {
            "login": "deejanu",
            "id": 15095487,
            "node_id": "MDQ6VXNlcjE1MDk1NDg3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15095487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deejanu",
            "html_url": "https://github.com/deejanu",
            "followers_url": "https://api.github.com/users/deejanu/followers",
            "following_url": "https://api.github.com/users/deejanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/deejanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deejanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deejanu/subscriptions",
            "organizations_url": "https://api.github.com/users/deejanu/orgs",
            "repos_url": "https://api.github.com/users/deejanu/repos",
            "events_url": "https://api.github.com/users/deejanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deejanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2016-05-27T19:09:41Z",
        "updated_at": "2016-08-08T19:05:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "No luck with build. Getting rados error:\n\nmake\ngo build -tags \"\" -o dockyard .\n# github.com/ceph/go-ceph/rados\n\nGodeps/_workspace/src/github.com/ceph/go-ceph/rados/conn.go:5:11: fatal error: 'rados/librados.h' file not found\n #include <rados/librados.h>\n          ^\n1 error generated.\nmake: **\\* [all] Error 2\n"
    },
    {
        "url": "https://api.github.com/repos/Huawei/dockyard/issues/132",
        "repository_url": "https://api.github.com/repos/Huawei/dockyard",
        "labels_url": "https://api.github.com/repos/Huawei/dockyard/issues/132/labels{/name}",
        "comments_url": "https://api.github.com/repos/Huawei/dockyard/issues/132/comments",
        "events_url": "https://api.github.com/repos/Huawei/dockyard/issues/132/events",
        "html_url": "https://github.com/Huawei/dockyard/issues/132",
        "id": 154032153,
        "node_id": "MDU6SXNzdWUxNTQwMzIxNTM=",
        "number": 132,
        "title": "Can't build master",
        "user": {
            "login": "nlamirault",
            "id": 29233,
            "node_id": "MDQ6VXNlcjI5MjMz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/29233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nlamirault",
            "html_url": "https://github.com/nlamirault",
            "followers_url": "https://api.github.com/users/nlamirault/followers",
            "following_url": "https://api.github.com/users/nlamirault/following{/other_user}",
            "gists_url": "https://api.github.com/users/nlamirault/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nlamirault/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nlamirault/subscriptions",
            "organizations_url": "https://api.github.com/users/nlamirault/orgs",
            "repos_url": "https://api.github.com/users/nlamirault/repos",
            "events_url": "https://api.github.com/users/nlamirault/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nlamirault/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2016-05-10T15:13:07Z",
        "updated_at": "2016-05-11T16:10:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I've got an error building master using Go 1.6: \n\n```\n$ git clone https://github.com/containerops/dockyard                                                                                                                                             \nCloning into 'dockyard'...\nremote: Counting objects: 3763, done.\nremote: Compressing objects: 100% (51/51), done.\nremote: Total 3763 (delta 1), reused 0 (delta 0), pack-reused 3710\nReceiving objects: 100% (3763/3763), 3.29 MiB | 1.36 MiB/s, done.\nResolving deltas: 100% (1342/1342), done.\nChecking connectivity... done.\n$ cd dockyard     \n$ make\ngo build -tags \"\" -o dockyard .\n# github.com/containerops/dockyard/handler\n../golang/src/github.com/containerops/dockyard/handler/blob.go:52: too many arguments in call to utils.MD5\nMakefile:5: recipe for target 'all' failed\nmake: *** [all] Error 2\n```\n"
    }
]