[
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30",
        "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30/labels{/name}",
        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30/comments",
        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30/events",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/30",
        "id": 564950590,
        "node_id": "MDU6SXNzdWU1NjQ5NTA1OTA=",
        "number": 30,
        "title": "Combine DoubleMNIST with TripleMNIST to create MultiMNIST",
        "user": {
            "login": "tesfaldet",
            "id": 5014902,
            "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tesfaldet",
            "html_url": "https://github.com/tesfaldet",
            "followers_url": "https://api.github.com/users/tesfaldet/followers",
            "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
            "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
            "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
            "repos_url": "https://api.github.com/users/tesfaldet/repos",
            "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T21:07:54Z",
        "updated_at": "2020-02-13T21:08:48Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Something I wanted to do when I included the DoubleMNIST dataset. Changing DoubleMNIST to MultiMNIST and including a flag to decide whether it's Double or Triple should be relatively trivial. This enhancement should also include logic to download the TripleMNIST dataset."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29",
        "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29/labels{/name}",
        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29/comments",
        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29/events",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/29",
        "id": 564792590,
        "node_id": "MDU6SXNzdWU1NjQ3OTI1OTA=",
        "number": 29,
        "title": "Pascal5i Fewshot Segmentation",
        "user": {
            "login": "MSiam",
            "id": 12859863,
            "node_id": "MDQ6VXNlcjEyODU5ODYz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/12859863?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MSiam",
            "html_url": "https://github.com/MSiam",
            "followers_url": "https://api.github.com/users/MSiam/followers",
            "following_url": "https://api.github.com/users/MSiam/following{/other_user}",
            "gists_url": "https://api.github.com/users/MSiam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MSiam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MSiam/subscriptions",
            "organizations_url": "https://api.github.com/users/MSiam/orgs",
            "repos_url": "https://api.github.com/users/MSiam/repos",
            "events_url": "https://api.github.com/users/MSiam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MSiam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T16:12:35Z",
        "updated_at": "2020-02-13T17:38:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Thanks for the great work.\r\n\r\nI am wondering if I can add a loader for pascal5i dataset as a pull request? I think it will greatly benefit the fewshot segmentation community to have it in that repo too.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/25",
        "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/25/labels{/name}",
        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/25/comments",
        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/25/events",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/25",
        "id": 561976491,
        "node_id": "MDU6SXNzdWU1NjE5NzY0OTE=",
        "number": 25,
        "title": "Omniglot: Sampling classes from the same alphabet for one task",
        "user": {
            "login": "MarcCoru",
            "id": 21101276,
            "node_id": "MDQ6VXNlcjIxMTAxMjc2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/21101276?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcCoru",
            "html_url": "https://github.com/MarcCoru",
            "followers_url": "https://api.github.com/users/MarcCoru/followers",
            "following_url": "https://api.github.com/users/MarcCoru/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarcCoru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarcCoru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarcCoru/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcCoru/orgs",
            "repos_url": "https://api.github.com/users/MarcCoru/repos",
            "events_url": "https://api.github.com/users/MarcCoru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarcCoru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-02-08T06:05:15Z",
        "updated_at": "2020-02-11T23:33:59Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Hi,\r\nFirst of all, thank you for developing and maintaining this repository.\r\n\r\nI looked through the code and in particular the Omniglot dataset implementation and may have found one issue:\r\n\r\nThe `OmniglotClassDataset` defines each `alphabet/character` as separate class https://github.com/tristandeleu/pytorch-meta/blob/8e4e706c6aee07d8f6ecf8491866f18c951fcfa6/torchmeta/datasets/omniglot.py#L237\r\n\r\nHence, `self.num_classes` spans the number of classes times the number of alphabets.\r\nThen the `CombinationRandomSampler` samples random indices from the entire range of classes here https://github.com/tristandeleu/pytorch-meta/blob/8e4e706c6aee07d8f6ecf8491866f18c951fcfa6/torchmeta/utils/data/sampler.py#L32\r\n\r\n**This leads to classes from different alphabets being samples in the same task**. This arguably makes the classification task easier since characters of different alphabets may be easier to separate than characters from the same alphabet.\r\n\r\nIs this property intended? One task should include samples from the same alphabet according to my understanding.\r\n\r\nThis may be solved by a custom `CombinationSubsetRandomSampler` that only chooses indices from samples of the same alphabet. This would require some additional alphabet-index information in the `OmniglotClassDataset` or `OmniglotDataset`.\r\n\r\nThanks again for creating this repository."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/22",
        "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/22/labels{/name}",
        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/22/comments",
        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/22/events",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/pull/22",
        "id": 560067891,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxMTI1Njc2",
        "number": 22,
        "title": "Hardness metric",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-05T00:25:22Z",
        "updated_at": "2020-02-05T00:25:22Z",
        "closed_at": null,
        "author_association": "OWNER",
        "pull_request": {
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/22",
            "html_url": "https://github.com/tristandeleu/pytorch-meta/pull/22",
            "diff_url": "https://github.com/tristandeleu/pytorch-meta/pull/22.diff",
            "patch_url": "https://github.com/tristandeleu/pytorch-meta/pull/22.patch"
        },
        "body": " - Add the Hardness metric as defined in [A Baseline for Few-Shot Image Classification](https://arxiv.org/abs/1909.02729) in `torchmeta.utils`.\r\n - Add helpers functions for prototypes (e.g. for Prototypical Networks) in `torchmeta.utils`."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/17",
        "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/17/labels{/name}",
        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/17/comments",
        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/17/events",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/17",
        "id": 533585427,
        "node_id": "MDU6SXNzdWU1MzM1ODU0Mjc=",
        "number": 17,
        "title": "Other datasets suggested",
        "user": {
            "login": "Franklin-Yao",
            "id": 9799610,
            "node_id": "MDQ6VXNlcjk3OTk2MTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9799610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Franklin-Yao",
            "html_url": "https://github.com/Franklin-Yao",
            "followers_url": "https://api.github.com/users/Franklin-Yao/followers",
            "following_url": "https://api.github.com/users/Franklin-Yao/following{/other_user}",
            "gists_url": "https://api.github.com/users/Franklin-Yao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Franklin-Yao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Franklin-Yao/subscriptions",
            "organizations_url": "https://api.github.com/users/Franklin-Yao/orgs",
            "repos_url": "https://api.github.com/users/Franklin-Yao/repos",
            "events_url": "https://api.github.com/users/Franklin-Yao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Franklin-Yao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-12-05T20:37:13Z",
        "updated_at": "2020-01-12T12:51:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I guess a few more challenging datasets will be popular in the next coming years. Such as meta-dataset, Imagenet-21k. Can you plz add them?"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/15",
        "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/15/labels{/name}",
        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/15/comments",
        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/15/events",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/15",
        "id": 530127390,
        "node_id": "MDU6SXNzdWU1MzAxMjczOTA=",
        "number": 15,
        "title": "Datasets for few-shot object detection",
        "user": {
            "login": "XinyiYS",
            "id": 17292375,
            "node_id": "MDQ6VXNlcjE3MjkyMzc1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17292375?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XinyiYS",
            "html_url": "https://github.com/XinyiYS",
            "followers_url": "https://api.github.com/users/XinyiYS/followers",
            "following_url": "https://api.github.com/users/XinyiYS/following{/other_user}",
            "gists_url": "https://api.github.com/users/XinyiYS/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XinyiYS/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XinyiYS/subscriptions",
            "organizations_url": "https://api.github.com/users/XinyiYS/orgs",
            "repos_url": "https://api.github.com/users/XinyiYS/repos",
            "events_url": "https://api.github.com/users/XinyiYS/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XinyiYS/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-11-29T02:31:11Z",
        "updated_at": "2019-12-01T01:36:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I wonder if there is anyone already working on curating and putting up a collection of datasets for the few-shot object detection task.  \r\n\r\nI would be happy to help out if someone is already working on this."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/14",
        "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/14/labels{/name}",
        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/14/comments",
        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/14/events",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/14",
        "id": 525341207,
        "node_id": "MDU6SXNzdWU1MjUzNDEyMDc=",
        "number": 14,
        "title": "Bug List",
        "user": {
            "login": "andac-demir",
            "id": 43050657,
            "node_id": "MDQ6VXNlcjQzMDUwNjU3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/43050657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andac-demir",
            "html_url": "https://github.com/andac-demir",
            "followers_url": "https://api.github.com/users/andac-demir/followers",
            "following_url": "https://api.github.com/users/andac-demir/following{/other_user}",
            "gists_url": "https://api.github.com/users/andac-demir/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andac-demir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andac-demir/subscriptions",
            "organizations_url": "https://api.github.com/users/andac-demir/orgs",
            "repos_url": "https://api.github.com/users/andac-demir/repos",
            "events_url": "https://api.github.com/users/andac-demir/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andac-demir/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-11-20T00:10:13Z",
        "updated_at": "2019-11-29T00:14:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi again! I came with a little more bugs this time, hopefully I don't bother you :)\r\n\r\n- CIFARFS imported from torchmeta.datasets returns list index out of range error after BatchMetaDataLoader runs for 2 iterations:  \r\n\r\nFile \"/home/ademir/anaconda3/envs/metalearn/lib/python3.7/site-packages/torchmeta/datasets/cifar100/base.py\", line 53, in __getitem__\r\n    coarse_label_name, fine_label_name = self.labels[index]\r\nIndexError: list index out of range\r\n\r\n- FC100 from torchmeta.datasets returns file not found error:\r\nNo such file or directory: 'data/cifar100/fine_names.json'\r\n\r\n- miniImageNet, tieredIMageNet and omniglot run without bugs; however I wrote one helper function to visualize support set and query set at each episode. Under a 5 way 5 shot learning scenario, the first 2 labels are always the same. So the code actually generates 4 labels, first label with 10 images and other 3 labels having 5 images each. My code is available here for your validation: https://github.com/andac-demir/FewShotClassification/blob/master/metadata.py\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/13",
        "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/13/labels{/name}",
        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/13/comments",
        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/13/events",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/13",
        "id": 524174278,
        "node_id": "MDU6SXNzdWU1MjQxNzQyNzg=",
        "number": 13,
        "title": "ClassSplitter only supports balanced test samples per episode",
        "user": {
            "login": "vmichals",
            "id": 1757177,
            "node_id": "MDQ6VXNlcjE3NTcxNzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1757177?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vmichals",
            "html_url": "https://github.com/vmichals",
            "followers_url": "https://api.github.com/users/vmichals/followers",
            "following_url": "https://api.github.com/users/vmichals/following{/other_user}",
            "gists_url": "https://api.github.com/users/vmichals/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vmichals/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vmichals/subscriptions",
            "organizations_url": "https://api.github.com/users/vmichals/orgs",
            "repos_url": "https://api.github.com/users/vmichals/repos",
            "events_url": "https://api.github.com/users/vmichals/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vmichals/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-18T07:02:24Z",
        "updated_at": "2019-11-19T06:07:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "The authors of [TADAM](https://papers.nips.cc/paper/7352-tadam-task-dependent-adaptive-metric-for-improved-few-shot-learning) describe in the supplementary material that query samples in each episode are sampled uniformly at random (from the set of data points of all classes instead of K samples per class).\r\nIs this a negligible implementation detail or do you think it's something that's worth adding as a feature in the ClassSplitter?"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/5",
        "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/5/labels{/name}",
        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/5/comments",
        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/5/events",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/5",
        "id": 502336951,
        "node_id": "MDU6SXNzdWU1MDIzMzY5NTE=",
        "number": 5,
        "title": "Ideas for improving performance",
        "user": {
            "login": "bkj",
            "id": 6086781,
            "node_id": "MDQ6VXNlcjYwODY3ODE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6086781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bkj",
            "html_url": "https://github.com/bkj",
            "followers_url": "https://api.github.com/users/bkj/followers",
            "following_url": "https://api.github.com/users/bkj/following{/other_user}",
            "gists_url": "https://api.github.com/users/bkj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bkj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bkj/subscriptions",
            "organizations_url": "https://api.github.com/users/bkj/orgs",
            "repos_url": "https://api.github.com/users/bkj/repos",
            "events_url": "https://api.github.com/users/bkj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bkj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-10-03T22:50:16Z",
        "updated_at": "2019-10-04T00:28:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi --\r\n\r\nI'm curious whether you're aware of any bottlenecks that we might be able to re-write to improve performance?  Right now, the dataloader is slowing down my Omniglot metalearner by ~ 50%.\r\n\r\nI'm going to profile myself, but figured I'd ask if you knew of particular hot-spots.  \r\n\r\nLove the library!\r\n\r\n~ Ben"
    }
]