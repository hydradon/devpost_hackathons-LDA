[
    {
        "url": "https://api.github.com/repos/brave/muon/issues/764",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/764/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/764/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/764/events",
        "html_url": "https://github.com/brave/muon/issues/764",
        "id": 391394437,
        "node_id": "MDU6SXNzdWUzOTEzOTQ0Mzc=",
        "number": 764,
        "title": "The release naming is confusing.",
        "user": {
            "login": "metacritical",
            "id": 760429,
            "node_id": "MDQ6VXNlcjc2MDQyOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/760429?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metacritical",
            "html_url": "https://github.com/metacritical",
            "followers_url": "https://api.github.com/users/metacritical/followers",
            "following_url": "https://api.github.com/users/metacritical/following{/other_user}",
            "gists_url": "https://api.github.com/users/metacritical/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metacritical/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metacritical/subscriptions",
            "organizations_url": "https://api.github.com/users/metacritical/orgs",
            "repos_url": "https://api.github.com/users/metacritical/repos",
            "events_url": "https://api.github.com/users/metacritical/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metacritical/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-12-15T17:01:25Z",
        "updated_at": "2018-12-15T17:01:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "On the releases page of muon the packaged binaries when extracted are named Brave. Shouldn't these be named Muon? For instance the Darwin package for macOS is Brave.app  shouldnt this be Muon.app? "
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/652",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/652/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/652/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/652/events",
        "html_url": "https://github.com/brave/muon/issues/652",
        "id": 373757398,
        "node_id": "MDU6SXNzdWUzNzM3NTczOTg=",
        "number": 652,
        "title": "An UAF bug exists in muon",
        "user": {
            "login": "l0kihardt",
            "id": 17106348,
            "node_id": "MDQ6VXNlcjE3MTA2MzQ4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17106348?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/l0kihardt",
            "html_url": "https://github.com/l0kihardt",
            "followers_url": "https://api.github.com/users/l0kihardt/followers",
            "following_url": "https://api.github.com/users/l0kihardt/following{/other_user}",
            "gists_url": "https://api.github.com/users/l0kihardt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/l0kihardt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/l0kihardt/subscriptions",
            "organizations_url": "https://api.github.com/users/l0kihardt/orgs",
            "repos_url": "https://api.github.com/users/l0kihardt/repos",
            "events_url": "https://api.github.com/users/l0kihardt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/l0kihardt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-10-25T03:20:59Z",
        "updated_at": "2018-12-31T23:02:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "* Operating system:\r\nbrave-v8.1.8-linux-x64.zip\r\nLinux ubuntu 4.15.0-36-generic #39-Ubuntu SMP Mon Sep 24 16:19:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\nubuntu 18.04\r\n\r\n* Steps to reproduce\r\n`r /path/to/demo.html`\r\n\r\nif you want to get to the function before 0x3799940, you can use the gdb script I uploaded.\r\n\r\n* Basic info\r\n```\r\n[----------------------------------registers-----------------------------------]\r\nRAX: 0x53582a30d8 --> 0x662f6567616d6912 \r\nRBX: 0x7fffffffd058 --> 0x0 \r\nRCX: 0x29 (')')\r\nRDX: 0x140 \r\nRSI: 0x0 \r\nRDI: 0x7fffffffd058 --> 0x0 \r\nRBP: 0x7fffffffd040 --> 0x7fffffffd070 --> 0x7fffffffd090 --> 0x7fffffffd0d0 --> 0x7fffffffd130 --> 0x7fffffffd1c0 (--> ...)\r\nRSP: 0x7fffffffd030 --> 0x3799940 (push   rbp)\r\nRIP: 0x2d41301 (mov    rdx,QWORD PTR [rsi])\r\nR8 : 0x0 \r\nR9 : 0x535730d570 --> 0x10000001e \r\nR10: 0x53572a6cc0 --> 0x535730d570 --> 0x10000001e \r\nR11: 0x0 \r\nR12: 0x6fc0430 --> 0x0 \r\nR13: 0x53570f3d30 --> 0x0 \r\nR14: 0x5357778960 --> 0x0 \r\nR15: 0x7fffffffd0e8 --> 0x4847dc (\"PluginsLoaded\")\r\nEFLAGS: 0x10202 (carry parity adjust zero sign trap INTERRUPT direction overflow)\r\n[-------------------------------------code-------------------------------------]\r\n   0x2d412f8:   add    rax,0x38\r\n   0x2d412fc:   test   cl,0x1\r\n   0x2d412ff:   je     0x2d41309\r\n=> 0x2d41301:   mov    rdx,QWORD PTR [rsi]\r\n   0x2d41304:   mov    rcx,QWORD PTR [rdx+rcx*1-0x1]\r\n   0x2d41309:   mov    rdi,rbx\r\n   0x2d4130c:   mov    rdx,rax\r\n   0x2d4130f:   call   rcx\r\n[------------------------------------stack-------------------------------------]\r\n0000| 0x7fffffffd030 --> 0x3799940 (push   rbp)\r\n0008| 0x7fffffffd038 --> 0x7fffffffd080 --> 0x0 \r\n0016| 0x7fffffffd040 --> 0x7fffffffd070 --> 0x7fffffffd090 --> 0x7fffffffd0d0 --> 0x7fffffffd130 --> 0x7fffffffd1c0 (--> ...)\r\n0024| 0x7fffffffd048 --> 0x3799963 (lea    rdi,[rbp-0x20])\r\n0032| 0x7fffffffd050 --> 0x53582a30a0 --> 0xffffffff00000001 \r\n0040| 0x7fffffffd058 --> 0x0 \r\n0048| 0x7fffffffd060 --> 0x7fffffffd080 --> 0x0 \r\n0056| 0x7fffffffd068 --> 0x3ba29a0 (push   rbp)\r\n[------------------------------------------------------------------------------]\r\nLegend: code, data, rodata, value\r\nStopped reason: SIGSEGV\r\n0x0000000002d41301 in ?? ()\r\n```\r\nSo the bug actually happens at the base::internal::Invoker<base::internal::BindState<void (*)>\r\nwhen it tries to bind a callback function, which is the 0x2D412E0\r\n```\r\n_int64 __fastcall vuln(__int64 a1, struct_a2 *a2)\r\n{\r\n  char *v3; // rcx\r\n  _QWORD *v4; // rsi\r\n  struct_a2 *v5; // rax\r\n\r\n  v3 = a2->pchar20;\r\n  v4 = (_QWORD *)(a2->qword28 + a2->qword30);\r\n  v5 = a2 + 1;\r\n  if ( (unsigned __int8)v3 & 1 )\r\n    v3 = *(char **)&v3[*v4 - 1];\r\n  ((void (__fastcall *)(__int64, _QWORD *, struct_a2 *))v3)(a1, v4, v5);\r\n  return a1;\r\n}\r\n```\r\nthe obj it passed to this function has been freed before Invoker has been called, so that a2->qword28 + a2->qword30 is NULL. which caused a NULL pointer dereference eventually.\r\n"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/643",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/643/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/643/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/643/events",
        "html_url": "https://github.com/brave/muon/pull/643",
        "id": 350227048,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4MTI5ODI2",
        "number": 643,
        "title": "Enable features::kSitePerProcess for chrome parity",
        "user": {
            "login": "darkdh",
            "id": 11330831,
            "node_id": "MDQ6VXNlcjExMzMwODMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11330831?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darkdh",
            "html_url": "https://github.com/darkdh",
            "followers_url": "https://api.github.com/users/darkdh/followers",
            "following_url": "https://api.github.com/users/darkdh/following{/other_user}",
            "gists_url": "https://api.github.com/users/darkdh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/darkdh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/darkdh/subscriptions",
            "organizations_url": "https://api.github.com/users/darkdh/orgs",
            "repos_url": "https://api.github.com/users/darkdh/repos",
            "events_url": "https://api.github.com/users/darkdh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/darkdh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": {
            "login": "darkdh",
            "id": 11330831,
            "node_id": "MDQ6VXNlcjExMzMwODMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11330831?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darkdh",
            "html_url": "https://github.com/darkdh",
            "followers_url": "https://api.github.com/users/darkdh/followers",
            "following_url": "https://api.github.com/users/darkdh/following{/other_user}",
            "gists_url": "https://api.github.com/users/darkdh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/darkdh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/darkdh/subscriptions",
            "organizations_url": "https://api.github.com/users/darkdh/orgs",
            "repos_url": "https://api.github.com/users/darkdh/repos",
            "events_url": "https://api.github.com/users/darkdh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/darkdh/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "darkdh",
                "id": 11330831,
                "node_id": "MDQ6VXNlcjExMzMwODMx",
                "avatar_url": "https://avatars0.githubusercontent.com/u/11330831?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/darkdh",
                "html_url": "https://github.com/darkdh",
                "followers_url": "https://api.github.com/users/darkdh/followers",
                "following_url": "https://api.github.com/users/darkdh/following{/other_user}",
                "gists_url": "https://api.github.com/users/darkdh/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/darkdh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/darkdh/subscriptions",
                "organizations_url": "https://api.github.com/users/darkdh/orgs",
                "repos_url": "https://api.github.com/users/darkdh/repos",
                "events_url": "https://api.github.com/users/darkdh/events{/privacy}",
                "received_events_url": "https://api.github.com/users/darkdh/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-13T23:17:52Z",
        "updated_at": "2018-08-13T23:17:52Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/brave/muon/pulls/643",
            "html_url": "https://github.com/brave/muon/pull/643",
            "diff_url": "https://github.com/brave/muon/pull/643.diff",
            "patch_url": "https://github.com/brave/muon/pull/643.patch"
        },
        "body": "Alternatively, we can trun on switches::kSitePerProcess in\r\nbrowser-laptop by default, otherwise we have to provide a toggle\r\n`switches::kDisableSiteIsolationTrials` which is equivalent to\r\n`site-isolation-trial-opt-out` in `chrome://flags`\r\nsee `SiteIsolationPolicy::UseDedicatedProcessesForAllSites`\r\n\r\nAuditors: @bridiver, @diracdeltas"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/642",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/642/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/642/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/642/events",
        "html_url": "https://github.com/brave/muon/pull/642",
        "id": 349320915,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NDY2OTAy",
        "number": 642,
        "title": "C69",
        "user": {
            "login": "bridiver",
            "id": 34129,
            "node_id": "MDQ6VXNlcjM0MTI5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/34129?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bridiver",
            "html_url": "https://github.com/bridiver",
            "followers_url": "https://api.github.com/users/bridiver/followers",
            "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
            "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
            "organizations_url": "https://api.github.com/users/bridiver/orgs",
            "repos_url": "https://api.github.com/users/bridiver/repos",
            "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bridiver/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": {
            "login": "hferreiro",
            "id": 984737,
            "node_id": "MDQ6VXNlcjk4NDczNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/984737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hferreiro",
            "html_url": "https://github.com/hferreiro",
            "followers_url": "https://api.github.com/users/hferreiro/followers",
            "following_url": "https://api.github.com/users/hferreiro/following{/other_user}",
            "gists_url": "https://api.github.com/users/hferreiro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hferreiro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hferreiro/subscriptions",
            "organizations_url": "https://api.github.com/users/hferreiro/orgs",
            "repos_url": "https://api.github.com/users/hferreiro/repos",
            "events_url": "https://api.github.com/users/hferreiro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hferreiro/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hferreiro",
                "id": 984737,
                "node_id": "MDQ6VXNlcjk4NDczNw==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/984737?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hferreiro",
                "html_url": "https://github.com/hferreiro",
                "followers_url": "https://api.github.com/users/hferreiro/followers",
                "following_url": "https://api.github.com/users/hferreiro/following{/other_user}",
                "gists_url": "https://api.github.com/users/hferreiro/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hferreiro/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hferreiro/subscriptions",
                "organizations_url": "https://api.github.com/users/hferreiro/orgs",
                "repos_url": "https://api.github.com/users/hferreiro/repos",
                "events_url": "https://api.github.com/users/hferreiro/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hferreiro/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "ltilve",
                "id": 2891281,
                "node_id": "MDQ6VXNlcjI4OTEyODE=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2891281?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ltilve",
                "html_url": "https://github.com/ltilve",
                "followers_url": "https://api.github.com/users/ltilve/followers",
                "following_url": "https://api.github.com/users/ltilve/following{/other_user}",
                "gists_url": "https://api.github.com/users/ltilve/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ltilve/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ltilve/subscriptions",
                "organizations_url": "https://api.github.com/users/ltilve/orgs",
                "repos_url": "https://api.github.com/users/ltilve/repos",
                "events_url": "https://api.github.com/users/ltilve/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ltilve/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-09T23:02:56Z",
        "updated_at": "2018-10-04T18:26:38Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "pull_request": {
            "url": "https://api.github.com/repos/brave/muon/pulls/642",
            "html_url": "https://github.com/brave/muon/pull/642",
            "diff_url": "https://github.com/brave/muon/pull/642.diff",
            "patch_url": "https://github.com/brave/muon/pull/642.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/639",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/639/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/639/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/639/events",
        "html_url": "https://github.com/brave/muon/issues/639",
        "id": 348123664,
        "node_id": "MDU6SXNzdWUzNDgxMjM2NjQ=",
        "number": 639,
        "title": "Quality readable documentation",
        "user": {
            "login": "P0oOOOo0YA",
            "id": 40010463,
            "node_id": "MDQ6VXNlcjQwMDEwNDYz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/40010463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/P0oOOOo0YA",
            "html_url": "https://github.com/P0oOOOo0YA",
            "followers_url": "https://api.github.com/users/P0oOOOo0YA/followers",
            "following_url": "https://api.github.com/users/P0oOOOo0YA/following{/other_user}",
            "gists_url": "https://api.github.com/users/P0oOOOo0YA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/P0oOOOo0YA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/P0oOOOo0YA/subscriptions",
            "organizations_url": "https://api.github.com/users/P0oOOOo0YA/orgs",
            "repos_url": "https://api.github.com/users/P0oOOOo0YA/repos",
            "events_url": "https://api.github.com/users/P0oOOOo0YA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/P0oOOOo0YA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-07T00:20:28Z",
        "updated_at": "2018-08-07T22:00:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "really interesting project but with a messy documentation. Is there any chance to have a better documentation? \r\n"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/626",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/626/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/626/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/626/events",
        "html_url": "https://github.com/brave/muon/issues/626",
        "id": 337606770,
        "node_id": "MDU6SXNzdWUzMzc2MDY3NzA=",
        "number": 626,
        "title": "C68: Crash on popping up notifications on Linux",
        "user": {
            "login": "ltilve",
            "id": 2891281,
            "node_id": "MDQ6VXNlcjI4OTEyODE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2891281?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ltilve",
            "html_url": "https://github.com/ltilve",
            "followers_url": "https://api.github.com/users/ltilve/followers",
            "following_url": "https://api.github.com/users/ltilve/following{/other_user}",
            "gists_url": "https://api.github.com/users/ltilve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ltilve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ltilve/subscriptions",
            "organizations_url": "https://api.github.com/users/ltilve/orgs",
            "repos_url": "https://api.github.com/users/ltilve/repos",
            "events_url": "https://api.github.com/users/ltilve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ltilve/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-07-02T17:43:54Z",
        "updated_at": "2018-07-02T17:43:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Testing https://developer.mozilla.org/nl/docs/Web/API/notification#Example, clicking on 'Show' to pops up a notification asking for permission (after grating the right permissions) seems to be crashing on Linux.\r\n\r\n```\r\nThread 1 \"brave\" received signal SIGILL, Illegal instruction.\r\nbrightray::LibnotifyNotification::Initialize () at ../../electron/vendor/brightray/browser/linux/libnotify_notification.cc:71\r\n71\t  if (!libnotify_loader_.notify_is_initted() &&\r\n(gdb) bt\r\n#0  0x00000000038a255d in brightray::LibnotifyNotification::Initialize() () at ../../electron/vendor/brightray/browser/linux/libnotify_notification.cc:71\r\n#1  0x00000000038a266b in brightray::NotificationPresenter::Create() () at ../../electron/vendor/brightray/browser/linux/notification_presenter_linux.cc:14\r\n#2  0x0000000003898967 in brightray::BrowserClient::GetNotificationPresenter() (this=0x38ee0b917d20)\r\n    at ../../electron/vendor/brightray/browser/browser_client.cc:50\r\n#3  0x00000000037188d2 in brave::(anonymous namespace)::OnWebNotificationAllowed(brightray::BrowserClient*, SkBitmap const&, content::PlatformNotificationData const&, brightray::NotificationDelegate*, bool) (browser_client=0x0, icon=..., data=..., delegate=0x38ee0dcc6420, allowed=false)\r\n    at ../../electron/brave/browser/notifications/platform_notification_service_impl.cc:44\r\n#4  0x0000000003723c33 in base::RepeatingCallback<void (std::__1::vector<blink::mojom::PermissionStatus, std::__1::allocator<blink::mojom::PermissionStatus> > const&)>::Run(std::__1::vector<blink::mojom::PermissionStatus, std::__1::allocator<blink::mojom::PermissionStatus> > const&) const & (this=<optimized out>, args=...) at ../../base/callback.h:125\r\n#5  0x0000000003723c33 in brave::BravePermissionManager::OnPermissionResponse(int, GURL const&, base::RepeatingCallback<void (std::__1::vector<blink::mojom::PermissionStatus, std::__1::allocator<blink::mojom::PermissionStatus> > const&)> const&, std::__1::vector<content::PermissionType, std::__1::allocator<content::PermissionType> > const&, std::__1::vector<blink::mojom::PermissionStatus, std::__1::allocator<blink::mojom::PermissionStatus> > const&) (this=0x38ee0c320f60, request_id=<optimized out>, origin=..., callback=..., permissions=..., status=...) at ../../electron/brave/browser/brave_permission_manager.cc:165\r\n#6  0x0000000003838fdb in base::RepeatingCallback<void (std::__1::vector<blink::mojom::PermissionStatus, std::__1::allocator<blink::mojom::PermissionStatus> > const&)>::Run(std::__1::vector<blink::mojom::PermissionStatus, std::__1::allocator<blink::mojom::PermissionStatus> > const&) const & (this=0x38ee0d407e00, args=...) at ../../base/callback.h:125\r\n#7  0x0000000003838fdb in mate::internal::Invoker<base::RepeatingCallback, mate::internal::IndicesHolder<0ul>, std::__1::vector<blink::mojom::PermissionStatus, std::__1::allocator<blink::mojom::PermissionStatus> > const&>::DispatchToCallback(base::RepeatingCallback<void (std::__1::vector<blink::mojom::PermissionStatus, std::__1::allocator<blink::mojom::PermissionStatus> > const&)>) (callback=..., this=<optimized out>)\r\n    at ../../electron/vendor/native_mate/native_mate/function_template.h:207\r\n#8  0x0000000003838fdb in mate::internal::NativeFunctionInvoker<base::RepeatingCallback, void (std::__1::vector<blink::mojom::PermissionStatus, std::__1::allocator<blink::mojom::PermissionStatus> > const&)>::Go(base::RepeatingCallback<void (std::__1::vector<blink::mojom::PermissionStatus, std::__1::allocator<blink::mojom::PermissionStatus> > const&)>, mate::Arguments*) (val=..., args=<optimized out>)\r\n    at ../../electron/atom/common/native_mate_converters/callback.h:124\r\n#9  0x0000000003722d8a in base::internal::FunctorTraits<void (*)(base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)>, mate::Arguments*), void>::Invoke<void (* const&)(base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)>, mate::Arguments*), base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)> const&, mate::Arguments*>(void (* const&)(base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)>, mate::Arguments*), base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)> const&, mate::Arguments*&&) (function=<optimized out>, args=..., args=<optimized out>) at ../../base/bind_internal.h:402\r\n#10 0x0000000003722d8a in base::internal::InvokeHelper<false, void>::MakeItSo<void (* const&)(base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)>, mate::Arguments*), base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)> const&, mate::Arguments*>(void (* const&)(base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)>, mate::Arguments*), base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)> const&, mate::Arguments*&&) (functor=<optimized out>, args=..., args=<optimized out>) at ../../base/bind_internal.h:547\r\n#11 0x0000000003722d8a in base::internal::Invoker<base::internal::BindState<void (*)(base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)>, mate::Arguments*), base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)> >, void (mate::Arguments*)>::RunImpl<void (* const&)(base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string1---Type <return> to cont---Type <ret---Type <return> to cont---Type <return> to c---Type <---Type <return> to cont---Typ---Typ------Typ------Type <return> to continue, or q <return> to quit---\r\nits, std::__1::allocator<unsigned short> > const&, bool)>, mate::Arguments*), std::__1::tuple<base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)> > const&, 0ul>(void (* const&)(base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)>, mate::Arguments*), std::__1::tuple<base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)> > const&, std::__1::integer_sequence<unsigned long, 0ul>, mate::Arguments*&&) (functor=<optimized out>, bound=..., unbound_args=<optimized out>) at ../../base/bind_internal.h:621\r\n#12 0x0000000003722d8a in base::internal::Invoker<base::internal::BindState<void (*)(base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)>, mate::Arguments*), base::RepeatingCallback<void (bool, std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> > const&, bool)> >, void (mate::Arguments*)>::Run(base::internal::BindStateBase*, mate::Arguments*) (base=<optimized out>, unbound_args=0x0) at ../../base/bind_internal.h:603\r\n#13 0x00000000038c6d75 in base::RepeatingCallback<void (mate::Arguments*)>::Run(mate::Arguments*) const & (this=0x38ee0e4d0420, args=0x7fffffffa518) at ../../base/callback.h:125\r\n#14 0x00000000038c6d75 in mate::internal::(anonymous namespace)::CallTranslater(v8::Local<v8::External>, v8::Local<v8::Object>, mate::Arguments*) (external=..., state=..., args=0x7fffffffa518)\r\n    at ../../electron/atom/common/native_mate_converters/callback.cc:39\r\n#15 0x00000000038c7097 in base::RepeatingCallback<void (v8::Local<v8::External>, v8::Local<v8::Object>, mate::Arguments*)>::Run(v8::Local<v8::External>, v8::Local<v8::Object>, mate::Arguments*) const & (this=0x38ee0c428a50, args=..., args=..., args=0x7fff7fcc2ac0 <notify_is_initted>) at ../../base/callback.h:125\r\n#16 0x00000000038c7097 in mate::internal::Invoker<base::RepeatingCallback, mate::internal::IndicesHolder<0ul, 1ul, 2ul>, v8::Local<v8::External>, v8::Local<v8::Object>, mate::Arguments*>::DispatchToCallback(base::RepeatingCallback<void (v8::Local<v8::External>, v8::Local<v8::Object>, mate::Arguments*)>) (callback=..., this=<optimized out>) at ../../electron/vendor/native_mate/native_mate/function_template.h:207\r\n#17 0x00000000038c7097 in mate::internal::Dispatcher<base::RepeatingCallback, void (v8::Local<v8::External>, v8::Local<v8::Object>, mate::Arguments*)>::DispatchToCallback(v8::FunctionCallbackInfo<v8::Value> const&) (info=...)\r\n    at ../../electron/vendor/native_mate/native_mate/function_template.h:243\r\n#18 0x0000000002091201 in v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo*) (this=0x7fffffffa6a8, handler=<optimized out>) at ../../v8/src/api-arguments-inl.h:94\r\n#19 0x000000000209079e in v8::internal::(anonymous namespace)::HandleApiCallHelper<false>(v8::internal::Isolate*, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::FunctionTemplateInfo>, v8::internal::Handle<v8::internal::Object>, v8::internal::BuiltinArguments) (isolate=0x38ee0be50000, function=..., new_target=..., fun_data=..., receiver=..., args=...) at ../../v8/src/builtins/builtins-api.cc:109\r\n#20 0x000000000208ffa3 in v8::internal::Builtin_Impl_HandleApiCall(v8::internal::BuiltinArguments, v8::internal::Isolate*) (args=..., isolate=0x38ee0be50000) at ../../v8/src/builtins/builtins-api.cc:139\r\n```"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/599",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/599/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/599/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/599/events",
        "html_url": "https://github.com/brave/muon/issues/599",
        "id": 325431442,
        "node_id": "MDU6SXNzdWUzMjU0MzE0NDI=",
        "number": 599,
        "title": "C67: make TabHelper::Discard() to properly discard tabs",
        "user": {
            "login": "ltilve",
            "id": 2891281,
            "node_id": "MDQ6VXNlcjI4OTEyODE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2891281?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ltilve",
            "html_url": "https://github.com/ltilve",
            "followers_url": "https://api.github.com/users/ltilve/followers",
            "following_url": "https://api.github.com/users/ltilve/following{/other_user}",
            "gists_url": "https://api.github.com/users/ltilve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ltilve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ltilve/subscriptions",
            "organizations_url": "https://api.github.com/users/ltilve/orgs",
            "repos_url": "https://api.github.com/users/ltilve/repos",
            "events_url": "https://api.github.com/users/ltilve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ltilve/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-05-22T19:27:13Z",
        "updated_at": "2018-05-22T19:27:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "There is a commented block at `TabHelper::Discard()` implementation that was not working after the update to `6.0.x+66.0.3359.170`. It needs to be properly integrated into the current `C67` branch."
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/598",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/598/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/598/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/598/events",
        "html_url": "https://github.com/brave/muon/issues/598",
        "id": 324439376,
        "node_id": "MDU6SXNzdWUzMjQ0MzkzNzY=",
        "number": 598,
        "title": "C67: use system python for update-external-binaries.py",
        "user": {
            "login": "ltilve",
            "id": 2891281,
            "node_id": "MDQ6VXNlcjI4OTEyODE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2891281?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ltilve",
            "html_url": "https://github.com/ltilve",
            "followers_url": "https://api.github.com/users/ltilve/followers",
            "following_url": "https://api.github.com/users/ltilve/following{/other_user}",
            "gists_url": "https://api.github.com/users/ltilve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ltilve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ltilve/subscriptions",
            "organizations_url": "https://api.github.com/users/ltilve/orgs",
            "repos_url": "https://api.github.com/users/ltilve/repos",
            "events_url": "https://api.github.com/users/ltilve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ltilve/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-05-18T14:44:24Z",
        "updated_at": "2018-05-28T20:01:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "We are hitting a SSL problem while running `npm run init` just on our Windows envs at https://git.igalia.com/chromium/muon/src/master/script/update-external-binaries.py#L61\r\n\r\n```\r\n  File \"src/electron/script/update-external-binaries.py\", line 66, in <module>\r\n  File \"src/electron/script/update-external-binaries.py\", line 32, in main\r\n  File \"src/electron/script/update-external-binaries.py\", line 50, in download_and_unzip\r\n  File \"src/electron/script/update-external-binaries.py\", line 61, in download_framework\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\electron\\script\\lib\\util.py\", line 81, in download\r\n    web_file = urllib2.urlopen(url)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 127, in urlopen\r\n    return _opener.open(url, data, timeout)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 410, in open\r\n    response = meth(req, response)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 523, in http_response\r\n    'http', request, response, code, msg, hdrs)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 442, in error\r\n    result = self._call_chain(*args)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 382, in _call_chain\r\n    result = func(*args)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 629, in http_error_302\r\n    return self.parent.open(new, timeout=req.timeout)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 404, in open\r\n    response = self._open(req, data)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 422, in _open\r\n    '_open', req)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 382, in _call_chain\r\n    result = func(*args)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 1222, in https_open\r\n    return self.do_open(httplib.HTTPSConnection, req)\r\n  File \"c:\\buildbot\\bbot-master\\chromium_brave_win64\\build\\src\\third_party\\depot_tools\\win_tools-2_7_6_bin\\python\\bin\\lib\\urllib2.py\", line 1184, in do_open\r\n    raise URLError(err)\r\nurllib2.URLError: <urlopen error [Errno 1] _ssl.c:507: error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version>\r\n```\r\nWe are workarounding it for now setting for those build rules `npm run init || ( python src/electron/script/update-external-binaries.py && npm run init)` but if it might be interesting to force the usage of the system phyton on every case."
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/585",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/585/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/585/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/585/events",
        "html_url": "https://github.com/brave/muon/pull/585",
        "id": 319730952,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTg1NTc1NTkz",
        "number": 585,
        "title": "Fix base/debug/debugging_buildflags.h not found in install_verification",
        "user": {
            "login": "darkdh",
            "id": 11330831,
            "node_id": "MDQ6VXNlcjExMzMwODMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11330831?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darkdh",
            "html_url": "https://github.com/darkdh",
            "followers_url": "https://api.github.com/users/darkdh/followers",
            "following_url": "https://api.github.com/users/darkdh/following{/other_user}",
            "gists_url": "https://api.github.com/users/darkdh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/darkdh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/darkdh/subscriptions",
            "organizations_url": "https://api.github.com/users/darkdh/orgs",
            "repos_url": "https://api.github.com/users/darkdh/repos",
            "events_url": "https://api.github.com/users/darkdh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/darkdh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": {
            "login": "darkdh",
            "id": 11330831,
            "node_id": "MDQ6VXNlcjExMzMwODMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11330831?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darkdh",
            "html_url": "https://github.com/darkdh",
            "followers_url": "https://api.github.com/users/darkdh/followers",
            "following_url": "https://api.github.com/users/darkdh/following{/other_user}",
            "gists_url": "https://api.github.com/users/darkdh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/darkdh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/darkdh/subscriptions",
            "organizations_url": "https://api.github.com/users/darkdh/orgs",
            "repos_url": "https://api.github.com/users/darkdh/repos",
            "events_url": "https://api.github.com/users/darkdh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/darkdh/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "darkdh",
                "id": 11330831,
                "node_id": "MDQ6VXNlcjExMzMwODMx",
                "avatar_url": "https://avatars0.githubusercontent.com/u/11330831?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/darkdh",
                "html_url": "https://github.com/darkdh",
                "followers_url": "https://api.github.com/users/darkdh/followers",
                "following_url": "https://api.github.com/users/darkdh/following{/other_user}",
                "gists_url": "https://api.github.com/users/darkdh/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/darkdh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/darkdh/subscriptions",
                "organizations_url": "https://api.github.com/users/darkdh/orgs",
                "repos_url": "https://api.github.com/users/darkdh/repos",
                "events_url": "https://api.github.com/users/darkdh/events{/privacy}",
                "received_events_url": "https://api.github.com/users/darkdh/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-05-02T22:16:05Z",
        "updated_at": "2018-08-02T23:32:47Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/brave/muon/pulls/585",
            "html_url": "https://github.com/brave/muon/pull/585",
            "diff_url": "https://github.com/brave/muon/pull/585.diff",
            "patch_url": "https://github.com/brave/muon/pull/585.patch"
        },
        "body": "Auditor: @bridiver"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/580",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/580/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/580/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/580/events",
        "html_url": "https://github.com/brave/muon/issues/580",
        "id": 318128409,
        "node_id": "MDU6SXNzdWUzMTgxMjg0MDk=",
        "number": 580,
        "title": "Unknown Extension API - i18n.getAcceptLanguages",
        "user": {
            "login": "icaroharry",
            "id": 6475893,
            "node_id": "MDQ6VXNlcjY0NzU4OTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6475893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/icaroharry",
            "html_url": "https://github.com/icaroharry",
            "followers_url": "https://api.github.com/users/icaroharry/followers",
            "following_url": "https://api.github.com/users/icaroharry/following{/other_user}",
            "gists_url": "https://api.github.com/users/icaroharry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/icaroharry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/icaroharry/subscriptions",
            "organizations_url": "https://api.github.com/users/icaroharry/orgs",
            "repos_url": "https://api.github.com/users/icaroharry/repos",
            "events_url": "https://api.github.com/users/icaroharry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/icaroharry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-04-26T17:34:36Z",
        "updated_at": "2018-04-26T17:34:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "* Electron version: `\"electron-prebuilt\": \"github:brave/electron-prebuilt\"`\r\n\r\nI have a [Muon app](https://github.com/SwapyNetwork/electron-metamask-boilerplate) that integrates with MetaMask extension, but the last update on MetaMask that added internationalization support broke my app.\r\n\r\nI know that Brave has support to MetaMask, any ideas on how it's being done? \r\n\r\nThanks!"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/576",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/576/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/576/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/576/events",
        "html_url": "https://github.com/brave/muon/issues/576",
        "id": 316433053,
        "node_id": "MDU6SXNzdWUzMTY0MzMwNTM=",
        "number": 576,
        "title": "enableDeviceEmulation",
        "user": {
            "login": "plexnum",
            "id": 4996254,
            "node_id": "MDQ6VXNlcjQ5OTYyNTQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4996254?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plexnum",
            "html_url": "https://github.com/plexnum",
            "followers_url": "https://api.github.com/users/plexnum/followers",
            "following_url": "https://api.github.com/users/plexnum/following{/other_user}",
            "gists_url": "https://api.github.com/users/plexnum/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/plexnum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/plexnum/subscriptions",
            "organizations_url": "https://api.github.com/users/plexnum/orgs",
            "repos_url": "https://api.github.com/users/plexnum/repos",
            "events_url": "https://api.github.com/users/plexnum/events{/privacy}",
            "received_events_url": "https://api.github.com/users/plexnum/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-04-20T22:50:18Z",
        "updated_at": "2018-04-20T22:50:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "TypeError: win.webContents.enableDeviceEmulation is not a function. Where is device emulation function?"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/564",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/564/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/564/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/564/events",
        "html_url": "https://github.com/brave/muon/issues/564",
        "id": 312282057,
        "node_id": "MDU6SXNzdWUzMTIyODIwNTc=",
        "number": 564,
        "title": "build with proprietary codecs",
        "user": {
            "login": "hubuga",
            "id": 36698363,
            "node_id": "MDQ6VXNlcjM2Njk4MzYz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/36698363?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hubuga",
            "html_url": "https://github.com/hubuga",
            "followers_url": "https://api.github.com/users/hubuga/followers",
            "following_url": "https://api.github.com/users/hubuga/following{/other_user}",
            "gists_url": "https://api.github.com/users/hubuga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hubuga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hubuga/subscriptions",
            "organizations_url": "https://api.github.com/users/hubuga/orgs",
            "repos_url": "https://api.github.com/users/hubuga/repos",
            "events_url": "https://api.github.com/users/hubuga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hubuga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-04-08T07:44:50Z",
        "updated_at": "2018-04-08T07:44:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I was wondering if it's possible to compile with proprietary codecs. I wanted to reproduce a HEVC video. If yes, how? Thank you very much."
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/555",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/555/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/555/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/555/events",
        "html_url": "https://github.com/brave/muon/issues/555",
        "id": 310180682,
        "node_id": "MDU6SXNzdWUzMTAxODA2ODI=",
        "number": 555,
        "title": "SOCKS5 authentication broke Windows build",
        "user": {
            "login": "riastradh-brave",
            "id": 34034191,
            "node_id": "MDQ6VXNlcjM0MDM0MTkx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/34034191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/riastradh-brave",
            "html_url": "https://github.com/riastradh-brave",
            "followers_url": "https://api.github.com/users/riastradh-brave/followers",
            "following_url": "https://api.github.com/users/riastradh-brave/following{/other_user}",
            "gists_url": "https://api.github.com/users/riastradh-brave/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/riastradh-brave/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/riastradh-brave/subscriptions",
            "organizations_url": "https://api.github.com/users/riastradh-brave/orgs",
            "repos_url": "https://api.github.com/users/riastradh-brave/repos",
            "events_url": "https://api.github.com/users/riastradh-brave/events{/privacy}",
            "received_events_url": "https://api.github.com/users/riastradh-brave/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-03-30T22:12:06Z",
        "updated_at": "2018-03-30T22:12:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "@darkdh reports that merging https://github.com/brave/muon/pull/470 caused the attached output in the Windows build of muon.\r\n\r\nPresumably v8_context_generator depends on //net somewhere, and the BUILD.gn for //net in src/net doesn't have the new host_port_pair_auth.cc &c. files which live under src/electron/chromium_src and which I added in src/electron/chromium_src/BUILD.gn.  Exactly which gn file should be updated to fix this is not immediately clear to me.\r\n\r\n[windows-fail.txt](https://github.com/brave/muon/files/1864881/windows-fail.txt)\r\n"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/554",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/554/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/554/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/554/events",
        "html_url": "https://github.com/brave/muon/issues/554",
        "id": 309863078,
        "node_id": "MDU6SXNzdWUzMDk4NjMwNzg=",
        "number": 554,
        "title": "Question: what's the future of Muon with the upcoming move to Chromium frontend?",
        "user": {
            "login": "maxart",
            "id": 34616,
            "node_id": "MDQ6VXNlcjM0NjE2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/34616?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maxart",
            "html_url": "https://github.com/maxart",
            "followers_url": "https://api.github.com/users/maxart/followers",
            "following_url": "https://api.github.com/users/maxart/following{/other_user}",
            "gists_url": "https://api.github.com/users/maxart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maxart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maxart/subscriptions",
            "organizations_url": "https://api.github.com/users/maxart/orgs",
            "repos_url": "https://api.github.com/users/maxart/repos",
            "events_url": "https://api.github.com/users/maxart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maxart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 293055616,
                "node_id": "MDU6TGFiZWwyOTMwNTU2MTY=",
                "url": "https://api.github.com/repos/brave/muon/labels/question",
                "name": "question",
                "color": "cc317c",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2018-03-29T18:46:00Z",
        "updated_at": "2018-11-10T20:17:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Following the 1.0 announcement ( https://brave.com/development-plans-for-upcoming-release/ ) what can the community expect regarding development of Muon in the future?"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/543",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/543/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/543/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/543/events",
        "html_url": "https://github.com/brave/muon/issues/543",
        "id": 307739351,
        "node_id": "MDU6SXNzdWUzMDc3MzkzNTE=",
        "number": 543,
        "title": "Missing deps on C65",
        "user": {
            "login": "jumde",
            "id": 1903815,
            "node_id": "MDQ6VXNlcjE5MDM4MTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1903815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jumde",
            "html_url": "https://github.com/jumde",
            "followers_url": "https://api.github.com/users/jumde/followers",
            "following_url": "https://api.github.com/users/jumde/following{/other_user}",
            "gists_url": "https://api.github.com/users/jumde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jumde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jumde/subscriptions",
            "organizations_url": "https://api.github.com/users/jumde/orgs",
            "repos_url": "https://api.github.com/users/jumde/repos",
            "events_url": "https://api.github.com/users/jumde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jumde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 293055611,
                "node_id": "MDU6TGFiZWwyOTMwNTU2MTE=",
                "url": "https://api.github.com/repos/brave/muon/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-03-22T17:19:57Z",
        "updated_at": "2018-03-22T17:21:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "```\r\nUndefined symbols for architecture x86_64:\r\n  \"PermissionRequest::PermissionRequest()\", referenced from:\r\n      (anonymous namespace)::AttestationPermissionRequest::AttestationPermissionRequest(GURL const&, base::OnceCallback<void (bool)>) in cryptotoken_private_api.o\r\n  \"TrustedSourcesManager::Create()\", referenced from:\r\n      DownloadPrefs::IsFromTrustedSource(content::DownloadItem const&) in download_prefs.o\r\n  \"PermissionRequestManager::AddRequest(PermissionRequest*)\", referenced from:\r\n      extensions::api::CryptotokenPrivateCanAppIdGetAttestationFunction::Run() in cryptotoken_private_api.o\r\n  \"content::WebContentsUserData<PermissionRequestManager>::kLocatorKey\", referenced from:\r\n      content::WebContentsUserData<PermissionRequestManager>::UserDataKey() in cryptotoken_private_api.o\r\n  \"PermissionRequest::GetGestureType() const\", referenced from:\r\n      vtable for (anonymous namespace)::AttestationPermissionRequest in cryptotoken_private_api.o\r\n  \"PermissionRequest::GetContentSettingsType() const\", referenced from:\r\n      vtable for (anonymous namespace)::AttestationPermissionRequest in cryptotoken_private_api.o\r\n```"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/539",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/539/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/539/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/539/events",
        "html_url": "https://github.com/brave/muon/issues/539",
        "id": 305680515,
        "node_id": "MDU6SXNzdWUzMDU2ODA1MTU=",
        "number": 539,
        "title": "Fix importing favicons from Chrome",
        "user": {
            "login": "garrettr",
            "id": 407302,
            "node_id": "MDQ6VXNlcjQwNzMwMg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/407302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garrettr",
            "html_url": "https://github.com/garrettr",
            "followers_url": "https://api.github.com/users/garrettr/followers",
            "following_url": "https://api.github.com/users/garrettr/following{/other_user}",
            "gists_url": "https://api.github.com/users/garrettr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garrettr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garrettr/subscriptions",
            "organizations_url": "https://api.github.com/users/garrettr/orgs",
            "repos_url": "https://api.github.com/users/garrettr/repos",
            "events_url": "https://api.github.com/users/garrettr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garrettr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-03-15T18:59:43Z",
        "updated_at": "2018-03-15T18:59:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "The Chrome Importer fails to import many favicons, because it only attempts to import favicons from  [`data:`](https://github.com/brave/muon/blob/a43303869aead146332e080518ed45df7f0de62d/brave/utility/importer/chrome_importer.cc#L226) URL's. A more reliable way to import favicons from Chrome is to extract the PNG blobs from the `image_data` column of the `favicon_bitmaps` table in the `Favicons` sqlite db."
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/528",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/528/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/528/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/528/events",
        "html_url": "https://github.com/brave/muon/issues/528",
        "id": 304598654,
        "node_id": "MDU6SXNzdWUzMDQ1OTg2NTQ=",
        "number": 528,
        "title": "Question: What GN flags uses muon binaries",
        "user": {
            "login": "HotelBellaMuerte",
            "id": 33168871,
            "node_id": "MDQ6VXNlcjMzMTY4ODcx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/33168871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HotelBellaMuerte",
            "html_url": "https://github.com/HotelBellaMuerte",
            "followers_url": "https://api.github.com/users/HotelBellaMuerte/followers",
            "following_url": "https://api.github.com/users/HotelBellaMuerte/following{/other_user}",
            "gists_url": "https://api.github.com/users/HotelBellaMuerte/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HotelBellaMuerte/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HotelBellaMuerte/subscriptions",
            "organizations_url": "https://api.github.com/users/HotelBellaMuerte/orgs",
            "repos_url": "https://api.github.com/users/HotelBellaMuerte/repos",
            "events_url": "https://api.github.com/users/HotelBellaMuerte/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HotelBellaMuerte/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-03-13T01:42:23Z",
        "updated_at": "2018-03-13T01:42:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "When i open brave browser i got many   lines  asking orphan files (but brave *works* ) \r\n\r\n```\r\n[6:12:0312/213244.732731:ERROR:address_tracker_linux.cc(174)] Could not bind NETLINK socket: La direcci\u00f3n ya se est\u00e1 usando (98)\r\n[35:35:0312/213245.867068:ERROR:gl_implementation.cc(292)] Failed to load /usr/lib/brave-snapshot-bin/swiftshader/libGLESv2.so: /usr/lib/brave-snapshot-bin/swiftshader/libGLESv2.so: no se puede abrir el fichero del objeto compartido: No existe el fichero o el directorio\r\n[35:35:0312/213246.089475:ERROR:viz_main_impl.cc(196)] Exiting GPU process due to errors during initialization\r\n[44:44:0312/213246.167955:ERROR:gl_implementation.cc(292)] Failed to load /usr/lib/brave-snapshot-bin/swiftshader/libGLESv2.so: /usr/lib/brave-snapshot-bin/swiftshader/libGLESv2.so: no se puede abrir el fichero del objeto compartido: No existe el fichero o el directorio\r\n[44:44:0312/213246.183112:ERROR:viz_main_impl.cc(196)] Exiting GPU process due to errors during initialization\r\n[53:53:0312/213246.249441:ERROR:gl_implementation.cc(292)] Failed to load /usr/lib/brave-snapshot-bin/swiftshader/libGLESv2.so: /usr/lib/brave-snapshot-bin/swiftshader/libGLESv2.so: no se puede abrir el fichero del objeto compartido: No existe el fichero o el directorio\r\n[53:53:0312/213246.268097:ERROR:viz_main_impl.cc(196)] Exiting GPU process due to errors during initialization\r\n[61:61:0312/213246.353527:ERROR:gl_implementation.cc(292)] Failed to load /usr/lib/brave-snapshot-bin/swiftshader/libGLESv2.so: /usr/lib/brave-snapshot-bin/swiftshader/libGLESv2.so: no se puede abrir el fichero del objeto compartido: No existe el fichero o el directorio\r\n[61:61:0312/213246.366071:ERROR:viz_main_impl.cc(196)] Exiting GPU process due to errors during initialization\r\n[6:29:0312/213246.386339:ERROR:browser_gpu_channel_host_factory.cc(121)] Failed to launch GPU process.\r\nCrash reporting disabled\r\n[6:29:0312/213250.359843:ERROR:browser_gpu_channel_host_factory.cc(121)] Failed to launch GPU process.\r\n[6:6:0312/213250.383732:ERROR:gpu_process_transport_factory.cc(1009)] Lost UI shared context.\r\n[6:6:0312/213253.625680:ERROR:CONSOLE(1)] \"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\", source: chrome://brave/usr/lib/brave-snapshot-bin/resources/app.asar/app/extensions/brave/gen/app.entry.js (1)\r\n[6:6:0312/213253.625744:ERROR:CONSOLE(1)] \"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\", source: chrome://brave/usr/lib/brave-snapshot-bin/resources/app.asar/app/extensions/brave/gen/app.entry.js (1)\r\nError retrieving promotion Error: HTTP response 404 for GET /v1/grants?lang=en-US\r\n\r\n```\r\n\r\n\r\n\r\nAt my chromium build  i got cleaner logs\r\n\r\n```\r\n`[6:16:0312/213710.137445:ERROR:address_tracker_linux.cc(175)] Could not bind NETLINK socket: La direcci\u00f3n ya se est\u00e1 usando (98)\r\n[46:46:0312/213711.679992:ERROR:sandbox_linux.cc(379)] InitializeSandbox() called with multiple threads in process gpu-process.\r\n`\r\n```\r\n\r\n\r\nWhat GN flags + Systen libs has muon (as brave) ?\r\n\r\ni use this\r\n\r\nSystem libs\r\n\r\n```\r\n  #[ffmpeg]=ffmpeg           # https://crbug.com/731766\r\n  [flac]=flac\r\n  #[freetype]=freetype2      # https://crbug.com/pdfium/733\r\n  #[harfbuzz-ng]=harfbuzz-icu\r\n  #[icu]=icu\r\n  [libdrm]=\r\n  [libjpeg]=libjpeg\r\n  #[libpng]=libpng           # https://crbug.com/752403#c10\r\n  #[libvpx]=libvpx           # https://bugs.gentoo.org/611394\r\n  [libwebp]=libwebp\r\n  [libxml]=libxml2\r\n  [libxslt]=libxslt\r\n  [opus]=opus\r\n  [re2]=re2\r\n  [snappy]=snappy\r\n  [yasm]=\r\n  #[zlib]=minizip\r\n\r\n```\r\nGN FLAGS\r\n\r\n```\r\n\r\n    'symbol_level=0'\r\n    'is_debug=false'\r\n    'fatal_linker_warnings=false'\r\n    'treat_warnings_as_errors=false'\r\n    'fieldtrial_testing_like_official_build=true'\r\n    'remove_webcore_debug_symbols=true'\r\n    'ffmpeg_branding=\"Chrome\"'\r\n    'proprietary_codecs=true'\r\n    'link_pulseaudio=true'\r\n    'use_gnome_keyring=false'\r\n    'use_gold=false'\r\n    'use_sysroot=false'\r\n    'linux_use_bundled_binutils=false'\r\n    'use_custom_libcxx=false'\r\n    'use_system_libjpeg=true'\r\n    'use_vaapi=false'\r\n    'enable_hangout_services_extension=false'\r\n    'enable_widevine=false'\r\n    'enable_webrtc=true'\r\n    'enable_nacl=false'\r\n    'enable_swiftshader=false'\r\n    'enable_nacl_nonsfi=false'\r\n    'enable_google_now=false'\r\n    'enable_print_preview=true'\r\n    'enable_remoting=false'\r\n    'use_lld=false'\r\n```"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/521",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/521/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/521/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/521/events",
        "html_url": "https://github.com/brave/muon/issues/521",
        "id": 302889571,
        "node_id": "MDU6SXNzdWUzMDI4ODk1NzE=",
        "number": 521,
        "title": "Audit all protocols for leaks in Tor mode and block them or redirect them through Tor",
        "user": {
            "login": "riastradh-brave",
            "id": 34034191,
            "node_id": "MDQ6VXNlcjM0MDM0MTkx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/34034191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/riastradh-brave",
            "html_url": "https://github.com/riastradh-brave",
            "followers_url": "https://api.github.com/users/riastradh-brave/followers",
            "following_url": "https://api.github.com/users/riastradh-brave/following{/other_user}",
            "gists_url": "https://api.github.com/users/riastradh-brave/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/riastradh-brave/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/riastradh-brave/subscriptions",
            "organizations_url": "https://api.github.com/users/riastradh-brave/orgs",
            "repos_url": "https://api.github.com/users/riastradh-brave/repos",
            "events_url": "https://api.github.com/users/riastradh-brave/events{/privacy}",
            "received_events_url": "https://api.github.com/users/riastradh-brave/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 821598356,
                "node_id": "MDU6TGFiZWw4MjE1OTgzNTY=",
                "url": "https://api.github.com/repos/brave/muon/labels/feature/tor",
                "name": "feature/tor",
                "color": "7512bc",
                "default": false,
                "description": null
            },
            {
                "id": 914299120,
                "node_id": "MDU6TGFiZWw5MTQyOTkxMjA=",
                "url": "https://api.github.com/repos/brave/muon/labels/tor/leakproofing",
                "name": "tor/leakproofing",
                "color": "c592ef",
                "default": false,
                "description": "Plugging leaks of user-identifying information like IP address that Tor mode should conceal"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-03-06T22:18:34Z",
        "updated_at": "2018-04-26T02:54:23Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "- [ ] FTP\r\n- [x] WebRTC: tracked in https://github.com/brave/browser-laptop/issues/13397\r\n- [ ] SPDY/QUIC\r\n- [ ] ..."
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/520",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/520/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/520/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/520/events",
        "html_url": "https://github.com/brave/muon/issues/520",
        "id": 302887507,
        "node_id": "MDU6SXNzdWUzMDI4ODc1MDc=",
        "number": 520,
        "title": "certificate fetches should use Tor or be disabled in Tor mode",
        "user": {
            "login": "diracdeltas",
            "id": 549654,
            "node_id": "MDQ6VXNlcjU0OTY1NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/549654?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diracdeltas",
            "html_url": "https://github.com/diracdeltas",
            "followers_url": "https://api.github.com/users/diracdeltas/followers",
            "following_url": "https://api.github.com/users/diracdeltas/following{/other_user}",
            "gists_url": "https://api.github.com/users/diracdeltas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diracdeltas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diracdeltas/subscriptions",
            "organizations_url": "https://api.github.com/users/diracdeltas/orgs",
            "repos_url": "https://api.github.com/users/diracdeltas/repos",
            "events_url": "https://api.github.com/users/diracdeltas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diracdeltas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 821598356,
                "node_id": "MDU6TGFiZWw4MjE1OTgzNTY=",
                "url": "https://api.github.com/repos/brave/muon/labels/feature/tor",
                "name": "feature/tor",
                "color": "7512bc",
                "default": false,
                "description": null
            },
            {
                "id": 914299120,
                "node_id": "MDU6TGFiZWw5MTQyOTkxMjA=",
                "url": "https://api.github.com/repos/brave/muon/labels/tor/leakproofing",
                "name": "tor/leakproofing",
                "color": "c592ef",
                "default": false,
                "description": "Plugging leaks of user-identifying information like IP address that Tor mode should conceal"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-03-06T22:11:37Z",
        "updated_at": "2018-04-26T02:54:15Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "related: https://bugs.chromium.org/p/chromium/issues/detail?id=80722\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/519",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/519/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/519/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/519/events",
        "html_url": "https://github.com/brave/muon/issues/519",
        "id": 302886832,
        "node_id": "MDU6SXNzdWUzMDI4ODY4MzI=",
        "number": 519,
        "title": "audit for DNS leaks in Tor mode",
        "user": {
            "login": "diracdeltas",
            "id": 549654,
            "node_id": "MDQ6VXNlcjU0OTY1NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/549654?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diracdeltas",
            "html_url": "https://github.com/diracdeltas",
            "followers_url": "https://api.github.com/users/diracdeltas/followers",
            "following_url": "https://api.github.com/users/diracdeltas/following{/other_user}",
            "gists_url": "https://api.github.com/users/diracdeltas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diracdeltas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diracdeltas/subscriptions",
            "organizations_url": "https://api.github.com/users/diracdeltas/orgs",
            "repos_url": "https://api.github.com/users/diracdeltas/repos",
            "events_url": "https://api.github.com/users/diracdeltas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diracdeltas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 821598356,
                "node_id": "MDU6TGFiZWw4MjE1OTgzNTY=",
                "url": "https://api.github.com/repos/brave/muon/labels/feature/tor",
                "name": "feature/tor",
                "color": "7512bc",
                "default": false,
                "description": null
            },
            {
                "id": 914299120,
                "node_id": "MDU6TGFiZWw5MTQyOTkxMjA=",
                "url": "https://api.github.com/repos/brave/muon/labels/tor/leakproofing",
                "name": "tor/leakproofing",
                "color": "c592ef",
                "default": false,
                "description": "Plugging leaks of user-identifying information like IP address that Tor mode should conceal"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": {
            "login": "riastradh-brave",
            "id": 34034191,
            "node_id": "MDQ6VXNlcjM0MDM0MTkx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/34034191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/riastradh-brave",
            "html_url": "https://github.com/riastradh-brave",
            "followers_url": "https://api.github.com/users/riastradh-brave/followers",
            "following_url": "https://api.github.com/users/riastradh-brave/following{/other_user}",
            "gists_url": "https://api.github.com/users/riastradh-brave/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/riastradh-brave/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/riastradh-brave/subscriptions",
            "organizations_url": "https://api.github.com/users/riastradh-brave/orgs",
            "repos_url": "https://api.github.com/users/riastradh-brave/repos",
            "events_url": "https://api.github.com/users/riastradh-brave/events{/privacy}",
            "received_events_url": "https://api.github.com/users/riastradh-brave/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "riastradh-brave",
                "id": 34034191,
                "node_id": "MDQ6VXNlcjM0MDM0MTkx",
                "avatar_url": "https://avatars1.githubusercontent.com/u/34034191?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/riastradh-brave",
                "html_url": "https://github.com/riastradh-brave",
                "followers_url": "https://api.github.com/users/riastradh-brave/followers",
                "following_url": "https://api.github.com/users/riastradh-brave/following{/other_user}",
                "gists_url": "https://api.github.com/users/riastradh-brave/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/riastradh-brave/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/riastradh-brave/subscriptions",
                "organizations_url": "https://api.github.com/users/riastradh-brave/orgs",
                "repos_url": "https://api.github.com/users/riastradh-brave/repos",
                "events_url": "https://api.github.com/users/riastradh-brave/events{/privacy}",
                "received_events_url": "https://api.github.com/users/riastradh-brave/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-03-06T22:09:25Z",
        "updated_at": "2018-04-26T02:54:32Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "related: https://bugs.chromium.org/p/chromium/issues/detail?id=123716, possibly #164 "
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/518",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/518/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/518/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/518/events",
        "html_url": "https://github.com/brave/muon/issues/518",
        "id": 302872164,
        "node_id": "MDU6SXNzdWUzMDI4NzIxNjQ=",
        "number": 518,
        "title": "Browser process's system request context should be handled differently under Tor",
        "user": {
            "login": "riastradh-brave",
            "id": 34034191,
            "node_id": "MDQ6VXNlcjM0MDM0MTkx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/34034191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/riastradh-brave",
            "html_url": "https://github.com/riastradh-brave",
            "followers_url": "https://api.github.com/users/riastradh-brave/followers",
            "following_url": "https://api.github.com/users/riastradh-brave/following{/other_user}",
            "gists_url": "https://api.github.com/users/riastradh-brave/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/riastradh-brave/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/riastradh-brave/subscriptions",
            "organizations_url": "https://api.github.com/users/riastradh-brave/orgs",
            "repos_url": "https://api.github.com/users/riastradh-brave/repos",
            "events_url": "https://api.github.com/users/riastradh-brave/events{/privacy}",
            "received_events_url": "https://api.github.com/users/riastradh-brave/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 821598356,
                "node_id": "MDU6TGFiZWw4MjE1OTgzNTY=",
                "url": "https://api.github.com/repos/brave/muon/labels/feature/tor",
                "name": "feature/tor",
                "color": "7512bc",
                "default": false,
                "description": null
            },
            {
                "id": 914299120,
                "node_id": "MDU6TGFiZWw5MTQyOTkxMjA=",
                "url": "https://api.github.com/repos/brave/muon/labels/tor/leakproofing",
                "name": "tor/leakproofing",
                "color": "c592ef",
                "default": false,
                "description": "Plugging leaks of user-identifying information like IP address that Tor mode should conceal"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-03-06T21:26:40Z",
        "updated_at": "2018-04-26T02:54:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "BrowserProcessImpl's system_request_context -- used for, among other things, remote geoip lookups for location services -- should generally not be used under Tor.\r\n\r\n- [ ] enumerate what it's used for\r\n- [ ] block anything that leaks that is not useful through Tor (e.g., not worthwhile to do a geoip lookup from what's-my-ip-address? to learn where the Tor exits are located)\r\n- [ ] redirect what's left through Tor if appropriate"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/517",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/517/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/517/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/517/events",
        "html_url": "https://github.com/brave/muon/issues/517",
        "id": 302866790,
        "node_id": "MDU6SXNzdWUzMDI4NjY3OTA=",
        "number": 517,
        "title": "Send requests for .onion domains through Tor even in non-private browsing",
        "user": {
            "login": "riastradh-brave",
            "id": 34034191,
            "node_id": "MDQ6VXNlcjM0MDM0MTkx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/34034191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/riastradh-brave",
            "html_url": "https://github.com/riastradh-brave",
            "followers_url": "https://api.github.com/users/riastradh-brave/followers",
            "following_url": "https://api.github.com/users/riastradh-brave/following{/other_user}",
            "gists_url": "https://api.github.com/users/riastradh-brave/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/riastradh-brave/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/riastradh-brave/subscriptions",
            "organizations_url": "https://api.github.com/users/riastradh-brave/orgs",
            "repos_url": "https://api.github.com/users/riastradh-brave/repos",
            "events_url": "https://api.github.com/users/riastradh-brave/events{/privacy}",
            "received_events_url": "https://api.github.com/users/riastradh-brave/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 821598356,
                "node_id": "MDU6TGFiZWw4MjE1OTgzNTY=",
                "url": "https://api.github.com/repos/brave/muon/labels/feature/tor",
                "name": "feature/tor",
                "color": "7512bc",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-03-06T21:09:35Z",
        "updated_at": "2018-05-04T23:44:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "When a user types a .onion domain into the URL bar, the request should be sent through Tor even if not in a private browsing tab, so that onion services just work out of the box.\r\n\r\nIf/when we add I2P support too, the same mechanism can presumably be used for .i2p domains."
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/516",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/516/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/516/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/516/events",
        "html_url": "https://github.com/brave/muon/issues/516",
        "id": 302130050,
        "node_id": "MDU6SXNzdWUzMDIxMzAwNTA=",
        "number": 516,
        "title": "muon would quit if 'userData' path is not exist",
        "user": {
            "login": "miaulightouch",
            "id": 5199594,
            "node_id": "MDQ6VXNlcjUxOTk1OTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5199594?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/miaulightouch",
            "html_url": "https://github.com/miaulightouch",
            "followers_url": "https://api.github.com/users/miaulightouch/followers",
            "following_url": "https://api.github.com/users/miaulightouch/following{/other_user}",
            "gists_url": "https://api.github.com/users/miaulightouch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/miaulightouch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/miaulightouch/subscriptions",
            "organizations_url": "https://api.github.com/users/miaulightouch/orgs",
            "repos_url": "https://api.github.com/users/miaulightouch/repos",
            "events_url": "https://api.github.com/users/miaulightouch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/miaulightouch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-03-04T22:39:29Z",
        "updated_at": "2018-03-04T22:39:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "* muon version: 5.0.6\r\n* Operating system: Windows 10\r\n\r\n```javascript\r\n// set userData path manually, muon is not using package name as path to save user data.\r\nconst userDataPath = path.join(\r\n  app.getPath('userData'),\r\n  isDev ? '.' : `../${productName}`)\r\n\r\n// set path\r\napp.setPath('userData', userDataPath)\r\n```\r\n\r\nmuon would be closed by itself if the path is not exist. even muon created the folder.\r\n\r\nI must add these code before set path\r\n\r\n```javascript\r\n// create folder manually, muon won't create this properly.\r\nfs.existsSync(userDataPath) || fs.mkdirSync(userDataPath)\r\n```"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/515",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/515/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/515/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/515/events",
        "html_url": "https://github.com/brave/muon/issues/515",
        "id": 301271128,
        "node_id": "MDU6SXNzdWUzMDEyNzExMjg=",
        "number": 515,
        "title": "<webview> / GuestView receives duplicate events for guest on re-attachment",
        "user": {
            "login": "petemill",
            "id": 741836,
            "node_id": "MDQ6VXNlcjc0MTgzNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/741836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petemill",
            "html_url": "https://github.com/petemill",
            "followers_url": "https://api.github.com/users/petemill/followers",
            "following_url": "https://api.github.com/users/petemill/following{/other_user}",
            "gists_url": "https://api.github.com/users/petemill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petemill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petemill/subscriptions",
            "organizations_url": "https://api.github.com/users/petemill/orgs",
            "repos_url": "https://api.github.com/users/petemill/repos",
            "events_url": "https://api.github.com/users/petemill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petemill/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 684209831,
                "node_id": "MDU6TGFiZWw2ODQyMDk4MzE=",
                "url": "https://api.github.com/repos/brave/muon/labels/PR/work-in-progress%20%E2%9A%92",
                "name": "PR/work-in-progress \u2692",
                "color": "fbca04",
                "default": false,
                "description": null
            },
            {
                "id": 852144958,
                "node_id": "MDU6TGFiZWw4NTIxNDQ5NTg=",
                "url": "https://api.github.com/repos/brave/muon/labels/single-webview",
                "name": "single-webview",
                "color": "f7ca76",
                "default": false,
                "description": "Supporting the single-webview project"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": {
            "login": "petemill",
            "id": 741836,
            "node_id": "MDQ6VXNlcjc0MTgzNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/741836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petemill",
            "html_url": "https://github.com/petemill",
            "followers_url": "https://api.github.com/users/petemill/followers",
            "following_url": "https://api.github.com/users/petemill/following{/other_user}",
            "gists_url": "https://api.github.com/users/petemill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petemill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petemill/subscriptions",
            "organizations_url": "https://api.github.com/users/petemill/orgs",
            "repos_url": "https://api.github.com/users/petemill/repos",
            "events_url": "https://api.github.com/users/petemill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petemill/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "petemill",
                "id": 741836,
                "node_id": "MDQ6VXNlcjc0MTgzNg==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/741836?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/petemill",
                "html_url": "https://github.com/petemill",
                "followers_url": "https://api.github.com/users/petemill/followers",
                "following_url": "https://api.github.com/users/petemill/following{/other_user}",
                "gists_url": "https://api.github.com/users/petemill/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/petemill/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/petemill/subscriptions",
                "organizations_url": "https://api.github.com/users/petemill/orgs",
                "repos_url": "https://api.github.com/users/petemill/repos",
                "events_url": "https://api.github.com/users/petemill/events{/privacy}",
                "received_events_url": "https://api.github.com/users/petemill/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-03-01T04:06:44Z",
        "updated_at": "2018-03-02T20:48:16Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "### STR:\r\nAttach a guest to a window WebContents via a <webview>. (`<webview>.attachGuest(x)`)\r\nDetach (`<webview>.detachGuest()`)\r\nRepeat\r\nEvery event that is fired (e.g. 'update-target-url', 'load-start', 'guest-ready', 'will-destroy', etc) will fire as many times as the contents has been attached.\r\n\r\n### Cause\r\nThis is due to guest-view-manager.js attaching new listeners to those events every time a guest is attached to an embedder. Those listener handlers then fire IPC message to the window embedder, which forwards to the guest view (via guest-view-internal.js).\r\n\r\n### Fix\r\nPart of the single-webview2 branch, contained in 2fbabc61b64338c6b0549cf67c4a72030b977ab6\r\n"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/513",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/513/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/513/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/513/events",
        "html_url": "https://github.com/brave/muon/issues/513",
        "id": 301250959,
        "node_id": "MDU6SXNzdWUzMDEyNTA5NTk=",
        "number": 513,
        "title": "Opening tabs rapidly can cause crash window",
        "user": {
            "login": "petemill",
            "id": 741836,
            "node_id": "MDQ6VXNlcjc0MTgzNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/741836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petemill",
            "html_url": "https://github.com/petemill",
            "followers_url": "https://api.github.com/users/petemill/followers",
            "following_url": "https://api.github.com/users/petemill/following{/other_user}",
            "gists_url": "https://api.github.com/users/petemill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petemill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petemill/subscriptions",
            "organizations_url": "https://api.github.com/users/petemill/orgs",
            "repos_url": "https://api.github.com/users/petemill/repos",
            "events_url": "https://api.github.com/users/petemill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petemill/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 852144958,
                "node_id": "MDU6TGFiZWw4NTIxNDQ5NTg=",
                "url": "https://api.github.com/repos/brave/muon/labels/single-webview",
                "name": "single-webview",
                "color": "f7ca76",
                "default": false,
                "description": "Supporting the single-webview project"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": {
            "login": "bridiver",
            "id": 34129,
            "node_id": "MDQ6VXNlcjM0MTI5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/34129?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bridiver",
            "html_url": "https://github.com/bridiver",
            "followers_url": "https://api.github.com/users/bridiver/followers",
            "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
            "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
            "organizations_url": "https://api.github.com/users/bridiver/orgs",
            "repos_url": "https://api.github.com/users/bridiver/repos",
            "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bridiver/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "bridiver",
                "id": 34129,
                "node_id": "MDQ6VXNlcjM0MTI5",
                "avatar_url": "https://avatars3.githubusercontent.com/u/34129?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bridiver",
                "html_url": "https://github.com/bridiver",
                "followers_url": "https://api.github.com/users/bridiver/followers",
                "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
                "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
                "organizations_url": "https://api.github.com/users/bridiver/orgs",
                "repos_url": "https://api.github.com/users/bridiver/repos",
                "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bridiver/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-03-01T01:57:25Z",
        "updated_at": "2018-03-02T20:55:51Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "```\r\n[34135:775:0228/175446.551900:FATAL:guest_view_container.cc(158)] Check failed: pending_response_.get().\r\n0   Brave Framework                     0x00000001053a17fc base::debug::StackTrace::StackTrace(unsigned long) + 28\r\n1   Brave Framework                     0x00000001053b88c2 logging::LogMessage::~LogMessage() + 210\r\n2   Brave Framework                     0x00000001087ae678 guest_view::GuestViewContainer::OnHandleCallback(IPC::Message const&) + 152\r\n3   Brave Framework                     0x00000001087ae782 guest_view::GuestViewContainer::OnMessageReceived(IPC::Message const&) + 34\r\n4   Brave Framework                     0x00000001087af017 guest_view::GuestViewContainerDispatcher::OnControlMessageReceived(IPC::Message const&) + 87\r\n5   Brave Framework                     0x000000010861b541 content::RenderThreadImpl::OnControlMessageReceived(IPC::Message const&) + 177\r\n6   Brave Framework                     0x000000010545873b IPC::ChannelProxy::Context::OnDispatchMessage(IPC::Message const&) + 91\r\n7   Brave Framework                     0x00000001053a1fec base::debug::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 188\r\n8   Brave Framework                     0x000000010488ca72 blink::scheduler::TaskQueueManager::ProcessTaskFromWorkQueue(blink::scheduler::internal::WorkQueue*, bool, blink::scheduler::LazyNow, base::TimeTicks*) + 1346\r\n9   Brave Framework                     0x000000010488c132 blink::scheduler::TaskQueueManager::DoWork(blink::scheduler::internal::Sequence::WorkType) + 450\r\n10  Brave Framework                     0x00000001053a1fec base::debug::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 188\r\n11  Brave Framework                     0x000000010488fbf5 blink::scheduler::internal::ThreadControllerImpl::DoWork(blink::scheduler::internal::Sequence::WorkType) + 117\r\n12  Brave Framework                     0x00000001053a1fec base::debug::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 188\r\n13  Brave Framework                     0x00000001053c4f14 base::MessageLoop::RunTask(base::PendingTask*) + 484\r\n14  Brave Framework                     0x00000001053c5429 base::MessageLoop::DoWork() + 457\r\n15  Brave Framework                     0x00000001053c728a base::MessagePumpCFRunLoopBase::RunWork() + 42\r\n16  Brave Framework                     0x00000001053b983a base::mac::CallWithEHFrame(void () block_pointer) + 10\r\n17  Brave Framework                     0x00000001053c6baf base::MessagePumpCFRunLoopBase::RunWorkSource(void*) + 63\r\n18  CoreFoundation                      0x00007fff2fa4f271 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n19  CoreFoundation                      0x00007fff2fb08c6c __CFRunLoopDoSource0 + 108\r\n20  CoreFoundation                      0x00007fff2fa31db0 __CFRunLoopDoSources0 + 208\r\n21  CoreFoundation                      0x00007fff2fa3122d __CFRunLoopRun + 1293\r\n22  CoreFoundation                      0x00007fff2fa30a93 CFRunLoopRunSpecific + 483\r\n23  Foundation                          0x00007fff31bcd8d6 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277\r\n24  Brave Framework                     0x00000001053c78ee base::MessagePumpNSRunLoop::DoRun(base::MessagePump::Delegate*) + 126\r\n25  Brave Framework                     0x00000001053c66ce base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*) + 110\r\n26  Brave Framework                     0x00000001053e3694 base::RunLoop::Run() + 52\r\n27  Brave Framework                     0x0000000108648ce8 content::RendererMain(content::MainFunctionParams const&) + 712\r\n28  Brave Framework                     0x000000010539936f content::ContentMainRunnerImpl::Run() + 383\r\n29  Brave Framework                     0x00000001067d4bc8 service_manager::Main(service_manager::MainParams const&) + 2344\r\n30  Brave Framework                     0x00000001053988a4 content::ContentMain(content::ContentMainParams const&) + 68\r\n31  Brave Framework                     0x00000001039f5954 ChromeMain + 724\r\n32  Brave Helper                        0x00000001039d7dba main + 522\r\n33  libdyld.dylib                       0x00007fff57fc8015 start + 1\r\n34  ???                                 0x0000000000000017 0x0 + 23\r\n```"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/510",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/510/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/510/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/510/events",
        "html_url": "https://github.com/brave/muon/issues/510",
        "id": 300397742,
        "node_id": "MDU6SXNzdWUzMDAzOTc3NDI=",
        "number": 510,
        "title": "Removing <webview> from DOM destroys most-recently-attached WebContents",
        "user": {
            "login": "petemill",
            "id": 741836,
            "node_id": "MDQ6VXNlcjc0MTgzNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/741836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petemill",
            "html_url": "https://github.com/petemill",
            "followers_url": "https://api.github.com/users/petemill/followers",
            "following_url": "https://api.github.com/users/petemill/following{/other_user}",
            "gists_url": "https://api.github.com/users/petemill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petemill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petemill/subscriptions",
            "organizations_url": "https://api.github.com/users/petemill/orgs",
            "repos_url": "https://api.github.com/users/petemill/repos",
            "events_url": "https://api.github.com/users/petemill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petemill/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 684209831,
                "node_id": "MDU6TGFiZWw2ODQyMDk4MzE=",
                "url": "https://api.github.com/repos/brave/muon/labels/PR/work-in-progress%20%E2%9A%92",
                "name": "PR/work-in-progress \u2692",
                "color": "fbca04",
                "default": false,
                "description": null
            },
            {
                "id": 852144958,
                "node_id": "MDU6TGFiZWw4NTIxNDQ5NTg=",
                "url": "https://api.github.com/repos/brave/muon/labels/single-webview",
                "name": "single-webview",
                "color": "f7ca76",
                "default": false,
                "description": "Supporting the single-webview project"
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": {
            "login": "petemill",
            "id": 741836,
            "node_id": "MDQ6VXNlcjc0MTgzNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/741836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petemill",
            "html_url": "https://github.com/petemill",
            "followers_url": "https://api.github.com/users/petemill/followers",
            "following_url": "https://api.github.com/users/petemill/following{/other_user}",
            "gists_url": "https://api.github.com/users/petemill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petemill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petemill/subscriptions",
            "organizations_url": "https://api.github.com/users/petemill/orgs",
            "repos_url": "https://api.github.com/users/petemill/repos",
            "events_url": "https://api.github.com/users/petemill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petemill/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "petemill",
                "id": 741836,
                "node_id": "MDQ6VXNlcjc0MTgzNg==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/741836?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/petemill",
                "html_url": "https://github.com/petemill",
                "followers_url": "https://api.github.com/users/petemill/followers",
                "following_url": "https://api.github.com/users/petemill/following{/other_user}",
                "gists_url": "https://api.github.com/users/petemill/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/petemill/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/petemill/subscriptions",
                "organizations_url": "https://api.github.com/users/petemill/orgs",
                "repos_url": "https://api.github.com/users/petemill/repos",
                "events_url": "https://api.github.com/users/petemill/events{/privacy}",
                "received_events_url": "https://api.github.com/users/petemill/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-02-26T21:12:38Z",
        "updated_at": "2018-03-28T01:22:01Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "...even if the WebContents has been detached from the webview via `<webview>.detachGuest()`\r\n\r\nThis issue can be demonstrated through browser-laptop using the `--debug-tab-events` flag, and affects the single-webview2 branch, where once a webview is detached from a tab, the tab has no more attachments remaining. Perhaps there is some logic somewhere that looks to see if the WebContents is embedded anywhere currently, after its last embbeder gets removed, and destroys it if not.\r\n\r\n## STR:\r\n- Create 1 window with 2 tabs\r\n- Create the following function in the renderer window console:\r\n```\r\nfunction createAttachedWebview (guestId) {\r\n    var w = document.createElement('webview')\r\n    w.style.position = 'fixed'\r\n    w.style.bottom = '0'\r\n    w.style.left = '0'\r\n    w.style.right = '0'\r\n    w.style.height = '40vh'\r\n    document.body.appendChild(w)\r\n    w.attachGuest(guestId)\r\n    return w\r\n}\r\n```\r\n- find the guestInstanceId of one of the tabs through adding debug output (probably `1` or `2` - I added a data-guest-instance-id attribute to the Tab component), or just guess.\r\n- Create a webview attached to one of those tabs: `var w = createAttachedWebview(1)`.\r\n- Observe that a new webview is created and displays the tab's contents.\r\n- Detach from the WebContents: `w.detachGuest()`.\r\n- Observe that the webview does not display any contents anymore.\r\n- Remove the webview from the DOM: `w.remove()`.\r\n\r\n- **Problem**: The WebContents is destroyed (as evidenced by the tab also being removed from the tab bar).\r\n\r\n- **Expected**: The WebContents is unaffected and can continue being attached to a different `<webview>`\r\n\r\n_Note that if a `<webview>` is attached to multiple Tab/WebContents, when it removed from the DOM, it will only cause the most-recently attached WebContents to be destroyed._\r\n\r\n## Why do we need this?\r\nIn the single-webview2 branch, I have started to use a new `<webview>` for each active tab and ta preview, for the following reasons:\r\n- Fade between preview webcontents and active webcontents using opacity.\r\n- Avoid white flash between sequential `attachGuest(x)` calls (i.e. switching active tabs).\r\n- Avoid bugs in webview when attaching to different guests (no painting of new contents until window resize / forced paint).\r\n- Avoid bugs in webview when destroying a previously-attached guest (webview will never paint anything again)."
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/507",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/507/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/507/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/507/events",
        "html_url": "https://github.com/brave/muon/pull/507",
        "id": 299791489,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxMDczNjAx",
        "number": 507,
        "title": "Add protocol.registerStreamProtocol",
        "user": {
            "login": "olizilla",
            "id": 58871,
            "node_id": "MDQ6VXNlcjU4ODcx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/58871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olizilla",
            "html_url": "https://github.com/olizilla",
            "followers_url": "https://api.github.com/users/olizilla/followers",
            "following_url": "https://api.github.com/users/olizilla/following{/other_user}",
            "gists_url": "https://api.github.com/users/olizilla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olizilla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olizilla/subscriptions",
            "organizations_url": "https://api.github.com/users/olizilla/orgs",
            "repos_url": "https://api.github.com/users/olizilla/repos",
            "events_url": "https://api.github.com/users/olizilla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olizilla/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 873699330,
                "node_id": "MDU6TGFiZWw4NzM2OTkzMzA=",
                "url": "https://api.github.com/repos/brave/muon/labels/branch-5.1.x",
                "name": "branch-5.1.x",
                "color": "fef2c0",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-02-23T17:35:28Z",
        "updated_at": "2018-03-28T15:50:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/brave/muon/pulls/507",
            "html_url": "https://github.com/brave/muon/pull/507",
            "diff_url": "https://github.com/brave/muon/pull/507.diff",
            "patch_url": "https://github.com/brave/muon/pull/507.patch"
        },
        "body": "Ports `protocol.registerStreamProtocol` from: https://github.com/electron/electron/pull/11008/\r\n\r\nTo land cleanly, that changeset requires other upstream changes to be ported:\r\n\r\n- `CallEmitWithArgs` generalised to `CallMethodWithArgs` and it's signature changed to take the method name to call here: https://github.com/electron/electron/commit/6d92457095c9b45a169296aa8be31388158948ba#diff-f7906bd787aa49d23220731778d7fa87\r\n\r\n- Changed signature, to match the muon impl of\r\n\r\n```c\r\nbool Converter<const net::HttpResponseHeaders*>::FromV8\r\n```\r\nin: /electron/atom/common/native_mate_converters/net_converter.cc\r\n\r\nThe good news is that muon compiles with the ported changes, and using a fork of [ipfs-companion](https://github.com/tableflip/ipfs-companion/tree/feat/register-stream-protocol) I'm able to \"stream\"  a response from ipfs via muon to brave.\r\n\r\n![screen shot 2018-02-23 at 16 43 46](https://user-images.githubusercontent.com/58871/36607389-6e4fa8ce-18be-11e8-81e2-fcee06a36523.png)\r\n\r\nI should qualify that I'm pretty good at spelunking around in codebases and porting things that look like they might work, but I have little C++ experience, so I'm offering this up as a starting point for discussion as a fix for https://github.com/brave/browser-laptop/issues/10629 \r\n\r\n~~Also of note, I'd like to find a nicer way to stream the response over from the proxy impl of `protocol.renderStreamProtocol` in protocol_bindings.js, to the main process. I naively tried to use https://github.com/jprichardson/electron-ipc-stream but I'm not clear on the environment that the js in atom/common/resources/protocol_bindings.js is run in.~~ \r\n\r\nStreaming works sensibly now thanks to @alanshaw "
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/502",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/502/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/502/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/502/events",
        "html_url": "https://github.com/brave/muon/issues/502",
        "id": 298772845,
        "node_id": "MDU6SXNzdWUyOTg3NzI4NDU=",
        "number": 502,
        "title": "Electron-updater's autoUpdater throws error due to invalid app.getVersion semver",
        "user": {
            "login": "wbobeirne",
            "id": 649992,
            "node_id": "MDQ6VXNlcjY0OTk5Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/649992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wbobeirne",
            "html_url": "https://github.com/wbobeirne",
            "followers_url": "https://api.github.com/users/wbobeirne/followers",
            "following_url": "https://api.github.com/users/wbobeirne/following{/other_user}",
            "gists_url": "https://api.github.com/users/wbobeirne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wbobeirne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wbobeirne/subscriptions",
            "organizations_url": "https://api.github.com/users/wbobeirne/orgs",
            "repos_url": "https://api.github.com/users/wbobeirne/repos",
            "events_url": "https://api.github.com/users/wbobeirne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wbobeirne/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-02-20T22:28:03Z",
        "updated_at": "2018-02-20T22:28:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "* Electron version: Brave 5.0.2\r\n* Operating system: OSX\r\n\r\nI'm trying to convert from an Electron app to Muon, and my app is crashing immediately on start with the following error:\r\n\r\n> App version is not a valid semver version: \"5.0.2.0\"\r\n\r\nComing from [the autoUpdater constructor from electron-updater](https://github.com/electron-userland/electron-builder/blob/ba4809aeb3bd3b27f66ee684c3e6e8ab0cf55186/packages/electron-updater/src/AppUpdater.ts#L177). I'm not sure where Muon defines what getVersion returns, but it does seem odd that it's tacked on an extra `.0` to the version. Is this intentional, or a mistake?\r\n"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/501",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/501/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/501/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/501/events",
        "html_url": "https://github.com/brave/muon/issues/501",
        "id": 298329203,
        "node_id": "MDU6SXNzdWUyOTgzMjkyMDM=",
        "number": 501,
        "title": "Frameless window doesn't hide frame well",
        "user": {
            "login": "mdtanrikulu",
            "id": 2774845,
            "node_id": "MDQ6VXNlcjI3NzQ4NDU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2774845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdtanrikulu",
            "html_url": "https://github.com/mdtanrikulu",
            "followers_url": "https://api.github.com/users/mdtanrikulu/followers",
            "following_url": "https://api.github.com/users/mdtanrikulu/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdtanrikulu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdtanrikulu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdtanrikulu/subscriptions",
            "organizations_url": "https://api.github.com/users/mdtanrikulu/orgs",
            "repos_url": "https://api.github.com/users/mdtanrikulu/repos",
            "events_url": "https://api.github.com/users/mdtanrikulu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdtanrikulu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-02-19T16:09:39Z",
        "updated_at": "2018-02-19T16:09:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "* Electron version: 5.0.2\r\n* Operating system: macOS High Sierra v10.13.3\r\n\r\n```js\r\nwin = new BrowserWindow({\r\n        title: \"Test App\",\r\n        width: 600,\r\n        height: 800,\r\n        frame: false,\r\n        resizable: true,\r\n        show: false\r\n    })\r\n```\r\n\r\nThis behviour works on Electron well but in Muon I have this.\r\nResult:\r\n![screen shot 2018-02-19 at 17 07 31](https://user-images.githubusercontent.com/2774845/36386847-73b71b50-1597-11e8-8076-cb5e510e75e0.png)\r\n"
    },
    {
        "url": "https://api.github.com/repos/brave/muon/issues/499",
        "repository_url": "https://api.github.com/repos/brave/muon",
        "labels_url": "https://api.github.com/repos/brave/muon/issues/499/labels{/name}",
        "comments_url": "https://api.github.com/repos/brave/muon/issues/499/comments",
        "events_url": "https://api.github.com/repos/brave/muon/issues/499/events",
        "html_url": "https://github.com/brave/muon/issues/499",
        "id": 297953498,
        "node_id": "MDU6SXNzdWUyOTc5NTM0OTg=",
        "number": 499,
        "title": "C65: upgrade Node to 8.9.3",
        "user": {
            "login": "hferreiro",
            "id": 984737,
            "node_id": "MDQ6VXNlcjk4NDczNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/984737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hferreiro",
            "html_url": "https://github.com/hferreiro",
            "followers_url": "https://api.github.com/users/hferreiro/followers",
            "following_url": "https://api.github.com/users/hferreiro/following{/other_user}",
            "gists_url": "https://api.github.com/users/hferreiro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hferreiro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hferreiro/subscriptions",
            "organizations_url": "https://api.github.com/users/hferreiro/orgs",
            "repos_url": "https://api.github.com/users/hferreiro/repos",
            "events_url": "https://api.github.com/users/hferreiro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hferreiro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-02-16T23:43:40Z",
        "updated_at": "2018-02-21T17:04:25Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "There is a WIP branch here: https://github.com/brave/muon/tree/node-upgrade/8.9.3\r\n\r\nCurrently, it is crashing in https://github.com/brave/muon/blob/node-upgrade/8.9.3/atom/common/node_bindings.cc#L191\r\n\r\nWhen returning from `node::CreateEnvironment()`, the `process_object` field is somehow set to null and the call `process.Set(..)` crashes."
    }
]