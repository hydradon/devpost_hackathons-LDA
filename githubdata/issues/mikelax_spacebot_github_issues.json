[
    {
        "url": "https://api.github.com/repos/mikelax/spacebot/issues/28",
        "repository_url": "https://api.github.com/repos/mikelax/spacebot",
        "labels_url": "https://api.github.com/repos/mikelax/spacebot/issues/28/labels{/name}",
        "comments_url": "https://api.github.com/repos/mikelax/spacebot/issues/28/comments",
        "events_url": "https://api.github.com/repos/mikelax/spacebot/issues/28/events",
        "html_url": "https://github.com/mikelax/spacebot/issues/28",
        "id": 205780851,
        "node_id": "MDU6SXNzdWUyMDU3ODA4NTE=",
        "number": 28,
        "title": "Implement basic supervised training for v1 nl bot interaction",
        "user": {
            "login": "mikelax",
            "id": 2080701,
            "node_id": "MDQ6VXNlcjIwODA3MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2080701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelax",
            "html_url": "https://github.com/mikelax",
            "followers_url": "https://api.github.com/users/mikelax/followers",
            "following_url": "https://api.github.com/users/mikelax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelax/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelax/orgs",
            "repos_url": "https://api.github.com/users/mikelax/repos",
            "events_url": "https://api.github.com/users/mikelax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 433283819,
                "node_id": "MDU6TGFiZWw0MzMyODM4MTk=",
                "url": "https://api.github.com/repos/mikelax/spacebot/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-02-07T04:11:02Z",
        "updated_at": "2017-02-07T04:11:02Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "Implement a [basic NaturalNode classifier](https://github.com/NaturalNode/natural#classifiers) to try and understand commands. \r\n\r\nCreate a sample training set of documents to determine the command to run:\r\n* help\r\n* apod\r\n* rovers photos\r\n* rovers info\r\n* rovers cameras\r\n* list favorites (future)\r\n\r\nThere should be a default response if no action could be gleamed from the input. \r\n(Future) create full conversation to allow follow up actions. ie. After performing apod, handle \"Add to my favorites list\".\r\n\r\nThis should be made modular to allow for switching up the library implementation. Another option would be to use wit.ai [Intent Parser](https://wit.ai/docs/recipes#categorize-the-user-intent).\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mikelax/spacebot/issues/26",
        "repository_url": "https://api.github.com/repos/mikelax/spacebot",
        "labels_url": "https://api.github.com/repos/mikelax/spacebot/issues/26/labels{/name}",
        "comments_url": "https://api.github.com/repos/mikelax/spacebot/issues/26/comments",
        "events_url": "https://api.github.com/repos/mikelax/spacebot/issues/26/events",
        "html_url": "https://github.com/mikelax/spacebot/issues/26",
        "id": 204400106,
        "node_id": "MDU6SXNzdWUyMDQ0MDAxMDY=",
        "number": 26,
        "title": "Catch and Handle 500 error from NASA API",
        "user": {
            "login": "mikelax",
            "id": 2080701,
            "node_id": "MDQ6VXNlcjIwODA3MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2080701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelax",
            "html_url": "https://github.com/mikelax",
            "followers_url": "https://api.github.com/users/mikelax/followers",
            "following_url": "https://api.github.com/users/mikelax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelax/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelax/orgs",
            "repos_url": "https://api.github.com/users/mikelax/repos",
            "events_url": "https://api.github.com/users/mikelax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1075532584,
                "node_id": "MDU6TGFiZWwxMDc1NTMyNTg0",
                "url": "https://api.github.com/repos/mikelax/spacebot/labels/Hacktoberfest",
                "name": "Hacktoberfest",
                "color": "fc8892",
                "default": false,
                "description": "Hacktoberfest"
            },
            {
                "id": 433283819,
                "node_id": "MDU6TGFiZWw0MzMyODM4MTk=",
                "url": "https://api.github.com/repos/mikelax/spacebot/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "mikelax",
            "id": 2080701,
            "node_id": "MDQ6VXNlcjIwODA3MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2080701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelax",
            "html_url": "https://github.com/mikelax",
            "followers_url": "https://api.github.com/users/mikelax/followers",
            "following_url": "https://api.github.com/users/mikelax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelax/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelax/orgs",
            "repos_url": "https://api.github.com/users/mikelax/repos",
            "events_url": "https://api.github.com/users/mikelax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelax/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "mikelax",
                "id": 2080701,
                "node_id": "MDQ6VXNlcjIwODA3MDE=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2080701?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mikelax",
                "html_url": "https://github.com/mikelax",
                "followers_url": "https://api.github.com/users/mikelax/followers",
                "following_url": "https://api.github.com/users/mikelax/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikelax/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mikelax/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikelax/subscriptions",
                "organizations_url": "https://api.github.com/users/mikelax/orgs",
                "repos_url": "https://api.github.com/users/mikelax/repos",
                "events_url": "https://api.github.com/users/mikelax/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mikelax/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-01-31T19:28:52Z",
        "updated_at": "2019-10-05T12:31:06Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "As a user, I don't want to see an internal error message when running an apod command, but rather a friendly message of what happened. \r\n\r\nexample command: `/spacebot apod 2009-10-17`\r\nThis API is returning a 500 error from NASA, this should be caught and return a message to the user that there is a problem returning the image for this specific date, please try a different date. \r\n\r\nWe should catch errors from NASA for all APIs, not just apod."
    },
    {
        "url": "https://api.github.com/repos/mikelax/spacebot/issues/22",
        "repository_url": "https://api.github.com/repos/mikelax/spacebot",
        "labels_url": "https://api.github.com/repos/mikelax/spacebot/issues/22/labels{/name}",
        "comments_url": "https://api.github.com/repos/mikelax/spacebot/issues/22/comments",
        "events_url": "https://api.github.com/repos/mikelax/spacebot/issues/22/events",
        "html_url": "https://github.com/mikelax/spacebot/issues/22",
        "id": 182305297,
        "node_id": "MDU6SXNzdWUxODIzMDUyOTc=",
        "number": 22,
        "title": "Add new command - mars weather",
        "user": {
            "login": "mikelax",
            "id": 2080701,
            "node_id": "MDQ6VXNlcjIwODA3MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2080701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelax",
            "html_url": "https://github.com/mikelax",
            "followers_url": "https://api.github.com/users/mikelax/followers",
            "following_url": "https://api.github.com/users/mikelax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelax/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelax/orgs",
            "repos_url": "https://api.github.com/users/mikelax/repos",
            "events_url": "https://api.github.com/users/mikelax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 433283819,
                "node_id": "MDU6TGFiZWw0MzMyODM4MTk=",
                "url": "https://api.github.com/repos/mikelax/spacebot/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-10-11T16:02:00Z",
        "updated_at": "2016-10-11T16:02:00Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "As a user, I would like to be able to know the current weather on Mars. \nThe slash command params would be:  `/spacebot mars weather`\n\nA nice to have feature would be to have the weather report calculated automatically each day by a scheduled lambda function. The output of this function would be a \"weather report\" image that could then be served in response to above command. \n\nWe could look at the past data for ~1484 Sols and calculate some stats like high/low, etc so image could show current values on scale instead of just displaying raw numbers without any real context. \n\nSources:\nhttps://cab.inta-csic.es/rems/\nhttps://cab.inta-csic.es/rems/wp-content/plugins/marsweather-widget/api.php\nhttp://cab.inta-csic.es/rems/rems_weather.xml\nhttps://weather.com/science/news/check-weather-mars-where-nasas-maven-headed-20131119\n"
    },
    {
        "url": "https://api.github.com/repos/mikelax/spacebot/issues/18",
        "repository_url": "https://api.github.com/repos/mikelax/spacebot",
        "labels_url": "https://api.github.com/repos/mikelax/spacebot/issues/18/labels{/name}",
        "comments_url": "https://api.github.com/repos/mikelax/spacebot/issues/18/comments",
        "events_url": "https://api.github.com/repos/mikelax/spacebot/issues/18/events",
        "html_url": "https://github.com/mikelax/spacebot/issues/18",
        "id": 179480093,
        "node_id": "MDU6SXNzdWUxNzk0ODAwOTM=",
        "number": 18,
        "title": "APOD - always return image if random parameter is supplied",
        "user": {
            "login": "mikelax",
            "id": 2080701,
            "node_id": "MDQ6VXNlcjIwODA3MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2080701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelax",
            "html_url": "https://github.com/mikelax",
            "followers_url": "https://api.github.com/users/mikelax/followers",
            "following_url": "https://api.github.com/users/mikelax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelax/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelax/orgs",
            "repos_url": "https://api.github.com/users/mikelax/repos",
            "events_url": "https://api.github.com/users/mikelax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1075532584,
                "node_id": "MDU6TGFiZWwxMDc1NTMyNTg0",
                "url": "https://api.github.com/repos/mikelax/spacebot/labels/Hacktoberfest",
                "name": "Hacktoberfest",
                "color": "fc8892",
                "default": false,
                "description": "Hacktoberfest"
            },
            {
                "id": 433283819,
                "node_id": "MDU6TGFiZWw0MzMyODM4MTk=",
                "url": "https://api.github.com/repos/mikelax/spacebot/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-09-27T12:32:40Z",
        "updated_at": "2018-10-01T14:54:05Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "As a user, if I supply the `random` parameter to the apod command, I expect a valid response to be returned. We need to handle the use case where the user requests random and it just so happens that an invalid date is selected. \n\nIn this case the command should be run again with a new random date until a valid response is returned. \n\nexample:\n`apod random` - generates date of: 1997-09-06\nNASA API returns 500 for given date. https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY&date=1997-09-06\n"
    },
    {
        "url": "https://api.github.com/repos/mikelax/spacebot/issues/17",
        "repository_url": "https://api.github.com/repos/mikelax/spacebot",
        "labels_url": "https://api.github.com/repos/mikelax/spacebot/issues/17/labels{/name}",
        "comments_url": "https://api.github.com/repos/mikelax/spacebot/issues/17/comments",
        "events_url": "https://api.github.com/repos/mikelax/spacebot/issues/17/events",
        "html_url": "https://github.com/mikelax/spacebot/issues/17",
        "id": 179478603,
        "node_id": "MDU6SXNzdWUxNzk0Nzg2MDM=",
        "number": 17,
        "title": "Rovers - Add validation to match rover name <-> camera name",
        "user": {
            "login": "mikelax",
            "id": 2080701,
            "node_id": "MDQ6VXNlcjIwODA3MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2080701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelax",
            "html_url": "https://github.com/mikelax",
            "followers_url": "https://api.github.com/users/mikelax/followers",
            "following_url": "https://api.github.com/users/mikelax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelax/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelax/orgs",
            "repos_url": "https://api.github.com/users/mikelax/repos",
            "events_url": "https://api.github.com/users/mikelax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1075532584,
                "node_id": "MDU6TGFiZWwxMDc1NTMyNTg0",
                "url": "https://api.github.com/repos/mikelax/spacebot/labels/Hacktoberfest",
                "name": "Hacktoberfest",
                "color": "fc8892",
                "default": false,
                "description": "Hacktoberfest"
            },
            {
                "id": 433283819,
                "node_id": "MDU6TGFiZWw0MzMyODM4MTk=",
                "url": "https://api.github.com/repos/mikelax/spacebot/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-09-27T12:25:55Z",
        "updated_at": "2018-10-01T14:53:40Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "Add a check to make sure that the given rover name and camera name combination is valid. \nIf not then a specific error should be returned stating that the rover/camera combination is invalid. \n\nexample: \n`rovers photos curiosity pancam` - should return camera not available error\n"
    },
    {
        "url": "https://api.github.com/repos/mikelax/spacebot/issues/13",
        "repository_url": "https://api.github.com/repos/mikelax/spacebot",
        "labels_url": "https://api.github.com/repos/mikelax/spacebot/issues/13/labels{/name}",
        "comments_url": "https://api.github.com/repos/mikelax/spacebot/issues/13/comments",
        "events_url": "https://api.github.com/repos/mikelax/spacebot/issues/13/events",
        "html_url": "https://github.com/mikelax/spacebot/issues/13",
        "id": 179027470,
        "node_id": "MDU6SXNzdWUxNzkwMjc0NzA=",
        "number": 13,
        "title": "Add Favorites support to rovers photos",
        "user": {
            "login": "mikelax",
            "id": 2080701,
            "node_id": "MDQ6VXNlcjIwODA3MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2080701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelax",
            "html_url": "https://github.com/mikelax",
            "followers_url": "https://api.github.com/users/mikelax/followers",
            "following_url": "https://api.github.com/users/mikelax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelax/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelax/orgs",
            "repos_url": "https://api.github.com/users/mikelax/repos",
            "events_url": "https://api.github.com/users/mikelax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-09-24T12:18:23Z",
        "updated_at": "2016-09-24T12:18:23Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "In #3  initial support was added for interactive messages and the **Favorite** feature to apod. \nAs a user, I want to be able to favorite a `rovers photos` photo as well. \n\nIt should store similar attributes as for apod but with a couple of additional ones specific to rovers:\n\nAttributes to store: \nslack user id, Team, user, channel, timestamp, photo ID\nRovers specific - Sol, earth_date, Camera, Rover, img_src\nWe may just store all the rovers specific attributes in a single json object. \n"
    },
    {
        "url": "https://api.github.com/repos/mikelax/spacebot/issues/9",
        "repository_url": "https://api.github.com/repos/mikelax/spacebot",
        "labels_url": "https://api.github.com/repos/mikelax/spacebot/issues/9/labels{/name}",
        "comments_url": "https://api.github.com/repos/mikelax/spacebot/issues/9/comments",
        "events_url": "https://api.github.com/repos/mikelax/spacebot/issues/9/events",
        "html_url": "https://github.com/mikelax/spacebot/issues/9",
        "id": 177953511,
        "node_id": "MDU6SXNzdWUxNzc5NTM1MTE=",
        "number": 9,
        "title": "Filter out small (thumbnail) images from rovers photos response",
        "user": {
            "login": "mikelax",
            "id": 2080701,
            "node_id": "MDQ6VXNlcjIwODA3MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2080701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelax",
            "html_url": "https://github.com/mikelax",
            "followers_url": "https://api.github.com/users/mikelax/followers",
            "following_url": "https://api.github.com/users/mikelax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelax/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelax/orgs",
            "repos_url": "https://api.github.com/users/mikelax/repos",
            "events_url": "https://api.github.com/users/mikelax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-09-20T03:18:50Z",
        "updated_at": "2016-09-20T03:18:50Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "It appears that some of the photos responses contain images that are basically thumbnails, ie. 63px square. \n\nThe function should filter these images out of the response and not include in the API response to slack. \n\nexample:  `/spacebot-dev rovers photos opportunity all 2016-09-17`\n[This image](http://mars.nasa.gov/mer/gallery/all/1/p/4496/1P527327403ESFCS1HP2602L8M1-BR.JPG) should be removed.\n"
    },
    {
        "url": "https://api.github.com/repos/mikelax/spacebot/issues/1",
        "repository_url": "https://api.github.com/repos/mikelax/spacebot",
        "labels_url": "https://api.github.com/repos/mikelax/spacebot/issues/1/labels{/name}",
        "comments_url": "https://api.github.com/repos/mikelax/spacebot/issues/1/comments",
        "events_url": "https://api.github.com/repos/mikelax/spacebot/issues/1/events",
        "html_url": "https://github.com/mikelax/spacebot/issues/1",
        "id": 176041352,
        "node_id": "MDU6SXNzdWUxNzYwNDEzNTI=",
        "number": 1,
        "title": "Add /spacebot news command",
        "user": {
            "login": "mikelax",
            "id": 2080701,
            "node_id": "MDQ6VXNlcjIwODA3MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2080701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelax",
            "html_url": "https://github.com/mikelax",
            "followers_url": "https://api.github.com/users/mikelax/followers",
            "following_url": "https://api.github.com/users/mikelax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelax/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelax/orgs",
            "repos_url": "https://api.github.com/users/mikelax/repos",
            "events_url": "https://api.github.com/users/mikelax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-09-09T15:43:27Z",
        "updated_at": "2016-09-27T20:40:21Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "As a user, I want to be able to get a list of recent news articles about space. \n\nJPL has an [RSS feed](http://www.jpl.nasa.gov/multimedia/rss/news.xml) for the [News section](http://www.jpl.nasa.gov/news/) of their website. Display recent entries from this feed for the command:  `/spacebot news`\n\nCan also include other news sources to combine together. \n- http://www.spacex.com/news.xml\n"
    }
]