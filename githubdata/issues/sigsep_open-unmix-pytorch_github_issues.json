[
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/29",
        "repository_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch",
        "labels_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/29/labels{/name}",
        "comments_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/29/comments",
        "events_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/29/events",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/29",
        "id": 550914643,
        "node_id": "MDU6SXNzdWU1NTA5MTQ2NDM=",
        "number": 29,
        "title": "num_samples should be a positive integer value, but got num_samples=0",
        "user": {
            "login": "loxosceles",
            "id": 5509617,
            "node_id": "MDQ6VXNlcjU1MDk2MTc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5509617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/loxosceles",
            "html_url": "https://github.com/loxosceles",
            "followers_url": "https://api.github.com/users/loxosceles/followers",
            "following_url": "https://api.github.com/users/loxosceles/following{/other_user}",
            "gists_url": "https://api.github.com/users/loxosceles/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/loxosceles/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/loxosceles/subscriptions",
            "organizations_url": "https://api.github.com/users/loxosceles/orgs",
            "repos_url": "https://api.github.com/users/loxosceles/repos",
            "events_url": "https://api.github.com/users/loxosceles/events{/privacy}",
            "received_events_url": "https://api.github.com/users/loxosceles/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1361397150,
                "node_id": "MDU6TGFiZWwxMzYxMzk3MTUw",
                "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 1519726953,
                "node_id": "MDU6TGFiZWwxNTE5NzI2OTUz",
                "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/labels/data",
                "name": "data",
                "color": "c2e0c6",
                "default": false,
                "description": "Something isn't working in the Dataset or Dataloaders"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-01-16T16:22:50Z",
        "updated_at": "2020-01-27T12:36:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I'm trying to use my own data for training with the **FixedSourcesTrackFolderDataset**. Unfortunatly, the data doesn't seem to be recognized or found by the dataloader. I am using normal wav files (not stems), organized in the following folder structure:\r\n\r\n```\r\n   dataset\r\n         valid\r\n              0\r\n                guitar.wav\r\n                piano.wav\r\n                ...\r\n              1\r\n              2\r\n              ...\r\n         train\r\n              3\r\n                guitar.wav\r\n                piano.wav\r\n                ...\r\n              4\r\n              5\r\n              ...\r\n```\r\n\r\nNext, I issue:\r\n`python train.py  --root /path/to/dataset --dataset trackfolder_fix --target-file piano.wav --interferer-files cello.wav guitar.wav hi-hat.wav\r\n`\r\n\r\nThe following error is thrown:\r\n`ValueError: num_samples should be a positive integer value, but got num_samples=0`\r\n\r\nIs this a problem with the format (folder structure) in which the data is provided? From reading the documentation I can't figure out if a Pytorch dataclass has to be created beforehand or not. If so, how does that fit into the folder structure?"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/27",
        "repository_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch",
        "labels_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/27/labels{/name}",
        "comments_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/27/comments",
        "events_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/27/events",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/pull/27",
        "id": 529008132,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ1OTY1MjI4",
        "number": 27,
        "title": "Add other summation",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-26T22:31:52Z",
        "updated_at": "2019-11-26T22:31:52Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/pulls/27",
            "html_url": "https://github.com/sigsep/open-unmix-pytorch/pull/27",
            "diff_url": "https://github.com/sigsep/open-unmix-pytorch/pull/27.diff",
            "patch_url": "https://github.com/sigsep/open-unmix-pytorch/pull/27.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/26",
        "repository_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch",
        "labels_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/26/labels{/name}",
        "comments_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/26/comments",
        "events_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/26/events",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/26",
        "id": 527583771,
        "node_id": "MDU6SXNzdWU1Mjc1ODM3NzE=",
        "number": 26,
        "title": "Iterative usage lead to memory failure",
        "user": {
            "login": "Vichoko",
            "id": 10373118,
            "node_id": "MDQ6VXNlcjEwMzczMTE4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10373118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vichoko",
            "html_url": "https://github.com/Vichoko",
            "followers_url": "https://api.github.com/users/Vichoko/followers",
            "following_url": "https://api.github.com/users/Vichoko/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vichoko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vichoko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vichoko/subscriptions",
            "organizations_url": "https://api.github.com/users/Vichoko/orgs",
            "repos_url": "https://api.github.com/users/Vichoko/repos",
            "events_url": "https://api.github.com/users/Vichoko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vichoko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-11-23T17:21:20Z",
        "updated_at": "2019-11-27T19:21:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "## \ud83d\udc1b Bug\r\n\r\nPossible memory leak produces OOM error on a minimal amount of memory allocation while using `separate ` functions in an iterative manner.\r\n\r\n## To Reproduce\r\nGet yourself with a set of 100 normal sized mp3 files and do this:\r\n\r\nSteps to reproduce the behavior:\r\n \r\n```\r\nfor filename in files:\r\n    result = separate_music_file(\r\n        file,\r\n        'cpu',\r\n        ['vocals'],\r\n        # etc\r\n    )\r\n    print(result)\r\n```\r\n\r\n## Expected behavior\r\n\r\nIf the mp3 file and the model can fit in memory I hope it finishes without error. \r\nIf the mp3 and the model can't fit in memory I expect to fail in a consistent way.\r\n\r\n## Environment\r\n\r\nPlease add some information about your environment\r\n\r\n - PyTorch Version (e.g., 1.2): 1.3\r\n - OS (e.g., Linux): Windows 10\r\n - torchaudio loader (y/n): n\r\n - Python version: 3.7\r\n - CUDA/cuDNN version: 10.1\r\n - Available memory: 8 GB (6 really discounting SO usage)\r\n\r\n## Additional context\r\n\r\nThe error message says it fails to allocate 6,000,000 bytes ~ 6 MB, so it looks like the mp3 file isn't big enough. Also, I tried a \"split & retry mechanism\", and it doesn't really matter the file size, the program fails after some iterations with any input size.\r\n\r\nI think there could be a memory leak. \r\nI'm still testing some changes, for example, adding torch.no_grad and cleaning caches between iterations but no use so far.\r\nI'll keep you updated.\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/19",
        "repository_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch",
        "labels_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/19/labels{/name}",
        "comments_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/19/comments",
        "events_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/19/events",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/19",
        "id": 505412723,
        "node_id": "MDU6SXNzdWU1MDU0MTI3MjM=",
        "number": 19,
        "title": "About PyTorch Mobile",
        "user": {
            "login": "loretoparisi",
            "id": 163333,
            "node_id": "MDQ6VXNlcjE2MzMzMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/163333?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/loretoparisi",
            "html_url": "https://github.com/loretoparisi",
            "followers_url": "https://api.github.com/users/loretoparisi/followers",
            "following_url": "https://api.github.com/users/loretoparisi/following{/other_user}",
            "gists_url": "https://api.github.com/users/loretoparisi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/loretoparisi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/loretoparisi/subscriptions",
            "organizations_url": "https://api.github.com/users/loretoparisi/orgs",
            "repos_url": "https://api.github.com/users/loretoparisi/repos",
            "events_url": "https://api.github.com/users/loretoparisi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/loretoparisi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2019-10-10T17:37:09Z",
        "updated_at": "2019-10-11T21:01:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "## \ud83d\ude80 Model Improvement\r\n<!-- A clear and concise description of the added model improvement \r\n\r\nExample: we changed the ReLU activation to XeLU since it was shown in [1] that this reduces overfitting\r\n-->\r\nFacebok has just announced [PyTorch Mobile](https://pytorch.org/mobile/home/) for both iOS and Android devices in PyTorch 1.3. They run new quantization algorithms (FBGEMM and QNNPACK state-of-the-art quantized kernel back ends) for this mobile version.\r\n\r\n## Motivation\r\n\r\n<!-- Please outline the motivation for the model improvement. Is your proposal related to a problem? -->\r\nHaving a quantized model running on the device would be an interesting challenge. \r\nIt would be interesting to try the quantization of the model to make it ready to run on the device.\r\nFor more info about PyTorch 1.3 [here](https://ai.facebook.com/blog/pytorch-13-adds-mobile-privacy-quantization-and-named-tensors/)\r\n\r\n## Objective Evaluation\r\n\r\n<!-- A table with the median of median BSSEval result on computed on the MUSDB18 test set -->"
    }
]