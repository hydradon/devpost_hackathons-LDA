[
    {
        "url": "https://api.github.com/repos/tendermint/dex-demo/issues/17",
        "repository_url": "https://api.github.com/repos/tendermint/dex-demo",
        "labels_url": "https://api.github.com/repos/tendermint/dex-demo/issues/17/labels{/name}",
        "comments_url": "https://api.github.com/repos/tendermint/dex-demo/issues/17/comments",
        "events_url": "https://api.github.com/repos/tendermint/dex-demo/issues/17/events",
        "html_url": "https://github.com/tendermint/dex-demo/issues/17",
        "id": 549984207,
        "node_id": "MDU6SXNzdWU1NDk5ODQyMDc=",
        "number": 17,
        "title": "order post tx \"--generate-only\"  can't create",
        "user": {
            "login": "nodebreaker0-0",
            "id": 12446339,
            "node_id": "MDQ6VXNlcjEyNDQ2MzM5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/12446339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nodebreaker0-0",
            "html_url": "https://github.com/nodebreaker0-0",
            "followers_url": "https://api.github.com/users/nodebreaker0-0/followers",
            "following_url": "https://api.github.com/users/nodebreaker0-0/following{/other_user}",
            "gists_url": "https://api.github.com/users/nodebreaker0-0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nodebreaker0-0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nodebreaker0-0/subscriptions",
            "organizations_url": "https://api.github.com/users/nodebreaker0-0/orgs",
            "repos_url": "https://api.github.com/users/nodebreaker0-0/repos",
            "events_url": "https://api.github.com/users/nodebreaker0-0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nodebreaker0-0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-15T06:02:19Z",
        "updated_at": "2020-01-15T10:23:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "@alessio \r\n\r\ndexcli tx order post cosmos1zjke9jp4rftfzs6nw73ut94jzl3qgk95mhdmyx 1 BID 1000000000000000000 1000000000000000000 100 --chain-id=testchain --generate-only\r\n\r\nERROR: accepts 5 arg(s), received 6\r\n\r\ndexcli tx order post --from cosmos1zjke9jp4rftfzs6nw73ut94jzl3qgk95mhdmyx 1 BID 1000000000000000000 1000000000000000000 100 --chain-id=testchain  --generate-only\r\n\r\nERROR: no RPC client defined\r\n\r\nUnable to generate when generating json to sign order post tx offline.\r\nDefined in msg but cannot be processed in dexcli\r\n\r\n\r\nhttps://github.com/tendermint/dex-demo/blob/master/pkg/cliutil/cli.go#L15\r\n\r\n```go\r\n\taccGetter := authtypes.NewAccountRetriever(cliCtx)\r\n\tif err := accGetter.EnsureExists(cliCtx.GetFromAddress()); err != nil {\r\n\t\treturn context.CLIContext{}, authtypes.TxBuilder{}, err\r\n\t}\r\n```\r\n\r\nThis part seems to be the cause, what is its use?"
    },
    {
        "url": "https://api.github.com/repos/tendermint/dex-demo/issues/16",
        "repository_url": "https://api.github.com/repos/tendermint/dex-demo",
        "labels_url": "https://api.github.com/repos/tendermint/dex-demo/issues/16/labels{/name}",
        "comments_url": "https://api.github.com/repos/tendermint/dex-demo/issues/16/comments",
        "events_url": "https://api.github.com/repos/tendermint/dex-demo/issues/16/events",
        "html_url": "https://github.com/tendermint/dex-demo/issues/16",
        "id": 548825588,
        "node_id": "MDU6SXNzdWU1NDg4MjU1ODg=",
        "number": 16,
        "title": "this line throws error(division by zero) while our simulation",
        "user": {
            "login": "dlguddus",
            "id": 38277329,
            "node_id": "MDQ6VXNlcjM4Mjc3MzI5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/38277329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dlguddus",
            "html_url": "https://github.com/dlguddus",
            "followers_url": "https://api.github.com/users/dlguddus/followers",
            "following_url": "https://api.github.com/users/dlguddus/following{/other_user}",
            "gists_url": "https://api.github.com/users/dlguddus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dlguddus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dlguddus/subscriptions",
            "organizations_url": "https://api.github.com/users/dlguddus/orgs",
            "repos_url": "https://api.github.com/users/dlguddus/repos",
            "events_url": "https://api.github.com/users/dlguddus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dlguddus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "mslipper",
            "id": 67953,
            "node_id": "MDQ6VXNlcjY3OTUz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/67953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mslipper",
            "html_url": "https://github.com/mslipper",
            "followers_url": "https://api.github.com/users/mslipper/followers",
            "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
            "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
            "organizations_url": "https://api.github.com/users/mslipper/orgs",
            "repos_url": "https://api.github.com/users/mslipper/repos",
            "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mslipper/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "mslipper",
                "id": 67953,
                "node_id": "MDQ6VXNlcjY3OTUz",
                "avatar_url": "https://avatars1.githubusercontent.com/u/67953?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mslipper",
                "html_url": "https://github.com/mslipper",
                "followers_url": "https://api.github.com/users/mslipper/followers",
                "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
                "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
                "organizations_url": "https://api.github.com/users/mslipper/orgs",
                "repos_url": "https://api.github.com/users/mslipper/repos",
                "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mslipper/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-01-13T10:10:07Z",
        "updated_at": "2020-01-17T19:01:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "@alessio \r\n\r\nbelow line throws error(division by zero) while our simulation\r\n\r\nhttps://github.com/tendermint/dex-demo/blob/7d412f8b8c12b470658b6e3aa6ac92e59c7b93c8/pkg/matcheng/matcher.go#L238\r\n\r\nin orderbook, we see an residual order with amount 0.0000.\r\ni suspect this is a decimal control issue.\r\nbecause we tested only with integer amount, there is no way for orderbook to have\r\nsuch small residual order."
    },
    {
        "url": "https://api.github.com/repos/tendermint/dex-demo/issues/15",
        "repository_url": "https://api.github.com/repos/tendermint/dex-demo",
        "labels_url": "https://api.github.com/repos/tendermint/dex-demo/issues/15/labels{/name}",
        "comments_url": "https://api.github.com/repos/tendermint/dex-demo/issues/15/comments",
        "events_url": "https://api.github.com/repos/tendermint/dex-demo/issues/15/events",
        "html_url": "https://github.com/tendermint/dex-demo/pull/15",
        "id": 541191564,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzU1ODk1NzAy",
        "number": 15,
        "title": "Start refactoring into storeutils",
        "user": {
            "login": "mslipper",
            "id": 67953,
            "node_id": "MDQ6VXNlcjY3OTUz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/67953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mslipper",
            "html_url": "https://github.com/mslipper",
            "followers_url": "https://api.github.com/users/mslipper/followers",
            "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
            "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
            "organizations_url": "https://api.github.com/users/mslipper/orgs",
            "repos_url": "https://api.github.com/users/mslipper/repos",
            "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mslipper/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-12-20T20:45:22Z",
        "updated_at": "2020-01-16T20:06:44Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "pull_request": {
            "url": "https://api.github.com/repos/tendermint/dex-demo/pulls/15",
            "html_url": "https://github.com/tendermint/dex-demo/pull/15",
            "diff_url": "https://github.com/tendermint/dex-demo/pull/15.diff",
            "patch_url": "https://github.com/tendermint/dex-demo/pull/15.patch"
        },
        "body": "Note that the files in `storeutils` now return generic `error` objects rather than `sdk.Error`s. This is done\nin an effort to decouple them from the DEX codebase. To transform the error objects back into `sdk.Error`s\nthat are meaningful to the DEX, I've created some wrapper functions in `types/errs/errs.go` that convert\nthe `error` objects into the DEC-appropriate `sdk.Error`."
    },
    {
        "url": "https://api.github.com/repos/tendermint/dex-demo/issues/13",
        "repository_url": "https://api.github.com/repos/tendermint/dex-demo",
        "labels_url": "https://api.github.com/repos/tendermint/dex-demo/issues/13/labels{/name}",
        "comments_url": "https://api.github.com/repos/tendermint/dex-demo/issues/13/comments",
        "events_url": "https://api.github.com/repos/tendermint/dex-demo/issues/13/events",
        "html_url": "https://github.com/tendermint/dex-demo/issues/13",
        "id": 537683568,
        "node_id": "MDU6SXNzdWU1Mzc2ODM1Njg=",
        "number": 13,
        "title": "Replace github.com/tendermint/dex-demo/types/store with github.com/cosmos/cosmos-sdk/store",
        "user": {
            "login": "alessio",
            "id": 229356,
            "node_id": "MDQ6VXNlcjIyOTM1Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/229356?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alessio",
            "html_url": "https://github.com/alessio",
            "followers_url": "https://api.github.com/users/alessio/followers",
            "following_url": "https://api.github.com/users/alessio/following{/other_user}",
            "gists_url": "https://api.github.com/users/alessio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alessio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alessio/subscriptions",
            "organizations_url": "https://api.github.com/users/alessio/orgs",
            "repos_url": "https://api.github.com/users/alessio/repos",
            "events_url": "https://api.github.com/users/alessio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alessio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "mslipper",
            "id": 67953,
            "node_id": "MDQ6VXNlcjY3OTUz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/67953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mslipper",
            "html_url": "https://github.com/mslipper",
            "followers_url": "https://api.github.com/users/mslipper/followers",
            "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
            "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
            "organizations_url": "https://api.github.com/users/mslipper/orgs",
            "repos_url": "https://api.github.com/users/mslipper/repos",
            "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mslipper/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "mslipper",
                "id": 67953,
                "node_id": "MDQ6VXNlcjY3OTUz",
                "avatar_url": "https://avatars1.githubusercontent.com/u/67953?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mslipper",
                "html_url": "https://github.com/mslipper",
                "followers_url": "https://api.github.com/users/mslipper/followers",
                "following_url": "https://api.github.com/users/mslipper/following{/other_user}",
                "gists_url": "https://api.github.com/users/mslipper/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mslipper/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mslipper/subscriptions",
                "organizations_url": "https://api.github.com/users/mslipper/orgs",
                "repos_url": "https://api.github.com/users/mslipper/repos",
                "events_url": "https://api.github.com/users/mslipper/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mslipper/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-12-13T17:49:07Z",
        "updated_at": "2019-12-13T17:49:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "In particular, we should ensure we use the `KVStore` implementation provided by cosmos-sdk"
    },
    {
        "url": "https://api.github.com/repos/tendermint/dex-demo/issues/7",
        "repository_url": "https://api.github.com/repos/tendermint/dex-demo",
        "labels_url": "https://api.github.com/repos/tendermint/dex-demo/issues/7/labels{/name}",
        "comments_url": "https://api.github.com/repos/tendermint/dex-demo/issues/7/comments",
        "events_url": "https://api.github.com/repos/tendermint/dex-demo/issues/7/events",
        "html_url": "https://github.com/tendermint/dex-demo/issues/7",
        "id": 517730020,
        "node_id": "MDU6SXNzdWU1MTc3MzAwMjA=",
        "number": 7,
        "title": "make-genesis.sh broken error handling on too short password",
        "user": {
            "login": "PerMildner",
            "id": 1358238,
            "node_id": "MDQ6VXNlcjEzNTgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1358238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PerMildner",
            "html_url": "https://github.com/PerMildner",
            "followers_url": "https://api.github.com/users/PerMildner/followers",
            "following_url": "https://api.github.com/users/PerMildner/following{/other_user}",
            "gists_url": "https://api.github.com/users/PerMildner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PerMildner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PerMildner/subscriptions",
            "organizations_url": "https://api.github.com/users/PerMildner/orgs",
            "repos_url": "https://api.github.com/users/PerMildner/repos",
            "events_url": "https://api.github.com/users/PerMildner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PerMildner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-05T11:59:46Z",
        "updated_at": "2019-11-05T11:59:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Entering a too short password gives an error (OK) but then seems to continue in a bad state instead of aborting:\r\n\r\n6584a134ace21bfcec0941f9b8b72555f39256b5\r\n\r\n```\r\n-bash$ make install\r\ngo install ...\r\ngo install ...\r\n-bash$ PATH=\"$PATH:$HOME/go/bin\"\r\n-bash$ ./make-genesis.sh \r\n{...}\r\nEnter a passphrase to encrypt your key to disk: <<entered a 4 character password>>\r\nERROR: password must be at least 8 characters\r\nERROR: Key dex-demo not found\r\nERROR: accepts 2 arg(s), received 1\r\n/Users/perm/.dexcli/config/config.toml does not exist\r\nconfiguration saved to /Users/perm/.dexcli/config/config.toml\r\nconfiguration saved to /Users/perm/.dexcli/config/config.toml\r\nconfiguration saved to /Users/perm/.dexcli/config/config.toml\r\nconfiguration saved to /Users/perm/.dexcli/config/config.toml\r\nERROR: Key dex-demo not found\r\nCollecting genesis txs...\r\nERROR: open /Users/perm/.dexd/config/gentx: no such file or directory\r\nValidating genesis file...\r\nvalidating genesis file at /Users/perm/.dexd/config/genesis.json\r\nFile at /Users/perm/.dexd/config/genesis.json is a valid genesis file\r\n-bash$\r\n```"
    },
    {
        "url": "https://api.github.com/repos/tendermint/dex-demo/issues/6",
        "repository_url": "https://api.github.com/repos/tendermint/dex-demo",
        "labels_url": "https://api.github.com/repos/tendermint/dex-demo/issues/6/labels{/name}",
        "comments_url": "https://api.github.com/repos/tendermint/dex-demo/issues/6/comments",
        "events_url": "https://api.github.com/repos/tendermint/dex-demo/issues/6/events",
        "html_url": "https://github.com/tendermint/dex-demo/issues/6",
        "id": 517678423,
        "node_id": "MDU6SXNzdWU1MTc2Nzg0MjM=",
        "number": 6,
        "title": "Broken link in README.md",
        "user": {
            "login": "PerMildner",
            "id": 1358238,
            "node_id": "MDQ6VXNlcjEzNTgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1358238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PerMildner",
            "html_url": "https://github.com/PerMildner",
            "followers_url": "https://api.github.com/users/PerMildner/followers",
            "following_url": "https://api.github.com/users/PerMildner/following{/other_user}",
            "gists_url": "https://api.github.com/users/PerMildner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PerMildner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PerMildner/subscriptions",
            "organizations_url": "https://api.github.com/users/PerMildner/orgs",
            "repos_url": "https://api.github.com/users/PerMildner/repos",
            "events_url": "https://api.github.com/users/PerMildner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PerMildner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-05T10:19:08Z",
        "updated_at": "2019-11-05T10:19:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "The link https://circleci.com/gh/tendermint/dex-demo (and the svg link) gives a Page not found error.\r\n\r\nREADME.md 3b2ca573cc6b3407b733e7746487dc73230074f9"
    },
    {
        "url": "https://api.github.com/repos/tendermint/dex-demo/issues/4",
        "repository_url": "https://api.github.com/repos/tendermint/dex-demo",
        "labels_url": "https://api.github.com/repos/tendermint/dex-demo/issues/4/labels{/name}",
        "comments_url": "https://api.github.com/repos/tendermint/dex-demo/issues/4/comments",
        "events_url": "https://api.github.com/repos/tendermint/dex-demo/issues/4/events",
        "html_url": "https://github.com/tendermint/dex-demo/pull/4",
        "id": 516811693,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzM2MDEzNjMz",
        "number": 4,
        "title": "Add advanced trading features to DEXs, e.g. stop losses/buys",
        "user": {
            "login": "quantaf1re",
            "id": 37821211,
            "node_id": "MDQ6VXNlcjM3ODIxMjEx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/37821211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quantaf1re",
            "html_url": "https://github.com/quantaf1re",
            "followers_url": "https://api.github.com/users/quantaf1re/followers",
            "following_url": "https://api.github.com/users/quantaf1re/following{/other_user}",
            "gists_url": "https://api.github.com/users/quantaf1re/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quantaf1re/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quantaf1re/subscriptions",
            "organizations_url": "https://api.github.com/users/quantaf1re/orgs",
            "repos_url": "https://api.github.com/users/quantaf1re/repos",
            "events_url": "https://api.github.com/users/quantaf1re/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quantaf1re/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-11-03T11:01:27Z",
        "updated_at": "2019-11-03T18:07:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/tendermint/dex-demo/pulls/4",
            "html_url": "https://github.com/tendermint/dex-demo/pull/4",
            "diff_url": "https://github.com/tendermint/dex-demo/pull/4.diff",
            "patch_url": "https://github.com/tendermint/dex-demo/pull/4.patch"
        },
        "body": "Currently on-chain DEXs lack any features other than basic orders. This is a significant source of friction for transitioning users from centralised exchanges to decentralised ones because people can't use their regular trading strategies. Simple things like stop losses are impossible in current DEXs because smart contracts/blockchains are passive (they only change their state when someone interacts with them), so a user needs to be online in order to push an order through.\r\n\r\nThis solution uses the ASC (Active Smart Contract/Active State Changer) Protocol to make a smart contract (Eth etc), or, in this case, a Cosmos module, active in the sense that a user can set some action to happen in the future then go offline forever and the state change will still happen in the future while the user is offline. This allows users to set up subscription payments that don't require them to manually sign something every month, advanced trading functionality, auto-closing of a user's own MakerDAO CDP that's close to being undercollateralised, investment/insurance funds that automatically pay out to users, and even allows smart contracts/modules to autonomously enact changes in the physical world by using services such as Chainlink on their own. All that is required is the use of the ASC Protocol and tokens to be locked up to fund the contracts' tx fees.\r\n\r\nTechnically the contract/module still requires txs from people to enact the changes it wants to cause, but those txs can be called by anyone and are incentivised by the contract/module paying out a small reward to whoever calls them and are therefore economically guaranteed. In the same sense that the concept of a Bitcoin is an abstraction of UTXOs, ASCs are an abstraction of incentivised txs.\r\n\r\nIn this PR I have added a `Stop` message type to orders. It basically wraps `Post` but adds a condition that makes it fail if the most recent price of the relevant coin is outside the range of values that the stop should be called in. Before going offline, the user can give this transaction to someone (a `relayer`) who will profit from broadcasting the transaction at the correct time by giving a specified amount of coins to the relayer upon successful execution of the trade. The user is therefore economically guaranteed that their transaction will execute as soon as the stop condition is met because game theoretically, the relayer's best choice to maximise profit is to execute it as soon as it will succeed because there may never be a time in the future when the same condition will be met again and therefore impossible for the relayer to profit.\r\n\r\nTransaction flow:\r\n - The user finds a relayer, ideally through a web-market of relayers that have each publicly stated they are willing to hold onto transactions for competing fee rates, such as a stop loss, and watch the relevant price data until they are able to fulfill the condition of the trade\r\n - The user signs a `Stop` transaction but does not broadcast it to the wider network\r\n - The user privately sends the signed transaction in raw hex format to the chosen relayer through their chosen channel, who then stores the tx locally\r\n - The relayer watches the relevant price\r\n - When the market price goes above or below the stop price (depending on `initPrice`), the transaction is able to be executed, so the relayer broadcasts the tx to the wider network\r\n - The tx is executed successfully. The user has bought or sold around their desired price. Cancer is cured. There is peace in the Middle East. World hunger is no more.\r\n\r\nNotes:\r\n - This application of the ASC Protocol is clunky and specific to implementing stop losses here in this DEX and was done in a way that was mainly chosen for ease of use and speed for me as a hackathon project who only started to read any Cosmos code about 14 hours before this PR was submitted. The much more generalised implementation is A) to have a GSN-like network of nodes who basically run a service of having a 2nd mempool (for arbitrarily many blockchains) that is constantly checked to see if the txs can be executed, B) done in a way that the relayer is the one who signs the tx so that it's impossible for the relayed to grief the user by prematurely sending the tx\r\n - The stop loss is private to everyone except the person who will execute it, like regular centralised exchanges\r\n - The worst case scenario for the user is that the relayer broadcasts the trade prematurely and therefore the user loses a small tx fee from the tx failing. The user can then blacklist that relayer if they come back online and notice the trade wasn't executed despite the conditions having been fulfilled at some point while the user was offline.\r\n - It can be used for stop-losses or stop-buys in any direction\r\n - I didn't use `start-block` and `end-block` because there is an attack vector for filling one of those will junk txs that will never execute and forcing them to be checked every block for the rest of time for very little gas cost"
    }
]