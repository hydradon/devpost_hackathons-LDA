[
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69143",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69143/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69143/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69143/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69143",
        "id": 564920323,
        "node_id": "MDU6SXNzdWU1NjQ5MjAzMjM=",
        "number": 69143,
        "title": "Absolute path to *.pdb in the binary file",
        "user": {
            "login": "afonichev",
            "id": 15726637,
            "node_id": "MDQ6VXNlcjE1NzI2NjM3",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15726637?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afonichev",
            "html_url": "https://github.com/afonichev",
            "followers_url": "https://api.github.com/users/afonichev/followers",
            "following_url": "https://api.github.com/users/afonichev/following{/other_user}",
            "gists_url": "https://api.github.com/users/afonichev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afonichev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afonichev/subscriptions",
            "organizations_url": "https://api.github.com/users/afonichev/orgs",
            "repos_url": "https://api.github.com/users/afonichev/repos",
            "events_url": "https://api.github.com/users/afonichev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afonichev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-13T20:05:06Z",
        "updated_at": "2020-02-13T20:05:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Can it be removed somehow?\r\n\r\n![image](https://user-images.githubusercontent.com/15726637/74473503-c5554100-4eb4-11ea-89c4-bb3f97225054.png)\r\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69142",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69142/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69142/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69142/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69142",
        "id": 564854997,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDA5NTA2",
        "number": 69142,
        "title": "Add shared script for linkchecking books.",
        "user": {
            "login": "ehuss",
            "id": 43198,
            "node_id": "MDQ6VXNlcjQzMTk4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ehuss",
            "html_url": "https://github.com/ehuss",
            "followers_url": "https://api.github.com/users/ehuss/followers",
            "following_url": "https://api.github.com/users/ehuss/following{/other_user}",
            "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions",
            "organizations_url": "https://api.github.com/users/ehuss/orgs",
            "repos_url": "https://api.github.com/users/ehuss/repos",
            "events_url": "https://api.github.com/users/ehuss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ehuss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583426710,
                "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
                "name": "S-waiting-on-review",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Awaiting review from the assignee but also interested parties."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "alexcrichton",
            "id": 64996,
            "node_id": "MDQ6VXNlcjY0OTk2",
            "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexcrichton",
            "html_url": "https://github.com/alexcrichton",
            "followers_url": "https://api.github.com/users/alexcrichton/followers",
            "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions",
            "organizations_url": "https://api.github.com/users/alexcrichton/orgs",
            "repos_url": "https://api.github.com/users/alexcrichton/repos",
            "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexcrichton/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "alexcrichton",
                "id": 64996,
                "node_id": "MDQ6VXNlcjY0OTk2",
                "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/alexcrichton",
                "html_url": "https://github.com/alexcrichton",
                "followers_url": "https://api.github.com/users/alexcrichton/followers",
                "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}",
                "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions",
                "organizations_url": "https://api.github.com/users/alexcrichton/orgs",
                "repos_url": "https://api.github.com/users/alexcrichton/repos",
                "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}",
                "received_events_url": "https://api.github.com/users/alexcrichton/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T17:57:40Z",
        "updated_at": "2020-02-13T17:57:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69142",
            "html_url": "https://github.com/rust-lang/rust/pull/69142",
            "diff_url": "https://github.com/rust-lang/rust/pull/69142.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69142.patch"
        },
        "body": "This adds a script that can be used on each book's CI to ensure they don't break local links.\r\n\r\nI've been running something similar on the reference CI.  The intent here is to add this to all the external books' CI scripts. This will help avoid dealing with broken links when updating submodules on rust-lang/rust.\r\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69141",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69141/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69141/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69141/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69141",
        "id": 564854894,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDA5NDI5",
        "number": 69141,
        "title": "Don't error on network failures",
        "user": {
            "login": "mark-i-m",
            "id": 8827840,
            "node_id": "MDQ6VXNlcjg4Mjc4NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8827840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mark-i-m",
            "html_url": "https://github.com/mark-i-m",
            "followers_url": "https://api.github.com/users/mark-i-m/followers",
            "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}",
            "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions",
            "organizations_url": "https://api.github.com/users/mark-i-m/orgs",
            "repos_url": "https://api.github.com/users/mark-i-m/repos",
            "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mark-i-m/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583426710,
                "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
                "name": "S-waiting-on-review",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Awaiting review from the assignee but also interested parties."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "JohnTitor",
            "id": 25030997,
            "node_id": "MDQ6VXNlcjI1MDMwOTk3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25030997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JohnTitor",
            "html_url": "https://github.com/JohnTitor",
            "followers_url": "https://api.github.com/users/JohnTitor/followers",
            "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}",
            "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions",
            "organizations_url": "https://api.github.com/users/JohnTitor/orgs",
            "repos_url": "https://api.github.com/users/JohnTitor/repos",
            "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JohnTitor/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "JohnTitor",
                "id": 25030997,
                "node_id": "MDQ6VXNlcjI1MDMwOTk3",
                "avatar_url": "https://avatars3.githubusercontent.com/u/25030997?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/JohnTitor",
                "html_url": "https://github.com/JohnTitor",
                "followers_url": "https://api.github.com/users/JohnTitor/followers",
                "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}",
                "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions",
                "organizations_url": "https://api.github.com/users/JohnTitor/orgs",
                "repos_url": "https://api.github.com/users/JohnTitor/repos",
                "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/JohnTitor/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-13T17:57:26Z",
        "updated_at": "2020-02-13T17:57:30Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69141",
            "html_url": "https://github.com/rust-lang/rust/pull/69141",
            "diff_url": "https://github.com/rust-lang/rust/pull/69141.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69141.patch"
        },
        "body": "This should further reduce spurious failures.\r\n\r\nr? @JohnTitor and/or @ehuss "
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69140",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69140/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69140/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69140/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69140",
        "id": 564849617,
        "node_id": "MDU6SXNzdWU1NjQ4NDk2MTc=",
        "number": 69140,
        "title": "Compiler failed to spawn thread, \"Resource temporarily unavailable\" on hello-world; Ubuntu VM.",
        "user": {
            "login": "Datarecovery09",
            "id": 18166270,
            "node_id": "MDQ6VXNlcjE4MTY2Mjcw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18166270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Datarecovery09",
            "html_url": "https://github.com/Datarecovery09",
            "followers_url": "https://api.github.com/users/Datarecovery09/followers",
            "following_url": "https://api.github.com/users/Datarecovery09/following{/other_user}",
            "gists_url": "https://api.github.com/users/Datarecovery09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Datarecovery09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Datarecovery09/subscriptions",
            "organizations_url": "https://api.github.com/users/Datarecovery09/orgs",
            "repos_url": "https://api.github.com/users/Datarecovery09/repos",
            "events_url": "https://api.github.com/users/Datarecovery09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Datarecovery09/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 650731663,
                "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
                "name": "C-bug",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: This is a bug."
            },
            {
                "id": 9618520,
                "node_id": "MDU6TGFiZWw5NjE4NTIw",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE",
                "name": "I-ICE",
                "color": "e10c02",
                "default": false,
                "description": "Describes an Internal Compilation Error (ICE) or \u2744\ufe0f- a panic bug in the compiler."
            },
            {
                "id": 31942528,
                "node_id": "MDU6TGFiZWwzMTk0MjUyOA==",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/I-nominated",
                "name": "I-nominated",
                "color": "e10c02",
                "default": false,
                "description": "Indicates that an issue has been nominated for prioritizing at the next team triage meeting."
            },
            {
                "id": 123110,
                "node_id": "MDU6TGFiZWwxMjMxMTA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/O-linux",
                "name": "O-linux",
                "color": "6e6ec0",
                "default": false,
                "description": "Operating system: Linux"
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T17:46:56Z",
        "updated_at": "2020-02-13T17:50:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\nSeemingly random bug; cannot reproduce reliably. Tends to vanish for some time when I reboot the system, but always comes back after some time. CPU and RAM are barely used when it occurs.\r\n\r\n### System\r\n```\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 18.04.4 LTS\r\nRelease:        18.04\r\nCodename:       bionic\r\n```\r\n\r\n### Code\r\n```\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\nBug occurs in nightly and stable versions.\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0-nightly (58b834344 2020-02-05)\r\nbinary: rustc\r\ncommit-hash: 58b834344fc7b9185e7a50db1ff24e5eb07dae5e\r\ncommit-date: 2020-02-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n`rustc --crate-name hello --edition=2018 src/main.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=3030fab4ddb057dd -C extra-filename=-3030fab4ddb057dd --out-dir /home/jweber/rust/hello/target/debug/deps -C incremental=/home/jweber/rust/hello/target/debug/incremental -L dependency=/home/jweber/rust/hello/target/debug/deps`\r\nthread '<unnamed>' panicked at 'failed to spawn thread: Os { code: 11, kind: WouldBlock, message: \"Resource temporarily unavailable\" }', /rustc/58b834344fc7b9185e7a50db1ff24e5eb07dae5e/src/libstd/thread/mod.rs:619:5\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1428\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: rust_begin_unwind\r\n             at src/libstd/panicking.rs:378\r\n  13: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n  14: core::option::expect_none_failed\r\n             at src/libcore/option.rs:1199\r\n  15: std::thread::spawn\r\n  16: rustc_codegen_ssa::back::write::spawn_work\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69139",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69139/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69139/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69139/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69139",
        "id": 564846994,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDAzMDgz",
        "number": 69139,
        "title": "clean up E0308 explanation",
        "user": {
            "login": "GuillaumeGomez",
            "id": 3050060,
            "node_id": "MDQ6VXNlcjMwNTAwNjA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3050060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GuillaumeGomez",
            "html_url": "https://github.com/GuillaumeGomez",
            "followers_url": "https://api.github.com/users/GuillaumeGomez/followers",
            "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}",
            "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions",
            "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs",
            "repos_url": "https://api.github.com/users/GuillaumeGomez/repos",
            "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583426710,
                "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
                "name": "S-waiting-on-review",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Awaiting review from the assignee but also interested parties."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "Dylan-DPC",
            "id": 12371125,
            "node_id": "MDQ6VXNlcjEyMzcxMTI1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/12371125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dylan-DPC",
            "html_url": "https://github.com/Dylan-DPC",
            "followers_url": "https://api.github.com/users/Dylan-DPC/followers",
            "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions",
            "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs",
            "repos_url": "https://api.github.com/users/Dylan-DPC/repos",
            "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Dylan-DPC",
                "id": 12371125,
                "node_id": "MDQ6VXNlcjEyMzcxMTI1",
                "avatar_url": "https://avatars1.githubusercontent.com/u/12371125?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Dylan-DPC",
                "html_url": "https://github.com/Dylan-DPC",
                "followers_url": "https://api.github.com/users/Dylan-DPC/followers",
                "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}",
                "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions",
                "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs",
                "repos_url": "https://api.github.com/users/Dylan-DPC/repos",
                "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T17:42:18Z",
        "updated_at": "2020-02-13T20:03:35Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69139",
            "html_url": "https://github.com/rust-lang/rust/pull/69139",
            "diff_url": "https://github.com/rust-lang/rust/pull/69139.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69139.patch"
        },
        "body": "r? @Dylan-DPC "
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69137",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69137/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69137/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69137/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69137",
        "id": 564812364,
        "node_id": "MDU6SXNzdWU1NjQ4MTIzNjQ=",
        "number": 69137,
        "title": "The \"type_alias_impl_trait\" feature has problems handling lifetime parameters.",
        "user": {
            "login": "steffahn",
            "id": 3986214,
            "node_id": "MDQ6VXNlcjM5ODYyMTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3986214?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/steffahn",
            "html_url": "https://github.com/steffahn",
            "followers_url": "https://api.github.com/users/steffahn/followers",
            "following_url": "https://api.github.com/users/steffahn/following{/other_user}",
            "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions",
            "organizations_url": "https://api.github.com/users/steffahn/orgs",
            "repos_url": "https://api.github.com/users/steffahn/repos",
            "events_url": "https://api.github.com/users/steffahn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/steffahn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 122406831,
                "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures",
                "name": "A-closures",
                "color": "f7e101",
                "default": false,
                "description": "Area: closures (`|args| { .. }`)"
            },
            {
                "id": 1775993,
                "node_id": "MDU6TGFiZWwxNzc1OTkz",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes",
                "name": "A-lifetimes",
                "color": "f7e101",
                "default": false,
                "description": "Area: lifetime related"
            },
            {
                "id": 650731663,
                "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
                "name": "C-bug",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: This is a bug."
            },
            {
                "id": 1472502130,
                "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait",
                "name": "F-type_alias_impl_trait",
                "color": "f9c0cc",
                "default": false,
                "description": "`#[feature(type_alias_impl_trait)]`"
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-13T16:42:25Z",
        "updated_at": "2020-02-13T16:50:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI was starting with this function (which does compile on nightly):\r\n```rust\r\n#![feature(unboxed_closures)]\r\n#![feature(type_alias_impl_trait)]\r\nfn curry<'a, A: 'a, B, C, F: Fn(A, B) -> C> (f: &'a F)\r\n    -> impl Fn<(A,), Output = impl FnOnce(B) -> C + 'a> + 'a\r\n{\r\n    move |a| move |b| f(a,b)\r\n}\r\n```\r\nand wanted to give a name to its return type.\r\nThe straightforward approach seems to be _(please correct me if the \"right\" way to do this is different)_:\r\n```rust\r\n#![feature(unboxed_closures)]\r\n#![feature(type_alias_impl_trait)]\r\ntype Curried<'a, A: 'a, B, C, F: Fn(A, B) -> C>\r\n = impl Fn<(A,), Output = impl FnOnce(B) -> C + 'a> + 'a;\r\n\r\nfn curry<'a, A: 'a, B, C, F: Fn(A, B) -> C> (f: &'a F)\r\n    -> Curried<'a, A, B, C, F>\r\n{\r\n    move |a| move |b| f(a,b)\r\n}\r\n```\r\nBut the compiler is currently unhappy with the lifetimes. I'm getting the following.\r\n```\r\nerror: cannot infer an appropriate lifetime\r\n  --> src/main.rs:11:5\r\n   |\r\n6  |  = impl Fn<(A,), Output = impl FnOnce(B) -> C + 'a> + 'a;\r\n   |                           ------------------------ this return type evaluates to the `'static` lifetime...\r\n...\r\n11 |     move |a| move |b| f(a,b)\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^ ...but this borrow...\r\n   |\r\nnote: ...can't outlive the lifetime `'a` as defined on the function body at 8:10\r\n  --> src/main.rs:8:10\r\n   |\r\n8  | fn curry<'a, A: 'a, B, C, F: Fn(A, B) -> C> (f: &'a F)\r\n   |          ^^\r\nhelp: you can add a bound to the return type to make it last less than `'static` and match the lifetime `'a` as defined on the function body at 8:10\r\n   |\r\n9  |     -> Curried<'a, A, B, C, F> + '_\r\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: cannot infer an appropriate lifetime\r\n  --> src/main.rs:11:14\r\n   |\r\n6  |  = impl Fn<(A,), Output = impl FnOnce(B) -> C + 'a> + 'a;\r\n   |                           ------------------------ this return type evaluates to the `'static` lifetime...\r\n...\r\n11 |     move |a| move |b| f(a,b)\r\n   |              ^^^^^^^^^^^^^^^ ...but this borrow...\r\n   |\r\nnote: ...can't outlive the lifetime `'a` as defined on the function body at 8:10\r\n  --> src/main.rs:8:10\r\n   |\r\n8  | fn curry<'a, A: 'a, B, C, F: Fn(A, B) -> C> (f: &'a F)\r\n   |          ^^\r\nhelp: you can add a bound to the return type to make it last less than `'static` and match the lifetime `'a` as defined on the function body at 8:10\r\n   |\r\n9  |     -> Curried<'a, A, B, C, F> + '_\r\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nIt works without the lifetimes (i.e. after removing parametrization over 'a and replacing all occurrences of 'a with 'static), like this:\r\n```rust\r\n#![feature(unboxed_closures)]\r\n#![feature(type_alias_impl_trait)]\r\ntype Curried<A: 'static, B, C, F: Fn(A, B) -> C>\r\n = impl Fn<(A,), Output = impl FnOnce(B) -> C + 'static> + 'static;\r\n\r\nfn curry<A: 'static, B, C, F: Fn(A, B) -> C> (f: &'static F)\r\n    -> Curried<A, B, C, F>\r\n{\r\n    move |a| move |b| f(a,b)\r\n}\r\n\r\nuse std::ops::Add;\r\nfn main() {\r\n    let x = curry(&i32::add)(1)(2);\r\n    println!(\"{}\", x); // prints \"3\"\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\nAppears in current `master` (which, I guess, means it goes into `nightly-2020-02-14`).\r\nCurrent behavior only since #67844 was fixed. Before that, this code triggered an ICE.\r\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69136",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69136/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69136/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69136/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69136",
        "id": 564799004,
        "node_id": "MDU6SXNzdWU1NjQ3OTkwMDQ=",
        "number": 69136,
        "title": "ICE: Region parameter out of range when substituting in region 'a",
        "user": {
            "login": "steffahn",
            "id": 3986214,
            "node_id": "MDQ6VXNlcjM5ODYyMTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3986214?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/steffahn",
            "html_url": "https://github.com/steffahn",
            "followers_url": "https://api.github.com/users/steffahn/followers",
            "following_url": "https://api.github.com/users/steffahn/following{/other_user}",
            "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions",
            "organizations_url": "https://api.github.com/users/steffahn/orgs",
            "repos_url": "https://api.github.com/users/steffahn/repos",
            "events_url": "https://api.github.com/users/steffahn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/steffahn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 650731663,
                "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
                "name": "C-bug",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: This is a bug."
            },
            {
                "id": 1472502130,
                "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait",
                "name": "F-type_alias_impl_trait",
                "color": "f9c0cc",
                "default": false,
                "description": "`#[feature(type_alias_impl_trait)]`"
            },
            {
                "id": 9618520,
                "node_id": "MDU6TGFiZWw5NjE4NTIw",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE",
                "name": "I-ICE",
                "color": "e10c02",
                "default": false,
                "description": "Describes an Internal Compilation Error (ICE) or \u2744\ufe0f- a panic bug in the compiler."
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            },
            {
                "id": 1472563007,
                "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly",
                "name": "requires-nightly",
                "color": "76dcde",
                "default": false,
                "description": "This issue requires a nightly compiler in some way."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-13T16:22:37Z",
        "updated_at": "2020-02-13T16:50:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```rust\r\n#![feature(type_alias_impl_trait)]\r\n\r\ntrait SomeTrait where {}\r\n\r\ntrait WithAssoc<A> where {\r\n\ttype AssocType;\r\n}\r\n\r\ntype Return<A> // 'a is not in scope\r\n = impl WithAssoc<A, AssocType = impl SomeTrait + 'a>;\r\n\r\nfn my_fun() -> Return<()> {}\r\n\r\nfn main() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nAppears in current `master` (which, I guess, means it goes into `nightly-2020-02-14`).\r\nPossibly related to #67844.\r\nNote that the code should not compile. The ICE appears since #69008.\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0261]: use of undeclared lifetime name `'a`\r\n  --> src/main.rs:11:51\r\n   |\r\n10 | type Return<A> // 'a is not in scope\r\n   |             - help: consider introducing lifetime `'a` here: `'a,`\r\n11 |  = impl WithAssoc<A, AssocType = impl SomeTrait + 'a>;\r\n   |                                                   ^^ undeclared lifetime\r\n\r\nerror: internal compiler error: src/librustc/ty/subst.rs:496: Region parameter out of range when substituting in region 'a (root type=None) (index=0)\r\n\r\nthread 'rustc' panicked at 'Box<Any>', <::std::macros::panic macros>:2:4\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-dev running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0261`.\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0261]: use of undeclared lifetime name `'a`\r\n  --> src/main.rs:11:51\r\n   |\r\n10 | type Return<A> // 'a is not in scope\r\n   |             - help: consider introducing lifetime `'a` here: `'a,`\r\n11 |  = impl WithAssoc<A, AssocType = impl SomeTrait + 'a>;\r\n   |                                                   ^^ undeclared lifetime\r\n\r\nerror: internal compiler error: src/librustc/ty/subst.rs:496: Region parameter out of range when substituting in region 'a (root type=None) (index=0)\r\n\r\nthread 'rustc' panicked at 'Box<Any>', <::std::macros::panic macros>:2:4\r\nstack backtrace:\r\n   0: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n   1: core::fmt::write\r\n   2: std::io::Write::write_fmt\r\n   3: std::sys_common::backtrace::print\r\n   4: std::panicking::default_hook::{{closure}}\r\n   5: std::panicking::default_hook\r\n   6: rustc_driver::report_ice\r\n   7: std::panicking::rust_panic_with_hook\r\n   8: std::panicking::begin_panic\r\n   9: rustc_errors::HandlerInner::span_bug\r\n  10: rustc_errors::Handler::span_bug\r\n  11: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  12: rustc::ty::context::tls::with_opt::{{closure}}\r\n  13: rustc::ty::context::tls::with_opt\r\n  14: rustc::util::bug::opt_span_bug_fmt\r\n  15: rustc::util::bug::span_bug_fmt\r\n  16: <rustc::ty::subst::SubstFolder as rustc::ty::fold::TypeFolder>::fold_region\r\n  17: rustc::ty::fold::TypeFoldable::fold_with\r\n  18: <rustc::ty::subst::SubstFolder as rustc::ty::fold::TypeFolder>::fold_binder\r\n  19: rustc::ty::subst::Subst::subst\r\n  20: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  21: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend\r\n  22: rustc::ty::GenericPredicates::instantiate_into\r\n  23: rustc::ty::GenericPredicates::instantiate\r\n  24: rustc::infer::opaque_types::Instantiator::fold_opaque_ty\r\n  25: <rustc::ty::fold::BottomUpFolder<F,G,H> as rustc::ty::fold::TypeFolder>::fold_ty\r\n  26: rustc::ty::fold::TypeFoldable::fold_with\r\n  27: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for rustc::ty::sty::Binder<T>>::fold_with\r\n  28: rustc::ty::fold::TypeFoldable::fold_with\r\n  29: rustc::infer::opaque_types::Instantiator::instantiate_opaque_types_in_map\r\n  30: rustc::infer::opaque_types::Instantiator::fold_opaque_ty\r\n  31: <rustc::ty::fold::BottomUpFolder<F,G,H> as rustc::ty::fold::TypeFolder>::fold_ty\r\n  32: rustc::infer::opaque_types::Instantiator::instantiate_opaque_types_in_map\r\n  33: rustc::infer::opaque_types::<impl rustc::infer::InferCtxt>::instantiate_opaque_types\r\n  34: rustc_typeck::check::FnCtxt::instantiate_opaque_types_from_value\r\n  35: rustc_typeck::check::check_fn\r\n  36: rustc::ty::context::GlobalCtxt::enter_local\r\n  37: rustc::infer::InferCtxtBuilder::enter\r\n  38: rustc_typeck::check::typeck_tables_of_with_fallback\r\n  39: rustc_typeck::check::typeck_tables_of\r\n  40: rustc::ty::query::__query_compute::typeck_tables_of\r\n  41: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  42: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  44: rustc_typeck::collect::find_opaque_ty_constraints::ConstraintLocator::check\r\n  45: <rustc_typeck::collect::find_opaque_ty_constraints::ConstraintLocator as rustc_hir::intravisit::Visitor>::visit_item\r\n  46: rustc_hir::intravisit::walk_crate\r\n  47: rustc_typeck::collect::find_opaque_ty_constraints\r\n  48: rustc_typeck::collect::type_of\r\n  49: rustc::ty::query::__query_compute::type_of\r\n  50: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::type_of>::compute\r\n  51: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  52: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  53: <rustc_typeck::collect::CollectItemTypesVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  54: rustc::hir::map::Map::visit_item_likes_in_module\r\n  55: rustc_typeck::collect::collect_mod_item_types\r\n  56: rustc::ty::query::__query_compute::collect_mod_item_types\r\n  57: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_mod_item_types>::compute\r\n  58: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  59: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  60: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  61: rustc_session::session::Session::track_errors\r\n  62: rustc_typeck::check_crate\r\n  63: rustc_interface::passes::analysis\r\n  64: rustc::ty::query::__query_compute::analysis\r\n  65: rustc::dep_graph::graph::DepGraph::with_eval_always_task\r\n  66: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  67: rustc::ty::context::tls::enter_global\r\n  68: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  69: scoped_tls::ScopedKey<T>::set\r\n  70: syntax::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-dev running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `my_fun`\r\n#1 [type_of] processing `Return`\r\n#2 [collect_mod_item_types] collecting item types in top-level module\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0261`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69135",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69135/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69135/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69135/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69135",
        "id": 564794984,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTYwNDIw",
        "number": 69135,
        "title": "Spelling error \"represening\" to \"representing\"",
        "user": {
            "login": "drewrip",
            "id": 22136823,
            "node_id": "MDQ6VXNlcjIyMTM2ODIz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/22136823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/drewrip",
            "html_url": "https://github.com/drewrip",
            "followers_url": "https://api.github.com/users/drewrip/followers",
            "following_url": "https://api.github.com/users/drewrip/following{/other_user}",
            "gists_url": "https://api.github.com/users/drewrip/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/drewrip/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/drewrip/subscriptions",
            "organizations_url": "https://api.github.com/users/drewrip/orgs",
            "repos_url": "https://api.github.com/users/drewrip/repos",
            "events_url": "https://api.github.com/users/drewrip/events{/privacy}",
            "received_events_url": "https://api.github.com/users/drewrip/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583437191,
                "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors",
                "name": "S-waiting-on-bors",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "matthewjasper",
            "id": 20113453,
            "node_id": "MDQ6VXNlcjIwMTEzNDUz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/20113453?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthewjasper",
            "html_url": "https://github.com/matthewjasper",
            "followers_url": "https://api.github.com/users/matthewjasper/followers",
            "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions",
            "organizations_url": "https://api.github.com/users/matthewjasper/orgs",
            "repos_url": "https://api.github.com/users/matthewjasper/repos",
            "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthewjasper/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "matthewjasper",
                "id": 20113453,
                "node_id": "MDQ6VXNlcjIwMTEzNDUz",
                "avatar_url": "https://avatars1.githubusercontent.com/u/20113453?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matthewjasper",
                "html_url": "https://github.com/matthewjasper",
                "followers_url": "https://api.github.com/users/matthewjasper/followers",
                "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}",
                "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions",
                "organizations_url": "https://api.github.com/users/matthewjasper/orgs",
                "repos_url": "https://api.github.com/users/matthewjasper/repos",
                "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matthewjasper/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-02-13T16:16:22Z",
        "updated_at": "2020-02-13T16:18:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69135",
            "html_url": "https://github.com/rust-lang/rust/pull/69135",
            "diff_url": "https://github.com/rust-lang/rust/pull/69135.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69135.patch"
        },
        "body": "Small spelling mistake I noticed when looking through the Rust lexer."
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69134",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69134/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69134/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69134/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69134",
        "id": 564779078,
        "node_id": "MDU6SXNzdWU1NjQ3NzkwNzg=",
        "number": 69134,
        "title": "LLVM globals corresponding to miri allocations should be named alloc123.",
        "user": {
            "login": "eddyb",
            "id": 77424,
            "node_id": "MDQ6VXNlcjc3NDI0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/77424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eddyb",
            "html_url": "https://github.com/eddyb",
            "followers_url": "https://api.github.com/users/eddyb/followers",
            "following_url": "https://api.github.com/users/eddyb/following{/other_user}",
            "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions",
            "organizations_url": "https://api.github.com/users/eddyb/orgs",
            "repos_url": "https://api.github.com/users/eddyb/repos",
            "events_url": "https://api.github.com/users/eddyb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eddyb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 234956,
                "node_id": "MDU6TGFiZWwyMzQ5NTY=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen",
                "name": "A-codegen",
                "color": "f7e101",
                "default": false,
                "description": "Area: Code generation"
            },
            {
                "id": 234902,
                "node_id": "MDU6TGFiZWwyMzQ5MDI=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement",
                "name": "C-enhancement",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: A PR with an enhancement or a proposed on in an issue."
            },
            {
                "id": 36996,
                "node_id": "MDU6TGFiZWwzNjk5Ng==",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy",
                "name": "E-easy",
                "color": "02e10c",
                "default": false,
                "description": "Call for participation: Experience needed to fix: Easy / not much"
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T15:54:21Z",
        "updated_at": "2020-02-13T16:49:23Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "That is, if `-Zfewer-names` is `false` (usually only because of `--emit=llvm-ir`), we should use the same name for LLVM globals we generate out of miri allocs as #67133 does in MIR output (`allocN`).\r\n\r\nThis way, we can easily see the mapping between MIR and LLVM IR (and it shouldn't be any costlier for regular compilation, which would continue to use unnamed globals).\r\n\r\nRelevant code (btw this could probably use extra caching keyed on `AllocId`?):\r\nhttps://github.com/rust-lang/rust/blob/be493fe8cc40c3d3f6030a1313c1ff747fce770d/src/librustc_codegen_llvm/common.rs#L260-L267\r\n\r\ncc @rust-lang/wg-mir-opt @bjorn3 "
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69132",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69132/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69132/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69132/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69132",
        "id": 564724305,
        "node_id": "MDU6SXNzdWU1NjQ3MjQzMDU=",
        "number": 69132,
        "title": "better warning when passing format string and variable in wrong order to format/println",
        "user": {
            "login": "matthiaskrgr",
            "id": 476013,
            "node_id": "MDQ6VXNlcjQ3NjAxMw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/476013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthiaskrgr",
            "html_url": "https://github.com/matthiaskrgr",
            "followers_url": "https://api.github.com/users/matthiaskrgr/followers",
            "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions",
            "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs",
            "repos_url": "https://api.github.com/users/matthiaskrgr/repos",
            "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 235791,
                "node_id": "MDU6TGFiZWwyMzU3OTE=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics",
                "name": "A-diagnostics",
                "color": "f7e101",
                "default": false,
                "description": "Area: Error messages"
            },
            {
                "id": 234902,
                "node_id": "MDU6TGFiZWwyMzQ5MDI=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement",
                "name": "C-enhancement",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: A PR with an enhancement or a proposed on in an issue."
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-13T14:34:32Z",
        "updated_at": "2020-02-13T16:01:58Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "I accidentally came up with something like this\r\n````rust\r\nfn main() {\r\n    let greeting = \"hello world\";\r\n\r\n    println!(greeting, \"{}\");\r\n}\r\n````\r\nrustc suggested\r\n````\r\nerror: format argument must be a string literal\r\n --> src/main.rs:4:14\r\n  |\r\n4 |     println!(greeting, \"{}\");\r\n  |              ^^^^^^^^\r\n  |\r\nhelp: you might be missing a string literal to format with\r\n  |\r\n4 |     println!(\"{} {}\", greeting, \"{}\");\r\n  |              ^^^^^^^^\r\n\r\n````\r\n\r\nbut it would be better to suggested swapping the order of `greeting` and `\"{}\"` in the case that the format-string is valid.\r\n\r\n```\r\nhelp: did you intend to swap the variable and format-string?\r\n |\r\n4|   println!(\"{}\", greeting);\r\n | \r\n````"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69131",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69131/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69131/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69131/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69131",
        "id": 564720247,
        "node_id": "MDU6SXNzdWU1NjQ3MjAyNDc=",
        "number": 69131,
        "title": "Weird error message when pub crate is implemented on inner mod",
        "user": {
            "login": "alex179ohm",
            "id": 569010,
            "node_id": "MDQ6VXNlcjU2OTAxMA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/569010?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex179ohm",
            "html_url": "https://github.com/alex179ohm",
            "followers_url": "https://api.github.com/users/alex179ohm/followers",
            "following_url": "https://api.github.com/users/alex179ohm/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex179ohm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex179ohm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex179ohm/subscriptions",
            "organizations_url": "https://api.github.com/users/alex179ohm/orgs",
            "repos_url": "https://api.github.com/users/alex179ohm/repos",
            "events_url": "https://api.github.com/users/alex179ohm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex179ohm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 650731663,
                "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
                "name": "C-bug",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: This is a bug."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-13T14:28:16Z",
        "updated_at": "2020-02-13T14:44:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicate the bug.\r\n-->\r\nWhen an inner mod publicly re-exports function,enum or struct with the `pub(crate)` attribute a non-clear error is showed by cargo check and cargo build. \r\n\r\nconsider a crate lib with the following tree:\r\n```\r\ntst/\r\n    src/\r\n     lib.rs\r\n     tmod/\r\n       mod.rs\r\nCargo.toml\r\n```\r\n\r\nwhere the lib.rs correctly declare the mod `tmod` as following:\r\n```rust\r\n// lib.rs\r\nmod tmod;\r\n```\r\nand the mod.rs content is the following:\r\n```rust\r\n// mod.rs\r\npub use magic::magic;\r\npub use magic::Magic;\r\npub use magic::Emagic;\r\n\r\npub mod magic {\r\n       pub(crate) fn magic() {}\r\n       pub(crate) struct Magic;\r\n       pub(crate) enum EMagic {}\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\nI suppose that the correct behavior should be an error message showing me that the `(crate)` attribute is erroneously located on the inner mod and the `pub use` re-exporting lines of the mod.rs file have to be rewritten as `pub(crate) use ...`.\r\nBut I'm not sure about that, the [rust lang reference](https://doc.rust-lang.org/reference/visibility-and-privacy.html) doesn't cover this case, maybe even a successfully build should be fine.\r\n\r\nInstead, this happened:\r\ncargo check and cargo build both shows this unhelpful error:\r\n```\r\nerror[E0364]: `magic` is private, and cannot be re-exported\r\n --> src/tmod/mod.rs:3:9\r\n  |\r\n3 | pub use magic::magic;\r\n  |         ^^^^^^^^^^^^\r\n  |\r\nnote: consider marking `magic` as `pub` in the imported module\r\n --> src/tmod/mod.rs:3:9\r\n  |\r\n3 | pub use magic::magic;\r\n  |         ^^^^^^^^^^^^\r\n\r\nerror[E0364]: `Magic` is private, and cannot be re-exported\r\n --> src/tmod/mod.rs:4:9\r\n  |\r\n4 | pub use magic::Magic;\r\n  |         ^^^^^^^^^^^^\r\n  |\r\nnote: consider marking `Magic` as `pub` in the imported module\r\n --> src/tmod/mod.rs:4:9\r\n  |\r\n4 | pub use magic::Magic;\r\n  |         ^^^^^^^^^^^^\r\n\r\nerror[E0365]: `EMagic` is private, and cannot be re-exported\r\n --> src/tmod/mod.rs:5:9\r\n  |\r\n5 | pub use magic::EMagic;\r\n  |         ^^^^^^^^^^^^^ re-export of private `EMagic`\r\n  |\r\n  = note: consider declaring type or module `EMagic` with `pub`\r\n```\r\nnote that changing the mod.rs file to publicly re-exports the inner mod items with (crate) attribute as follows:\r\n```rust\r\npub(crate) use magic::magic;\r\n\r\npub mod magic {\r\n       pub fn magic() {}\r\n}\r\n```\r\nor even as follows:\r\n```rust\r\npub(crate) use magic::magic;\r\npub mod magic {\r\n       pub(crate) fn magic() {}\r\n}\r\n```\r\nworks fine and build the crate succefully.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the bug\r\nalso exists in the beta or nightly versions.\r\n-->\r\nthis happens on both stable and nigtly releases\r\n`rustup show`\r\n```\r\nDefault host: x86_64-unknown-linux-gnu\r\nrustup home:  /home/alex/.rustup\r\n\r\ninstalled toolchains\r\n--------------------\r\n\r\nstable-x86_64-unknown-linux-gnu (default)\r\nnightly-x86_64-unknown-linux-gnu\r\n\r\nactive toolchain\r\n----------------\r\n\r\nstable-x86_64-unknown-linux-gnu (default)\r\nrustc 1.41.0 (5e1a79984 2020-01-27)\r\n```\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.41.0 (5e1a79984 2020-01-27)\r\nbinary: rustc\r\ncommit-hash: 5e1a799842ba6ed4a57e91f7ab9435947482f7d8\r\ncommit-date: 2020-01-27\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.41.0\r\nLLVM version: 9.0\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69130",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69130/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69130/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69130/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69130",
        "id": 564671841,
        "node_id": "MDU6SXNzdWU1NjQ2NzE4NDE=",
        "number": 69130,
        "title": "internal compiler error: \"byte index 4 is not a char boundary\"",
        "user": {
            "login": "dwrensha",
            "id": 495768,
            "node_id": "MDQ6VXNlcjQ5NTc2OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/495768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dwrensha",
            "html_url": "https://github.com/dwrensha",
            "followers_url": "https://api.github.com/users/dwrensha/followers",
            "following_url": "https://api.github.com/users/dwrensha/following{/other_user}",
            "gists_url": "https://api.github.com/users/dwrensha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dwrensha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dwrensha/subscriptions",
            "organizations_url": "https://api.github.com/users/dwrensha/orgs",
            "repos_url": "https://api.github.com/users/dwrensha/repos",
            "events_url": "https://api.github.com/users/dwrensha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dwrensha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 239393,
                "node_id": "MDU6TGFiZWwyMzkzOTM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve",
                "name": "A-resolve",
                "color": "f7e101",
                "default": false,
                "description": "Area: Path resolution"
            },
            {
                "id": 37544,
                "node_id": "MDU6TGFiZWwzNzU0NA==",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem",
                "name": "A-typesystem",
                "color": "f7e101",
                "default": false,
                "description": "Area: The type system"
            },
            {
                "id": 650731663,
                "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
                "name": "C-bug",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: This is a bug."
            },
            {
                "id": 9618520,
                "node_id": "MDU6TGFiZWw5NjE4NTIw",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE",
                "name": "I-ICE",
                "color": "e10c02",
                "default": false,
                "description": "Describes an Internal Compilation Error (ICE) or \u2744\ufe0f- a panic bug in the compiler."
            },
            {
                "id": 60344715,
                "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium",
                "name": "P-medium",
                "color": "eb6420",
                "default": false,
                "description": "Medium priority"
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            },
            {
                "id": 262252628,
                "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta",
                "name": "regression-from-stable-to-beta",
                "color": "e4008a",
                "default": false,
                "description": "Performance or correctness regression from stable to beta."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T13:09:13Z",
        "updated_at": "2020-02-13T15:32:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "I'm seeing an internal compiler error on the following input (found by [fuzz-rustc](https://github.com/dwrensha/fuzz-rustc)):\r\n\r\n```rust\r\nenum F {\r\nM (\u00a7& u8)}\r\nfn main() {}\r\n```\r\n\r\n```\r\n$ rustc main.rs\r\nerror: unknown start of token: \\u{a7}\r\n --> main.rs:2:4\r\n  |\r\n2 | M (\u00a7& u8)}\r\n  |    ^\r\n\r\nerror[E0106]: missing lifetime specifier\r\n --> main.rs:2:5\r\n  |\r\n2 | M (\u00a7& u8)}\r\n  |     ^ expected named lifetime parameter\r\n  |\r\nthread 'rustc' panicked at 'byte index 4 is not a char boundary; it is inside '\u00a7' (bytes 3..5) of `M (\u00a7& u8)}`', src/libcore/str/mod.rs:2154:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (a1912f2e8 2020-02-12) running on x86_64-unknown-linux-gnu\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0106`.\r\n```\r\n\r\nThe error happens on `beta` and `nightly` but not on `stable`."
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69129",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69129/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69129/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69129/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69129",
        "id": 564667530,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODU1MjI4",
        "number": 69129,
        "title": "Transition macro_legacy_warnings into a hard error",
        "user": {
            "login": "Centril",
            "id": 855702,
            "node_id": "MDQ6VXNlcjg1NTcwMg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/855702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Centril",
            "html_url": "https://github.com/Centril",
            "followers_url": "https://api.github.com/users/Centril/followers",
            "following_url": "https://api.github.com/users/Centril/following{/other_user}",
            "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Centril/subscriptions",
            "organizations_url": "https://api.github.com/users/Centril/orgs",
            "repos_url": "https://api.github.com/users/Centril/repos",
            "events_url": "https://api.github.com/users/Centril/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Centril/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 281249002,
                "node_id": "MDU6TGFiZWwyODEyNDkwMDI=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-crater",
                "name": "S-waiting-on-crater",
                "color": "c2cccc",
                "default": false,
                "description": "Status: Waiting on a crater run to be completed."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "petrochenkov",
            "id": 5751617,
            "node_id": "MDQ6VXNlcjU3NTE2MTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5751617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrochenkov",
            "html_url": "https://github.com/petrochenkov",
            "followers_url": "https://api.github.com/users/petrochenkov/followers",
            "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions",
            "organizations_url": "https://api.github.com/users/petrochenkov/orgs",
            "repos_url": "https://api.github.com/users/petrochenkov/repos",
            "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrochenkov/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "petrochenkov",
                "id": 5751617,
                "node_id": "MDQ6VXNlcjU3NTE2MTc=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/5751617?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/petrochenkov",
                "html_url": "https://github.com/petrochenkov",
                "followers_url": "https://api.github.com/users/petrochenkov/followers",
                "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}",
                "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions",
                "organizations_url": "https://api.github.com/users/petrochenkov/orgs",
                "repos_url": "https://api.github.com/users/petrochenkov/repos",
                "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}",
                "received_events_url": "https://api.github.com/users/petrochenkov/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-02-13T13:01:22Z",
        "updated_at": "2020-02-13T15:54:51Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69129",
            "html_url": "https://github.com/rust-lang/rust/pull/69129",
            "diff_url": "https://github.com/rust-lang/rust/pull/69129.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69129.patch"
        },
        "body": "Fixes https://github.com/rust-lang/rust/issues/67098.\r\n\r\nr? @petrochenkov "
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69128",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69128/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69128/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69128/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69128",
        "id": 564618243,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODE0NDQ1",
        "number": 69128,
        "title": "Fix extra subslice lowering",
        "user": {
            "login": "Centril",
            "id": 855702,
            "node_id": "MDQ6VXNlcjg1NTcwMg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/855702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Centril",
            "html_url": "https://github.com/Centril",
            "followers_url": "https://api.github.com/users/Centril/followers",
            "following_url": "https://api.github.com/users/Centril/following{/other_user}",
            "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Centril/subscriptions",
            "organizations_url": "https://api.github.com/users/Centril/orgs",
            "repos_url": "https://api.github.com/users/Centril/repos",
            "events_url": "https://api.github.com/users/Centril/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Centril/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583426710,
                "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
                "name": "S-waiting-on-review",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Awaiting review from the assignee but also interested parties."
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            },
            {
                "id": 203428830,
                "node_id": "MDU6TGFiZWwyMDM0Mjg4MzA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/beta-accepted",
                "name": "beta-accepted",
                "color": "1e76d9",
                "default": false,
                "description": "Accepted for backporting to the compiler in the beta channel."
            },
            {
                "id": 201991156,
                "node_id": "MDU6TGFiZWwyMDE5OTExNTY=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/beta-nominated",
                "name": "beta-nominated",
                "color": "1e76d9",
                "default": false,
                "description": "Nominated for backporting to the compiler in the beta channel."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "davidtwco",
            "id": 1295100,
            "node_id": "MDQ6VXNlcjEyOTUxMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1295100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidtwco",
            "html_url": "https://github.com/davidtwco",
            "followers_url": "https://api.github.com/users/davidtwco/followers",
            "following_url": "https://api.github.com/users/davidtwco/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions",
            "organizations_url": "https://api.github.com/users/davidtwco/orgs",
            "repos_url": "https://api.github.com/users/davidtwco/repos",
            "events_url": "https://api.github.com/users/davidtwco/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidtwco/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidtwco",
                "id": 1295100,
                "node_id": "MDQ6VXNlcjEyOTUxMDA=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1295100?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidtwco",
                "html_url": "https://github.com/davidtwco",
                "followers_url": "https://api.github.com/users/davidtwco/followers",
                "following_url": "https://api.github.com/users/davidtwco/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions",
                "organizations_url": "https://api.github.com/users/davidtwco/orgs",
                "repos_url": "https://api.github.com/users/davidtwco/repos",
                "events_url": "https://api.github.com/users/davidtwco/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidtwco/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T11:24:07Z",
        "updated_at": "2020-02-13T15:14:14Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69128",
            "html_url": "https://github.com/rust-lang/rust/pull/69128",
            "diff_url": "https://github.com/rust-lang/rust/pull/69128.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69128.patch"
        },
        "body": "We are currently ICEing on e.g.\r\n```rust\r\nfn main() {\r\n    let [.., b @ ..] = [1, 2];\r\n    b;\r\n}\r\n```\r\nThis happens because `b @ ..` registers a binding such that `b;` is OK, but then we forget to lower that binding in `rustc_ast_lowering`.\r\n\r\nFixes #69103.\r\n\r\nr? @davidtwco "
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69127",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69127/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69127/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69127/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69127",
        "id": 564617267,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODEzNTgy",
        "number": 69127,
        "title": "Enable use after scope detection in the new LLVM pass manager",
        "user": {
            "login": "tmiasko",
            "id": 51362316,
            "node_id": "MDQ6VXNlcjUxMzYyMzE2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/51362316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tmiasko",
            "html_url": "https://github.com/tmiasko",
            "followers_url": "https://api.github.com/users/tmiasko/followers",
            "following_url": "https://api.github.com/users/tmiasko/following{/other_user}",
            "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions",
            "organizations_url": "https://api.github.com/users/tmiasko/orgs",
            "repos_url": "https://api.github.com/users/tmiasko/repos",
            "events_url": "https://api.github.com/users/tmiasko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tmiasko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583437191,
                "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors",
                "name": "S-waiting-on-bors",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "alexcrichton",
            "id": 64996,
            "node_id": "MDQ6VXNlcjY0OTk2",
            "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexcrichton",
            "html_url": "https://github.com/alexcrichton",
            "followers_url": "https://api.github.com/users/alexcrichton/followers",
            "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions",
            "organizations_url": "https://api.github.com/users/alexcrichton/orgs",
            "repos_url": "https://api.github.com/users/alexcrichton/repos",
            "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexcrichton/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "alexcrichton",
                "id": 64996,
                "node_id": "MDQ6VXNlcjY0OTk2",
                "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/alexcrichton",
                "html_url": "https://github.com/alexcrichton",
                "followers_url": "https://api.github.com/users/alexcrichton/followers",
                "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}",
                "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions",
                "organizations_url": "https://api.github.com/users/alexcrichton/orgs",
                "repos_url": "https://api.github.com/users/alexcrichton/repos",
                "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}",
                "received_events_url": "https://api.github.com/users/alexcrichton/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-02-13T11:23:06Z",
        "updated_at": "2020-02-13T11:28:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69127",
            "html_url": "https://github.com/rust-lang/rust/pull/69127",
            "diff_url": "https://github.com/rust-lang/rust/pull/69127.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69127.patch"
        },
        "body": "Implementation of 08a1c566a792dcf9657d293155f7ada87746bb65 for the new LLVM pass manager, support for which landed in the meantime."
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69126",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69126/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69126/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69126/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69126",
        "id": 564580630,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0NzgzOTMw",
        "number": 69126,
        "title": "miri: fix exact_div",
        "user": {
            "login": "RalfJung",
            "id": 330628,
            "node_id": "MDQ6VXNlcjMzMDYyOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/330628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RalfJung",
            "html_url": "https://github.com/RalfJung",
            "followers_url": "https://api.github.com/users/RalfJung/followers",
            "following_url": "https://api.github.com/users/RalfJung/following{/other_user}",
            "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions",
            "organizations_url": "https://api.github.com/users/RalfJung/orgs",
            "repos_url": "https://api.github.com/users/RalfJung/repos",
            "events_url": "https://api.github.com/users/RalfJung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RalfJung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583437191,
                "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors",
                "name": "S-waiting-on-bors",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "oli-obk",
            "id": 332036,
            "node_id": "MDQ6VXNlcjMzMjAzNg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/332036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oli-obk",
            "html_url": "https://github.com/oli-obk",
            "followers_url": "https://api.github.com/users/oli-obk/followers",
            "following_url": "https://api.github.com/users/oli-obk/following{/other_user}",
            "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions",
            "organizations_url": "https://api.github.com/users/oli-obk/orgs",
            "repos_url": "https://api.github.com/users/oli-obk/repos",
            "events_url": "https://api.github.com/users/oli-obk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oli-obk/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "oli-obk",
                "id": 332036,
                "node_id": "MDQ6VXNlcjMzMjAzNg==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/332036?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/oli-obk",
                "html_url": "https://github.com/oli-obk",
                "followers_url": "https://api.github.com/users/oli-obk/followers",
                "following_url": "https://api.github.com/users/oli-obk/following{/other_user}",
                "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions",
                "organizations_url": "https://api.github.com/users/oli-obk/orgs",
                "repos_url": "https://api.github.com/users/oli-obk/repos",
                "events_url": "https://api.github.com/users/oli-obk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/oli-obk/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-02-13T10:22:00Z",
        "updated_at": "2020-02-13T17:25:14Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69126",
            "html_url": "https://github.com/rust-lang/rust/pull/69126",
            "diff_url": "https://github.com/rust-lang/rust/pull/69126.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69126.patch"
        },
        "body": "Turns out `exact_div` was relying on the broken behavior of `Rem` for `int_min % -1` that was fixed in https://github.com/rust-lang/rust/pull/69002. This PR fixes `exact_div`.\r\n\r\nInside rustc, `exact_div` is only used in a single place where the divisor is always positive (in `ptr_offset_from`), so we cannot test the fix in rustc. The Miri test suite covers this through the `exact_div` intrinsic, though (and it is how I found out).\r\n\r\nOne step to https://github.com/rust-lang/rust/issues/69117 (then we also need to address build failures introduced by https://github.com/rust-lang/rust/pull/68969)\r\n\r\nr? @oli-obk "
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69125",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69125/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69125/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69125/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69125",
        "id": 564543677,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0NzUzNzA1",
        "number": 69125,
        "title": "Add comment to SGX entry code",
        "user": {
            "login": "jethrogb",
            "id": 1132307,
            "node_id": "MDQ6VXNlcjExMzIzMDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1132307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jethrogb",
            "html_url": "https://github.com/jethrogb",
            "followers_url": "https://api.github.com/users/jethrogb/followers",
            "following_url": "https://api.github.com/users/jethrogb/following{/other_user}",
            "gists_url": "https://api.github.com/users/jethrogb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jethrogb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jethrogb/subscriptions",
            "organizations_url": "https://api.github.com/users/jethrogb/orgs",
            "repos_url": "https://api.github.com/users/jethrogb/repos",
            "events_url": "https://api.github.com/users/jethrogb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jethrogb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583437191,
                "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors",
                "name": "S-waiting-on-bors",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nagisa",
            "id": 679122,
            "node_id": "MDQ6VXNlcjY3OTEyMg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/679122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nagisa",
            "html_url": "https://github.com/nagisa",
            "followers_url": "https://api.github.com/users/nagisa/followers",
            "following_url": "https://api.github.com/users/nagisa/following{/other_user}",
            "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions",
            "organizations_url": "https://api.github.com/users/nagisa/orgs",
            "repos_url": "https://api.github.com/users/nagisa/repos",
            "events_url": "https://api.github.com/users/nagisa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nagisa/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nagisa",
                "id": 679122,
                "node_id": "MDQ6VXNlcjY3OTEyMg==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/679122?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nagisa",
                "html_url": "https://github.com/nagisa",
                "followers_url": "https://api.github.com/users/nagisa/followers",
                "following_url": "https://api.github.com/users/nagisa/following{/other_user}",
                "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions",
                "organizations_url": "https://api.github.com/users/nagisa/orgs",
                "repos_url": "https://api.github.com/users/nagisa/repos",
                "events_url": "https://api.github.com/users/nagisa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nagisa/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-02-13T09:17:59Z",
        "updated_at": "2020-02-13T11:38:56Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69125",
            "html_url": "https://github.com/rust-lang/rust/pull/69125",
            "diff_url": "https://github.com/rust-lang/rust/pull/69125.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69125.patch"
        },
        "body": "Meant to force push this to be included in #69040, but forgot\r\n\r\nr? @nagisa"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69124",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69124/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69124/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69124/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69124",
        "id": 564542828,
        "node_id": "MDU6SXNzdWU1NjQ1NDI4Mjg=",
        "number": 69124,
        "title": "Cannot compiling from source",
        "user": {
            "login": "paledega",
            "id": 38860643,
            "node_id": "MDQ6VXNlcjM4ODYwNjQz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/38860643?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paledega",
            "html_url": "https://github.com/paledega",
            "followers_url": "https://api.github.com/users/paledega/followers",
            "following_url": "https://api.github.com/users/paledega/following{/other_user}",
            "gists_url": "https://api.github.com/users/paledega/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paledega/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paledega/subscriptions",
            "organizations_url": "https://api.github.com/users/paledega/orgs",
            "repos_url": "https://api.github.com/users/paledega/repos",
            "events_url": "https://api.github.com/users/paledega/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paledega/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-02-13T09:16:34Z",
        "updated_at": "2020-02-13T17:00:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "![Screenshot_2020-02-13_09-16-19](https://user-images.githubusercontent.com/38860643/74419250-8508ab00-4e41-11ea-9666-cc34f7ca7996.png)\r\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69123",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69123/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69123/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69123/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69123",
        "id": 564519225,
        "node_id": "MDU6SXNzdWU1NjQ1MTkyMjU=",
        "number": 69123,
        "title": "Unhelpful suggestion for \"cannot infer type\" error",
        "user": {
            "login": "Sherlock-Holo",
            "id": 10096425,
            "node_id": "MDQ6VXNlcjEwMDk2NDI1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10096425?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sherlock-Holo",
            "html_url": "https://github.com/Sherlock-Holo",
            "followers_url": "https://api.github.com/users/Sherlock-Holo/followers",
            "following_url": "https://api.github.com/users/Sherlock-Holo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sherlock-Holo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sherlock-Holo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sherlock-Holo/subscriptions",
            "organizations_url": "https://api.github.com/users/Sherlock-Holo/orgs",
            "repos_url": "https://api.github.com/users/Sherlock-Holo/repos",
            "events_url": "https://api.github.com/users/Sherlock-Holo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sherlock-Holo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 235791,
                "node_id": "MDU6TGFiZWwyMzU3OTE=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics",
                "name": "A-diagnostics",
                "color": "f7e101",
                "default": false,
                "description": "Area: Error messages"
            },
            {
                "id": 1183099971,
                "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics",
                "name": "A-suggestion-diagnostics",
                "color": "f7e101",
                "default": false,
                "description": "Area: suggestions generated by the compiler appplied by cargo fix"
            },
            {
                "id": 234902,
                "node_id": "MDU6TGFiZWwyMzQ5MDI=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement",
                "name": "C-enhancement",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: A PR with an enhancement or a proposed on in an issue."
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-13T08:32:00Z",
        "updated_at": "2020-02-13T10:29:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nfn main() {\r\n    let map: HashMap<i32, i32, _> = HashMap::from_iter(vec![(1, 1), (2, 2)].into_iter());\r\n}\r\n```\r\n\r\nI expected to see this happen: \r\n\r\nwhen run `cargo check`, it should says\r\n\r\n```\r\n  --> src/main.rs:30:14\r\n   |\r\n30 |     let map: HashMap<i32, i32, _> = HashMap::from_iter(vec![(1, 1), (2, 2)].into_iter());\r\n   |         ---  ^^^^^^^^^^^^^^^^^^^^ cannot infer type\r\n   |         |\r\n   |         consider change `HashMap<i32, i32, _>` to `HashMap<i32, i32>` because it has a default type, or specify a detail type.\r\n```\r\n\r\nInstead, this happened:\r\n\r\n```\r\n  --> src/main.rs:30:14\r\n   |\r\n30 |     let map: HashMap<i32, i32, _> = HashMap::from_iter(vec![(1, 1), (2, 2)].into_iter());\r\n   |         ---  ^^^^^^^^^^^^^^^^^^^^ cannot infer type\r\n   |         |\r\n   |         consider giving `map` the explicit type `std::collections::HashMap<i32, i32, _>`, with the type parameters specified\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nustc 1.43.0-nightly (a1912f2e8 2020-02-12)\r\nbinary: rustc\r\ncommit-hash: a1912f2e89b77cfe2a0e64b96f444848fe4e2d49\r\ncommit-date: 2020-02-12\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0-nightly\r\nLLVM version: 9.0\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69122",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69122/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69122/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69122/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69122",
        "id": 564515874,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0NzMxNzkw",
        "number": 69122,
        "title": "Backtrace Debug tweaks",
        "user": {
            "login": "dtolnay",
            "id": 1940490,
            "node_id": "MDQ6VXNlcjE5NDA0OTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1940490?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dtolnay",
            "html_url": "https://github.com/dtolnay",
            "followers_url": "https://api.github.com/users/dtolnay/followers",
            "following_url": "https://api.github.com/users/dtolnay/following{/other_user}",
            "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions",
            "organizations_url": "https://api.github.com/users/dtolnay/orgs",
            "repos_url": "https://api.github.com/users/dtolnay/repos",
            "events_url": "https://api.github.com/users/dtolnay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dtolnay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583426710,
                "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
                "name": "S-waiting-on-review",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Awaiting review from the assignee but also interested parties."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "cramertj",
            "id": 5963049,
            "node_id": "MDQ6VXNlcjU5NjMwNDk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5963049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cramertj",
            "html_url": "https://github.com/cramertj",
            "followers_url": "https://api.github.com/users/cramertj/followers",
            "following_url": "https://api.github.com/users/cramertj/following{/other_user}",
            "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions",
            "organizations_url": "https://api.github.com/users/cramertj/orgs",
            "repos_url": "https://api.github.com/users/cramertj/repos",
            "events_url": "https://api.github.com/users/cramertj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cramertj/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "cramertj",
                "id": 5963049,
                "node_id": "MDQ6VXNlcjU5NjMwNDk=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/5963049?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/cramertj",
                "html_url": "https://github.com/cramertj",
                "followers_url": "https://api.github.com/users/cramertj/followers",
                "following_url": "https://api.github.com/users/cramertj/following{/other_user}",
                "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions",
                "organizations_url": "https://api.github.com/users/cramertj/orgs",
                "repos_url": "https://api.github.com/users/cramertj/repos",
                "events_url": "https://api.github.com/users/cramertj/events{/privacy}",
                "received_events_url": "https://api.github.com/users/cramertj/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T08:24:30Z",
        "updated_at": "2020-02-13T08:36:30Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69122",
            "html_url": "https://github.com/rust-lang/rust/pull/69122",
            "diff_url": "https://github.com/rust-lang/rust/pull/69122.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69122.patch"
        },
        "body": "- Change Debug representation of disabled and unsupported backtraces to use \\<placeholder\\> style, same as what we do for debug printing locked mutexes and mutably borrowed refcells;\r\n\r\n    ```diff\r\n    - Error { msg: \"...\", backtrace: disabled backtrace }\r\n    + Error { msg: \"...\", backtrace: <disabled> }\r\n    ```\r\n\r\n- Remove quotes around unresolved symbol names;\r\n\r\n    ```diff\r\n    - Backtrace [{ fn: \"<unknown>\" }]\r\n    + Backtrace [{ fn: <unknown> }]\r\n    ```\r\n\r\n- Add quotes around file paths;\r\n\r\n    ```diff\r\n    - Backtrace [{ fn: \"krate::main\", file: /path/to/main.rs, line: 10 }]\r\n    + Backtrace [{ fn: \"krate::main\", file: \"/path/to/main.rs\", line: 10 }]\r\n    ```\r\n\r\n- Add test."
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69121",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69121/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69121/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69121/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69121",
        "id": 564510383,
        "node_id": "MDU6SXNzdWU1NjQ1MTAzODM=",
        "number": 69121,
        "title": "ICE: Encountered error `Unimplemented` selecting `Binder(...)` during codegen",
        "user": {
            "login": "LegNeato",
            "id": 368904,
            "node_id": "MDQ6VXNlcjM2ODkwNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/368904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LegNeato",
            "html_url": "https://github.com/LegNeato",
            "followers_url": "https://api.github.com/users/LegNeato/followers",
            "following_url": "https://api.github.com/users/LegNeato/following{/other_user}",
            "gists_url": "https://api.github.com/users/LegNeato/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LegNeato/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LegNeato/subscriptions",
            "organizations_url": "https://api.github.com/users/LegNeato/orgs",
            "repos_url": "https://api.github.com/users/LegNeato/repos",
            "events_url": "https://api.github.com/users/LegNeato/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LegNeato/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 650731663,
                "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
                "name": "C-bug",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: This is a bug."
            },
            {
                "id": 1359848690,
                "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve",
                "name": "E-needs-mcve",
                "color": "02e10c",
                "default": false,
                "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"
            },
            {
                "id": 9618520,
                "node_id": "MDU6TGFiZWw5NjE4NTIw",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE",
                "name": "I-ICE",
                "color": "e10c02",
                "default": false,
                "description": "Describes an Internal Compilation Error (ICE) or \u2744\ufe0f- a panic bug in the compiler."
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-13T08:12:10Z",
        "updated_at": "2020-02-13T10:28:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "We are newly hitting this with [Juniper](https://github.com/graphql-rust/juniper/) across all channels and platforms. While there are other issues with similar errors, they either say it only happens with nightly or requires GATs, neither of which are in use here.\r\n\r\n[mac stable](https://github.com/graphql-rust/juniper/runs/442951562), [linux stable](https://github.com/graphql-rust/juniper/runs/442951547?check_suite_focus=true#step:7:2036)\r\n\r\n```\r\nerror: internal compiler error: src/librustc/traits/codegen/mod.rs:53: Encountered error `Unimplemented` selecting `Binder(<&dyn tests::model::Human as types::async_await::GraphQLTypeAsync<value::scalar::DefaultScalarValue>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:905:9\r\n```\r\n\r\n### Code\r\n\r\nhttps://github.com/graphql-rust/juniper/\r\n\r\n(sorry, CI passed previously and juniper is big)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n  rustc 1.41.0 (5e1a79984 2020-01-27)\r\n  /usr/share/rust/.cargo/bin/cargo -V\r\n  cargo 1.41.0 (626f0f40e 2019-12-03)\r\n  /usr/share/rust/.cargo/bin/rustup -V\r\n  rustup 1.21.1 (7832b2ebe 2019-12-20)\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc/traits/codegen/mod.rs:53: Encountered error `Unimplemented` selecting `Binder(<&dyn tests::model::Human as types::async_await::GraphQLTypeAsync<value::scalar::DefaultScalarValue>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:905:9\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0:     0x7fa7c46d8334 - backtrace::backtrace::libunwind::trace::heb43798aede8bd30\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1:     0x7fa7c46d8334 - backtrace::backtrace::trace_unsynchronized::had2ba7dec4bd2732\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2:     0x7fa7c46d8334 - std::sys_common::backtrace::_print_fmt::hda61f46e822731b2\r\n                               at src/libstd/sys_common/backtrace.rs:84\r\n   3:     0x7fa7c46d8334 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hfe37fa5de6572965\r\n                               at src/libstd/sys_common/backtrace.rs:61\r\n   4:     0x7fa7c471082c - core::fmt::write::h74887d18db27282c\r\n                               at src/libcore/fmt/mod.rs:1025\r\n   5:     0x7fa7c46cc767 - std::io::Write::write_fmt::h6808f3d5eceed5e5\r\n                               at src/libstd/io/mod.rs:1426\r\n   6:     0x7fa7c46dc7de - std::sys_common::backtrace::_print::hcc0fd4b3552039ef\r\n                               at src/libstd/sys_common/backtrace.rs:65\r\n   7:     0x7fa7c46dc7de - std::sys_common::backtrace::print::h1c9c5c1c0505592d\r\n                               at src/libstd/sys_common/backtrace.rs:50\r\n   8:     0x7fa7c46dc7de - std::panicking::default_hook::{{closure}}::hefb6085c1ab83a59\r\n                               at src/libstd/panicking.rs:193\r\n   9:     0x7fa7c46dc4d1 - std::panicking::default_hook::h1b037d2bf0657ab3\r\n                               at src/libstd/panicking.rs:210\r\n  10:     0x7fa7c4c63da3 - rustc_driver::report_ice::h291d96c9e2421fed\r\n  11:     0x7fa7b2e97108 - <alloc::boxed::Box<F> as core::ops::function::Fn<A>>::call::h323099d2a73c6add\r\n                               at /rustc/5e1a799842ba6ed4a57e91f7ab9435947482f7d8/src/liballoc/boxed.rs:1036\r\n  12:     0x7fa7b2e936d4 - proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}::ha24ac19a9c49fc3e\r\n                              at /rustc/5e1a799842ba6ed4a57e91f7ab9435947482f7d8/src/libproc_macro/bridge/client.rs:305\r\n  13:     0x7fa7c46dcf90 - std::panicking::rust_panic_with_hook::h787d7f532b084b9a\r\n                               at src/libstd/panicking.rs:475\r\n  14:     0x7fa7c6e4131d - std::panicking::begin_panic::hbf07588df5a435d8\r\n  15:     0x7fa7c6e741b0 - rustc_errors::HandlerInner::bug::h9106a4a32c6aebca\r\n  16:     0x7fa7c6e72eda - rustc_errors::Handler::bug::ha3adcf0d1e898354\r\n  17:     0x7fa7c698aeb2 - rustc::util::bug::opt_span_bug_fmt::{{closure}}::hf2dbb94e1caf11e0\r\n  18:     0x7fa7c6981a93 - rustc::ty::context::tls::with_opt::{{closure}}::h77e81d332b116391\r\n  19:     0x7fa7c69819e8 - rustc::ty::context::tls::with_opt::h98b7d9ea71ef2628\r\n  20:     0x7fa7c698adc8 - rustc::util::bug::opt_span_bug_fmt::h449b5ab685e489af\r\n  21:     0x7fa7c698ad32 - rustc::util::bug::bug_fmt::hd7a0e92aae8f0503\r\n  22:     0x7fa7c6c60f06 - rustc::ty::context::GlobalCtxt::enter_local::h75320721e8f15611\r\n  23:     0x7fa7c689f71d - rustc::traits::codegen::codegen_fulfill_obligation::h7e56543cac918269\r\n  24:     0x7fa7c69ce000 - rustc::ty::query::__query_compute::codegen_fulfill_obligation::h40ad8b8fc83c3c53\r\n  25:     0x7fa7c6c70e1e - rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::codegen_fulfill_obligation>::compute::hd0c46bddecfba3dd\r\n  26:     0x7fa7c66b224d - rustc::dep_graph::graph::DepGraph::with_task_impl::h30d17681588a80d6\r\n  27:     0x7fa7c6acfc6b - rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query::h0e85b7fd8a2b75a4\r\n  28:     0x7fa7c6a54c4e - rustc::ty::instance::Instance::resolve::h1c6a3aeadebe47bb\r\n  29:     0x7fa7c5a8c2ce - <rustc_mir::monomorphize::collector::RootCollector as rustc::hir::itemlikevisit::ItemLikeVisitor>::visit_item::h9eb541f6b1282f10\r\n  30:     0x7fa7c5bc0249 - rustc::hir::Crate::visit_all_item_likes::hfca9e4baee1d1fb1\r\n  31:     0x7fa7c5a881d1 - rustc_mir::monomorphize::collector::collect_roots::h5f8832dee1a3b1c8\r\n  32:     0x7fa7c5900604 - rustc::util::common::time::h85cf9eca271e2861\r\n  33:     0x7fa7c5a87b85 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h33d17dfee48a53ab\r\n  34:     0x7fa7c5900391 - rustc::util::common::time::h739d5f2bfd0ef463\r\n35:     0x7fa7c5cb8804 - rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items::h88345ea2cc4b4f83\r\n  36:     0x7fa7c4f74565 - rustc::ty::query::__query_compute::collect_and_partition_mono_items::ha86c5a894568cba4\r\n  37:     0x7fa7c4e61541 - rustc::dep_graph::graph::DepGraph::with_task_impl::h78de7a22e46ee7ee\r\n  38:     0x7fa7c4ecf8b8 - rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query::h6a461d7278b0e8aa\r\n  39:     0x7fa7c4f31c24 - rustc_codegen_ssa::base::codegen_crate::ha11b1401122ea73e\r\n  40:     0x7fa7c4f11cee - <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate::h4ca5f427c5f93a31\r\n  41:     0x7fa7c4dcca79 - rustc_interface::passes::start_codegen::{{closure}}::hfe69aed584f648ee\r\n  42:     0x7fa7c4dcbf86 - rustc_interface::passes::start_codegen::hec06952a4f85ed2b\r\n  43:     0x7fa7c4d7aeef - rustc::ty::context::tls::enter_global::h606fda582fe5bd72\r\n  44:     0x7fa7c4d299b3 - rustc_interface::queries::Queries::ongoing_codegen::h811aa1430bd7532f\r\n  45:     0x7fa7c4c2a853 - rustc_interface::interface::run_compiler_in_existing_thread_pool::h748d5742f0ee0ec0\r\n  46:     0x7fa7c4bfa922 - std::thread::local::LocalKey<T>::with::h5202d593397bad8e\r\n  47:     0x7fa7c4bf432e - scoped_tls::ScopedKey<T>::set::hd6209c5e8c3d3105\r\n  48:     0x7fa7c4c70344 - syntax::with_globals::hbceb6aa4bd8a40fb\r\n  49:     0x7fa7c4bf4b10 - std::sys_common::backtrace::__rust_begin_short_backtrace::h8147e020da4fdb28\r\n  50:     0x7fa7c46edb2a - __rust_maybe_catch_panic\r\n                               at src/libpanic_unwind/lib.rs:78\r\n  51:     0x7fa7c4c0b359 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h280c79ac2e107446\r\n  52:     0x7fa7c46be76f - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::h7bfd6e98bcf6c67e\r\n                               at /rustc/5e1a799842ba6ed4a57e91f7ab9435947482f7d8/src/liballoc/boxed.rs:1022\r\n  53:     0x7fa7c46ec550 - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::h9979661149bbc525\r\n                               at /rustc/5e1a799842ba6ed4a57e91f7ab9435947482f7d8/src/liballoc/boxed.rs:1022\r\n  54:     0x7fa7c46ec550 - std::sys_common::thread::start_thread::had0bb4166c065276\r\n                               at src/libstd/sys_common/thread.rs:13\r\n                             at src/libstd/sys_common/thread.rs:13\r\n  55:     0x7fa7c46ec550 - std::sys::unix::thread::Thread::new::thread_start::hbc75223688f972da\r\n                               at src/libstd/sys/unix/thread.rs:80\r\n  56:     0x7fa7c44596db - start_thread\r\n  57:     0x7fa7c3d7688f - __clone\r\n  58:                0x0 - <unknown>\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.41.0 (5e1a79984 2020-01-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental -C link-dead-code\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `types::async_await::GraphQLTypeAsync` fulfills its obligations\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69120",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69120/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69120/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69120/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69120",
        "id": 564458280,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0Njg0NTM5",
        "number": 69120,
        "title": "Don't give invalid suggestion on desugared span.",
        "user": {
            "login": "spunit262",
            "id": 45582704,
            "node_id": "MDQ6VXNlcjQ1NTgyNzA0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/45582704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spunit262",
            "html_url": "https://github.com/spunit262",
            "followers_url": "https://api.github.com/users/spunit262/followers",
            "following_url": "https://api.github.com/users/spunit262/following{/other_user}",
            "gists_url": "https://api.github.com/users/spunit262/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spunit262/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spunit262/subscriptions",
            "organizations_url": "https://api.github.com/users/spunit262/orgs",
            "repos_url": "https://api.github.com/users/spunit262/repos",
            "events_url": "https://api.github.com/users/spunit262/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spunit262/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583426710,
                "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
                "name": "S-waiting-on-review",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Awaiting review from the assignee but also interested parties."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "matthewjasper",
            "id": 20113453,
            "node_id": "MDQ6VXNlcjIwMTEzNDUz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/20113453?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthewjasper",
            "html_url": "https://github.com/matthewjasper",
            "followers_url": "https://api.github.com/users/matthewjasper/followers",
            "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions",
            "organizations_url": "https://api.github.com/users/matthewjasper/orgs",
            "repos_url": "https://api.github.com/users/matthewjasper/repos",
            "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthewjasper/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "matthewjasper",
                "id": 20113453,
                "node_id": "MDQ6VXNlcjIwMTEzNDUz",
                "avatar_url": "https://avatars1.githubusercontent.com/u/20113453?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matthewjasper",
                "html_url": "https://github.com/matthewjasper",
                "followers_url": "https://api.github.com/users/matthewjasper/followers",
                "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}",
                "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions",
                "organizations_url": "https://api.github.com/users/matthewjasper/orgs",
                "repos_url": "https://api.github.com/users/matthewjasper/repos",
                "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matthewjasper/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T05:57:09Z",
        "updated_at": "2020-02-13T05:57:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69120",
            "html_url": "https://github.com/rust-lang/rust/pull/69120",
            "diff_url": "https://github.com/rust-lang/rust/pull/69120.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69120.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69117",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69117/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69117/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69117/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69117",
        "id": 564385732,
        "node_id": "MDU6SXNzdWU1NjQzODU3MzI=",
        "number": 69117,
        "title": "`miri` no longer builds after rust-lang/rust#69105",
        "user": {
            "login": "rust-highfive",
            "id": 7378925,
            "node_id": "MDQ6VXNlcjczNzg5MjU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7378925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rust-highfive",
            "html_url": "https://github.com/rust-highfive",
            "followers_url": "https://api.github.com/users/rust-highfive/followers",
            "following_url": "https://api.github.com/users/rust-highfive/following{/other_user}",
            "gists_url": "https://api.github.com/users/rust-highfive/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rust-highfive/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rust-highfive/subscriptions",
            "organizations_url": "https://api.github.com/users/rust-highfive/orgs",
            "repos_url": "https://api.github.com/users/rust-highfive/repos",
            "events_url": "https://api.github.com/users/rust-highfive/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rust-highfive/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 60344715,
                "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium",
                "name": "P-medium",
                "color": "eb6420",
                "default": false,
                "description": "Medium priority"
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "oli-obk",
            "id": 332036,
            "node_id": "MDQ6VXNlcjMzMjAzNg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/332036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oli-obk",
            "html_url": "https://github.com/oli-obk",
            "followers_url": "https://api.github.com/users/oli-obk/followers",
            "following_url": "https://api.github.com/users/oli-obk/following{/other_user}",
            "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions",
            "organizations_url": "https://api.github.com/users/oli-obk/orgs",
            "repos_url": "https://api.github.com/users/oli-obk/repos",
            "events_url": "https://api.github.com/users/oli-obk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oli-obk/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eddyb",
                "id": 77424,
                "node_id": "MDQ6VXNlcjc3NDI0",
                "avatar_url": "https://avatars2.githubusercontent.com/u/77424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eddyb",
                "html_url": "https://github.com/eddyb",
                "followers_url": "https://api.github.com/users/eddyb/followers",
                "following_url": "https://api.github.com/users/eddyb/following{/other_user}",
                "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions",
                "organizations_url": "https://api.github.com/users/eddyb/orgs",
                "repos_url": "https://api.github.com/users/eddyb/repos",
                "events_url": "https://api.github.com/users/eddyb/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eddyb/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "RalfJung",
                "id": 330628,
                "node_id": "MDQ6VXNlcjMzMDYyOA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/330628?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RalfJung",
                "html_url": "https://github.com/RalfJung",
                "followers_url": "https://api.github.com/users/RalfJung/followers",
                "following_url": "https://api.github.com/users/RalfJung/following{/other_user}",
                "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions",
                "organizations_url": "https://api.github.com/users/RalfJung/orgs",
                "repos_url": "https://api.github.com/users/RalfJung/repos",
                "events_url": "https://api.github.com/users/RalfJung/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RalfJung/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "oli-obk",
                "id": 332036,
                "node_id": "MDQ6VXNlcjMzMjAzNg==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/332036?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/oli-obk",
                "html_url": "https://github.com/oli-obk",
                "followers_url": "https://api.github.com/users/oli-obk/followers",
                "following_url": "https://api.github.com/users/oli-obk/following{/other_user}",
                "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions",
                "organizations_url": "https://api.github.com/users/oli-obk/orgs",
                "repos_url": "https://api.github.com/users/oli-obk/repos",
                "events_url": "https://api.github.com/users/oli-obk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/oli-obk/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-13T01:41:56Z",
        "updated_at": "2020-02-13T15:33:09Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "body": "Hello, this is your friendly neighborhood mergebot.\nAfter merging PR rust-lang/rust#69105, I observed that the tool miri has failing tests.\nA follow-up PR to the repository https://github.com/rust-lang/miri is needed to fix the fallout.\n\ncc @Dylan-DPC, do you think you would have time to do the follow-up work?\nIf so, that would be great!\n\ncc @Dylan-DPC, the PR reviewer, and nominating for compiler team prioritization.\n\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69116",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69116/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69116/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69116/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69116",
        "id": 564362890,
        "node_id": "MDU6SXNzdWU1NjQzNjI4OTA=",
        "number": 69116,
        "title": "_modsi3 macros.rs:255 crash on armv7 & armv7s iOS Device",
        "user": {
            "login": "ronghui1219",
            "id": 1631704,
            "node_id": "MDQ6VXNlcjE2MzE3MDQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1631704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ronghui1219",
            "html_url": "https://github.com/ronghui1219",
            "followers_url": "https://api.github.com/users/ronghui1219/followers",
            "following_url": "https://api.github.com/users/ronghui1219/following{/other_user}",
            "gists_url": "https://api.github.com/users/ronghui1219/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ronghui1219/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ronghui1219/subscriptions",
            "organizations_url": "https://api.github.com/users/ronghui1219/orgs",
            "repos_url": "https://api.github.com/users/ronghui1219/repos",
            "events_url": "https://api.github.com/users/ronghui1219/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ronghui1219/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1359848690,
                "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve",
                "name": "E-needs-mcve",
                "color": "02e10c",
                "default": false,
                "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-02-13T00:25:15Z",
        "updated_at": "2020-02-13T11:46:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "my library have armv7 & arm64 arch, but some user have crash like this\r\n_modsi3 macros.rs:255\r\nand this crash only occur on armv7 and armv7s Devices, such as iPod5,1 , iPhone 4,1, arm64 is fine\r\nhow can i solve this problem?\r\nrustc 1.39.0 (4560ea788 2019-11-04)"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69115",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69115/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69115/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69115/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69115",
        "id": 564340845,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTkwNDky",
        "number": 69115,
        "title": "Update books.",
        "user": {
            "login": "ehuss",
            "id": 43198,
            "node_id": "MDQ6VXNlcjQzMTk4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ehuss",
            "html_url": "https://github.com/ehuss",
            "followers_url": "https://api.github.com/users/ehuss/followers",
            "following_url": "https://api.github.com/users/ehuss/following{/other_user}",
            "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions",
            "organizations_url": "https://api.github.com/users/ehuss/orgs",
            "repos_url": "https://api.github.com/users/ehuss/repos",
            "events_url": "https://api.github.com/users/ehuss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ehuss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583426710,
                "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
                "name": "S-waiting-on-review",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Awaiting review from the assignee but also interested parties."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nikomatsakis",
            "id": 155238,
            "node_id": "MDQ6VXNlcjE1NTIzOA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/155238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikomatsakis",
            "html_url": "https://github.com/nikomatsakis",
            "followers_url": "https://api.github.com/users/nikomatsakis/followers",
            "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions",
            "organizations_url": "https://api.github.com/users/nikomatsakis/orgs",
            "repos_url": "https://api.github.com/users/nikomatsakis/repos",
            "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikomatsakis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nikomatsakis",
                "id": 155238,
                "node_id": "MDQ6VXNlcjE1NTIzOA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/155238?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nikomatsakis",
                "html_url": "https://github.com/nikomatsakis",
                "followers_url": "https://api.github.com/users/nikomatsakis/followers",
                "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}",
                "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions",
                "organizations_url": "https://api.github.com/users/nikomatsakis/orgs",
                "repos_url": "https://api.github.com/users/nikomatsakis/repos",
                "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nikomatsakis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-02-12T23:23:31Z",
        "updated_at": "2020-02-13T19:20:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69115",
            "html_url": "https://github.com/rust-lang/rust/pull/69115",
            "diff_url": "https://github.com/rust-lang/rust/pull/69115.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69115.patch"
        },
        "body": "This required some changes in how the books are tested due to some changes in rust-lang/book.  It uses new syntax that is not compatible with bare `rustdoc --test`.  This changes it so that it uses rustbook to run the tests, which is essentially the same as `mdbook test`.\r\n\r\n## reference\r\n\r\n7 commits in 11e893fc1357bc688418ddf1087c2b7aa25d154d..64239df6d173562b9deb4f012e4c3e6e960c4754\r\n2020-01-18 21:24:08 +0100 to 2020-02-10 19:05:13 +0100\r\n- Update for nested receivers. (rust-lang-nursery/reference#724)\r\n- clarify note re. leading `::` in 2018 (rust-lang-nursery/reference#752)\r\n- Update macro-ambiguity.md (rust-lang-nursery/reference#754)\r\n- typo fix: add missing `by` (rust-lang-nursery/reference#753)\r\n- fix `TypeParamBounds` link on trait objects (rust-lang-nursery/reference#749)\r\n- reorganize docs on references (rust-lang-nursery/reference#745)\r\n- add MacroRepOp usage for ? (rust-lang-nursery/reference#744)\r\n\r\n## book\r\n\r\n49 commits in 87dd6843678575f8dda962f239d14ef4be14b352..6fb3705e5230311b096d47f7e2c91f9ce24393d0\r\n2020-01-20 15:20:40 -0500 to 2020-02-12 13:48:57 -0500\r\n- Fix nomicon links. (rust-lang/book#2253)\r\n- Update to Rust 1.41.0 (rust-lang/book#2244)\r\n- Listing 19-6: use ptr.add instead of ptr.offset (rust-lang/book#2201)\r\n- Remove unneeded mutable reference\r\n- Clarify deref coercion explanation\r\n- Fix typo in link to 1.30 book\r\n- Acknowledge Murphy's Law\r\n- Clarify that buffer overread is UB in C\r\n- Change from \"must\" to \"idiomatic\" about comments\r\n- Fancy quotes\r\n- Make HashMap types match previous example; add fwd ref to ch 13\r\n- Tweak wording to array clarification\r\n- Merge remote-tracking branch 'origin/pr/2236'\r\n- Update all our crates (rust-lang/book#2235)\r\n- Reword git caveat\r\n- Merge remote-tracking branch 'origin/pr/2234'\r\n- Merge remote-tracking branch 'origin/pr/2230'\r\n- println! is a macro (rust-lang/book#2224)\r\n- Update a translated version link (rust-lang/book#2221)\r\n- move `Macro invocation` from section on tuple to section on mac\u2026 (rust-lang/book#2206)\r\n- Do not limit `Self` usage in trait implementation (rust-lang/book#2197)\r\n- Merge remote-tracking branch 'origin/pr/2191'\r\n- Fix wrapping\r\n- Merge remote-tracking branch 'origin/pr/2187'\r\n- Updated appendix 07 to reflect deprecation of rustup install (rust-lang/book#2181)\r\n- Make links to the Nomicon consistent\r\n- Merge remote-tracking branch 'origin/pr/2180'\r\n- Merge remote-tracking branch 'origin/pr/2175'\r\n- Merge remote-tracking branch 'origin/pr/2171'\r\n- Merge remote-tracking branch 'origin/pr/2170'\r\n- Clarify and make consistent the explanation of unions\r\n- Merge remote-tracking branch 'origin/pr/2166'\r\n- Handle dev or test in the Finished output line\r\n- Link to macros by example rather than macros (rust-lang/book#2164)\r\n- Merge remote-tracking branch 'origin/pr/2147'\r\n- Fix parens (rust-lang/book#2132)\r\n- Clarify type inference with closures requires calling the closures\r\n- Update link to French translation (rust-lang/book#2119)\r\n- Merge remote-tracking branch 'origin/pr/2108'\r\n- Add an explicit cross reference to data type\r\n- Merge remote-tracking branch 'origin/pr/2105'\r\n- ch15-02-deref: Improve explanation on immut-to-mut (rust-lang/book#2030)\r\n- Remove unnecessary quotes\r\n- Make markdown link identifier match\r\n- Remove extra newline\r\n- Merge remote-tracking branch 'origin/pr/2004'\r\n- Extract code and output; script formatting and updating them (rust-lang/book#2231)\r\n- Switch \"Finally\" to \"Next\" to reflect new chapters having been\u2026 (rust-lang/book#2098)\r\n- ch19-06 added curly braces to macro output (rust-lang/book#2050)\r\n\r\n## rust-by-example\r\n\r\n2 commits in 1c2bd024d13f8011307e13386cf1fea2180352b5..32facd5522ddbbf37baf01e4e4b6562bc55c071a\r\n2020-01-20 12:18:36 -0300 to 2020-02-11 09:25:06 -0300\r\n- Add missing `dyn` in code sample (rust-lang/rust-by-example#1306)\r\n- Improve grammar in a few sections (rust-lang/rust-by-example#1305)\r\n\r\n## edition-guide\r\n\r\n1 commits in 1a2390247ad6d08160e0dd74f40a01a9578659c2..37f9e6848411188a1062ead1bd8ebe4b8aa16899\r\n2019-12-29 10:40:55 -0800 to 2020-02-10 14:36:14 +0100\r\n- Fixed typo (rust-lang-nursery/edition-guide#196)\r\n\r\n## embedded-book\r\n\r\n4 commits in 4d78994915af1bde9a95c04a8c27d8dca066232a..b2e1092bf67bd4d7686c4553f186edbb7f5f92db\r\n2020-01-14 08:25:25 +0000 to 2020-01-30 08:45:46 +0000\r\n- Make typestate initialization notes correct  (rust-embedded/book#224)\r\n- Mention discovery book more prominently  (rust-embedded/book#219)\r\n- Replace nursery links with rust-lang links  (rust-embedded/book#222)\r\n- Add a Glossary appendix page  (rust-embedded/book#223)"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69114",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69114/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69114/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69114/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69114",
        "id": 564334823,
        "node_id": "MDU6SXNzdWU1NjQzMzQ4MjM=",
        "number": 69114,
        "title": "Static lifetimes checking regression in rustc 1.41.0",
        "user": {
            "login": "ilyavenner",
            "id": 13315957,
            "node_id": "MDQ6VXNlcjEzMzE1OTU3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13315957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilyavenner",
            "html_url": "https://github.com/ilyavenner",
            "followers_url": "https://api.github.com/users/ilyavenner/followers",
            "following_url": "https://api.github.com/users/ilyavenner/following{/other_user}",
            "gists_url": "https://api.github.com/users/ilyavenner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ilyavenner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ilyavenner/subscriptions",
            "organizations_url": "https://api.github.com/users/ilyavenner/orgs",
            "repos_url": "https://api.github.com/users/ilyavenner/repos",
            "events_url": "https://api.github.com/users/ilyavenner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ilyavenner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 171502053,
                "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker",
                "name": "A-borrow-checker",
                "color": "f7e101",
                "default": false,
                "description": "Area: The borrow checker"
            },
            {
                "id": 1775993,
                "node_id": "MDU6TGFiZWwxNzc1OTkz",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes",
                "name": "A-lifetimes",
                "color": "f7e101",
                "default": false,
                "description": "Area: lifetime related"
            },
            {
                "id": 650731663,
                "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
                "name": "C-bug",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: This is a bug."
            },
            {
                "id": 267612997,
                "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound%20%F0%9F%92%A5",
                "name": "I-unsound \ud83d\udca5",
                "color": "e11d21",
                "default": false,
                "description": "A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"
            },
            {
                "id": 203429200,
                "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high",
                "name": "P-high",
                "color": "eb6420",
                "default": false,
                "description": "High priority"
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            },
            {
                "id": 262252840,
                "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable",
                "name": "regression-from-stable-to-stable",
                "color": "e4008a",
                "default": false,
                "description": "Performance or correctness regression from one stable version to another."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "matthewjasper",
            "id": 20113453,
            "node_id": "MDQ6VXNlcjIwMTEzNDUz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/20113453?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthewjasper",
            "html_url": "https://github.com/matthewjasper",
            "followers_url": "https://api.github.com/users/matthewjasper/followers",
            "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions",
            "organizations_url": "https://api.github.com/users/matthewjasper/orgs",
            "repos_url": "https://api.github.com/users/matthewjasper/repos",
            "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthewjasper/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "matthewjasper",
                "id": 20113453,
                "node_id": "MDQ6VXNlcjIwMTEzNDUz",
                "avatar_url": "https://avatars1.githubusercontent.com/u/20113453?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matthewjasper",
                "html_url": "https://github.com/matthewjasper",
                "followers_url": "https://api.github.com/users/matthewjasper/followers",
                "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}",
                "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions",
                "organizations_url": "https://api.github.com/users/matthewjasper/orgs",
                "repos_url": "https://api.github.com/users/matthewjasper/repos",
                "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matthewjasper/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-02-12T23:08:44Z",
        "updated_at": "2020-02-13T18:24:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried [this code](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=551de68b1179d7eb692e6c286b0979da):\r\n\r\n```rust\r\nstatic FOO: u8 = 42;\r\nstatic mut BAR: &'static u8 = &FOO;\r\n\r\nfn main() {\r\n    unsafe {\r\n        println!(\"{}\", BAR);\r\n        foo();\r\n        println!(\"{}\", BAR);\r\n    }\r\n}\r\n\r\nfn foo() {\r\n    let n = 42;\r\n    unsafe {\r\n        BAR = &n;\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this:\r\n\r\n```\r\nerror[E0597]: `n` does not live long enough\r\n  --> src/main.rs:15:15\r\n   |\r\n15 |         BAR = &n;\r\n   |         ------^^\r\n   |         |     |\r\n   |         |     borrowed value does not live long enough\r\n   |         assignment requires that `n` is borrowed for `'static`\r\n16 |     }\r\n17 | }\r\n   | - `n` dropped here while still borrowed\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0597`.\r\n```\r\n\r\nInstead, happens **undefined behavior**. Program successfully compiles in the Rust `stable 1.41.0` but fails to compile in `stable 1.40.0` (thats what I want)."
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69113",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69113/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69113/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69113/events",
        "html_url": "https://github.com/rust-lang/rust/pull/69113",
        "id": 564329143,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTgxMjE5",
        "number": 69113,
        "title": "Combine `HaveBeenBorrowedLocals` and `IndirectlyMutableLocals` into one dataflow analysis",
        "user": {
            "login": "ecstatic-morse",
            "id": 29463364,
            "node_id": "MDQ6VXNlcjI5NDYzMzY0",
            "avatar_url": "https://avatars1.githubusercontent.com/u/29463364?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ecstatic-morse",
            "html_url": "https://github.com/ecstatic-morse",
            "followers_url": "https://api.github.com/users/ecstatic-morse/followers",
            "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}",
            "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions",
            "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs",
            "repos_url": "https://api.github.com/users/ecstatic-morse/repos",
            "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 583426710,
                "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review",
                "name": "S-waiting-on-review",
                "color": "d3dddd",
                "default": false,
                "description": "Status: Awaiting review from the assignee but also interested parties."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "davidtwco",
            "id": 1295100,
            "node_id": "MDQ6VXNlcjEyOTUxMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1295100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidtwco",
            "html_url": "https://github.com/davidtwco",
            "followers_url": "https://api.github.com/users/davidtwco/followers",
            "following_url": "https://api.github.com/users/davidtwco/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions",
            "organizations_url": "https://api.github.com/users/davidtwco/orgs",
            "repos_url": "https://api.github.com/users/davidtwco/repos",
            "events_url": "https://api.github.com/users/davidtwco/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidtwco/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidtwco",
                "id": 1295100,
                "node_id": "MDQ6VXNlcjEyOTUxMDA=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1295100?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidtwco",
                "html_url": "https://github.com/davidtwco",
                "followers_url": "https://api.github.com/users/davidtwco/followers",
                "following_url": "https://api.github.com/users/davidtwco/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions",
                "organizations_url": "https://api.github.com/users/davidtwco/orgs",
                "repos_url": "https://api.github.com/users/davidtwco/repos",
                "events_url": "https://api.github.com/users/davidtwco/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidtwco/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-02-12T22:55:12Z",
        "updated_at": "2020-02-12T23:57:57Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/rust-lang/rust/pulls/69113",
            "html_url": "https://github.com/rust-lang/rust/pull/69113",
            "diff_url": "https://github.com/rust-lang/rust/pull/69113.diff",
            "patch_url": "https://github.com/rust-lang/rust/pull/69113.patch"
        },
        "body": "This PR began as an attempt to port `HaveBeenBorrowedLocals` to the new dataflow framework (see #68241 for prior art). Along the way, I noticed that it could share most of its code with `IndirectlyMutableLocals` and then found a few bugs in the two analyses:\r\n- Neither one marked locals as borrowed after an `Rvalue::AddressOf`.\r\n- `IndirectlyMutableLocals` was missing a minor fix that `HaveBeenBorrowedLocals` got in #61069.\r\n\r\nI decided to combine the two analyses so that they wouldn't diverge in the future while ensuring that they remain distinct types (called `MaybeBorrowedLocals` and `MaybeMutBorrowedLocals` to be consistent with the `Maybe{Un,}InitializedPlaces` naming scheme). In doing so, I fixed the bugs and switched to exhaustive matching where possible to make them less likely in the future. Finally, I added comments explaining some of the finer points of the transfer function for these analyses (see #61069 and #65006)."
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69112",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69112/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69112/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69112/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69112",
        "id": 564320841,
        "node_id": "MDU6SXNzdWU1NjQzMjA4NDE=",
        "number": 69112,
        "title": "Conflicting error messages for HRTB in `impl Trait`",
        "user": {
            "login": "JustAPerson",
            "id": 789308,
            "node_id": "MDQ6VXNlcjc4OTMwOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/789308?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JustAPerson",
            "html_url": "https://github.com/JustAPerson",
            "followers_url": "https://api.github.com/users/JustAPerson/followers",
            "following_url": "https://api.github.com/users/JustAPerson/following{/other_user}",
            "gists_url": "https://api.github.com/users/JustAPerson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JustAPerson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JustAPerson/subscriptions",
            "organizations_url": "https://api.github.com/users/JustAPerson/orgs",
            "repos_url": "https://api.github.com/users/JustAPerson/repos",
            "events_url": "https://api.github.com/users/JustAPerson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JustAPerson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 235791,
                "node_id": "MDU6TGFiZWwyMzU3OTE=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics",
                "name": "A-diagnostics",
                "color": "f7e101",
                "default": false,
                "description": "Area: Error messages"
            },
            {
                "id": 631673608,
                "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait",
                "name": "A-impl-trait",
                "color": "f7e101",
                "default": false,
                "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."
            },
            {
                "id": 1775993,
                "node_id": "MDU6TGFiZWwxNzc1OTkz",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes",
                "name": "A-lifetimes",
                "color": "f7e101",
                "default": false,
                "description": "Area: lifetime related"
            },
            {
                "id": 650731663,
                "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
                "name": "C-bug",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: This is a bug."
            },
            {
                "id": 211668100,
                "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler",
                "name": "T-compiler",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the compiler subteam, which will review and decide on the PR/issue."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-12T22:37:55Z",
        "updated_at": "2020-02-13T05:13:30Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Rust declares the lifetime `'a` is both undeclared and that it is a shadowing declaration\r\n\r\n```rust\r\n#[derive(Debug)]\r\nstruct Ctx<'d> {\r\n    phantom: std::marker::PhantomData<&'d ()>   \r\n}\r\nfn map<'c, 'd: 'c>(ctx: &'c mut Ctx<'d>, data: Vec<()>) -> impl for<'a> Iterator<Item = ()> + 'a where 'c: 'a {\r\n    data.into_iter().inspect(|t| println!(\"{:?}\", ctx))\r\n}\r\n```\r\n\r\nMy more complicated example is trying to use the `&'c mut Ctx<'d>` reference in one of the closures passed to `Iterator::map()` so I need to somehow incorporate the lifetime `'c` into the return type.\r\n\r\nInstead I get this confusing error:\r\n```\r\nerror[E0261]: use of undeclared lifetime name `'a`\r\n --> src/lib.rs:5:95\r\n  |\r\n5 | fn map<'c, 'd: 'c>(ctx: &'c mut Ctx<'d>, data: Vec<()>) -> impl for<'a> Iterator<Item = ()> + 'a where 'c: 'a {\r\n  |                                                                                               ^^ undeclared lifetime\r\n\r\nerror[E0496]: lifetime name `'a` shadows a lifetime name that is already in scope\r\n --> src/lib.rs:5:69\r\n  |\r\n5 | fn map<'c, 'd: 'c>(ctx: &'c mut Ctx<'d>, data: Vec<()>) -> impl for<'a> Iterator<Item = ()> + 'a where 'c: 'a {\r\n  |                                                                     ^^                        -- first declared here\r\n  |                                                                     |\r\n  |                                                                     lifetime 'a already in scope\r\n\r\nerror[E0261]: use of undeclared lifetime name `'a`\r\n --> src/lib.rs:5:108\r\n  |\r\n5 | fn map<'c, 'd: 'c>(ctx: &'c mut Ctx<'d>, data: Vec<()>) -> impl for<'a> Iterator<Item = ()> + 'a where 'c: 'a {\r\n  |                                                                                                            ^^ undeclared lifetime\r\n\r\nerror: aborting due to 3 previous errors\r\n```\r\n\r\nYou'll notice the `help` text of the first error says \"undeclared lifetime\" but the `help` of the second says \"first declared here\" and then gives a bogus \"already in scope\" hint.\r\n"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69111",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69111/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69111/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69111/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69111",
        "id": 564294022,
        "node_id": "MDU6SXNzdWU1NjQyOTQwMjI=",
        "number": 69111,
        "title": "Implementing `Index<LocalType>` for arrays causes usize indexing to fail.",
        "user": {
            "login": "rodrimati1992",
            "id": 18036327,
            "node_id": "MDQ6VXNlcjE4MDM2MzI3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18036327?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rodrimati1992",
            "html_url": "https://github.com/rodrimati1992",
            "followers_url": "https://api.github.com/users/rodrimati1992/followers",
            "following_url": "https://api.github.com/users/rodrimati1992/following{/other_user}",
            "gists_url": "https://api.github.com/users/rodrimati1992/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rodrimati1992/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rodrimati1992/subscriptions",
            "organizations_url": "https://api.github.com/users/rodrimati1992/orgs",
            "repos_url": "https://api.github.com/users/rodrimati1992/repos",
            "events_url": "https://api.github.com/users/rodrimati1992/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rodrimati1992/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 650731663,
                "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
                "name": "C-bug",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: This is a bug."
            },
            {
                "id": 211668062,
                "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs",
                "name": "T-libs",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the libraries subteam, which will review and decide on the PR/issue."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-12T21:45:36Z",
        "updated_at": "2020-02-12T21:52:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I tried this code:\r\n[link to playground](https://play.rust-lang.org/?version=stable&mode=release&edition=2018&gist=2e8cacc7a57123869d77f2c7cb68ee6c)\r\n```rust\r\n\r\nstruct One;\r\n\r\nimpl<T> Index<One> for [T;10] {\r\n    type Output=T;\r\n    fn index(&self,_:One)->&T{\r\n        let this:&[T]=self;\r\n        &this[1]\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let array=[0,1,2,3,4,5,6,7,8,9];\r\n    array[1];\r\n}\r\n```\r\n\r\nI expected the code to compile without errors.\r\n\r\nInstead I got this compiler error:\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:15:11\r\n   |\r\n15 |     array[1];\r\n   |           ^ expected struct `One`, found integer\r\n```\r\n\r\nIt produces the same error for stable beta and nightly.\r\n\r\nThe `impl<T> Index<One> for [T;10]` impl started being allowed on Rust 1.41,while on Rust 1.40 it prints the expected orphan impl error:\r\n```\r\nerror[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\r\n\r\n --> <source>:5:6\r\n\r\n  |\r\n\r\n5 | impl<T> Index<One> for [T;10] {\r\n\r\n  |      ^ type parameter `T` must be used as the type parameter for some local type\r\n\r\n  |\r\n\r\n  = note: only traits defined in the current crate can be implemented for a type parameter\r\n```"
    },
    {
        "url": "https://api.github.com/repos/rust-lang/rust/issues/69110",
        "repository_url": "https://api.github.com/repos/rust-lang/rust",
        "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69110/labels{/name}",
        "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69110/comments",
        "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69110/events",
        "html_url": "https://github.com/rust-lang/rust/issues/69110",
        "id": 564277226,
        "node_id": "MDU6SXNzdWU1NjQyNzcyMjY=",
        "number": 69110,
        "title": "format! allows named arguments to be referenced by position",
        "user": {
            "login": "Amanieu",
            "id": 278509,
            "node_id": "MDQ6VXNlcjI3ODUwOQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/278509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Amanieu",
            "html_url": "https://github.com/Amanieu",
            "followers_url": "https://api.github.com/users/Amanieu/followers",
            "following_url": "https://api.github.com/users/Amanieu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions",
            "organizations_url": "https://api.github.com/users/Amanieu/orgs",
            "repos_url": "https://api.github.com/users/Amanieu/repos",
            "events_url": "https://api.github.com/users/Amanieu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Amanieu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 650731663,
                "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug",
                "name": "C-bug",
                "color": "f5f1fd",
                "default": false,
                "description": "Category: This is a bug."
            },
            {
                "id": 211668062,
                "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=",
                "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs",
                "name": "T-libs",
                "color": "bfd4f2",
                "default": false,
                "description": "Relevant to the libraries subteam, which will review and decide on the PR/issue."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-12T21:16:41Z",
        "updated_at": "2020-02-13T17:36:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "The following example compiles, but shouldn't.\r\n```rust\r\nprintln!(\"{0} {foo}\", foo = 2);\r\n```\r\n\r\nThis seems to be an unintentional regression that was introduced somewhere between 1.11.0 and 1.12.0, most likely by #33642.\r\n\r\nHowever, this code has been accepted on stable for multiple years now (1.12 was in 2016), so fixing this might break existing code. We could still change this back to an error if crater reports no regressions since it is reasonable to say that the code in question is clearly incorrect and was not caught by the compiler by mistake."
    }
]