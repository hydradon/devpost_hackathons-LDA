[
    {
        "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/7",
        "repository_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search",
        "labels_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/7/labels{/name}",
        "comments_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/7/comments",
        "events_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/7/events",
        "html_url": "https://github.com/rlingineni/Lambda-Serverless-Search/issues/7",
        "id": 367573892,
        "node_id": "MDU6SXNzdWUzNjc1NzM4OTI=",
        "number": 7,
        "title": "Movie to elasticlunr.js",
        "user": {
            "login": "rlingineni",
            "id": 5509813,
            "node_id": "MDQ6VXNlcjU1MDk4MTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5509813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlingineni",
            "html_url": "https://github.com/rlingineni",
            "followers_url": "https://api.github.com/users/rlingineni/followers",
            "following_url": "https://api.github.com/users/rlingineni/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlingineni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlingineni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlingineni/subscriptions",
            "organizations_url": "https://api.github.com/users/rlingineni/orgs",
            "repos_url": "https://api.github.com/users/rlingineni/repos",
            "events_url": "https://api.github.com/users/rlingineni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlingineni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1059216783,
                "node_id": "MDU6TGFiZWwxMDU5MjE2Nzgz",
                "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "7057ff",
                "default": true,
                "description": "Good for newcomers"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-10-07T17:11:35Z",
        "updated_at": "2018-10-07T17:11:40Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "Currently, we don't get the entire document that was uploaded, only the id. This is by lunrjs design. But moving to elasticlunr, or storing the records in a DB, will help us fix this problem. \r\n\r\nPlease post your design considerations"
    },
    {
        "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/5",
        "repository_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search",
        "labels_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/5/labels{/name}",
        "comments_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/5/comments",
        "events_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/5/events",
        "html_url": "https://github.com/rlingineni/Lambda-Serverless-Search/issues/5",
        "id": 365262811,
        "node_id": "MDU6SXNzdWUzNjUyNjI4MTE=",
        "number": 5,
        "title": "Articles cannot be Deleted or Updated",
        "user": {
            "login": "rlingineni",
            "id": 5509813,
            "node_id": "MDQ6VXNlcjU1MDk4MTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5509813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlingineni",
            "html_url": "https://github.com/rlingineni",
            "followers_url": "https://api.github.com/users/rlingineni/followers",
            "following_url": "https://api.github.com/users/rlingineni/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlingineni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlingineni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlingineni/subscriptions",
            "organizations_url": "https://api.github.com/users/rlingineni/orgs",
            "repos_url": "https://api.github.com/users/rlingineni/repos",
            "events_url": "https://api.github.com/users/rlingineni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlingineni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1059216775,
                "node_id": "MDU6TGFiZWwxMDU5MjE2Nzc1",
                "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-09-30T21:21:20Z",
        "updated_at": "2018-09-30T21:21:20Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "Currently there is no good way to block an indexed article from the search results or remove it completely. You may update an article with the old ID, both will still exist in the articles collection, and index will awkwardly merge the two article attributes, so this might lead to weird or unexpected behavior.\r\n\r\nIt would be good to investigate if Lunr has a remove from index function for this or some alternate. We can also expose a `/update` route that locates a document and keeps track of it. \r\n\r\nWe would need some data structure or metadata to tell us how to go from the lunr Index to the actual article id that we uploaded.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/4",
        "repository_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search",
        "labels_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/4/labels{/name}",
        "comments_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/4/comments",
        "events_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/4/events",
        "html_url": "https://github.com/rlingineni/Lambda-Serverless-Search/issues/4",
        "id": 365262391,
        "node_id": "MDU6SXNzdWUzNjUyNjIzOTE=",
        "number": 4,
        "title": "Search results do not track clicked",
        "user": {
            "login": "rlingineni",
            "id": 5509813,
            "node_id": "MDQ6VXNlcjU1MDk4MTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5509813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlingineni",
            "html_url": "https://github.com/rlingineni",
            "followers_url": "https://api.github.com/users/rlingineni/followers",
            "following_url": "https://api.github.com/users/rlingineni/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlingineni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlingineni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlingineni/subscriptions",
            "organizations_url": "https://api.github.com/users/rlingineni/orgs",
            "repos_url": "https://api.github.com/users/rlingineni/repos",
            "events_url": "https://api.github.com/users/rlingineni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlingineni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1059216779,
                "node_id": "MDU6TGFiZWwxMDU5MjE2Nzc5",
                "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-09-30T21:17:03Z",
        "updated_at": "2018-09-30T21:17:20Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "If a user clicks on a result, we don't keep track of that to boost it for next time. \r\n\r\nIt would be interesting to somehow \"update\" an article and attach a click score. Or maybe an alternate \"clicked-db\" (with low costs ofc). Then in the lunr indexing pipeline, use that boost score to surface more clicked on results."
    },
    {
        "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/3",
        "repository_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search",
        "labels_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/3/labels{/name}",
        "comments_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/3/comments",
        "events_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/3/events",
        "html_url": "https://github.com/rlingineni/Lambda-Serverless-Search/issues/3",
        "id": 365262223,
        "node_id": "MDU6SXNzdWUzNjUyNjIyMjM=",
        "number": 3,
        "title": "Update Indexer to Get all Documents via Athena",
        "user": {
            "login": "rlingineni",
            "id": 5509813,
            "node_id": "MDQ6VXNlcjU1MDk4MTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5509813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlingineni",
            "html_url": "https://github.com/rlingineni",
            "followers_url": "https://api.github.com/users/rlingineni/followers",
            "following_url": "https://api.github.com/users/rlingineni/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlingineni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlingineni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlingineni/subscriptions",
            "organizations_url": "https://api.github.com/users/rlingineni/orgs",
            "repos_url": "https://api.github.com/users/rlingineni/repos",
            "events_url": "https://api.github.com/users/rlingineni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlingineni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1059216781,
                "node_id": "MDU6TGFiZWwxMDU5MjE2Nzgx",
                "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/labels/help%20wanted",
                "name": "help wanted",
                "color": "008672",
                "default": true,
                "description": "Extra attention is needed"
            },
            {
                "id": 1074733116,
                "node_id": "MDU6TGFiZWwxMDc0NzMzMTE2",
                "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/labels/optimization",
                "name": "optimization",
                "color": "0e8a16",
                "default": false,
                "description": "Doing this might make search faster"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-09-30T21:14:50Z",
        "updated_at": "2018-09-30T21:14:50Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "AWS Athena can quickly return S3 details.\r\n\r\nThe main problem is that in order to query, it requires creating a db-table for a schema. It's still cheap nonetheless.\r\n\r\nTo implement, we would need to dynamically update the Athena Table upon each new index config added or update and set up a config in the Cloudformation template accordingly.\r\n\r\nIt would be interesting to see how much of an improvement this might make. A good starting point before implementation is to do a study on a manual bucket with a bunch of documents, and replace the `listObjects` call with Athena.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/2",
        "repository_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search",
        "labels_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/2/labels{/name}",
        "comments_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/2/comments",
        "events_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/2/events",
        "html_url": "https://github.com/rlingineni/Lambda-Serverless-Search/issues/2",
        "id": 365261964,
        "node_id": "MDU6SXNzdWUzNjUyNjE5NjQ=",
        "number": 2,
        "title": "Add Results Pagination",
        "user": {
            "login": "rlingineni",
            "id": 5509813,
            "node_id": "MDQ6VXNlcjU1MDk4MTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5509813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlingineni",
            "html_url": "https://github.com/rlingineni",
            "followers_url": "https://api.github.com/users/rlingineni/followers",
            "following_url": "https://api.github.com/users/rlingineni/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlingineni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlingineni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlingineni/subscriptions",
            "organizations_url": "https://api.github.com/users/rlingineni/orgs",
            "repos_url": "https://api.github.com/users/rlingineni/repos",
            "events_url": "https://api.github.com/users/rlingineni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlingineni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1059216783,
                "node_id": "MDU6TGFiZWwxMDU5MjE2Nzgz",
                "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "7057ff",
                "default": true,
                "description": "Good for newcomers"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-09-30T21:11:08Z",
        "updated_at": "2018-09-30T21:11:27Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "Currently, you can only pass in a `count` argument, and the result set in the backend is truncated to that arbitrary value.\r\n\r\n1. In the `code` change the slice method to return the range of indices the user requests, depending on the page requested\r\n2. Search response should also be updated to include the total number of pages possible\r\n\r\n---\r\n\r\nMore complex, but optimal:\r\n1. At the core, the `lunr.js` should be updated to only return a fixed #1  of results (e.g. 25, not all)\r\n2. Repeat above steps\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/1",
        "repository_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search",
        "labels_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/1/labels{/name}",
        "comments_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/1/comments",
        "events_url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/issues/1/events",
        "html_url": "https://github.com/rlingineni/Lambda-Serverless-Search/issues/1",
        "id": 365261587,
        "node_id": "MDU6SXNzdWUzNjUyNjE1ODc=",
        "number": 1,
        "title": "Save indexes directly to Lambda Function",
        "user": {
            "login": "rlingineni",
            "id": 5509813,
            "node_id": "MDQ6VXNlcjU1MDk4MTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5509813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlingineni",
            "html_url": "https://github.com/rlingineni",
            "followers_url": "https://api.github.com/users/rlingineni/followers",
            "following_url": "https://api.github.com/users/rlingineni/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlingineni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlingineni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlingineni/subscriptions",
            "organizations_url": "https://api.github.com/users/rlingineni/orgs",
            "repos_url": "https://api.github.com/users/rlingineni/repos",
            "events_url": "https://api.github.com/users/rlingineni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlingineni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1059216783,
                "node_id": "MDU6TGFiZWwxMDU5MjE2Nzgz",
                "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "7057ff",
                "default": true,
                "description": "Good for newcomers"
            },
            {
                "id": 1074733116,
                "node_id": "MDU6TGFiZWwxMDc0NzMzMTE2",
                "url": "https://api.github.com/repos/rlingineni/Lambda-Serverless-Search/labels/optimization",
                "name": "optimization",
                "color": "0e8a16",
                "default": false,
                "description": "Doing this might make search faster"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2018-09-30T21:06:33Z",
        "updated_at": "2018-10-23T04:15:06Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "You will have to update the `indexing` function to store the indexes directly in S3 Bucket where the Lambda function is stored.\r\n\r\nIt can almost ~2 seconds to get all the virtual indexes from S3, but considering, each file is only about ~1MB, if we save the index onto the lambda function directly, we can shave that time off.\r\n\r\nOf course, this could make the architecture a bit dirty, but performance gains will be great.\r\n\r\n"
    }
]