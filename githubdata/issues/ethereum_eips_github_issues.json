[
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2516",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2516/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2516/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2516/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2516",
        "id": 564070310,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0MzY2MTgy",
        "number": 2516,
        "title": "Change \"Hard Fork\" for \"Network Upgrade\"",
        "user": {
            "login": "timbeiko",
            "id": 9390255,
            "node_id": "MDQ6VXNlcjkzOTAyNTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9390255?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timbeiko",
            "html_url": "https://github.com/timbeiko",
            "followers_url": "https://api.github.com/users/timbeiko/followers",
            "following_url": "https://api.github.com/users/timbeiko/following{/other_user}",
            "gists_url": "https://api.github.com/users/timbeiko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timbeiko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timbeiko/subscriptions",
            "organizations_url": "https://api.github.com/users/timbeiko/orgs",
            "repos_url": "https://api.github.com/users/timbeiko/repos",
            "events_url": "https://api.github.com/users/timbeiko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timbeiko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-12T15:18:34Z",
        "updated_at": "2020-02-12T15:18:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2516",
            "html_url": "https://github.com/ethereum/EIPs/pull/2516",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2516.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2516.patch"
        },
        "body": "It seems the consensus within the Ethereum community is now to use \"network upgrade\" over \"hard fork\". This change updates EIP-1 to reflect this. \r\n\r\nThere was a conversation about this in a different PR (see https://github.com/ethereum/EIPs/pull/2508#discussion_r376796355), but for visibility I wanted to separate this into a distinct PR. \r\n\r\nFrom the PR linked above: \r\n> FWIW, \"network upgrade\" is what is currently used in communications from the EF, see [Muir Glacier](https://blog.ethereum.org/2019/12/23/ethereum-muir-glacier-upgrade-announcement/), [Istanbul](https://blog.ethereum.org/2019/11/20/ethereum-istanbul-upgrade-announcement/), [Constantinople](https://blog.ethereum.org/2019/02/22/ethereum-constantinople-st-petersburg-upgrade-announcement/). Last use of \"hard fork\" was for [Byzantium](https://blog.ethereum.org/2017/10/12/byzantium-hf-announcement/). \r\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2515",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2515/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2515/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2515/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2515",
        "id": 562942161,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzczNDQ3NTg5",
        "number": 2515,
        "title": "Replace the Difficulty Bomb with a Difficulty Freeze",
        "user": {
            "login": "MadeofTin",
            "id": 1226869,
            "node_id": "MDQ6VXNlcjEyMjY4Njk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1226869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MadeofTin",
            "html_url": "https://github.com/MadeofTin",
            "followers_url": "https://api.github.com/users/MadeofTin/followers",
            "following_url": "https://api.github.com/users/MadeofTin/following{/other_user}",
            "gists_url": "https://api.github.com/users/MadeofTin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MadeofTin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MadeofTin/subscriptions",
            "organizations_url": "https://api.github.com/users/MadeofTin/orgs",
            "repos_url": "https://api.github.com/users/MadeofTin/repos",
            "events_url": "https://api.github.com/users/MadeofTin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MadeofTin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-11T02:34:20Z",
        "updated_at": "2020-02-11T02:51:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2515",
            "html_url": "https://github.com/ethereum/EIPs/pull/2515",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2515.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2515.patch"
        },
        "body": "The difficulty Freeze is an alternative to the Difficulty Bomb that is implemented within the protocols difficulty adjustment algorithm. The Difficulty Freeze begins at a certain block height, determined in advance, and freezes the difficulty. This does not stop the chain, but it incentivizes devs to upgrade at a regular cadence and requires any chain split to address the difficulty freeze."
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2514",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2514/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2514/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2514/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2514",
        "id": 562819417,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzczMzQ2Mjc5",
        "number": 2514,
        "title": "Errata: EIP-2200 change variable name SLOAD_GAS to SSTORE_DIRTY_GAS",
        "user": {
            "login": "sorpaas",
            "id": 6277322,
            "node_id": "MDQ6VXNlcjYyNzczMjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sorpaas",
            "html_url": "https://github.com/sorpaas",
            "followers_url": "https://api.github.com/users/sorpaas/followers",
            "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
            "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
            "organizations_url": "https://api.github.com/users/sorpaas/orgs",
            "repos_url": "https://api.github.com/users/sorpaas/repos",
            "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sorpaas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-10T20:50:01Z",
        "updated_at": "2020-02-10T20:50:01Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2514",
            "html_url": "https://github.com/ethereum/EIPs/pull/2514",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2514.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2514.patch"
        },
        "body": "The variable name `SLOAD_GAS` in EIP-2200 has been a point of confusion -- while being named as such, it was actually having nothing to do with `SLOAD` (but people can easily argue otherwise). This PR proposes an errata to EIP-2200 that simply rename that variable to `SSTORE_DIRTY_GAS`. Given that EIP-2200 is always activated after EIP-1884, nothing should be affected."
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2513",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2513/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2513/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2513/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2513",
        "id": 562166283,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcyODIxMjEw",
        "number": 2513,
        "title": "EIP-777: typo fix",
        "user": {
            "login": "Revinand",
            "id": 7221855,
            "node_id": "MDQ6VXNlcjcyMjE4NTU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7221855?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Revinand",
            "html_url": "https://github.com/Revinand",
            "followers_url": "https://api.github.com/users/Revinand/followers",
            "following_url": "https://api.github.com/users/Revinand/following{/other_user}",
            "gists_url": "https://api.github.com/users/Revinand/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Revinand/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Revinand/subscriptions",
            "organizations_url": "https://api.github.com/users/Revinand/orgs",
            "repos_url": "https://api.github.com/users/Revinand/repos",
            "events_url": "https://api.github.com/users/Revinand/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Revinand/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-09T12:05:33Z",
        "updated_at": "2020-02-09T12:05:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2513",
            "html_url": "https://github.com/ethereum/EIPs/pull/2513",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2513.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2513.patch"
        },
        "body": "Changed `ERC777TokensSender` to `ERC777TokensRecipient` in `ERC777TokensRecipient And The tokensReceived Hook` section."
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2512",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2512/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2512/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2512/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2512",
        "id": 561224408,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcyMDc0NTAz",
        "number": 2512,
        "title": "Updated EIP-778 and EIP-868 to Last Call as it has already been implemented in the Clients",
        "user": {
            "login": "MadeofTin",
            "id": 1226869,
            "node_id": "MDQ6VXNlcjEyMjY4Njk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1226869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MadeofTin",
            "html_url": "https://github.com/MadeofTin",
            "followers_url": "https://api.github.com/users/MadeofTin/followers",
            "following_url": "https://api.github.com/users/MadeofTin/following{/other_user}",
            "gists_url": "https://api.github.com/users/MadeofTin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MadeofTin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MadeofTin/subscriptions",
            "organizations_url": "https://api.github.com/users/MadeofTin/orgs",
            "repos_url": "https://api.github.com/users/MadeofTin/repos",
            "events_url": "https://api.github.com/users/MadeofTin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MadeofTin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-06T19:35:04Z",
        "updated_at": "2020-02-06T21:25:18Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2512",
            "html_url": "https://github.com/ethereum/EIPs/pull/2512",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2512.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2512.patch"
        },
        "body": "EIP-778 and EIP-868 are EIPs are networking Specs that are Live on mainnet. Updating the Status from Draft to Last Call as to trigger the RSS bot."
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2511",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2511/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2511/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2511/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2511",
        "id": 560771074,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxNzAxNzg2",
        "number": 2511,
        "title": "Updated to Last Call",
        "user": {
            "login": "MadeofTin",
            "id": 1226869,
            "node_id": "MDQ6VXNlcjEyMjY4Njk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1226869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MadeofTin",
            "html_url": "https://github.com/MadeofTin",
            "followers_url": "https://api.github.com/users/MadeofTin/followers",
            "following_url": "https://api.github.com/users/MadeofTin/following{/other_user}",
            "gists_url": "https://api.github.com/users/MadeofTin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MadeofTin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MadeofTin/subscriptions",
            "organizations_url": "https://api.github.com/users/MadeofTin/orgs",
            "repos_url": "https://api.github.com/users/MadeofTin/repos",
            "events_url": "https://api.github.com/users/MadeofTin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MadeofTin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-06T04:26:30Z",
        "updated_at": "2020-02-06T18:17:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2511",
            "html_url": "https://github.com/ethereum/EIPs/pull/2511",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2511.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2511.patch"
        },
        "body": "This Networking EIP is confirmed already active on the network. I will put it through Last Call to activate the RSS Feed."
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2509",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2509/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2509/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2509/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2509",
        "id": 559557825,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcwNzAzNDU3",
        "number": 2509,
        "title": "Added Andrea Lanfranchi as an author to EIP 1057: ProgPoW, a Programmatic Proof-of-Work",
        "user": {
            "login": "MadeofTin",
            "id": 1226869,
            "node_id": "MDQ6VXNlcjEyMjY4Njk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1226869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MadeofTin",
            "html_url": "https://github.com/MadeofTin",
            "followers_url": "https://api.github.com/users/MadeofTin/followers",
            "following_url": "https://api.github.com/users/MadeofTin/following{/other_user}",
            "gists_url": "https://api.github.com/users/MadeofTin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MadeofTin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MadeofTin/subscriptions",
            "organizations_url": "https://api.github.com/users/MadeofTin/orgs",
            "repos_url": "https://api.github.com/users/MadeofTin/repos",
            "events_url": "https://api.github.com/users/MadeofTin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MadeofTin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-04T08:21:48Z",
        "updated_at": "2020-02-04T08:24:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2509",
            "html_url": "https://github.com/ethereum/EIPs/pull/2509",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2509.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2509.patch"
        },
        "body": "Andrea Lanfranchi is joining as a champion for this EIP.\r\n\r\nPermission from the original author granted by IfDefElse below.\r\n[February 4, 2020 12:08 AM](https://gitter.im/ethereum-cat-herders/ProgPoW-review?at=5e3926873aca1e4c5f61e3ef)\r\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2508",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2508/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2508/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2508/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2508",
        "id": 559551471,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcwNjk4MzA4",
        "number": 2508,
        "title": "Added Table of Contents to EIP-1 and a section for Hardforks and the EIP-Centric Model",
        "user": {
            "login": "MadeofTin",
            "id": 1226869,
            "node_id": "MDQ6VXNlcjEyMjY4Njk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1226869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MadeofTin",
            "html_url": "https://github.com/MadeofTin",
            "followers_url": "https://api.github.com/users/MadeofTin/followers",
            "following_url": "https://api.github.com/users/MadeofTin/following{/other_user}",
            "gists_url": "https://api.github.com/users/MadeofTin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MadeofTin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MadeofTin/subscriptions",
            "organizations_url": "https://api.github.com/users/MadeofTin/orgs",
            "repos_url": "https://api.github.com/users/MadeofTin/repos",
            "events_url": "https://api.github.com/users/MadeofTin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MadeofTin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-04T08:06:54Z",
        "updated_at": "2020-02-11T01:09:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2508",
            "html_url": "https://github.com/ethereum/EIPs/pull/2508",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2508.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2508.patch"
        },
        "body": "EIP-1 is rather large, but it is useful to have it as a single source of truth for the EIP process and Governance. I created a Table of Contents to make it easier to navigate to the portion that is most relevant to the reader.\r\n\r\nI also included:\r\n\r\n - a section on Hardforks and a specification for Hardfork Meta-EIPs\r\n - a section on The EIP Centric model\r\n - Definition of Eligible for Inclusion and a link to the meta-registry for tracking EIPs marked as such.\r\n\r\nMuch of the content was taken from.\r\n - [EIP 233: Formal process of hard forks](https://eips.ethereum.org/EIPS/eip-233)\r\n - [EIP 2378: EIPs Eligible for Inclusion](https://eips.ethereum.org/EIPS/eip-2378)\r\n\r\nThis is part of an effort to unify the definition of the EIP process into one location."
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2505",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2505/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2505/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2505/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2505",
        "id": 559193037,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcwNDA3Mzk1",
        "number": 2505,
        "title": "Eip1559 updates",
        "user": {
            "login": "i-norden",
            "id": 28617060,
            "node_id": "MDQ6VXNlcjI4NjE3MDYw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/28617060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/i-norden",
            "html_url": "https://github.com/i-norden",
            "followers_url": "https://api.github.com/users/i-norden/followers",
            "following_url": "https://api.github.com/users/i-norden/following{/other_user}",
            "gists_url": "https://api.github.com/users/i-norden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/i-norden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/i-norden/subscriptions",
            "organizations_url": "https://api.github.com/users/i-norden/orgs",
            "repos_url": "https://api.github.com/users/i-norden/repos",
            "events_url": "https://api.github.com/users/i-norden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/i-norden/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-02-03T16:28:13Z",
        "updated_at": "2020-02-07T20:09:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2505",
            "html_url": "https://github.com/ethereum/EIPs/pull/2505",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2505.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2505.patch"
        },
        "body": "I've updated the EIP1559 doc to reflect the implementation found [here](https://github.com/vulcanize/go-ethereum-EIP1559/tree/rebase) or [here](https://github.com/vulcanize/go-ethereum/tree/eip1559_rebase) if you want to see the tests passing. The PR for the implementation is now open [here](https://github.com/ethereum/go-ethereum/pull/20618).\r\n\r\nThe magicians thread for this can be found [here](https://ethereum-magicians.org/t/eip-1559-go-etheruem-implementation/3918). Please let me know if there is any additional feedback or updates to incorporate!\r\n\r\nThanks!"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2502",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2502/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2502/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2502/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2502",
        "id": 558656103,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY5OTgxMzQ1",
        "number": 2502,
        "title": "ERC: \u00b5Topic Delegation",
        "user": {
            "login": "3esmit",
            "id": 224810,
            "node_id": "MDQ6VXNlcjIyNDgxMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/224810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3esmit",
            "html_url": "https://github.com/3esmit",
            "followers_url": "https://api.github.com/users/3esmit/followers",
            "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
            "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
            "organizations_url": "https://api.github.com/users/3esmit/orgs",
            "repos_url": "https://api.github.com/users/3esmit/repos",
            "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3esmit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-02T07:29:01Z",
        "updated_at": "2020-02-05T14:39:59Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2502",
            "html_url": "https://github.com/ethereum/EIPs/pull/2502",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2502.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2502.patch"
        },
        "body": "Preview at: https://gitlab.com/status-im/docs/EIPs/blob/eip-2502/EIPS/eip-2502.md"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2501",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2501/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2501/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2501/events",
        "html_url": "https://github.com/ethereum/EIPs/issues/2501",
        "id": 558654737,
        "node_id": "MDU6SXNzdWU1NTg2NTQ3Mzc=",
        "number": 2501,
        "title": "Add support to PlantUML in EIP website.",
        "user": {
            "login": "3esmit",
            "id": 224810,
            "node_id": "MDQ6VXNlcjIyNDgxMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/224810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3esmit",
            "html_url": "https://github.com/3esmit",
            "followers_url": "https://api.github.com/users/3esmit/followers",
            "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
            "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
            "organizations_url": "https://api.github.com/users/3esmit/orgs",
            "repos_url": "https://api.github.com/users/3esmit/repos",
            "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3esmit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-02T07:13:20Z",
        "updated_at": "2020-02-02T07:13:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Similar to #2450, but regarding PlantUML. "
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2496",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2496/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2496/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2496/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2496",
        "id": 557692165,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY5MjM3NTE4",
        "number": 2496,
        "title": "ERC-1363 Payable Token",
        "user": {
            "login": "vittominacori",
            "id": 8151143,
            "node_id": "MDQ6VXNlcjgxNTExNDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8151143?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vittominacori",
            "html_url": "https://github.com/vittominacori",
            "followers_url": "https://api.github.com/users/vittominacori/followers",
            "following_url": "https://api.github.com/users/vittominacori/following{/other_user}",
            "gists_url": "https://api.github.com/users/vittominacori/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vittominacori/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vittominacori/subscriptions",
            "organizations_url": "https://api.github.com/users/vittominacori/orgs",
            "repos_url": "https://api.github.com/users/vittominacori/repos",
            "events_url": "https://api.github.com/users/vittominacori/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vittominacori/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-30T19:07:48Z",
        "updated_at": "2020-01-30T19:12:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2496",
            "html_url": "https://github.com/ethereum/EIPs/pull/2496",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2496.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2496.patch"
        },
        "body": "```\r\neip: 1363\r\ntitle: ERC-1363 Payable Token\r\nauthor: Vittorio Minacori (@vittominacori)\r\ndiscussions-to: https://github.com/ethereum/eips/issues/1363\r\nstatus: Draft\r\ntype: Standards Track\r\ncategory: ERC\r\ncreated: 2020-01-30\r\nrequires: 20, 165\r\n```\r\n\r\n## Simple Summary\r\nDescription of a **Payable Token** compatible with the ERC-20 definition. \r\nAlso description of a Token **Receiver** and/or **Spender** that accepts Payable Token payments.\r\n\r\nCloses #1363 \r\n\r\n## Abstract\r\nThe following describes standard functions a token contract and contracts working with specified token can implement to make a Token Payable.\r\n\r\n## Motivation\r\nThis proposal allows to implement an ERC-20 compatible token that can be used for payments.\r\n\r\nIt defines `transferAndCall` and `transferFromAndCall` functions that will call an `onTransferReceived` on a `ERC1363Receiver` contract.\r\nIt defines `approveAndCall` functions that will call an `onApprovalReceived` on a `ERC1363Spender` contract.\r\n\r\nThis proposal is inspired by the ERC-721 `onERC721Received` and `ERC721TokenReceiver` behaviours. \r\n\r\n## Specification\r\nEvery Payable Token compliant contract MUST implement the ERC-1363 interface other than ERC-20 and ERC-165 interfaces.\r\n\r\n```solidity\r\npragma solidity ^0.5.16;\r\n\r\n\r\ninterface ERC1363 /* is ERC20, ERC165 */ {\r\n  /*\r\n   * Note: the ERC-165 identifier for this interface is 0x4bbee2df.\r\n   * 0x4bbee2df ===\r\n   *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\r\n   *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\r\n   *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\r\n   *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)'))\r\n   */\r\n\r\n  /*\r\n   * Note: the ERC-165 identifier for this interface is 0xfb9ec8ce.\r\n   * 0xfb9ec8ce ===\r\n   *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\r\n   *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\r\n   */\r\n\r\n  /**\r\n   * @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\r\n   * @param to address The address which you want to transfer to\r\n   * @param value uint256 The amount of tokens to be transferred\r\n   * @return true unless throwing\r\n   */\r\n  function transferAndCall(address to, uint256 value) public returns (bool);\r\n\r\n  /**\r\n   * @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\r\n   * @param to address The address which you want to transfer to\r\n   * @param value uint256 The amount of tokens to be transferred\r\n   * @param data bytes Additional data with no specified format, sent in call to `to`\r\n   * @return true unless throwing\r\n   */\r\n  function transferAndCall(address to, uint256 value, bytes memory data) public returns (bool);\r\n\r\n  /**\r\n   * @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver\r\n   * @param from address The address which you want to send tokens from\r\n   * @param to address The address which you want to transfer to\r\n   * @param value uint256 The amount of tokens to be transferred\r\n   * @return true unless throwing\r\n   */\r\n  function transferFromAndCall(address from, address to, uint256 value) public returns (bool);\r\n\r\n\r\n  /**\r\n   * @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver\r\n   * @param from address The address which you want to send tokens from\r\n   * @param to address The address which you want to transfer to\r\n   * @param value uint256 The amount of tokens to be transferred\r\n   * @param data bytes Additional data with no specified format, sent in call to `to`\r\n   * @return true unless throwing\r\n   */\r\n  function transferFromAndCall(address from, address to, uint256 value, bytes memory data) public returns (bool);\r\n\r\n  /**\r\n   * @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\r\n   * and then call `onApprovalReceived` on spender.\r\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\r\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   * @param spender address The address which will spend the funds\r\n   * @param value uint256 The amount of tokens to be spent\r\n   */\r\n  function approveAndCall(address spender, uint256 value) public returns (bool);\r\n\r\n  /**\r\n   * @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\r\n   * and then call `onApprovalReceived` on spender.\r\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\r\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   * @param spender address The address which will spend the funds\r\n   * @param value uint256 The amount of tokens to be spent\r\n   * @param data bytes Additional data with no specified format, sent in call to `spender`\r\n   */\r\n  function approveAndCall(address spender, uint256 value, bytes memory data) public returns (bool);\r\n}\r\n\r\ninterface ERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address account) external view returns (uint256);\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface ERC165 {\r\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n```\r\n\r\nA contract that wants to accept token payments via `transferAndCall` or `transferFromAndCall` MUST implement the following interface:\r\n\r\n```solidity\r\n/**\r\n * @title ERC1363Receiver interface\r\n * @dev Interface for any contract that wants to support transferAndCall or transferFromAndCall\r\n *  from ERC1363 token contracts.\r\n */\r\ninterface ERC1363Receiver {\r\n  /*\r\n   * Note: the ERC-165 identifier for this interface is 0x88a7ca5c.\r\n   * 0x88a7ca5c === bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))\r\n   */\r\n\r\n  /**\r\n   * @notice Handle the receipt of ERC1363 tokens\r\n   * @dev Any ERC1363 smart contract calls this function on the recipient\r\n   * after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\r\n   * transfer. Return of other than the magic value MUST result in the\r\n   * transaction being reverted.\r\n   * Note: the token contract address is always the message sender.\r\n   * @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\r\n   * @param from address The address which are token transferred from\r\n   * @param value uint256 The amount of tokens transferred\r\n   * @param data bytes Additional data with no specified format\r\n   * @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`\r\n   *  unless throwing\r\n   */\r\n  function onTransferReceived(address operator, address from, uint256 value, bytes memory data) public returns (bytes4);\r\n}\r\n``` \r\n\r\nA contract that wants to accept token payments via `approveAndCall` MUST implement the following interface:\r\n\r\n```solidity\r\n/**\r\n * @title ERC1363Spender interface\r\n * @dev Interface for any contract that wants to support approveAndCall\r\n *  from ERC1363 token contracts.\r\n */\r\ninterface ERC1363Spender {\r\n  /*\r\n   * Note: the ERC-165 identifier for this interface is 0x7b04a2d0.\r\n   * 0x7b04a2d0 === bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))\r\n   */\r\n\r\n  /**\r\n   * @notice Handle the approval of ERC1363 tokens\r\n   * @dev Any ERC1363 smart contract calls this function on the recipient\r\n   * after an `approve`. This function MAY throw to revert and reject the\r\n   * approval. Return of other than the magic value MUST result in the\r\n   * transaction being reverted.\r\n   * Note: the token contract address is always the message sender.\r\n   * @param owner address The address which called `approveAndCall` function\r\n   * @param value uint256 The amount of tokens to be spent\r\n   * @param data bytes Additional data with no specified format\r\n   * @return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))`\r\n   *  unless throwing\r\n   */\r\n  function onApprovalReceived(address owner, uint256 value, bytes memory data) public returns (bytes4);\r\n}\r\n``` \r\n\r\n## Rationale\r\nThere are many proposed uses of Ethereum smart contracts that can accept ERC-20 payments (i.e. to create a token payable crowdsale, selling services for tokens, paying invoices, making subscriptions, use them for a specific utility and many other purposes). \r\n\r\nThis proposal wants to make token payments easier and working without the use of any other listener. It also allows to make a callback after a transfer in a single transaction.\r\n\r\n## Backwards Compatibility\r\nThis proposal is inspired also by ERC-223 and ERC-677 but it uses the ERC-721 approach so it doesn't override the ERC-20 `transfer` and `transferFrom` methods and defines the interfaces IDs to be implemented maintaining the ERC-20 backwards compatibility.  \r\n\r\n## Test Cases\r\n[https://github.com/vittominacori/erc1363-payable-token/tree/master/test](https://github.com/vittominacori/erc1363-payable-token/tree/master/test)\r\n\r\n## Implementation\r\n[https://github.com/vittominacori/erc1363-payable-token/tree/master/contracts/token/ERC1363](https://github.com/vittominacori/erc1363-payable-token/tree/master/contracts/token/ERC1363)\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2494",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2494/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2494/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2494/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2494",
        "id": 556714636,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY4NDM0NzE5",
        "number": 2494,
        "title": "EIP-2494 Baby Jubjub Elliptic Curve",
        "user": {
            "login": "bellesmarta",
            "id": 43028405,
            "node_id": "MDQ6VXNlcjQzMDI4NDA1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/43028405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bellesmarta",
            "html_url": "https://github.com/bellesmarta",
            "followers_url": "https://api.github.com/users/bellesmarta/followers",
            "following_url": "https://api.github.com/users/bellesmarta/following{/other_user}",
            "gists_url": "https://api.github.com/users/bellesmarta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bellesmarta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bellesmarta/subscriptions",
            "organizations_url": "https://api.github.com/users/bellesmarta/orgs",
            "repos_url": "https://api.github.com/users/bellesmarta/repos",
            "events_url": "https://api.github.com/users/bellesmarta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bellesmarta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-01-29T08:39:57Z",
        "updated_at": "2020-02-10T10:45:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2494",
            "html_url": "https://github.com/ethereum/EIPs/pull/2494",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2494.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2494.patch"
        },
        "body": "This pull request stands for EIP-2494 proposing Baby Jubjub, a twisted Edwards elliptic curve designed to work inside zk-SNARK circuits in Ethereum. Contribute and follow to the discussion thread at https://ethereum-magicians.org/t/eip-2494-baby-jubjub-elliptic-curve/3968."
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2492",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2492/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2492/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2492/events",
        "html_url": "https://github.com/ethereum/EIPs/issues/2492",
        "id": 556692205,
        "node_id": "MDU6SXNzdWU1NTY2OTIyMDU=",
        "number": 2492,
        "title": "ERC1400 contract deployment",
        "user": {
            "login": "monishasubramanian",
            "id": 60256998,
            "node_id": "MDQ6VXNlcjYwMjU2OTk4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/60256998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/monishasubramanian",
            "html_url": "https://github.com/monishasubramanian",
            "followers_url": "https://api.github.com/users/monishasubramanian/followers",
            "following_url": "https://api.github.com/users/monishasubramanian/following{/other_user}",
            "gists_url": "https://api.github.com/users/monishasubramanian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/monishasubramanian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/monishasubramanian/subscriptions",
            "organizations_url": "https://api.github.com/users/monishasubramanian/orgs",
            "repos_url": "https://api.github.com/users/monishasubramanian/repos",
            "events_url": "https://api.github.com/users/monishasubramanian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/monishasubramanian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-29T07:41:34Z",
        "updated_at": "2020-01-29T10:07:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hello,I wanted to deploy erc1400 contract in ropsten testnetwork.I successfully connected with ropsten testnetwork but i couldn't deploy the contract.It shows \"zero length biginteger\" error.\r\n![Screenshot from 2020-01-29 12-41-39](https://user-images.githubusercontent.com/60256998/73336815-dd17ad00-4298-11ea-86d2-77c6fec036c1.png)\r\n\r\n "
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2491",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2491/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2491/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2491/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2491",
        "id": 555902648,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY3NzYxMzMz",
        "number": 2491,
        "title": "Remove review period after final EIP-2384",
        "user": {
            "login": "nicksavers",
            "id": 7483198,
            "node_id": "MDQ6VXNlcjc0ODMxOTg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7483198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nicksavers",
            "html_url": "https://github.com/nicksavers",
            "followers_url": "https://api.github.com/users/nicksavers/followers",
            "following_url": "https://api.github.com/users/nicksavers/following{/other_user}",
            "gists_url": "https://api.github.com/users/nicksavers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nicksavers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nicksavers/subscriptions",
            "organizations_url": "https://api.github.com/users/nicksavers/orgs",
            "repos_url": "https://api.github.com/users/nicksavers/repos",
            "events_url": "https://api.github.com/users/nicksavers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nicksavers/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-27T23:49:54Z",
        "updated_at": "2020-01-27T23:49:54Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2491",
            "html_url": "https://github.com/ethereum/EIPs/pull/2491",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2491.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2491.patch"
        },
        "body": "After a Last Call status is moved to Final, the **Review Period End <date>** column can be removed"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2490",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2490/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2490/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2490/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2490",
        "id": 555902333,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY3NzYxMDY4",
        "number": 2490,
        "title": "Remove review period after final EIP-2387",
        "user": {
            "login": "nicksavers",
            "id": 7483198,
            "node_id": "MDQ6VXNlcjc0ODMxOTg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7483198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nicksavers",
            "html_url": "https://github.com/nicksavers",
            "followers_url": "https://api.github.com/users/nicksavers/followers",
            "following_url": "https://api.github.com/users/nicksavers/following{/other_user}",
            "gists_url": "https://api.github.com/users/nicksavers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nicksavers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nicksavers/subscriptions",
            "organizations_url": "https://api.github.com/users/nicksavers/orgs",
            "repos_url": "https://api.github.com/users/nicksavers/repos",
            "events_url": "https://api.github.com/users/nicksavers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nicksavers/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-27T23:48:56Z",
        "updated_at": "2020-01-27T23:48:56Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2490",
            "html_url": "https://github.com/ethereum/EIPs/pull/2490",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2490.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2490.patch"
        },
        "body": "After a Last Call status is moved to Final, the **Review Period End <date>** column can be removed"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2489",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2489/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2489/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2489/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2489",
        "id": 554767983,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY2ODYzMTI0",
        "number": 2489,
        "title": "Add deprecate GAS EIP",
        "user": {
            "login": "axic",
            "id": 20340,
            "node_id": "MDQ6VXNlcjIwMzQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/20340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axic",
            "html_url": "https://github.com/axic",
            "followers_url": "https://api.github.com/users/axic/followers",
            "following_url": "https://api.github.com/users/axic/following{/other_user}",
            "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
            "organizations_url": "https://api.github.com/users/axic/orgs",
            "repos_url": "https://api.github.com/users/axic/repos",
            "events_url": "https://api.github.com/users/axic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-24T14:29:32Z",
        "updated_at": "2020-01-24T14:30:15Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2489",
            "html_url": "https://github.com/ethereum/EIPs/pull/2489",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2489.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2489.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2488",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2488/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2488/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2488/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2488",
        "id": 554752353,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY2ODUwMDcw",
        "number": 2488,
        "title": "Add deprecate CALLCODE EIP",
        "user": {
            "login": "axic",
            "id": 20340,
            "node_id": "MDQ6VXNlcjIwMzQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/20340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axic",
            "html_url": "https://github.com/axic",
            "followers_url": "https://api.github.com/users/axic/followers",
            "following_url": "https://api.github.com/users/axic/following{/other_user}",
            "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
            "organizations_url": "https://api.github.com/users/axic/orgs",
            "repos_url": "https://api.github.com/users/axic/repos",
            "events_url": "https://api.github.com/users/axic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-24T14:01:14Z",
        "updated_at": "2020-01-24T14:04:37Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2488",
            "html_url": "https://github.com/ethereum/EIPs/pull/2488",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2488.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2488.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2487",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2487/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2487/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2487/events",
        "html_url": "https://github.com/ethereum/EIPs/issues/2487",
        "id": 554465658,
        "node_id": "MDU6SXNzdWU1NTQ0NjU2NTg=",
        "number": 2487,
        "title": "Fix link",
        "user": {
            "login": "fulldecent",
            "id": 382183,
            "node_id": "MDQ6VXNlcjM4MjE4Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/382183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fulldecent",
            "html_url": "https://github.com/fulldecent",
            "followers_url": "https://api.github.com/users/fulldecent/followers",
            "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
            "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
            "organizations_url": "https://api.github.com/users/fulldecent/orgs",
            "repos_url": "https://api.github.com/users/fulldecent/repos",
            "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fulldecent/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-23T23:26:33Z",
        "updated_at": "2020-01-23T23:26:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Make this HTTPS\r\n\r\n<img width=\"1442\" alt=\"71316490-2d9c1f00-243e-11ea-81a7-e816002f7bb6\" src=\"https://user-images.githubusercontent.com/382183/73032728-de1a8b80-3e0d-11ea-9d56-ca6957a0cd59.png\">\r\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2485",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2485/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2485/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2485/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2485",
        "id": 553803007,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY2MDcxMzUy",
        "number": 2485,
        "title": "2309 to Last Call",
        "user": {
            "login": "pizza-r0b",
            "id": 5282495,
            "node_id": "MDQ6VXNlcjUyODI0OTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5282495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pizza-r0b",
            "html_url": "https://github.com/pizza-r0b",
            "followers_url": "https://api.github.com/users/pizza-r0b/followers",
            "following_url": "https://api.github.com/users/pizza-r0b/following{/other_user}",
            "gists_url": "https://api.github.com/users/pizza-r0b/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pizza-r0b/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pizza-r0b/subscriptions",
            "organizations_url": "https://api.github.com/users/pizza-r0b/orgs",
            "repos_url": "https://api.github.com/users/pizza-r0b/repos",
            "events_url": "https://api.github.com/users/pizza-r0b/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pizza-r0b/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-01-22T21:26:07Z",
        "updated_at": "2020-02-12T23:32:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2485",
            "html_url": "https://github.com/ethereum/EIPs/pull/2485",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2485.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2485.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2483",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2483/events",
        "html_url": "https://github.com/ethereum/EIPs/issues/2483",
        "id": 552416493,
        "node_id": "MDU6SXNzdWU1NTI0MTY0OTM=",
        "number": 2483,
        "title": "ERC-2477 the discussion",
        "user": {
            "login": "fulldecent",
            "id": 382183,
            "node_id": "MDQ6VXNlcjM4MjE4Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/382183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fulldecent",
            "html_url": "https://github.com/fulldecent",
            "followers_url": "https://api.github.com/users/fulldecent/followers",
            "following_url": "https://api.github.com/users/fulldecent/following{/other_user}",
            "gists_url": "https://api.github.com/users/fulldecent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fulldecent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fulldecent/subscriptions",
            "organizations_url": "https://api.github.com/users/fulldecent/orgs",
            "repos_url": "https://api.github.com/users/fulldecent/repos",
            "events_url": "https://api.github.com/users/fulldecent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fulldecent/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-01-20T16:59:32Z",
        "updated_at": "2020-02-12T11:10:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "To discuss ERC-2477...\r\n\r\n## Simple Summary\r\n\r\n  This specification defines a mechanism by which clients may verify that a fetched token metadata document has been delivered without unexpected manipulation.\r\n\r\n  This is the Web3 counterpart of the W3C Subresource Integrity (SRI) specification.\r\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2482",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2482/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2482/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2482/events",
        "html_url": "https://github.com/ethereum/EIPs/issues/2482",
        "id": 552260811,
        "node_id": "MDU6SXNzdWU1NTIyNjA4MTE=",
        "number": 2482,
        "title": "Discussion thread to EIP-??? arguing for request ids in the eth protocol",
        "user": {
            "login": "cburgdorf",
            "id": 521109,
            "node_id": "MDQ6VXNlcjUyMTEwOQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/521109?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cburgdorf",
            "html_url": "https://github.com/cburgdorf",
            "followers_url": "https://api.github.com/users/cburgdorf/followers",
            "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
            "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
            "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
            "repos_url": "https://api.github.com/users/cburgdorf/repos",
            "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2020-01-20T12:08:31Z",
        "updated_at": "2020-01-22T12:56:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "This is the discussion thread for https://github.com/ethereum/EIPs/pull/2481\r\n\r\n# Simple Summary\r\n\r\nThe EIP proposes a way to slightly increase the efficiency of the `eth` networking protocol while at the same time reducing complexity in Ethereum node implementations.\r\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2481",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2481/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2481/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2481/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2481",
        "id": 552258871,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0Nzk5ODM2",
        "number": 2481,
        "title": "Add EIP arguing for request ids",
        "user": {
            "login": "cburgdorf",
            "id": 521109,
            "node_id": "MDQ6VXNlcjUyMTEwOQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/521109?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cburgdorf",
            "html_url": "https://github.com/cburgdorf",
            "followers_url": "https://api.github.com/users/cburgdorf/followers",
            "following_url": "https://api.github.com/users/cburgdorf/following{/other_user}",
            "gists_url": "https://api.github.com/users/cburgdorf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cburgdorf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cburgdorf/subscriptions",
            "organizations_url": "https://api.github.com/users/cburgdorf/orgs",
            "repos_url": "https://api.github.com/users/cburgdorf/repos",
            "events_url": "https://api.github.com/users/cburgdorf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cburgdorf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-01-20T12:04:19Z",
        "updated_at": "2020-01-23T11:57:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2481",
            "html_url": "https://github.com/ethereum/EIPs/pull/2481",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2481.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2481.patch"
        },
        "body": ""
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2479",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2479/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2479/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2479/events",
        "html_url": "https://github.com/ethereum/EIPs/issues/2479",
        "id": 552017980,
        "node_id": "MDU6SXNzdWU1NTIwMTc5ODA=",
        "number": 2479,
        "title": "Feature Request: Create sanity check for solidity interfaces in the EIPs",
        "user": {
            "login": "xinbenlv",
            "id": 640325,
            "node_id": "MDQ6VXNlcjY0MDMyNQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/640325?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xinbenlv",
            "html_url": "https://github.com/xinbenlv",
            "followers_url": "https://api.github.com/users/xinbenlv/followers",
            "following_url": "https://api.github.com/users/xinbenlv/following{/other_user}",
            "gists_url": "https://api.github.com/users/xinbenlv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xinbenlv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xinbenlv/subscriptions",
            "organizations_url": "https://api.github.com/users/xinbenlv/orgs",
            "repos_url": "https://api.github.com/users/xinbenlv/repos",
            "events_url": "https://api.github.com/users/xinbenlv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xinbenlv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-20T01:06:57Z",
        "updated_at": "2020-01-20T01:06:57Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "This issue is an idea for this github repo. It's either a standard nor process proposal.\r\n\r\nThe continous-integration Travis currently supports `htmlproofer`, `eip-validator`, `codespells`. One of the most important thing in the EIPs are the code representation of interfaces, some in solidity, e.g. \r\n\r\nHow about we create a new Travis task that strips the interface defined in the EIPs and check the interfaces defined in a EIP, if defined in Solidity (or other languages), to be valid Solidity (or other) code? How do you think of the idea, or have this been discussed before? \r\n\r\nThank you!\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2474",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2474/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2474/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2474/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2474",
        "id": 551872630,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0NTAwMDQ1",
        "number": 2474,
        "title": "EIP: Coinbase Calls",
        "user": {
            "login": "3esmit",
            "id": 224810,
            "node_id": "MDQ6VXNlcjIyNDgxMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/224810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3esmit",
            "html_url": "https://github.com/3esmit",
            "followers_url": "https://api.github.com/users/3esmit/followers",
            "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
            "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
            "organizations_url": "https://api.github.com/users/3esmit/orgs",
            "repos_url": "https://api.github.com/users/3esmit/repos",
            "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3esmit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-19T06:05:18Z",
        "updated_at": "2020-01-19T22:09:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2474",
            "html_url": "https://github.com/ethereum/EIPs/pull/2474",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2474.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2474.patch"
        },
        "body": "## Simple Summary\r\n\r\nAllow contracts to be called directly by `block.coinbase` (block validator), without a transaction.\r\n\r\n## Abstract\r\n\r\n_In proof-of-work blockchains, validators are known as miners._\r\n\r\nThe validator might want to execute functions directly, without having to sign a transaction. Some examples might be presenting a proof in a contract for an change which also benefits the validator. \r\n\r\nA notable example would be when a validator want to act as an [EIP-1077] Gas Relayer, incentivized to pick up fees from meta transactions. \r\nWithout this change, they can do so by signing from any address a `gasPrice = 0` transaction with the gas relayed call. \r\nHowever this brings an overhead of a signed transaction by validator that does nothing, as `msg.sender` is never used, and there is no gas cost to EVM charge. \r\n\r\nThis proposal makes possible to remove this unused ecrecover.\r\n\r\n## Motivation\r\n\r\nIn order to reduce the overhead of calls that don't use `msg.sender` and are being called by validator with `tx.gasPrice = 0`. \r\n\r\n## Specification\r\n\r\nThe calls to be executed by `block.coinbase` would be included first at block, and would consume normally the gas of block, however they won't pay/cost gas, instead the call logic would pay the validator in other form. \r\n\r\nWould be valid to execute any calls without a transaction by the block coinbase, except when the validator call tries to read `msg.sender`, which would throw an invalid jump.\r\n\r\nCalls included by the validator would have `tx.origin = block.coinbase` and `gas.price = 0` for the rest of call stack, the rest follows as normal calls.\r\n\r\n## Rationale\r\n\r\nTBD\r\n\r\n## Backwards Compatibility\r\n\r\n`tx.origin = block.coinbase` could cause some issues on bad designed contracts, such as using `tx.origin` to validate a signature, an analysis on how contracts use tx.origin might be useful to decide if this is a good choice.\r\n\r\n## Test Cases\r\n\r\nTBD\r\n\r\n## Implementation\r\n\r\nTBD\r\n\r\n## Security Considerations\r\n\r\nTBD\r\n\r\n## Copyright\r\n\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n\r\n[EIP-1077]: https://eips.ethereum.org/EIPS/eip-1077"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2473",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2473/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2473/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2473/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2473",
        "id": 551871961,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0NDk5NjAx",
        "number": 2473,
        "title": "EIP: Gas Abstraction",
        "user": {
            "login": "3esmit",
            "id": 224810,
            "node_id": "MDQ6VXNlcjIyNDgxMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/224810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3esmit",
            "html_url": "https://github.com/3esmit",
            "followers_url": "https://api.github.com/users/3esmit/followers",
            "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
            "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
            "organizations_url": "https://api.github.com/users/3esmit/orgs",
            "repos_url": "https://api.github.com/users/3esmit/repos",
            "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3esmit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-19T05:57:53Z",
        "updated_at": "2020-01-19T22:07:58Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2473",
            "html_url": "https://github.com/ethereum/EIPs/pull/2473",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2473.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2473.patch"
        },
        "body": "\r\n## Simple Summary\r\n\r\nAllow block validators to include account contract's gas abstract transactions. \r\n\r\nSoftfork miners to accept other tokens as gas through [ERC-1077] meta-transactions. \r\n\r\n## Abstract\r\n\r\n[ERC-1077] allows for users agreeing with gas relayers, but also for agreeing with next `block.coinbase`, this proposal suggests that the gas market, currently only in ether, becomes abstracted by allowing the validators of listening directly for those type of transactions.\r\n\r\n## Motivation\r\n\r\nThere are ongoing efforts in creating parallel gas markets, while this should ideally be solved at root through the validators. With PoS, staking ETH would allow rewards in any ERC20 token staker chooses to accept.\r\n\r\n## Specification\r\n\r\nBlock validators should listen to messages in the [ERC-1077] format with `_gasRelayer` set as `address(0)`, and while forging a block, test their event outcomes to see if it's valid within custom configs (min gas prices in USD).\r\nValid meta transactions should be included early as transactions from any address (`msg.sender` is not used) with gas price zero.\r\nA separated whisper channel would be made for every different token, including ether as meta transaction. \r\nValidators choose the tokens they accept and a minimal value in USD for all of them. \r\n\r\n## Rationale\r\n\r\nThis change would become an effective way of creating an abstract gas market in top of ether, however with mining pools this will not have too much network effects. The network effects would be more evident as proof of stake would remove the need of mining pools. \r\n\r\n## Backwards Compatibility\r\n\r\nRegular transactions are not affected. This provides additional feature that won't affect other parts of the system.\r\n\r\n## Test Cases\r\n\r\nTBD \r\n\r\n## Implementation\r\n\r\nTBD\r\n\r\n## Security Considerations\r\n\r\nTBD\r\n\r\n## Copyright\r\n\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n\r\n[ERC-1077]: https://eips.ethereum.org/EIPS/eip-1077"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2472",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2472/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2472/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2472/events",
        "html_url": "https://github.com/ethereum/EIPs/issues/2472",
        "id": 551845731,
        "node_id": "MDU6SXNzdWU1NTE4NDU3MzE=",
        "number": 2472,
        "title": "\"Optional EIPs\" field in header",
        "user": {
            "login": "3esmit",
            "id": 224810,
            "node_id": "MDQ6VXNlcjIyNDgxMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/224810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3esmit",
            "html_url": "https://github.com/3esmit",
            "followers_url": "https://api.github.com/users/3esmit/followers",
            "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
            "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
            "organizations_url": "https://api.github.com/users/3esmit/orgs",
            "repos_url": "https://api.github.com/users/3esmit/repos",
            "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3esmit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-19T00:36:44Z",
        "updated_at": "2020-01-19T00:36:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Hey, I am writing EIP-2470. \r\n\r\nAt security considerations, I suggest the use of other EIPs, but only for that specific cases, so that would be optional EIPs linked to this. \r\n\r\nShould we have a dedicated field at header or I just link it at references?"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2470",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2470/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2470/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2470/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2470",
        "id": 550407795,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzMzE5NTMy",
        "number": 2470,
        "title": "ERC: Singleton Factory",
        "user": {
            "login": "3esmit",
            "id": 224810,
            "node_id": "MDQ6VXNlcjIyNDgxMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/224810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3esmit",
            "html_url": "https://github.com/3esmit",
            "followers_url": "https://api.github.com/users/3esmit/followers",
            "following_url": "https://api.github.com/users/3esmit/following{/other_user}",
            "gists_url": "https://api.github.com/users/3esmit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3esmit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3esmit/subscriptions",
            "organizations_url": "https://api.github.com/users/3esmit/orgs",
            "repos_url": "https://api.github.com/users/3esmit/repos",
            "events_url": "https://api.github.com/users/3esmit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3esmit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-15T20:18:41Z",
        "updated_at": "2020-01-19T00:41:15Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2470",
            "html_url": "https://github.com/ethereum/EIPs/pull/2470",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2470.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2470.patch"
        },
        "body": "## Simple Summary\r\n\r\nA permissionless factory for deploy of deterministic contracts addresses based on its bytecode. \r\n\r\n## Abstract\r\n\r\nSome contracts are designed to be Singletons which have the same address no matter what chain they are, which means that should exist one instance for all, such as [EIP-1820] and [EIP-2429]. These contracts are usually deployed using a method known as [Nick]'s method, so anyone can deploy those contracts on any chain and they have a deterministic address.\r\nThis standard proposes the creation of a CREATE2 factory using this method, so other projects requiring this feature can use this factory in any chain with the same setup, even in development chains.    \r\n\r\n## Motivation\r\n\r\nCode reuse, using the factory becomes easier to deploy singletons.\r\n\r\n## Specification\r\n\r\n### [ERC2470] Singleton Factory\r\n\r\n> This is an exact copy of the code of the [ERC2470 factory smart contract].\r\n\r\n```solidity\r\npragma solidity 0.5.11;\r\n\r\n\r\n/**\r\n * @author Ricardo Guilherme Schmidt (Status Research & Development GmbH)\r\n * @notice Singleton Factory (ERC-2470) deploys deterministic addresses based on it's initialization code.\r\n */\r\ncontract SingletonFactory {\r\n    /**\r\n     * @notice Deploys a deterministic address based on `_initCode` and `_salt`.\r\n     * @param _initCode Initialization code.\r\n     * @param _salt Arbitrary value to modify resulting address.\r\n     * @return Created contract address.\r\n     */\r\n    function deploy(bytes memory _initCode, bytes32 _salt)\r\n        public\r\n        returns (address payable createdContract)\r\n    {\r\n        assembly {\r\n            createdContract := create2(0, add(_initCode, 0x20), mload(_initCode), _salt)\r\n        }\r\n    }\r\n}\r\n// IV is value needed to have a vanity address starting with '0x2470'.\r\n// IV: 3018\r\n```\r\n\r\n### Deployment Transaction\r\n\r\nBelow is the raw transaction which MUST be used to deploy the smart contract on any chain.\r\n\r\n```\r\n0xf901a68085174876e8008303c4d88080b90153608060405234801561001057600080fd5b50610133806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80634af63f0214602d575b600080fd5b60cf60048036036040811015604157600080fd5b810190602081018135640100000000811115605b57600080fd5b820183602082011115606c57600080fd5b80359060200191846001830284011164010000000083111715608d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550509135925060eb915050565b604080516001600160a01b039092168252519081900360200190f35b6000818351602085016000f5939250505056fea265627a7a7231582057d7c8776504dcff64cdcb49ff22c25a9a181f5b8e97f6c14166d4cb5bdfb7b164736f6c634300050b00321ba02470000000000000000000000000000000000000000000000000000000002470a02470000000000000000000000000000000000000000000000000000000002470\r\n```\r\n\r\nThe strings of `2470`'s at the end of the transaction are the `r` and `s` of the signature.\r\nFrom this deterministic pattern (generated by a human), anyone can deduce that no one knows the private key for the deployment account.\r\n\r\n### Deployment Method\r\n\r\nThis contract is going to be deployed using the keyless deployment method---also known as [Nick]'s method---which relies on a single-use address.\r\n(See [Nick's article] for more details). This method works as follows:\r\n\r\n1. Generate a transaction which deploys the contract from a new random account.\r\n  - This transaction MUST NOT use [EIP-155] in order to work on any chain.\r\n  - This transaction MUST have a relatively high gas price to be deployed on any chain. In this case, it is going to be 100 Gwei.\r\n\r\n2. Set the `v`, `r`, `s` of the transaction signature to the following values:\r\n\r\n   ```\r\n   v: 27,\r\n   r: '0x2470000000000000000000000000000000000000000000000000000000002470',\r\n   s: '0x2470000000000000000000000000000000000000000000000000000000002470'\r\n   ```\r\n\r\n   Those `r` and `s` values---made of starting and ending `2470`'s---are obviously a human determined value, instead of a real signature.\r\n\r\n3. We recover the sender of this transaction, i.e., the single-use deployment account.\r\n\r\n    > Thus we obtain an account that can broadcast that transaction, but we also have the warranty that nobody knows the private key of that account.\r\n\r\n4. Send exactly 0.0247 ether to this single-use deployment account.\r\n\r\n5. Broadcast the deployment transaction.\r\n\r\nThe resulting transaction hash is `0x7f44bb65a023b6aa73a66578e03fc0cf60e2d7caf0ce7517787ad9a354a2124e`.\r\n\r\nThis operation can be done on any chain, guaranteeing that the contract address is always the same and nobody can use that address with a different contract.\r\n\r\n\r\n### Single-use Factory Deployment Account\r\n\r\n```\r\n0xd00029A1632C5A2AE9C5433E1B9674E1F2E8d606\r\n```\r\n\r\nThis account is generated by reverse engineering it from its signature for the transaction. \r\nThis way no one knows the private key, but it is known that it is the valid signer of the deployment transaction.\r\n\r\n> To deploy the registry, 0.0247 ether MUST be sent to this account *first*.\r\n\r\n### Factory Contract Address\r\n\r\n```\r\n0x247087a9061f30de86a9E63B68B4e7d8ebf4A51a\r\n```\r\n\r\nThe contract has the address above for every chain on which it is deployed.\r\n### ABI for SingletonFactory:\r\n```json\r\n[\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"_initCode\",\r\n                \"type\": \"bytes\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"_salt\",\r\n                \"type\": \"bytes32\"\r\n            }\r\n        ],\r\n        \"name\": \"deploy\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address payable\",\r\n                \"name\": \"createdContract\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n```\r\n\r\n## Rationale\r\n\r\nSingletonFactory does not allow sending value on create2, this was done to prevent different results on the created object.\r\nSingletonFactory allows user defined salt to facilitate the creation of vanity addresses for other projects. If vanity address is not necessary, salt `bytes(0)` should be used.\r\n\r\n## Backwards Compatibility\r\n\r\nTBD\r\n\r\n## Test Cases\r\n\r\nTBD\r\n\r\n## Implementation\r\n\r\nhttps://github.com/3esmit/ERC2470\r\n\r\n## Security Considerations\r\n\r\nTBD\r\n\r\n## Copyright\r\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\r\n\r\n[EIP-155]: https://eips.ethereum.org/EIPS/eip-155\r\n[EIP-1820]: https://eips.ethereum.org/EIPS/eip-1820\r\n[EIP-2429]: https://gitlab.com/status-im/docs/EIPs/blob/secret-multisig-recovery/EIPS/eip-2429.md\r\n[Nick's article]: https://medium.com/@weka/how-to-send-ether-to-11-440-people-187e332566b7\r\n[Nick]: https://github.com/Arachnid/"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2467",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2467/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2467/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2467/events",
        "html_url": "https://github.com/ethereum/EIPs/pull/2467",
        "id": 549732823,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzYyNzcwMDI4",
        "number": 2467,
        "title": "Set ERC-1620 to \"Last Call\"",
        "user": {
            "login": "PaulRBerg",
            "id": 8782666,
            "node_id": "MDQ6VXNlcjg3ODI2NjY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/8782666?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PaulRBerg",
            "html_url": "https://github.com/PaulRBerg",
            "followers_url": "https://api.github.com/users/PaulRBerg/followers",
            "following_url": "https://api.github.com/users/PaulRBerg/following{/other_user}",
            "gists_url": "https://api.github.com/users/PaulRBerg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PaulRBerg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PaulRBerg/subscriptions",
            "organizations_url": "https://api.github.com/users/PaulRBerg/orgs",
            "repos_url": "https://api.github.com/users/PaulRBerg/repos",
            "events_url": "https://api.github.com/users/PaulRBerg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PaulRBerg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-01-14T18:10:14Z",
        "updated_at": "2020-01-14T18:12:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/ethereum/EIPs/pulls/2467",
            "html_url": "https://github.com/ethereum/EIPs/pull/2467",
            "diff_url": "https://github.com/ethereum/EIPs/pull/2467.diff",
            "patch_url": "https://github.com/ethereum/EIPs/pull/2467.patch"
        },
        "body": "As per the announcement in #1620, update the markdown version of ERC-1620 to its final version from Sep 27, 2019."
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/2465",
        "repository_url": "https://api.github.com/repos/ethereum/EIPs",
        "labels_url": "https://api.github.com/repos/ethereum/EIPs/issues/2465/labels{/name}",
        "comments_url": "https://api.github.com/repos/ethereum/EIPs/issues/2465/comments",
        "events_url": "https://api.github.com/repos/ethereum/EIPs/issues/2465/events",
        "html_url": "https://github.com/ethereum/EIPs/issues/2465",
        "id": 549045105,
        "node_id": "MDU6SXNzdWU1NDkwNDUxMDU=",
        "number": 2465,
        "title": "Discussion thread for EIP-2464: eth/65: transaction annoucements and retrievals",
        "user": {
            "login": "karalabe",
            "id": 129561,
            "node_id": "MDQ6VXNlcjEyOTU2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/129561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karalabe",
            "html_url": "https://github.com/karalabe",
            "followers_url": "https://api.github.com/users/karalabe/followers",
            "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
            "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
            "organizations_url": "https://api.github.com/users/karalabe/orgs",
            "repos_url": "https://api.github.com/users/karalabe/repos",
            "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karalabe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-01-13T16:32:37Z",
        "updated_at": "2020-01-14T11:06:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "## Abstract\r\n\r\nThe `eth` network protocol has two ways to propagate a newly mined block: it can be broadcast to a peer in its entirety (via `NewBlock (0x07)` [in `eth/64` and prior](https://github.com/ethereum/devp2p/blob/master/caps/eth.md)) or it can be announced only (via `NewBlockHashes (0x01)`). This duality allows nodes to do the high-bandwidth broadcasting (10s-100s KB) for a logarithmic number of peers; and the low-bandwidth announcing (10s-100s B) for the remaining linear number of peers. The logarithmic broadcast is enough to reach all well connected nodes, but the linear announce is needed to get across degenerate topologies. This works well.\r\n\r\nThe `eth` protocol, however, does not have a similar dual mechanism for propagating transactions, so nodes need to rely on broadcasting (via `Transactions (0x02)`). To cater for degenerate topologies, transactions cannot be broadcast logarithmically, rather they need to be transferred linearly to all peers. With N peers, each node will transfer the same transaction N times (counting both directions), whereas 1 would be enough in a perfect world. This is a significant waste.\r\n\r\nA similar issue arises when a new network connection is made between two nodes, as they need to sync up their transaction pools, but the pool is just a soup of dangling transactions. Without a way to deduplicate transactions remotely, each node is forced to naively transfer their entire list of transactions to the other side. With pools containing thousands of transactions, a naive transfer amounts to 10s-100s MB, most of which is useless. There is no better way, however.\r\n\r\nThis EIP introduces two additional message types into the `eth` protocol (releasing a new version, `eth/65`): `NewPooledTransactionHashes (0x08)` to announce a set of transactions without their content; and `GetPooledTransactions (0x09)` to request a batch of transactions by their announced hash. This permits reducing the bandwidth used for transaction propagation from linear complexity in the number of peers to logarithmic one; and also reducing the initial transaction exchange from 10s-100s MB to `len(pool) * 32B ~= 128KB`.\r\n\r\nhttps://github.com/ethereum/EIPs/pull/2464"
    }
]