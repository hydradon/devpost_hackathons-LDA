[
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1559",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1559/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1559/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1559/events",
        "html_url": "https://github.com/yargs/yargs/pull/1559",
        "id": 564193505,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0NDY3Nzcw",
        "number": 1559,
        "title": "feat: deprecateOption",
        "user": {
            "login": "laggingreflex",
            "id": 2523987,
            "node_id": "MDQ6VXNlcjI1MjM5ODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2523987?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laggingreflex",
            "html_url": "https://github.com/laggingreflex",
            "followers_url": "https://api.github.com/users/laggingreflex/followers",
            "following_url": "https://api.github.com/users/laggingreflex/following{/other_user}",
            "gists_url": "https://api.github.com/users/laggingreflex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laggingreflex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laggingreflex/subscriptions",
            "organizations_url": "https://api.github.com/users/laggingreflex/orgs",
            "repos_url": "https://api.github.com/users/laggingreflex/repos",
            "events_url": "https://api.github.com/users/laggingreflex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laggingreflex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-12T18:44:25Z",
        "updated_at": "2020-02-13T08:47:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/yargs/yargs/pulls/1559",
            "html_url": "https://github.com/yargs/yargs/pull/1559",
            "diff_url": "https://github.com/yargs/yargs/pull/1559.diff",
            "patch_url": "https://github.com/yargs/yargs/pull/1559.patch"
        },
        "body": "Shows a `[deprecated]` notice in front of an option\r\n\r\n* Added a method: `.deprecateOption(key, [message])`\r\n* Added a key in option conrtructor: `.option(key, { deprecated: [boolean|message] })`\r\n* Basic Tests\r\n* Updated Readme\r\n\r\nWork towards #1518 "
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1558",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1558/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1558/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1558/events",
        "html_url": "https://github.com/yargs/yargs/pull/1558",
        "id": 564121062,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0NDA4MjA5",
        "number": 1558,
        "title": "chore: release 15.2.0",
        "user": {
            "login": "release-please[bot]",
            "id": 55107282,
            "node_id": "MDM6Qm90NTUxMDcyODI=",
            "avatar_url": "https://avatars2.githubusercontent.com/in/40688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/release-please%5Bbot%5D",
            "html_url": "https://github.com/apps/release-please",
            "followers_url": "https://api.github.com/users/release-please%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/release-please%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/release-please%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/release-please%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/release-please%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/release-please%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/release-please%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/release-please%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/release-please%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1398423358,
                "node_id": "MDU6TGFiZWwxMzk4NDIzMzU4",
                "url": "https://api.github.com/repos/yargs/yargs/labels/autorelease:%20pending",
                "name": "autorelease: pending",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 1514485416,
                "node_id": "MDU6TGFiZWwxNTE0NDg1NDE2",
                "url": "https://api.github.com/repos/yargs/yargs/labels/do-not-land",
                "name": "do-not-land",
                "color": "75dd7e",
                "default": false,
                "description": ""
            },
            {
                "id": 1398423359,
                "node_id": "MDU6TGFiZWwxMzk4NDIzMzU5",
                "url": "https://api.github.com/repos/yargs/yargs/labels/type:%20process",
                "name": "type: process",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-12T16:35:43Z",
        "updated_at": "2020-02-12T17:39:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/yargs/yargs/pulls/1558",
            "html_url": "https://github.com/yargs/yargs/pull/1558",
            "diff_url": "https://github.com/yargs/yargs/pull/1558.diff",
            "patch_url": "https://github.com/yargs/yargs/pull/1558.patch"
        },
        "body": ":robot: I have created a release \\*beep\\* \\*boop\\* \n---\n## [15.2.0](https://www.github.com/yargs/yargs/compare/v15.1.0...v15.2.0) (2020-02-12)\n\n\n### \u26a0 BREAKING CHANGES\n\n* **deps:** yargs-parser@17.0.0 no longer implicitly creates arrays out of boolean\narguments when duplicates are provided\n\n### Features\n\n* **completion:** takes negated flags into account when boolean-negation is set ([#1509](https://www.github.com/yargs/yargs/issues/1509)) ([7293ad5](https://www.github.com/yargs/yargs/commit/7293ad50d20ea0fb7dd1ac9b925e90e1bd95dea8))\n* display appropriate $0 for electron apps ([#1536](https://www.github.com/yargs/yargs/issues/1536)) ([d0e4379](https://www.github.com/yargs/yargs/commit/d0e437912917d6a66bb5128992fa2f566a5f830b))\n* **deps:** pull in yargs-parser@17.0.0 ([#1553](https://www.github.com/yargs/yargs/issues/1553)) ([b9409da](https://www.github.com/yargs/yargs/commit/b9409da199ebca515a848489c206b807fab2e65d))\n\n\n### Bug Fixes\n\n* help always displayed for the first command parsed having an async handler ([#1535](https://www.github.com/yargs/yargs/issues/1535)) ([d585b30](https://www.github.com/yargs/yargs/commit/d585b303a43746201b05c9c9fda94a444634df33))\n---\n\n\nThis PR was generated with [Release Please](https://github.com/googleapis/release-please)."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1557",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1557/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1557/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1557/events",
        "html_url": "https://github.com/yargs/yargs/pull/1557",
        "id": 564026528,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0MzI5ODc1",
        "number": 1557,
        "title": "fix(translations): French translations review",
        "user": {
            "login": "mleguen",
            "id": 17624421,
            "node_id": "MDQ6VXNlcjE3NjI0NDIx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17624421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mleguen",
            "html_url": "https://github.com/mleguen",
            "followers_url": "https://api.github.com/users/mleguen/followers",
            "following_url": "https://api.github.com/users/mleguen/following{/other_user}",
            "gists_url": "https://api.github.com/users/mleguen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mleguen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mleguen/subscriptions",
            "organizations_url": "https://api.github.com/users/mleguen/orgs",
            "repos_url": "https://api.github.com/users/mleguen/repos",
            "events_url": "https://api.github.com/users/mleguen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mleguen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-12T14:12:09Z",
        "updated_at": "2020-02-12T16:33:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/yargs/yargs/pulls/1557",
            "html_url": "https://github.com/yargs/yargs/pull/1557",
            "diff_url": "https://github.com/yargs/yargs/pull/1557.diff",
            "patch_url": "https://github.com/yargs/yargs/pull/1557.patch"
        },
        "body": "Note to the reviewers: this PR should be easier to review *commit by commit*.\r\n\r\nEDIT: fix 1555"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1555",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1555/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1555/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1555/events",
        "html_url": "https://github.com/yargs/yargs/issues/1555",
        "id": 563954348,
        "node_id": "MDU6SXNzdWU1NjM5NTQzNDg=",
        "number": 1555,
        "title": "French translactions should have a space before punctuation signs such as \":\"",
        "user": {
            "login": "mleguen",
            "id": 17624421,
            "node_id": "MDQ6VXNlcjE3NjI0NDIx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17624421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mleguen",
            "html_url": "https://github.com/mleguen",
            "followers_url": "https://api.github.com/users/mleguen/followers",
            "following_url": "https://api.github.com/users/mleguen/following{/other_user}",
            "gists_url": "https://api.github.com/users/mleguen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mleguen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mleguen/subscriptions",
            "organizations_url": "https://api.github.com/users/mleguen/orgs",
            "repos_url": "https://api.github.com/users/mleguen/repos",
            "events_url": "https://api.github.com/users/mleguen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mleguen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-12T12:04:07Z",
        "updated_at": "2020-02-12T12:04:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "See https://github.com/yargs/yargs/pull/1540#discussion_r378206657"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1554",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1554/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1554/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1554/events",
        "html_url": "https://github.com/yargs/yargs/pull/1554",
        "id": 563942025,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0MjYwMjQ1",
        "number": 1554,
        "title": "fix(yargs): correct support of bundled electron apps",
        "user": {
            "login": "mleguen",
            "id": 17624421,
            "node_id": "MDQ6VXNlcjE3NjI0NDIx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17624421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mleguen",
            "html_url": "https://github.com/mleguen",
            "followers_url": "https://api.github.com/users/mleguen/followers",
            "following_url": "https://api.github.com/users/mleguen/following{/other_user}",
            "gists_url": "https://api.github.com/users/mleguen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mleguen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mleguen/subscriptions",
            "organizations_url": "https://api.github.com/users/mleguen/orgs",
            "repos_url": "https://api.github.com/users/mleguen/repos",
            "events_url": "https://api.github.com/users/mleguen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mleguen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-12T11:39:57Z",
        "updated_at": "2020-02-12T16:33:39Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/yargs/yargs/pulls/1554",
            "html_url": "https://github.com/yargs/yargs/pull/1554",
            "diff_url": "https://github.com/yargs/yargs/pull/1554.diff",
            "patch_url": "https://github.com/yargs/yargs/pull/1554.patch"
        },
        "body": "Fix the first attempt at detecting bundled electron apps, whose arguments start at `process.argv[1]`, not `process.argv[2]`, by handling `process.versions.electron` and `process.defaultApp`.\r\n\r\nFix #685 "
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1549",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1549/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1549/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1549/events",
        "html_url": "https://github.com/yargs/yargs/pull/1549",
        "id": 562267732,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcyODk0ODE0",
        "number": 1549,
        "title": "chore(deps): update dependency standard to v14",
        "user": {
            "login": "renovate[bot]",
            "id": 29139614,
            "node_id": "MDM6Qm90MjkxMzk2MTQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/in/2740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/renovate%5Bbot%5D",
            "html_url": "https://github.com/apps/renovate",
            "followers_url": "https://api.github.com/users/renovate%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/renovate%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/renovate%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/renovate%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/renovate%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/renovate%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/renovate%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/renovate%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/renovate%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1514485416,
                "node_id": "MDU6TGFiZWwxNTE0NDg1NDE2",
                "url": "https://api.github.com/repos/yargs/yargs/labels/do-not-land",
                "name": "do-not-land",
                "color": "75dd7e",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "bcoe",
            "id": 194609,
            "node_id": "MDQ6VXNlcjE5NDYwOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/194609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bcoe",
            "html_url": "https://github.com/bcoe",
            "followers_url": "https://api.github.com/users/bcoe/followers",
            "following_url": "https://api.github.com/users/bcoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/bcoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bcoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bcoe/subscriptions",
            "organizations_url": "https://api.github.com/users/bcoe/orgs",
            "repos_url": "https://api.github.com/users/bcoe/repos",
            "events_url": "https://api.github.com/users/bcoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bcoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "bcoe",
                "id": 194609,
                "node_id": "MDQ6VXNlcjE5NDYwOQ==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/194609?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bcoe",
                "html_url": "https://github.com/bcoe",
                "followers_url": "https://api.github.com/users/bcoe/followers",
                "following_url": "https://api.github.com/users/bcoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/bcoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bcoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bcoe/subscriptions",
                "organizations_url": "https://api.github.com/users/bcoe/orgs",
                "repos_url": "https://api.github.com/users/bcoe/repos",
                "events_url": "https://api.github.com/users/bcoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bcoe/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-02-10T00:33:50Z",
        "updated_at": "2020-02-12T16:46:30Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
            "url": "https://api.github.com/repos/yargs/yargs/pulls/1549",
            "html_url": "https://github.com/yargs/yargs/pull/1549",
            "diff_url": "https://github.com/yargs/yargs/pull/1549.diff",
            "patch_url": "https://github.com/yargs/yargs/pull/1549.patch"
        },
        "body": "This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [standard](https://standardjs.com) ([source](https://togithub.com/standard/standard)) | devDependencies | major | [`^12.0.1` -> `^14.0.0`](https://renovatebot.com/diffs/npm/standard/12.0.1/14.3.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>standard/standard</summary>\n\n### [`v14.3.1`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1431---2019-09-17)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v14.3.0...v14.3.1)\n\n-   Skip running on versions of Node.js older than 8.6.0. [#&#8203;1418](https://togithub.com/standard/standard/pull/1418)\n\n### [`v14.3.0`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1430---2019-09-14)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v14.2.0...v14.3.0)\n\n-   Update `eslint` to `~6.4.0`\n\n### [`v14.2.0`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1420---2019-09-11)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v14.1.0...v14.2.0)\n\n-   Update `eslint` to `~6.3.0`\n-   Update `eslint-plugin-node` to `~10.0.0`\n\n### [`v14.1.0`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1410---2019-08-28)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v14.0.2...v14.1.0)\n\n-   Support ES 2020, the latest version of the ECMAScript specification, which includes support for Dynamic Imports and `BigInt`. [#&#8203;1378](https://togithub.com/standard/standard/issues/1378)\n-   Security: Upgrade `eslint` to `6.2.2` to fix security issue ([blog post](https://eslint.org/blog/2019/08/eslint-v6.2.1-released)) ([security advisory](https://togithub.com/mysticatea/eslint-utils/security/advisories/GHSA-3gx7-xhv7-5mx3))\n-   Remove [`funding`](https://togithub.com/feross/funding). See [Recap of the `funding` experiment](https://feross.org/funding-experiment-recap) for thoughts and learnings.\n\nNOTE: If you use `standard` with the `--parser babel-eslint` option, please ensure that you update `babel-eslint` to `10.0.3` or later for compatibility with this version of `standard`.\n\n### [`v14.0.2`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1402---2019-08-22)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v14.0.1...v14.0.2)\n\n-   Relax rule: Don't check indentation on template literal children (work around for ESLint bug) ([indent](https://eslint.org/docs/rules/indent)) [#&#8203;1385](https://togithub.com/standard/standard/issues/1385)\n\n### [`v14.0.1`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1401---2019-08-22)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v14.0.0...v14.0.1)\n\n-   Relax rule (temporarily, to workaround a bug): Disallow missing parentheses around multiline JSX ([react/jsx-wrap-multilines](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-wrap-multilines.md)) [#&#8203;1382](https://togithub.com/standard/standard/issues/1382)\n\n### [`v14.0.0`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1400---2019-08-19)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v13.1.0...v14.0.0)\n\nWe're super excited to announce `standard` 14!\n\nAs with every new major release, there are lots of new rules in 14.0.0 designed\nto help catch bugs and make programmer intent more explicit. This release brings\nsupport for ES 2019, the latest version of the ECMAScript specification, as well\nas many quality-of-life improvements for users who use tagged template strings,\nJSX, and `.mjs` files for ES modules.\n\nWhen you upgrade, consider running `standard --fix` to automatically format your\ncode to match the newly added rules.\n\n`standard` keeps growing! The latest stats show that `standard` and\n`eslint-standard-*` shareable configs are depended upon by **318,512 GitHub\nrepositories** and **33,349 public npm packages**. Thanks for spreading the\nword!\n\nWe now have a [Discord server](https://discord.gg/ZegqCBr). Come chat with the\nmaintainers, ask questions, and get help from the community!\n\n\u2764\ufe0f If you enjoy StandardJS and want to support future releases, check out\nFeross's [GitHub Sponsors page](https://togithub.com/users/feross/sponsorship).\nGitHub is matching donations, so your dollars go twice as far! \ud83d\ude80\n\n##### New features\n\n-   Support ES 2019, the latest version of the ECMAScript specification. [eslint-config-standard/e04e06](https://togithub.com/standard/eslint-config-standard/commit/e04e0615fdea44567bfb2fd1f868e3ab6751bda3)\n-   Lint `*.mjs` and `*.cjs` files automatically by default [#&#8203;1009](https://togithub.com/standard/standard/issues/1009)\n-   Ignore patterns from `.git/info/exclude` in addition to `.gitignore`. [#&#8203;1277](https://togithub.com/standard/standard/issues/1277)\n-   Added [`funding`](https://togithub.com/feross/funding), an open source funding experiment.\n\n##### Changed features\n\n-   Remove `bundle.js` from the default list of ignored files [#&#8203;743](https://togithub.com/standard/standard/issues/743)\n\n##### New rules\n\n_(Estimated % of affected standard users, based on test suite in parens)_\n\n-   Require Dot Notation Whenever Possible ([dot-notation](https://eslint.org/docs/rules/dot-notation)) [#&#8203;1344](https://togithub.com/standard/standard/issues/1344) [6%]\n-   Require consistent line breaks inside braces ([object-curly-newline](https://eslint.org/docs/rules/object-curly-newline)) [#&#8203;782](https://togithub.com/standard/standard/issues/782) [1%]\n-   Disallow template literals when placeholders or tagged template features are not used. ([quotes](https://eslint.org/docs/rules/quotes)) [#&#8203;838](https://togithub.com/standard/standard/issues/838) [eslint-config-standard/#&#8203;151](https://togithub.com/standard/eslint-config-standard/pull/151) [1%]\n-   Disallow lexical declarations in case/default clauses ([no-case-declarations](https://eslint.org/docs/rules/no-case-declarations)) [#&#8203;1211](https://togithub.com/standard/standard/issues/1211) [eslint-config-standard/#&#8203;137](https://togithub.com/standard/eslint-config-standard/pull/137) [1%]\n-   Require the first JSX property to be placed on a new line if the JSX tag takes up multiple lines and there are multiple properties ([react/jsx-first-prop-new-line](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-first-prop-new-line.md)) [#&#8203;696](https://togithub.com/standard/standard/issues/696) [1%]\n-   Require linebreaks in curly braces in JSX attributes and expressions to be consistent ([react/jsx-curly-newline](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-newline.md)) [#&#8203;1372](https://togithub.com/standard/standard/issues/1372) [1%]\n-   Require JSX attributes and logical expressions to be indented correctly ([react/jsx-indent](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-indent.md)) [#&#8203;1370](https://togithub.com/standard/standard/issues/1370) [1%]\n-   Require JSX event handler names to follow conventions ([react/jsx-handler-names](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-handler-names.md)) [#&#8203;1371](https://togithub.com/standard/standard/issues/1371) [1%]\n-   Disallow spaces inside of curly braces in JSX expressions in children ([react/jsx-curly-spacing](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-spacing.md)) [#&#8203;1373](https://togithub.com/standard/standard/issues/1373) [1%]\n-   Require JSX closing bracket to be aligned with the opening tag ([react/jsx-closing-bracket-location](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md)) [#&#8203;1361](https://togithub.com/standard/standard/issues/1361) [1%]\n-   Disallow unnecessary curly braces in JSX props and children ([react/jsx-curly-brace-presence](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-brace-presence.md)) [#&#8203;1366](https://togithub.com/standard/standard/issues/1366) [1%]\n-   Disallow missing `key` prop in JSX elements that likely require a `key` prop ([react/jsx-key](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-key.md)) [#&#8203;1369](https://togithub.com/standard/standard/issues/1369) [1%]\n-   Disallow import of modules using absolute paths ([import/no-absolute-path](https://togithub.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-absolute-path.md)) [#&#8203;861](https://togithub.com/standard/standard/issues/861) [#&#8203;1343](https://togithub.com/standard/standard/issues/1343) [0%]\n-   Require no spaces before JSX closing brackets ([react/jsx-tag-spacing](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-tag-spacing.md)) [#&#8203;1348](https://togithub.com/standard/standard/issues/1348) [eslint-config-standard-jsx/38](https://togithub.com/standard/eslint-config-standard-jsx/pull/38) [0%]\n-   Disallow multiple spaces between inline JSX props ([react/jsx-props-no-multi-spaces](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-props-no-multi-spaces.md)) [#&#8203;1363](https://togithub.com/standard/standard/issues/1363) [0%]\n-   Disallow accidental comments in JSX from being inserted as text nodes ([react/jsx-no-comment-textnodes](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-comment-textnodes.md)) [#&#8203;1368](https://togithub.com/standard/standard/issues/1368) [0%]\n-   Prevent usage of unsafe `target='_blank'` in JSX links ([react/jsx-no-target-blank](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-target-blank.md)) [#&#8203;1367](https://togithub.com/standard/standard/issues/1367) [0%]\n-   Require shorthand form for JSX fragments ([react/jsx-fragments](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-fragments.md)) [#&#8203;1364](https://togithub.com/standard/standard/issues/1364) [0%]\n-   Require PascalCase for user-defined JSX components ([react/jsx-pascal-case](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-pascal-case.md)) [#&#8203;1365](https://togithub.com/standard/standard/issues/1365) [0%]\n-   Require JSX closing tag to be aligned with the opening tag ([react/jsx-closing-tag-location](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-tag-location.md)) [#&#8203;1358](https://togithub.com/standard/standard/issues/1358) [0%]\n-   Disallow missing parentheses around multiline JSX ([react/jsx-wrap-multilines](https://togithub.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-wrap-multilines.md)) [#&#8203;710](https://togithub.com/standard/standard/issues/710) [0%]\n-   Require pipeline operators to appear at the start of a line ([operator-linebreak](https://eslint.org/docs/rules/operator-linebreak)) [eslint-config-standard/#&#8203;121](https://togithub.com/standard/eslint-config-standard/pull/121) [0%]\n-   Disallow use of the void operator ([no-void](https://eslint.org/docs/rules/no-void)) [eslint-config-standard/#&#8203;135](https://togithub.com/standard/eslint-config-standard/pull/135) [0%]\n\n##### Changed rules\n\n-   Relax rule: Don't require newlines between _single-line_ member functions or class field declarations ([lines-between-class-members](https://eslint.org/docs/rules/lines-between-class-members)) [#&#8203;1347](https://togithub.com/standard/standard/issues/1347)\n-   Relax rule: Don't check indentation on template literal children (work around for ESLint bug) ([indent](https://eslint.org/docs/rules/indent)) [#&#8203;1176](https://togithub.com/standard/standard/issues/1176)\n-   Relax rule: Disallow labels that are variables names (because all labels are already disallowed) ([no-label-var](https://eslint.org/docs/rules/no-label-var)) [eslint-config-standard/#&#8203;132](https://togithub.com/standard/eslint-config-standard/pull/132)\n\n### [`v13.1.0`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1310---2019-07-20)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v13.0.2...v13.1.0)\n\n-   Update `eslint` from `~6.0.1` to `~6.1.0`\n\n### [`v13.0.2`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1302---2019-07-12)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v13.0.1...v13.0.2)\n\n-   Fix global installations of `standard` not finding dependencies due to ESLint v6 plugin resolution change [#&#8203;1327](https://togithub.com/standard/standard/issues/1327) [#&#8203;1328](https://togithub.com/standard/standard/issues/1328) [#&#8203;1329](https://togithub.com/standard/standard/issues/1329)\n\n### [`v13.0.1`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1301---2019-07-11)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v13.0.0...v13.0.1)\n\n##### Changed rules\n\n-   Relax rule: Only enforce `const` in destructuring when all variables are constant [#&#8203;1325](https://togithub.com/standard/standard/issues/1325)\n\n### [`v13.0.0`](https://togithub.com/standard/standard/blob/master/CHANGELOG.md#&#8203;1300---2019-07-10)\n\n[Compare Source](https://togithub.com/standard/standard/compare/v12.0.1...v13.0.0)\n\nWelcome to the latest version of `standard`!\n\nAs with every new major release, there are lots of new rules in 13.0.0 designed\nto help catch bugs and make programmer intent more explicit.\n\n`standard` is more popular than ever \u2013 **640,000 downloads per month!** It's\neven more popular \u2013 **3,000,000 downloads per month** \u2013 if you include the\n[ESLint configuration](https://www.npmjs.com/package/eslint-config-standard)\nthat we also publish (for advanced users).\n\nWhen you upgrade, consider running `standard --fix` to automatically format your code to match the newly added rules.\n\n\u2764\ufe0f If you enjoy StandardJS and want to support future releases, check out Feross's [GitHub Sponsors page](https://togithub.com/users/feross/sponsorship). GitHub is matching donations, so your dollars go twice as far! \ud83d\ude80\n\n##### New features\n\n-   Update `eslint` from `~5.16.0` to `~6.0.1`\n\n    -   BREAKING: Node.js 6 is no longer supported\n\n        -   Node.js 6 is EOL and will no longer be receiving security updates. As a result, the eslint team has decided to drop support for it.\n        -   To prevent breaking CI for projects which still support Node 6, `standard` silently passes when run by an unsupported version of Node.\n\n    -   **For `eslint-config-standard` users only:** Plugins are no longer affected by `eslint`'s location\n        -   Previously, ESLint loaded plugins relative to the location of the ESLint package itself. As a result, we suggested that users with global ESLint installations should also install plugins globally, and users with local ESLint installations should install plugins locally.\n        -   With ESLint v6, plugins should always be installed locally, even if ESLint was installed globally. More precisely, ESLint v6 resolves plugins relative to the end user\u2019s project by default, and always resolves shareable configs and parsers relative to the location of the config file that imports them.\n        -   See [migrating to ESLint 6.0.0 for more information](https://eslint.org/docs/user-guide/migrating-to-6.0.0#-plugins-and-shareable-configs-are-no-longer-affected-by-eslints-location).\n\n-   The documentation is now available in Japanese \ud83c\uddef\ud83c\uddf5!\n\n    -   Thanks to [@&#8203;Munieru](https://togithub.com/munierujp) for the excellent work!\n    -   Other community contributed translations exist in Spanish, French, Italian, Korean, Portuguese, Simplified Chinese, and Taiwanese Mandarin.\n    -   More translations are always welcome!\n\n-   Update `eslint-plugin-promise` from `~4.0.0` to `~4.2.1`\n\n-   Update `eslint-plugin-node` from `~7.0.1` to `~9.1.0`\n\n##### New rules\n\n_(Estimated % of affected standard users, based on test suite in parens)_\n\n-   Disallow spaces inside of array brackets ([array-bracket-spacing](https://eslint.org/docs/rules/array-bracket-spacing)) [#&#8203;1203](https://togithub.com/standard/standard/issues/1203) [eslint-config-standard/#&#8203;131](https://togithub.com/standard/eslint-config-standard/pull/131) [14%]\n-   Require `const` instead of `let` if variable is never reassigned ([prefer-const](https://eslint.org/docs/rules/prefer-const)) [#&#8203;523](https://togithub.com/standard/standard/issues/523) [eslint-config-standard/#&#8203;133](https://togithub.com/standard/eslint-config-standard/pull/133) [14%]\n-   Disallow quotes around object literal property names that are not strictly required ([quote-props](https://eslint.org/docs/rules/quote-props)) [#&#8203;791](https://togithub.com/standard/standard/issues/791) [4%]\n-   Disallow use of Object.prototypes builtins directly ([no-prototype-builtins](https://eslint.org/docs/rules/no-prototype-builtins)) [#&#8203;1310](https://togithub.com/standard/standard/issues/1310) [3%]\n-   Require an empty line between class members ([lines-between-class-members](https://eslint.org/docs/rules/lines-between-class-members)) [#&#8203;438](https://togithub.com/standard/standard/issues/438) [1%]\n-   Disallow using an async function as a Promise executor ([no-async-promise-executor](https://eslint.org/docs/rules/no-async-promise-executor)) [#&#8203;1309](https://togithub.com/standard/standard/issues/1309) [1%]\n-   Disallow spaces inside of computed properties ([computed-property-spacing](https://eslint.org/docs/rules/computed-property-spacing)) [#&#8203;1315](https://togithub.com/standard/standard/issues/1315) [eslint-config-standard/#&#8203;131](https://togithub.com/standard/eslint-config-standard/pull/131) [1%]\n-   Disallow unnecessary catch clauses ([no-useless-catch](https://eslint.org/docs/rules/no-useless-catch)) [#&#8203;1312](https://togithub.com/standard/standard/issues/1312) [0%]\n-   Disallow characters which are made with multiple code points in character class syntax ([no-misleading-character-class](https://eslint.org/docs/rules/no-misleading-character-class)) [#&#8203;1311](https://togithub.com/standard/standard/issues/1311) [0%]\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: At any time (no schedule defined).\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR is stale, or if you tick the rebase/retry checkbox below.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#yargs/yargs)."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1540",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1540/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1540/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1540/events",
        "html_url": "https://github.com/yargs/yargs/pull/1540",
        "id": 562233123,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcyODY5MDcy",
        "number": 1540,
        "title": "feat!: introduces strictCommands() subset of strict mode",
        "user": {
            "login": "bcoe",
            "id": 194609,
            "node_id": "MDQ6VXNlcjE5NDYwOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/194609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bcoe",
            "html_url": "https://github.com/bcoe",
            "followers_url": "https://api.github.com/users/bcoe/followers",
            "following_url": "https://api.github.com/users/bcoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/bcoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bcoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bcoe/subscriptions",
            "organizations_url": "https://api.github.com/users/bcoe/orgs",
            "repos_url": "https://api.github.com/users/bcoe/repos",
            "events_url": "https://api.github.com/users/bcoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bcoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1514485416,
                "node_id": "MDU6TGFiZWwxNTE0NDg1NDE2",
                "url": "https://api.github.com/repos/yargs/yargs/labels/do-not-land",
                "name": "do-not-land",
                "color": "75dd7e",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-09T20:22:00Z",
        "updated_at": "2020-02-13T18:50:31Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "pull_request": {
            "url": "https://api.github.com/repos/yargs/yargs/pulls/1540",
            "html_url": "https://github.com/yargs/yargs/pull/1540",
            "diff_url": "https://github.com/yargs/yargs/pull/1540.diff",
            "patch_url": "https://github.com/yargs/yargs/pull/1540.patch"
        },
        "body": "I have met your demands @boneskull \r\n\r\nThis seemed like a reasonable feature request, and I'm excited to see whether you get use out of it.\r\n\r\nCode review appreciated.\r\n\r\n---\r\n\r\nBREAKING CHANGE: if you use `.demandCommand()` or `.demandCommand(1)`, in conjunction\r\nwith defining commands, `.strictCommands()` is enabled automatically."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1532",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1532/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1532/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1532/events",
        "html_url": "https://github.com/yargs/yargs/issues/1532",
        "id": 554756433,
        "node_id": "MDU6SXNzdWU1NTQ3NTY0MzM=",
        "number": 1532,
        "title": "Feature: Declare flag (ie. boolean without argument)",
        "user": {
            "login": "Mogztter",
            "id": 333276,
            "node_id": "MDQ6VXNlcjMzMzI3Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333276?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mogztter",
            "html_url": "https://github.com/Mogztter",
            "followers_url": "https://api.github.com/users/Mogztter/followers",
            "following_url": "https://api.github.com/users/Mogztter/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mogztter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mogztter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mogztter/subscriptions",
            "organizations_url": "https://api.github.com/users/Mogztter/orgs",
            "repos_url": "https://api.github.com/users/Mogztter/repos",
            "events_url": "https://api.github.com/users/Mogztter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mogztter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1343752905,
                "node_id": "MDU6TGFiZWwxMzQzNzUyOTA1",
                "url": "https://api.github.com/repos/yargs/yargs/labels/feature%20request",
                "name": "feature request",
                "color": "5026c1",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-01-24T14:09:05Z",
        "updated_at": "2020-01-28T17:46:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "As far as I know it's not possible to declare flag (ie. boolean without argument). I think it can be useful when `--flag false` or `--flag true` are invalid.\r\n\r\nIf we don't want to introduce a new keyword or a new type we could reuse `nargs`:\r\n\r\n```js\r\nyargs\r\n  .option('safe', {\r\n    type: 'boolean',\r\n    nargs: 0\r\n  })\r\n```\r\n\r\nOtherwise we could use a new type 'flag':\r\n\r\n```js\r\nyargs\r\n  .option('safe', {\r\n    type: 'flag'\r\n  })\r\n```\r\n\r\nWith the above definition, the following commands are invalid and yargs should throw an error:\r\n\r\n```\r\n$ asciidoctor --safe true\r\n$ asciidoctor --safe false\r\n$ asciidoctor --safe value\r\n```\r\n\r\nRelated issue: https://github.com/yargs/yargs/issues/1077"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1531",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1531/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1531/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1531/events",
        "html_url": "https://github.com/yargs/yargs/issues/1531",
        "id": 554749763,
        "node_id": "MDU6SXNzdWU1NTQ3NDk3NjM=",
        "number": 1531,
        "title": "Feature: Declare shortcut option",
        "user": {
            "login": "Mogztter",
            "id": 333276,
            "node_id": "MDQ6VXNlcjMzMzI3Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/333276?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mogztter",
            "html_url": "https://github.com/Mogztter",
            "followers_url": "https://api.github.com/users/Mogztter/followers",
            "following_url": "https://api.github.com/users/Mogztter/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mogztter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mogztter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mogztter/subscriptions",
            "organizations_url": "https://api.github.com/users/Mogztter/orgs",
            "repos_url": "https://api.github.com/users/Mogztter/repos",
            "events_url": "https://api.github.com/users/Mogztter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mogztter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1343752905,
                "node_id": "MDU6TGFiZWwxMzQzNzUyOTA1",
                "url": "https://api.github.com/repos/yargs/yargs/labels/feature%20request",
                "name": "feature request",
                "color": "5026c1",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-01-24T13:56:11Z",
        "updated_at": "2020-01-25T11:43:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Consider the following example:\r\n\r\n```js\r\nyargs\r\n  .option('safe-mode', {\r\n    alias: 'S',\r\n    choices: ['unsafe', 'safe', 'server', 'secure']\r\n  })\r\n```\r\n```console\r\n$ asciidoctor --safe-mode safe\r\n```\r\n\r\nI want to declare a shortcut option  `--safe` which is equivalent to `--safe-mode safe`.\r\nA possible solution is to declare a new option named `safe` as follow but it has a few drawbacks:\r\n\r\n```js\r\nyargs\r\n  .option('safe', {\r\n    type: 'boolean'\r\n  })\r\n```\r\n\r\n- The safe mode now depends on the value of two options (ie. manual resolution). If safe is present then safe mode is \"safe\" otherwise take the value of the safe-mode option.\r\n- It's not possible to retrieve in which order the options were entered. For instance, it's not possible to implement a \"last one wins\" rule when both `safe` and `safe-mode` are present:\r\n\r\n```console\r\n$ asciidoctor --safe-mode server --safe\r\n// --safe is the last option, safe mode will be safe\r\n```\r\n\r\n\r\n```console\r\n$ asciidoctor --safe --safe-mode server\r\n// --safe-mode is the last option, safe mode will be server\r\n```\r\n\r\n* `--safe=false` does not make sense and should not be allowed\r\n\r\nSo I was wondering if we could come up with a better definition to declare shortcut?\r\n\r\n```js\r\nyargs\r\n  .option('safe-mode', {\r\n    alias: 'S',\r\n    shortcut: {\r\n      name: 'safe',\r\n      value: 'safe'\r\n    },\r\n    choices: ['unsafe', 'safe', 'server', 'secure']\r\n  })\r\n```\r\n\r\n```js\r\nyargs\r\n  .option('safe-mode', {\r\n    alias: 'S',\r\n    choices: ['unsafe', 'safe', 'server', 'secure']\r\n  })\r\n  .shortcut('safe-mode', {\r\n    name: 'safe',\r\n    value: 'safe'\r\n  })\r\n```"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1530",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1530/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1530/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1530/events",
        "html_url": "https://github.com/yargs/yargs/issues/1530",
        "id": 554086412,
        "node_id": "MDU6SXNzdWU1NTQwODY0MTI=",
        "number": 1530,
        "title": "Mechanism to allow overriding array default with empty array",
        "user": {
            "login": "rulatir",
            "id": 677694,
            "node_id": "MDQ6VXNlcjY3NzY5NA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/677694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rulatir",
            "html_url": "https://github.com/rulatir",
            "followers_url": "https://api.github.com/users/rulatir/followers",
            "following_url": "https://api.github.com/users/rulatir/following{/other_user}",
            "gists_url": "https://api.github.com/users/rulatir/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rulatir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rulatir/subscriptions",
            "organizations_url": "https://api.github.com/users/rulatir/orgs",
            "repos_url": "https://api.github.com/users/rulatir/repos",
            "events_url": "https://api.github.com/users/rulatir/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rulatir/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1343752905,
                "node_id": "MDU6TGFiZWwxMzQzNzUyOTA1",
                "url": "https://api.github.com/repos/yargs/yargs/labels/feature%20request",
                "name": "feature request",
                "color": "5026c1",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-23T11:01:44Z",
        "updated_at": "2020-01-24T01:31:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "With `type: \"array\"` and `default: [\"not\", \"empty\"]` it is not currently possible to override the default with an empty array.\r\n\r\nProposals:\r\n\r\n1. Fix #1529 with additional rule that \"not specifying arguments for array option\" have the semantics of \"specifying an empty array\".\r\n\r\n2. Introduce boolean `emptyOverride`."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1527",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1527/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1527/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1527/events",
        "html_url": "https://github.com/yargs/yargs/issues/1527",
        "id": 552865008,
        "node_id": "MDU6SXNzdWU1NTI4NjUwMDg=",
        "number": 1527,
        "title": "Commands are not parsed if preceded by -- ",
        "user": {
            "login": "l1bbcsg",
            "id": 1044684,
            "node_id": "MDQ6VXNlcjEwNDQ2ODQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1044684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/l1bbcsg",
            "html_url": "https://github.com/l1bbcsg",
            "followers_url": "https://api.github.com/users/l1bbcsg/followers",
            "following_url": "https://api.github.com/users/l1bbcsg/following{/other_user}",
            "gists_url": "https://api.github.com/users/l1bbcsg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/l1bbcsg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/l1bbcsg/subscriptions",
            "organizations_url": "https://api.github.com/users/l1bbcsg/orgs",
            "repos_url": "https://api.github.com/users/l1bbcsg/repos",
            "events_url": "https://api.github.com/users/l1bbcsg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/l1bbcsg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1410721514,
                "node_id": "MDU6TGFiZWwxNDEwNzIxNTE0",
                "url": "https://api.github.com/repos/yargs/yargs/labels/docs",
                "name": "docs",
                "color": "d606b3",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-01-21T13:05:59Z",
        "updated_at": "2020-02-04T16:35:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Yargs version: 15.0.0 and above, version 14.2.0 is not affected. \r\n#1459 looks like it could have introduced this.\r\n\r\nSetup:\r\n```js\r\nrequire('yargs')\r\n\t.array('array')\r\n\t.string('string')\r\n\t.command(\r\n\t\t'command',\r\n\t\t'does nothing',\r\n\t\t() => {},\r\n\t\t() => console.log('command executed')\r\n\t)\r\n\t.demandCommand()\r\n\t.argv;\r\n```\r\n\r\n```\r\nnode index.js --array foo bar -- command\r\n```\r\n\r\nCauses `Not enough non-option arguments: got 0, need at least 1`.\r\n\r\n`--` here is used to break populating `array` argument, otherwise `command` would be parsed as one of its values along with `foo` and `bar` and not as a command.\r\n\r\nAs a result it's not possible to put commands after array arguments at all, while other argument types can precede commands, this works fine for example:\r\n\r\n```\r\nnode index.js --string foo command\r\n```"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1526",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1526/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1526/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1526/events",
        "html_url": "https://github.com/yargs/yargs/issues/1526",
        "id": 552847428,
        "node_id": "MDU6SXNzdWU1NTI4NDc0Mjg=",
        "number": 1526,
        "title": "incomplete options mode",
        "user": {
            "login": "jeysal",
            "id": 16069751,
            "node_id": "MDQ6VXNlcjE2MDY5NzUx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/16069751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeysal",
            "html_url": "https://github.com/jeysal",
            "followers_url": "https://api.github.com/users/jeysal/followers",
            "following_url": "https://api.github.com/users/jeysal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeysal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeysal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeysal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeysal/orgs",
            "repos_url": "https://api.github.com/users/jeysal/repos",
            "events_url": "https://api.github.com/users/jeysal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeysal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1343752905,
                "node_id": "MDU6TGFiZWwxMzQzNzUyOTA1",
                "url": "https://api.github.com/repos/yargs/yargs/labels/feature%20request",
                "name": "feature request",
                "color": "5026c1",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-21T12:30:05Z",
        "updated_at": "2020-01-21T14:55:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I'd like to suggest a `.allowIncompleteOptions(true)` (or similar) mode where yargs would automatically match a specified option with a known option that `startsWith` the specified option.\r\nGit is one example of a CLI that implements this, so you can e.g. `git commit --no-veri --da=now`.\r\nAs far as I can tell, this only makes sense combined with `strict` mode.\r\n\r\nIf this is discoverable in the docs, tool authors will hopefully think about whether it makes sense to enable this for their CLI if it has a lot of long option names.\r\n\r\nI apologize if this has been suggested before, I've searched for things like 'incomplete', 'partial', 'Git', ..."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1519",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1519/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1519/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1519/events",
        "html_url": "https://github.com/yargs/yargs/issues/1519",
        "id": 544052882,
        "node_id": "MDU6SXNzdWU1NDQwNTI4ODI=",
        "number": 1519,
        "title": "Flaky output from `--help`",
        "user": {
            "login": "AndrewFinlay",
            "id": 3692254,
            "node_id": "MDQ6VXNlcjM2OTIyNTQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3692254?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AndrewFinlay",
            "html_url": "https://github.com/AndrewFinlay",
            "followers_url": "https://api.github.com/users/AndrewFinlay/followers",
            "following_url": "https://api.github.com/users/AndrewFinlay/following{/other_user}",
            "gists_url": "https://api.github.com/users/AndrewFinlay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AndrewFinlay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AndrewFinlay/subscriptions",
            "organizations_url": "https://api.github.com/users/AndrewFinlay/orgs",
            "repos_url": "https://api.github.com/users/AndrewFinlay/repos",
            "events_url": "https://api.github.com/users/AndrewFinlay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AndrewFinlay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 64735220,
                "node_id": "MDU6TGFiZWw2NDczNTIyMA==",
                "url": "https://api.github.com/repos/yargs/yargs/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            },
            {
                "id": 1761179160,
                "node_id": "MDU6TGFiZWwxNzYxMTc5MTYw",
                "url": "https://api.github.com/repos/yargs/yargs/labels/external",
                "name": "external",
                "color": "f7ce67",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-12-31T00:43:07Z",
        "updated_at": "2020-01-29T21:14:37Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Hi all, it seems that when calling `--help` on a yargs project it can exit before all of the help content has been flushed to `stdout`.\r\n\r\nI found this while trying to get `nyc`'s test suite running consistently on my local machine, the `nyc` issue is [here](https://github.com/istanbuljs/nyc/issues/1259).  \r\n\r\n`nyc` has a test that compares the help output generated by yargs using `nyc --help` and a call to `yargs.showHelp()`.  These generate the same output most of the time but the call to `nyc --help` may get truncated if the `yargs` call to `process.exit(code)` on line 978 of `yargs.js` is hit before the buffer has flushed.\r\n\r\nAccording to the NodeJS docs the call to `process.exit(code)` can be heavy handed and exit before writes to stdout/stderr have completed.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1518",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1518/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1518/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1518/events",
        "html_url": "https://github.com/yargs/yargs/issues/1518",
        "id": 542204386,
        "node_id": "MDU6SXNzdWU1NDIyMDQzODY=",
        "number": 1518,
        "title": "Feature: deprecate an option/command",
        "user": {
            "login": "laggingreflex",
            "id": 2523987,
            "node_id": "MDQ6VXNlcjI1MjM5ODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2523987?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laggingreflex",
            "html_url": "https://github.com/laggingreflex",
            "followers_url": "https://api.github.com/users/laggingreflex/followers",
            "following_url": "https://api.github.com/users/laggingreflex/following{/other_user}",
            "gists_url": "https://api.github.com/users/laggingreflex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laggingreflex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laggingreflex/subscriptions",
            "organizations_url": "https://api.github.com/users/laggingreflex/orgs",
            "repos_url": "https://api.github.com/users/laggingreflex/repos",
            "events_url": "https://api.github.com/users/laggingreflex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laggingreflex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1343752905,
                "node_id": "MDU6TGFiZWwxMzQzNzUyOTA1",
                "url": "https://api.github.com/repos/yargs/yargs/labels/feature%20request",
                "name": "feature request",
                "color": "5026c1",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-12-24T20:21:09Z",
        "updated_at": "2020-02-12T18:53:58Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Allow setting `deprecated: true` for an option or a command, like:\r\n\r\n```\r\nyargs.options({\r\n  oldOption: {type: 'boolean', deprecated: true }\r\n  newOption: {type: 'boolean' }\r\n})\r\n```\r\n\r\nwhich will show up in help as:\r\n\r\n```\r\nOptions:\r\n  --old-option [deprecated]\r\n  --new-option\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1517",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1517/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1517/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1517/events",
        "html_url": "https://github.com/yargs/yargs/issues/1517",
        "id": 541477109,
        "node_id": "MDU6SXNzdWU1NDE0NzcxMDk=",
        "number": 1517,
        "title": "PSA: tightening up yargs' permissions ",
        "user": {
            "login": "bcoe",
            "id": 194609,
            "node_id": "MDQ6VXNlcjE5NDYwOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/194609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bcoe",
            "html_url": "https://github.com/bcoe",
            "followers_url": "https://api.github.com/users/bcoe/followers",
            "following_url": "https://api.github.com/users/bcoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/bcoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bcoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bcoe/subscriptions",
            "organizations_url": "https://api.github.com/users/bcoe/orgs",
            "repos_url": "https://api.github.com/users/bcoe/repos",
            "events_url": "https://api.github.com/users/bcoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bcoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1748355661,
                "node_id": "MDU6TGFiZWwxNzQ4MzU1NjYx",
                "url": "https://api.github.com/repos/yargs/yargs/labels/announcement",
                "name": "announcement",
                "color": "9ff4e9",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-12-22T17:03:09Z",
        "updated_at": "2019-12-22T17:03:09Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "I've been tightening up yargs' team permissions, in prep for fully automating publication. This has included:\r\n\r\n1. switching most folks to `triagers` rather than `maintainers` or `admins`.\r\n2. enforcing 2FA on GitHub.\r\n3. adding branch protection rules, such that one code review must have taken place before a PR may be merged.\r\n\r\nThese changes will put us in a position to more fully automate the yargs project, and were not related to any specific contributors actions (you're all great)."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1510",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1510/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1510/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1510/events",
        "html_url": "https://github.com/yargs/yargs/issues/1510",
        "id": 532713233,
        "node_id": "MDU6SXNzdWU1MzI3MTMyMzM=",
        "number": 1510,
        "title": "Default command:  help on error should display other available commands",
        "user": {
            "login": "xmedeko",
            "id": 1101801,
            "node_id": "MDQ6VXNlcjExMDE4MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1101801?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xmedeko",
            "html_url": "https://github.com/xmedeko",
            "followers_url": "https://api.github.com/users/xmedeko/followers",
            "following_url": "https://api.github.com/users/xmedeko/following{/other_user}",
            "gists_url": "https://api.github.com/users/xmedeko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xmedeko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xmedeko/subscriptions",
            "organizations_url": "https://api.github.com/users/xmedeko/orgs",
            "repos_url": "https://api.github.com/users/xmedeko/repos",
            "events_url": "https://api.github.com/users/xmedeko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xmedeko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1343752905,
                "node_id": "MDU6TGFiZWwxMzQzNzUyOTA1",
                "url": "https://api.github.com/repos/yargs/yargs/labels/feature%20request",
                "name": "feature request",
                "color": "5026c1",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-12-04T14:17:08Z",
        "updated_at": "2019-12-04T14:44:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "See https://github.com/yargs/yargs/issues/1331#issuecomment-559247460 \r\n\r\nIf you have a **default command**, and the user makes an **error in the args**, then `yargs` should not output usage for the default command (current behaviour). The problem is, the user may want to use another command, not the default, and the user does not know the app knows other commands. `yargs` should output general help `node index.js --help` instead, it contains list of commands and args for the default command, too.\r\n\r\nExample:\r\n```js\r\nconst options = yargs\r\n  .command(['cmd1', '*'], 'Command 1', { 'value': { demandOption: true } })\r\n  .command('cmd2', 'Command 2', { 'value': { demandOption: true } })\r\n  .help().strict(true).demandCommand(1)\r\n  .parse();\r\n```\r\n\r\nThen run `node index.js foo`  - an error argument -- and output is (shortened):\r\n```\r\nCommand 1\r\n\r\nOptions:\r\n  --version  Show version number                                      [boolean]\r\n  --help     Show help                                                [boolean]\r\n  --value                                                             [required]\r\n```\r\n\r\nBut I would expect same similar to `node index.js --help`, i.e.\r\n```\r\nCommand 1                                                                           \r\n                                                                                    \r\nCommands:                                                                           \r\n  index.js cmd1  Command 1                                             [default]    \r\n  index.js cmd2  Command 2                                                          \r\n                                                                                    \r\nOptions:                                                                            \r\n  --version  Show version number                                      [boolean]    \r\n  --help     Show help                                                [boolean]    \r\n  --value                                                             [required]                                \r\n```\r\n\r\nSo, that the user knows, the app has more commands. \r\n"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1504",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1504/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1504/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1504/events",
        "html_url": "https://github.com/yargs/yargs/issues/1504",
        "id": 532561346,
        "node_id": "MDU6SXNzdWU1MzI1NjEzNDY=",
        "number": 1504,
        "title": "Instructions on serving the docs locally",
        "user": {
            "login": "glenwinters",
            "id": 435066,
            "node_id": "MDQ6VXNlcjQzNTA2Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/435066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glenwinters",
            "html_url": "https://github.com/glenwinters",
            "followers_url": "https://api.github.com/users/glenwinters/followers",
            "following_url": "https://api.github.com/users/glenwinters/following{/other_user}",
            "gists_url": "https://api.github.com/users/glenwinters/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glenwinters/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glenwinters/subscriptions",
            "organizations_url": "https://api.github.com/users/glenwinters/orgs",
            "repos_url": "https://api.github.com/users/glenwinters/repos",
            "events_url": "https://api.github.com/users/glenwinters/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glenwinters/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 64735224,
                "node_id": "MDU6TGFiZWw2NDczNTIyNA==",
                "url": "https://api.github.com/repos/yargs/yargs/labels/question",
                "name": "question",
                "color": "cc317c",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-12-04T09:39:51Z",
        "updated_at": "2019-12-04T17:47:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "I couldn't find any instructions on serving the docs locally to test my changes."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1500",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1500/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1500/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1500/events",
        "html_url": "https://github.com/yargs/yargs/issues/1500",
        "id": 530793498,
        "node_id": "MDU6SXNzdWU1MzA3OTM0OTg=",
        "number": 1500,
        "title": "help for subcommand not showing",
        "user": {
            "login": "bwagner",
            "id": 447049,
            "node_id": "MDQ6VXNlcjQ0NzA0OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/447049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bwagner",
            "html_url": "https://github.com/bwagner",
            "followers_url": "https://api.github.com/users/bwagner/followers",
            "following_url": "https://api.github.com/users/bwagner/following{/other_user}",
            "gists_url": "https://api.github.com/users/bwagner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bwagner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bwagner/subscriptions",
            "organizations_url": "https://api.github.com/users/bwagner/orgs",
            "repos_url": "https://api.github.com/users/bwagner/repos",
            "events_url": "https://api.github.com/users/bwagner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bwagner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1410721514,
                "node_id": "MDU6TGFiZWwxNDEwNzIxNTE0",
                "url": "https://api.github.com/repos/yargs/yargs/labels/docs",
                "name": "docs",
                "color": "d606b3",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2019-12-01T20:51:01Z",
        "updated_at": "2020-02-13T18:53:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "My yargs structure shows top-level help when I call\r\n\r\n```\r\nnode yargs-issue.js --help\r\n\r\ngenerate plain html from json\r\n\r\nCommands:\r\n  yargs-issue.js plain <json>  generate plain html from json           [default]\r\n  yargs-issue.js audio <json>  generate html with audio support\r\n\r\nPositionals:\r\n  json  the json file as found in the ../JSON/ directory\r\n\r\nOptions:\r\n  --version           Show version number                              [boolean]\r\n  --help              Show help                                        [boolean]\r\n  --speakers, -s      speakers                                [array] [required]\r\n  --release-date, -r  release date, e.g. 'November 25, 2019'          [required]\r\n```\r\nBut when I try to invoke help from a subcommand:\r\n```\r\n./yargs-issue.js audio --help\r\n```\r\nthe options for that subcommand are not shown. Instead I get the exact same output as before.\r\nHowever, if I call the audio subcommand incorrectly by omitting a required option, I get the desired information about the subcommand-specific options:\r\n```\r\nnode yargs-issue.js audio\r\nyargs-issue.js audio <json>\r\n\r\ngenerate html with audio support\r\n\r\nPositionals:\r\n  json  the json file as found in the ../JSON/ directory\r\n\r\nOptions:\r\n  --version           Show version number                              [boolean]\r\n  --help              Show help                                        [boolean]\r\n  --speakers, -s      speakers                                [array] [required]\r\n  --release-date, -r  release date, e.g. 'November 25, 2019'          [required]\r\n  --audio-file, -a    audio file\r\n  --audio-offset, -o  audio file offset when speech starts in seconds [float]\r\n                                                                      [required]\r\n\r\nNot enough non-option arguments: got 0, need at least 1\r\n```\r\n\r\nThis is the source code of yargs-issue.js\r\n```javascript\r\nconst argv = require('yargs')\r\n  .command(['plain <json>', '$0'], 'generate plain html from json', yargs => {\r\n    yargs\r\n    .positional('json', {\r\n      describe: 'the json file as found in the ../JSON/ directory',\r\n      nargs: 1,\r\n      global: true, // used for both plain and audio commands\r\n    })\r\n    .option('speakers', {\r\n      alias: 's',\r\n      describe: 'speakers',\r\n      demandOption: true,\r\n      array: true,\r\n      global: true,\r\n    })\r\n    .option('release-date', { // (will be renamed to releaseDate)\r\n      alias: 'r',\r\n      describe: 'release date, e.g. \\'November 25, 2019\\'',\r\n      demandOption: true,\r\n      nargs: 1,\r\n      global: true,\r\n    })\r\n    .command('audio <json>', 'generate html with audio support', \r\n      yargs => { // builder\r\n        return yargs\r\n          .option('audio-file', {\r\n            alias: 'a',\r\n            describe: 'audio file',\r\n            nargs: 1,\r\n          })\r\n          .option('audio-offset', { \r\n            alias: 'o',\r\n            describe: 'audio file offset when speech starts in seconds [float]',\r\n            demandOption: true,\r\n            nargs: 1,\r\n          })\r\n      },\r\n    )\r\n  })\r\n  .strict()\r\n  .help()\r\n  .argv\r\n\r\n```"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1489",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1489/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1489/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1489/events",
        "html_url": "https://github.com/yargs/yargs/issues/1489",
        "id": 526877370,
        "node_id": "MDU6SXNzdWU1MjY4NzczNzA=",
        "number": 1489,
        "title": "`repeat` argument is treated special when using `unknown-options-as-args`",
        "user": {
            "login": "johanblumenberg-symphony",
            "id": 31734333,
            "node_id": "MDQ6VXNlcjMxNzM0MzMz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/31734333?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johanblumenberg-symphony",
            "html_url": "https://github.com/johanblumenberg-symphony",
            "followers_url": "https://api.github.com/users/johanblumenberg-symphony/followers",
            "following_url": "https://api.github.com/users/johanblumenberg-symphony/following{/other_user}",
            "gists_url": "https://api.github.com/users/johanblumenberg-symphony/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johanblumenberg-symphony/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johanblumenberg-symphony/subscriptions",
            "organizations_url": "https://api.github.com/users/johanblumenberg-symphony/orgs",
            "repos_url": "https://api.github.com/users/johanblumenberg-symphony/repos",
            "events_url": "https://api.github.com/users/johanblumenberg-symphony/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johanblumenberg-symphony/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 64735220,
                "node_id": "MDU6TGFiZWw2NDczNTIyMA==",
                "url": "https://api.github.com/repos/yargs/yargs/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-11-21T22:28:25Z",
        "updated_at": "2020-02-12T16:39:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "For some reason, `repeat` argument is treated special.\r\n\r\n```js\r\nvar yargs = require('yargs');\r\nvar assert = require('assert');\r\n\r\nlet args = yargs\r\n    .parserConfiguration({\r\n        'unknown-options-as-args': true\r\n    })\r\n    .option('known', { type: 'string' })\r\n    .argv;\r\n\r\nconsole.log('known:', args.known);\r\nconsole.log('repeat:', args.repeat);\r\nconsole.log('_:', args._);\r\n    \r\nassert.equal(args.known, 'x');\r\nassert.equal(args.repeat, undefined);\r\nassert.deepEqual(args._, [ '--repeat', '100', '--unknown', '200']);\r\n```\r\n\r\nRun as:\r\n\r\n```\r\n$ node index.js --known x --repeat 100 --unknown 200\r\n```\r\n\r\nThe output is:\r\n\r\n```\r\nknown: x\r\nrepeat: 100\r\n_: [ '--unknown', '200' ]\r\n```\r\n\r\nI did not add any option named `repeat`, so I would expect this argument to end up in `_`.\r\nHowever, it shows up as a named option, as if I had defined an option named `repeat`, or if I didn't use `unknown-options-as-args`.\r\n\r\nOther unknown options are correctly put in `_`."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1486",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1486/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1486/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1486/events",
        "html_url": "https://github.com/yargs/yargs/issues/1486",
        "id": 525012632,
        "node_id": "MDU6SXNzdWU1MjUwMTI2MzI=",
        "number": 1486,
        "title": "[question] Possible to have positional under option, or multiple commands?",
        "user": {
            "login": "rally25rs",
            "id": 38535,
            "node_id": "MDQ6VXNlcjM4NTM1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/38535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rally25rs",
            "html_url": "https://github.com/rally25rs",
            "followers_url": "https://api.github.com/users/rally25rs/followers",
            "following_url": "https://api.github.com/users/rally25rs/following{/other_user}",
            "gists_url": "https://api.github.com/users/rally25rs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rally25rs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rally25rs/subscriptions",
            "organizations_url": "https://api.github.com/users/rally25rs/orgs",
            "repos_url": "https://api.github.com/users/rally25rs/repos",
            "events_url": "https://api.github.com/users/rally25rs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rally25rs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 64735224,
                "node_id": "MDU6TGFiZWw2NDczNTIyNA==",
                "url": "https://api.github.com/repos/yargs/yargs/labels/question",
                "name": "question",
                "color": "cc317c",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-11-19T13:33:53Z",
        "updated_at": "2020-02-12T16:49:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "As a contrived example, imaging wanting to pass multiple host and port options, something like:\r\n\r\n```\r\n--host <name> [port] ...\r\n```\r\n\r\nfor example:\r\n```\r\nnode index.js --host a.example.com 3000 --host b.example.com 8080\r\n```\r\n\r\nI suppose what I'm trying to really accomplish is to bring in an array of objects, like\r\n```\r\n[{\r\n  host: 'a.example.com',\r\n  port: 3000\r\n}, {\r\n  host: 'b.example.com',\r\n  port: 8080\r\n}]\r\n```\r\n\r\nIs there a way to do this with yargs?\r\n\r\nThanks for any help!"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1482",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1482/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1482/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1482/events",
        "html_url": "https://github.com/yargs/yargs/issues/1482",
        "id": 524737079,
        "node_id": "MDU6SXNzdWU1MjQ3MzcwNzk=",
        "number": 1482,
        "title": "deleting '--' in parse object causes issues when argv is frozen",
        "user": {
            "login": "bcoe",
            "id": 194609,
            "node_id": "MDQ6VXNlcjE5NDYwOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/194609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bcoe",
            "html_url": "https://github.com/bcoe",
            "followers_url": "https://api.github.com/users/bcoe/followers",
            "following_url": "https://api.github.com/users/bcoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/bcoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bcoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bcoe/subscriptions",
            "organizations_url": "https://api.github.com/users/bcoe/orgs",
            "repos_url": "https://api.github.com/users/bcoe/repos",
            "events_url": "https://api.github.com/users/bcoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bcoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 64735220,
                "node_id": "MDU6TGFiZWw2NDczNTIyMA==",
                "url": "https://api.github.com/repos/yargs/yargs/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            },
            {
                "id": 1395730691,
                "node_id": "MDU6TGFiZWwxMzk1NzMwNjkx",
                "url": "https://api.github.com/repos/yargs/yargs/labels/p1",
                "name": "p1",
                "color": "eab2f4",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-19T02:40:32Z",
        "updated_at": "2019-11-19T02:40:32Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "We currently have logic that temporarily populates `--`, during command parsing, making it easier to differentiate between arguments after `--` and positional arguments before `--`. We then delete this field post-parse, if the user did not request `--` be populated.\r\n\r\nUnfortunately, this creates an edge-case where if a user calls `Object.seal` or `Object.freeze` on `argv`, an exception can occur.\r\n\r\nThis logic is pretty silly, let's not do it -- there's already discussion of using a WeakMap to store information about whether or not parameters in `argv` have been deleted, I wonder if we could use a similar approach to track parameters after the `--`.\r\n\r\nsee: https://github.com/babel/babel/pull/10733"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1476",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1476/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1476/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1476/events",
        "html_url": "https://github.com/yargs/yargs/issues/1476",
        "id": 520521241,
        "node_id": "MDU6SXNzdWU1MjA1MjEyNDE=",
        "number": 1476,
        "title": "document usage of yargs with input tools like inquirer",
        "user": {
            "login": "bcoe",
            "id": 194609,
            "node_id": "MDQ6VXNlcjE5NDYwOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/194609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bcoe",
            "html_url": "https://github.com/bcoe",
            "followers_url": "https://api.github.com/users/bcoe/followers",
            "following_url": "https://api.github.com/users/bcoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/bcoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bcoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bcoe/subscriptions",
            "organizations_url": "https://api.github.com/users/bcoe/orgs",
            "repos_url": "https://api.github.com/users/bcoe/repos",
            "events_url": "https://api.github.com/users/bcoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bcoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 405522164,
                "node_id": "MDU6TGFiZWw0MDU1MjIxNjQ=",
                "url": "https://api.github.com/repos/yargs/yargs/labels/Great%20First%20Contribution",
                "name": "Great First Contribution",
                "color": "d93f0b",
                "default": false,
                "description": null
            },
            {
                "id": 405522110,
                "node_id": "MDU6TGFiZWw0MDU1MjIxMTA=",
                "url": "https://api.github.com/repos/yargs/yargs/labels/Help%20Wanted",
                "name": "Help Wanted",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 1410721514,
                "node_id": "MDU6TGFiZWwxNDEwNzIxNTE0",
                "url": "https://api.github.com/repos/yargs/yargs/labels/docs",
                "name": "docs",
                "color": "d606b3",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-09T22:17:18Z",
        "updated_at": "2019-11-09T22:17:28Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "It would be good to add a section to our docs that demonstrates using yargs in parallel with tools like [inquirer](https://www.npmjs.com/package/inquirer).\r\n\r\nsee: https://github.com/yargs/yargs/issues/286"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1465",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1465/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1465/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1465/events",
        "html_url": "https://github.com/yargs/yargs/issues/1465",
        "id": 513018409,
        "node_id": "MDU6SXNzdWU1MTMwMTg0MDk=",
        "number": 1465,
        "title": "chore: get to 100% branch coverage",
        "user": {
            "login": "bcoe",
            "id": 194609,
            "node_id": "MDQ6VXNlcjE5NDYwOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/194609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bcoe",
            "html_url": "https://github.com/bcoe",
            "followers_url": "https://api.github.com/users/bcoe/followers",
            "following_url": "https://api.github.com/users/bcoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/bcoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bcoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bcoe/subscriptions",
            "organizations_url": "https://api.github.com/users/bcoe/orgs",
            "repos_url": "https://api.github.com/users/bcoe/repos",
            "events_url": "https://api.github.com/users/bcoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bcoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 405522110,
                "node_id": "MDU6TGFiZWw0MDU1MjIxMTA=",
                "url": "https://api.github.com/repos/yargs/yargs/labels/Help%20Wanted",
                "name": "Help Wanted",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 455023931,
                "node_id": "MDU6TGFiZWw0NTUwMjM5MzE=",
                "url": "https://api.github.com/repos/yargs/yargs/labels/hacktoberfest",
                "name": "hacktoberfest",
                "color": "d93f0b",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-10-27T20:35:30Z",
        "updated_at": "2019-11-05T20:12:07Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "body": "## Background\r\n\r\nOne of the other projects I've been working on is [c8](https://github.com/bcoe/c8), which collects coverage using V8's built in coverage (rather than using transpilation).\r\n\r\nAs of Node 13, enough bugs have been worked out in V8/c8 that we can actually hit 100% line coverage with yargs (and I've started [moving us over to dog-fooding c8](https://github.com/yargs/yargs/pull/1464)).\r\n\r\n## Help Wanted\r\n\r\nI would like for us to try to move towards 100% branch coverage with yargs, in the process of doing so we should file bugs against V8 for any issues we continue to find with their coverage support.\r\n\r\n## Upstream Issues in V8\r\n\r\n_we can file any outstanding issues against V8 here._\r\n\r\n## Contributing\r\n\r\n1. run the yargs test suite.\r\n2. submit a patch adding a test for one of the untracked branches of coverage.\r\n"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1458",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1458/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1458/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1458/events",
        "html_url": "https://github.com/yargs/yargs/issues/1458",
        "id": 511345740,
        "node_id": "MDU6SXNzdWU1MTEzNDU3NDA=",
        "number": 1458,
        "title": "Fix tests not designed to fail cleanly",
        "user": {
            "login": "mleguen",
            "id": 17624421,
            "node_id": "MDQ6VXNlcjE3NjI0NDIx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17624421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mleguen",
            "html_url": "https://github.com/mleguen",
            "followers_url": "https://api.github.com/users/mleguen/followers",
            "following_url": "https://api.github.com/users/mleguen/following{/other_user}",
            "gists_url": "https://api.github.com/users/mleguen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mleguen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mleguen/subscriptions",
            "organizations_url": "https://api.github.com/users/mleguen/orgs",
            "repos_url": "https://api.github.com/users/mleguen/repos",
            "events_url": "https://api.github.com/users/mleguen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mleguen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-23T14:02:38Z",
        "updated_at": "2019-10-23T14:02:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Some tests are designed only to succeed, not to fail cleanly should something unexpected occur.\r\n\r\nFor example, neither do they set `.exitProcess(false)`, nor do they use `checkOutput()` or `checkOutputAsync()`, so yargs kills the whole mocha process when something goes wrong. For example: \"populates inner argv with positional arguments\".\r\n\r\nWe should review all the tests to ensure:\r\n- they do not kill or hang the mocha process\r\n- they are reported by mocha as failing\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1442",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1442/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1442/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1442/events",
        "html_url": "https://github.com/yargs/yargs/issues/1442",
        "id": 503678611,
        "node_id": "MDU6SXNzdWU1MDM2Nzg2MTE=",
        "number": 1442,
        "title": "implies behaves incorrectly",
        "user": {
            "login": "danielb2",
            "id": 26678,
            "node_id": "MDQ6VXNlcjI2Njc4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/26678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielb2",
            "html_url": "https://github.com/danielb2",
            "followers_url": "https://api.github.com/users/danielb2/followers",
            "following_url": "https://api.github.com/users/danielb2/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielb2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielb2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielb2/subscriptions",
            "organizations_url": "https://api.github.com/users/danielb2/orgs",
            "repos_url": "https://api.github.com/users/danielb2/repos",
            "events_url": "https://api.github.com/users/danielb2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielb2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 405522110,
                "node_id": "MDU6TGFiZWw0MDU1MjIxMTA=",
                "url": "https://api.github.com/repos/yargs/yargs/labels/Help%20Wanted",
                "name": "Help Wanted",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 64735224,
                "node_id": "MDU6TGFiZWw2NDczNTIyNA==",
                "url": "https://api.github.com/repos/yargs/yargs/labels/question",
                "name": "question",
                "color": "cc317c",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-10-07T20:39:40Z",
        "updated_at": "2019-10-07T23:02:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Yargs version 14.0.0\r\n\r\nFor the following code, when passing --check as an argument, the parser fails:\r\n\r\n``` javascript\r\nconst Yargs = require('yargs');\r\nconst yargs = Yargs.usage('Usage: $0 [options]');\r\n\r\nconst options = {\r\n  check: { type: 'boolean' },\r\n  other: { type: 'boolean' },\r\n  verify: { implies: 'other', type: 'boolean', default: true },\r\n};\r\n\r\nyargs.options(options);\r\nyargs.argv;\r\n```\r\n\r\n`node play.js --check`\r\n\r\n```\r\nMissing dependent arguments:\r\n verify -> other\r\n```\r\n\r\nHowever, verify isn't implied when running check.  Bug ? Or am I just doing something wrong?\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1435",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1435/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1435/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1435/events",
        "html_url": "https://github.com/yargs/yargs/issues/1435",
        "id": 501315660,
        "node_id": "MDU6SXNzdWU1MDEzMTU2NjA=",
        "number": 1435,
        "title": "General options and commands with options",
        "user": {
            "login": "raldone01",
            "id": 27293675,
            "node_id": "MDQ6VXNlcjI3MjkzNjc1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/27293675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raldone01",
            "html_url": "https://github.com/raldone01",
            "followers_url": "https://api.github.com/users/raldone01/followers",
            "following_url": "https://api.github.com/users/raldone01/following{/other_user}",
            "gists_url": "https://api.github.com/users/raldone01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raldone01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raldone01/subscriptions",
            "organizations_url": "https://api.github.com/users/raldone01/orgs",
            "repos_url": "https://api.github.com/users/raldone01/repos",
            "events_url": "https://api.github.com/users/raldone01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raldone01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1343752905,
                "node_id": "MDU6TGFiZWwxMzQzNzUyOTA1",
                "url": "https://api.github.com/repos/yargs/yargs/labels/feature%20request",
                "name": "feature request",
                "color": "5026c1",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-02T07:06:43Z",
        "updated_at": "2019-10-03T22:06:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "## Abstract example:\r\n`./command [general-options] [commands] [command-specific-options] [sub-command] [sub-command-specific-options] ...`\r\n\r\n## Simple example:\r\n`./example -p download -pf`\r\nThe first '-p' signals to pause after the command has finished. The '-p' after the 'download' stands for 'download previews' and the '-f'  signals to also download full-sized content.\r\n\r\n## Help:\r\n`./example -h` should print the general-options and the possible commands.\r\n`./example -h download` should print the command-specific-options and the possible sub-commands.\r\n\r\n## The output:\r\nThe output would have to be tree like:\r\n```\r\n{\r\npause: true,\r\ndownload: {\r\n    preview: true,\r\n    fullSized: true\r\n}\r\n```\r\n\r\nI wasn't able to accomplish the above with yargs."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1428",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1428/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1428/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1428/events",
        "html_url": "https://github.com/yargs/yargs/issues/1428",
        "id": 497390369,
        "node_id": "MDU6SXNzdWU0OTczOTAzNjk=",
        "number": 1428,
        "title": "Allow for emdash (\u2014) to counts as --",
        "user": {
            "login": "jpbberry",
            "id": 7953076,
            "node_id": "MDQ6VXNlcjc5NTMwNzY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7953076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpbberry",
            "html_url": "https://github.com/jpbberry",
            "followers_url": "https://api.github.com/users/jpbberry/followers",
            "following_url": "https://api.github.com/users/jpbberry/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpbberry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpbberry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpbberry/subscriptions",
            "organizations_url": "https://api.github.com/users/jpbberry/orgs",
            "repos_url": "https://api.github.com/users/jpbberry/repos",
            "events_url": "https://api.github.com/users/jpbberry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpbberry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1343752905,
                "node_id": "MDU6TGFiZWwxMzQzNzUyOTA1",
                "url": "https://api.github.com/repos/yargs/yargs/labels/feature%20request",
                "name": "feature request",
                "color": "5026c1",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-09-24T00:25:08Z",
        "updated_at": "2019-12-05T21:53:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Many mobile devices turn -- into \u2014 which obviously doesn't render as the -'s.\r\nI would make a PR but I'm not the best with this kinda thing. "
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1420",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1420/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1420/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1420/events",
        "html_url": "https://github.com/yargs/yargs/issues/1420",
        "id": 489025335,
        "node_id": "MDU6SXNzdWU0ODkwMjUzMzU=",
        "number": 1420,
        "title": "Accepting sync and async callbacks while keeping yargs functions sync-only is incoherent",
        "user": {
            "login": "mleguen",
            "id": 17624421,
            "node_id": "MDQ6VXNlcjE3NjI0NDIx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17624421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mleguen",
            "html_url": "https://github.com/mleguen",
            "followers_url": "https://api.github.com/users/mleguen/followers",
            "following_url": "https://api.github.com/users/mleguen/following{/other_user}",
            "gists_url": "https://api.github.com/users/mleguen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mleguen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mleguen/subscriptions",
            "organizations_url": "https://api.github.com/users/mleguen/orgs",
            "repos_url": "https://api.github.com/users/mleguen/repos",
            "events_url": "https://api.github.com/users/mleguen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mleguen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1538947309,
                "node_id": "MDU6TGFiZWwxNTM4OTQ3MzA5",
                "url": "https://api.github.com/repos/yargs/yargs/labels/discussion",
                "name": "discussion",
                "color": "c48613",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2019-09-04T08:47:29Z",
        "updated_at": "2019-10-09T17:48:52Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "This issue is a follow-up of the discusion with @bcoe and @gajus in #1412\r\n\r\nExample with command handlers:\r\n- at the moment:\r\n  - we accept async handlers for commands\r\n  - we asynchronously log an error in `parse()` and `showHelp()` (and maybe other functions as well?) when an async handler reject\r\n  - as `parse()` and `showHelp()` are sync, the calling program has no way to know if and when such an error will occur\r\n- expected behavior:\r\n  - when an async handler needs to be called, the calling Yargs function (`parse()`, `showHelp()`, etc.) should return a promise, to be resolved/rejected after the handler completes, for the calling program to know what is happening\r\n  - when the handler is sync, the current behavior should be kept, ie the calling Yargs function should not return a promise\r\n\r\nBefore opening any PR, please detail in this issue the intended conception for review, and do not limit it to the command handler example detailed here (there may be other cases of async input)."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1416",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1416/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1416/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1416/events",
        "html_url": "https://github.com/yargs/yargs/issues/1416",
        "id": 486466751,
        "node_id": "MDU6SXNzdWU0ODY0NjY3NTE=",
        "number": 1416,
        "title": "Add an Ethereum name or address to package.json",
        "user": {
            "login": "lastmjs",
            "id": 7000719,
            "node_id": "MDQ6VXNlcjcwMDA3MTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7000719?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lastmjs",
            "html_url": "https://github.com/lastmjs",
            "followers_url": "https://api.github.com/users/lastmjs/followers",
            "following_url": "https://api.github.com/users/lastmjs/following{/other_user}",
            "gists_url": "https://api.github.com/users/lastmjs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lastmjs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lastmjs/subscriptions",
            "organizations_url": "https://api.github.com/users/lastmjs/orgs",
            "repos_url": "https://api.github.com/users/lastmjs/repos",
            "events_url": "https://api.github.com/users/lastmjs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lastmjs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1538947309,
                "node_id": "MDU6TGFiZWwxNTM4OTQ3MzA5",
                "url": "https://api.github.com/repos/yargs/yargs/labels/discussion",
                "name": "discussion",
                "color": "c48613",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-08-28T15:51:12Z",
        "updated_at": "2019-09-06T19:26:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I would like to see an Ethereum name or address added to the ethereum field of the package.json file. This will allow consumers of the project to know a canonical address to send funds to. For example, I'm building an application that will allow developers to automatically donate ETH to all of their npm dependencies that have an Ethereum address in their package.json file. \r\n\r\nHaving an Ethereum address would allow various cryptocurrencies to be donated, including stablecoins pegged to USD, like USDC or DAI. Essentially it is another payment network like PayPal, but open and decentralized like the internet. Getting an address is relatively straightforward through something like MetaMask or Coinbase. You could also generate one on your own."
    },
    {
        "url": "https://api.github.com/repos/yargs/yargs/issues/1408",
        "repository_url": "https://api.github.com/repos/yargs/yargs",
        "labels_url": "https://api.github.com/repos/yargs/yargs/issues/1408/labels{/name}",
        "comments_url": "https://api.github.com/repos/yargs/yargs/issues/1408/comments",
        "events_url": "https://api.github.com/repos/yargs/yargs/issues/1408/events",
        "html_url": "https://github.com/yargs/yargs/issues/1408",
        "id": 483598373,
        "node_id": "MDU6SXNzdWU0ODM1OTgzNzM=",
        "number": 1408,
        "title": "No easy way to document choices",
        "user": {
            "login": "raijinsetsu",
            "id": 6809014,
            "node_id": "MDQ6VXNlcjY4MDkwMTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6809014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raijinsetsu",
            "html_url": "https://github.com/raijinsetsu",
            "followers_url": "https://api.github.com/users/raijinsetsu/followers",
            "following_url": "https://api.github.com/users/raijinsetsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/raijinsetsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raijinsetsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raijinsetsu/subscriptions",
            "organizations_url": "https://api.github.com/users/raijinsetsu/orgs",
            "repos_url": "https://api.github.com/users/raijinsetsu/repos",
            "events_url": "https://api.github.com/users/raijinsetsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raijinsetsu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-21T19:01:31Z",
        "updated_at": "2019-08-21T19:01:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Just to note: we are using the commandDir to build out our commands.\r\nSay I have this command:\r\n```typescript\r\nexport function builder(yargs: Yargs.Argv) {\r\n\r\n    return yargs\r\n        .strict()\r\n        .option('mode', {\r\n            describe: `the operation mode`,\r\n            choices: ['a','b','c']\r\n        });\r\n}\r\n```\r\nOther than documenting each choice within the description, and dealing with the fact that this does not format well, there is no easy way to document what the choices mean that I can find.\r\n\r\nIf there isn't some undocumented feature for this, would the maintainers be open to expanding the array of choices to be an object where the keys are the choices and the value is an object, ex.:\r\n```javascript\r\nchoices: {\r\na: {describe: 'this will do things A way'},\r\nb: {describe: 'this will do things B way'},\r\nc: {describe: 'this will do things C way'}\r\n}\r\n```\r\nThen, the documentation might be:\r\n```\r\nmode    the operation mode\r\n            \"a\": this will do things\r\n                A way\r\n            \"b\": this will do things\r\n                B way\r\n            \"c\": this will do things\r\n                C way\r\n```\r\nAlthough I can insert newlines into the description for the option, this is still fairly hard to read as the text for the options just bleeds together and has the \"[choices: ...]\" string appended to the end.\r\n\r\nI have no problem contributing the code for this to the library but didn't want to spend the time doing so just to have the change rejected.\r\n\r\nThanks!"
    }
]