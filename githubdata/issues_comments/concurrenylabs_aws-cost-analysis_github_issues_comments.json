[
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/321336251",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/1#issuecomment-321336251",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/1",
        "id": 321336251,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTMzNjI1MQ==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-09T18:08:39Z",
        "updated_at": "2017-08-09T18:08:39Z",
        "author_association": "OWNER",
        "body": "Our apologies. There was a recent refactoring of this repo and we didn't include the report_utils.py file in it. It's under the scripts folder now. Please refer to the updated README file for more details. Thanks for trying this out!"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/332201925",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/2#issuecomment-332201925",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/2",
        "id": 332201925,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjIwMTkyNQ==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-26T13:42:06Z",
        "updated_at": "2017-09-26T13:42:06Z",
        "author_association": "OWNER",
        "body": "Thanks for reporting this issue. Our bad, we forgot to include the SAM template in the repo. We just added it, hope you find it useful!"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/342028397",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/3#issuecomment-342028397",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/3",
        "id": 342028397,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjAyODM5Nw==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-06T02:11:39Z",
        "updated_at": "2017-11-06T02:11:39Z",
        "author_association": "OWNER",
        "body": "Thanks for bringing this up, you're right it would be much better to use date types.  We'll add this issue to our to-do list for this week."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/343803745",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/3#issuecomment-343803745",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/3",
        "id": 343803745,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzgwMzc0NQ==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-13T03:55:41Z",
        "updated_at": "2017-11-13T03:55:41Z",
        "author_association": "OWNER",
        "body": "I looked at some options and did some testing regarding this issue. Athena supports the following\r\nformats: TINYINT, SMALLINT, INT, BIGINT, BOOLEAN, DOUBLE ,STRING, TIMESTAMP, DECIMAL,  DATE (not supported for PARQUET file_format) and VARCHAR. \r\n\r\nDate columns in the AWS Cost and Usage report come in the following format: '2017-11-01T00:00:00Z', which is not recognized by Athena when creating a table.  \r\n\r\nIf I declare the column as either DATE or TIMESTAMP, I get the following error when executing a query that uses that column: \"HIVE_BAD_DATA: Error parsing field value '2017-11-01T00:00:00Z' for field 6: For input string: \"2017-11-01T00:00:00Z\"\"\r\n\r\nA way around this issue would be to modify the text in incoming Cost and Usage records, such that timestamp columns can be parsed by Athena. This is feasible, however I'd like to stay away as much as possible from altering incoming data since this will have an impact on other components that use CUR data and the code in this repo.\r\n\r\nOne alternative is to use date_parse in SQL statements that involve date operations. For example:\r\n\r\nselect date_parse(lineitem_usagestartdate,'%Y-%m-%dT%H:%i:%s%Z') as lineitem_usagestartdate \r\n\r\nFor now, my preference would be to use date_parse for date-sensitive queries instead of modifying incoming Cost and Usage data. I hope this works for you.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/344097719",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/3#issuecomment-344097719",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/3",
        "id": 344097719,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDA5NzcxOQ==",
        "user": {
            "login": "scfox",
            "id": 12850640,
            "node_id": "MDQ6VXNlcjEyODUwNjQw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/12850640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scfox",
            "html_url": "https://github.com/scfox",
            "followers_url": "https://api.github.com/users/scfox/followers",
            "following_url": "https://api.github.com/users/scfox/following{/other_user}",
            "gists_url": "https://api.github.com/users/scfox/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scfox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scfox/subscriptions",
            "organizations_url": "https://api.github.com/users/scfox/orgs",
            "repos_url": "https://api.github.com/users/scfox/repos",
            "events_url": "https://api.github.com/users/scfox/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scfox/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-13T23:47:46Z",
        "updated_at": "2017-11-13T23:47:46Z",
        "author_association": "NONE",
        "body": "That's fine for pulling data out (fields being selected) as you have in your example, but I don't think it will work in the where clause.  If it does it will make the query very inefficient running the parse on every record in the set. I was trying to issue a query with a date range, e.g. select * where lineitem_usagestartdate BETWEEN d1 and d2."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/348999558",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/4#issuecomment-348999558",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/4",
        "id": 348999558,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODk5OTU1OA==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-04T15:39:01Z",
        "updated_at": "2017-12-04T15:39:01Z",
        "author_association": "OWNER",
        "body": "Thanks for bringing this up. We were just about to push a fix the same minute this issue was created. Talk about perfect timing  :)  Check out the latest commit:  e977834efcb07f4768bcca0be1b2db353d0a21a2"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/350096661",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/5#issuecomment-350096661",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/5",
        "id": 350096661,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDA5NjY2MQ==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-07T21:16:26Z",
        "updated_at": "2017-12-07T21:16:26Z",
        "author_association": "OWNER",
        "body": "Thank you for bringing this up. We will review this issue and add a comment here before the end of this week."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/350504303",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/5#issuecomment-350504303",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/5",
        "id": 350504303,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDUwNDMwMw==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-09T20:44:05Z",
        "updated_at": "2017-12-09T20:44:05Z",
        "author_association": "OWNER",
        "body": "AWS places Cost and Usage reports in S3 according to the following key structure:\r\n\r\n`<prefix>/<period>/<hash>/<reportname>.csv.gz`\r\n\r\n... where prefix is optional and period is something like '20171201-20180101'\r\n\r\nThis function receives an S3 Put event when a new CUR is placed in your S3 bucket by AWS.\r\n\r\nIt seems the function is doing the right thing in order to extract the period, by doing\r\n\r\n`period = dirs[len(dirs)-3]`\r\n\r\nFor example:\r\n\r\n`<prefix>/20171201-20180101/<hash>/<reportname>.csv.gz`\r\n\r\n`len(dirs)` is 4\r\n`len(dirs)-3` is 1, which is the right index for the period component '20171201-20180101'\r\n\r\nor\r\n\r\n`20171201-20180101/<hash>/<reportname>.csv.gz`\r\n\r\n`len(dirs)` is 3\r\n`len(dirs)-3` is 0, which also finds the period component '20171201-20180101'\r\n\r\nCould you please include an example of the s3 key in the S3 Put event the function received and also the error message you experienced?\r\n\r\nThanks\r\n"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/358986016",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/6#issuecomment-358986016",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/6",
        "id": 358986016,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODk4NjAxNg==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-19T14:48:12Z",
        "updated_at": "2018-01-19T14:48:12Z",
        "author_association": "OWNER",
        "body": "Hi, thanks for reporting this issue and sorry to hear it caused some trouble. Just writing to acknowledge it and to let you know that we'll take a look at it later today."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/358988627",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/6#issuecomment-358988627",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/6",
        "id": 358988627,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODk4ODYyNw==",
        "user": {
            "login": "Nr18",
            "id": 1660601,
            "node_id": "MDQ6VXNlcjE2NjA2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1660601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nr18",
            "html_url": "https://github.com/Nr18",
            "followers_url": "https://api.github.com/users/Nr18/followers",
            "following_url": "https://api.github.com/users/Nr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nr18/subscriptions",
            "organizations_url": "https://api.github.com/users/Nr18/orgs",
            "repos_url": "https://api.github.com/users/Nr18/repos",
            "events_url": "https://api.github.com/users/Nr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-19T14:57:01Z",
        "updated_at": "2018-01-19T14:57:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks!\r\n\r\nSo played around with it a bit and got it working, but i did need to change a few things:\r\n\r\nIn the processor.py i changed:\r\n```\r\nmonthDestPrefix = self.destPrefix + period_prefix\r\n```\r\nto:\r\n```\r\nmonthDestPrefix = '{}{}/{}'.format(self.destPrefix, self.accountId, period_prefix)\r\n```\r\n\r\nBecause the Athena table is expecting the accountId to be in the path and i removed the `placeholder` string in the destination path to correct it. I need to re-test it and then i will commit my changes to my fork and submit a pull request. The issue above was caused due to the fact that athena was querying a empty path."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/359051494",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/6#issuecomment-359051494",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/6",
        "id": 359051494,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTA1MTQ5NA==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-19T18:34:12Z",
        "updated_at": "2018-01-19T18:34:12Z",
        "author_association": "OWNER",
        "body": "It sounds like accountId was somehow not set at the beginning of the Step Function execution.\r\n\r\nThe Step Function takes as an input a dictionary that includes, among other things, accountId. This dictionary gets passed from one step to the next. For some reason when it was time to execute function `init-athena-queries`, accountId was missing and the execution failed.\r\n\r\nOne recommended way to start the step function is by using the starter function `s3event-step-function-starter.py`, which gets triggered by an S3 event whenever a new Cost and Usage report is placed in the source S3 bucket. This function sets accountId, which should make it eventually to the `init-athena-queries` table.\r\n\r\nIf you're starting the Step Function differently, just make sure that it has a dictionary that includes year, month, sourceBucket, sourcePrefix, destBucket, destPrefix and accountId. And optionally, xAccountSource and roleArn if you're accessing Cost and Usage reports cross-account.\r\n\r\nI will test a code update that double checks for accountId at the end of the `process-cur` function and sets it, in case it wasn't set by the step function starter."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/359066077",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/6#issuecomment-359066077",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/6",
        "id": 359066077,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTA2NjA3Nw==",
        "user": {
            "login": "Nr18",
            "id": 1660601,
            "node_id": "MDQ6VXNlcjE2NjA2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1660601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nr18",
            "html_url": "https://github.com/Nr18",
            "followers_url": "https://api.github.com/users/Nr18/followers",
            "following_url": "https://api.github.com/users/Nr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nr18/subscriptions",
            "organizations_url": "https://api.github.com/users/Nr18/orgs",
            "repos_url": "https://api.github.com/users/Nr18/repos",
            "events_url": "https://api.github.com/users/Nr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-19T19:30:45Z",
        "updated_at": "2018-01-19T19:30:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "@concurrencylabs i am using the `s3event-step-function-starter.py` function via an event trigger on the bucket that receives the reporting from AWS.\r\n\r\nI pushed my code and created PR #7 so that you can see what i did, i'm running the whole thing as I described in the `README.md` \r\n\r\nThe `accountid` is in the event it was not used in the path to upload the processed csv files as far as i could see, but again you can see that in the PR.\r\n\r\nIf i need to change something in the PR i'm happy to do that, i only added the stuff that was missing for me to get started with this project so that i could start playing around with queries in Athena."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/359068193",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/6#issuecomment-359068193",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/6",
        "id": 359068193,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTA2ODE5Mw==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-19T19:38:41Z",
        "updated_at": "2018-01-19T19:38:41Z",
        "author_association": "OWNER",
        "body": "Thanks for the PR, will take a look and leave it running in a test environment. "
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360169447",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/7#issuecomment-360169447",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/7",
        "id": 360169447,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDE2OTQ0Nw==",
        "user": {
            "login": "Nr18",
            "id": 1660601,
            "node_id": "MDQ6VXNlcjE2NjA2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1660601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nr18",
            "html_url": "https://github.com/Nr18",
            "followers_url": "https://api.github.com/users/Nr18/followers",
            "following_url": "https://api.github.com/users/Nr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nr18/subscriptions",
            "organizations_url": "https://api.github.com/users/Nr18/orgs",
            "repos_url": "https://api.github.com/users/Nr18/repos",
            "events_url": "https://api.github.com/users/Nr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T15:23:49Z",
        "updated_at": "2018-01-24T15:23:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "Noticed that the creation of the Athena table still resulted in a failure fixed it by applying the correct paths"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360176369",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/9#issuecomment-360176369",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/9",
        "id": 360176369,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDE3NjM2OQ==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T15:44:45Z",
        "updated_at": "2018-01-24T15:44:45Z",
        "author_association": "OWNER",
        "body": "The best approach to detect new reports is via S3 if you're working only on your own AWS account. This way, when AWS places a new Cost and Usage report in S3, the `S3EventStepFunctionStarter` function starts the processing of the new CUR and creates a new Athena table.\r\n\r\nWe use the `xAcctStepFunctionStarter` function to access Cost and Usage reports in different AWS accounts (i.e. dev & test accounts, or clients), that's why it checks every 5 minutes for new reports. `lastProcessedTimestamp` is used, among other things, for an API-like feature in the AthenaQueryMgr class in `athena.py`. The idea is that when this API is called, we don't want to query Athena every single time. Instead, the code stores query results in S3, which get updated when a new CUR is processed. Adding examples of how to call this API is WIP, though. But  we have `xAcctStepFunctionStarter` running for a lot of AWS accounts and it does work well."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360256110",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/9#issuecomment-360256110",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/9",
        "id": 360256110,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDI1NjExMA==",
        "user": {
            "login": "Nr18",
            "id": 1660601,
            "node_id": "MDQ6VXNlcjE2NjA2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1660601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nr18",
            "html_url": "https://github.com/Nr18",
            "followers_url": "https://api.github.com/users/Nr18/followers",
            "following_url": "https://api.github.com/users/Nr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nr18/subscriptions",
            "organizations_url": "https://api.github.com/users/Nr18/orgs",
            "repos_url": "https://api.github.com/users/Nr18/repos",
            "events_url": "https://api.github.com/users/Nr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T20:02:11Z",
        "updated_at": "2018-01-24T20:02:11Z",
        "author_association": "CONTRIBUTOR",
        "body": "Ah cool i changed my pr to disable the scheduled event via a parameter and added the s3 trigger event. \r\n\r\nBut it seems that sam is ignoring the condition. \r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360267187",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/9#issuecomment-360267187",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/9",
        "id": 360267187,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDI2NzE4Nw==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T20:44:03Z",
        "updated_at": "2018-01-24T20:44:03Z",
        "author_association": "OWNER",
        "body": "One thing with S3 events and SAM is that you can only enable S3 events for buckets that are created in the same SAM template. That might be the reason."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360471109",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/7#issuecomment-360471109",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/7",
        "id": 360471109,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ3MTEwOQ==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T13:48:08Z",
        "updated_at": "2018-01-25T13:48:08Z",
        "author_association": "OWNER",
        "body": "Thanks for all the improvements, just to let you know we're still reviewing. We need to make sure our running processes continue to work. For example, the setting of environment variables and paths. "
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360572034",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/10#issuecomment-360572034",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/10",
        "id": 360572034,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDU3MjAzNA==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T19:22:49Z",
        "updated_at": "2018-01-25T19:22:49Z",
        "author_association": "OWNER",
        "body": "Every new report file that is generated by AWS contains all the data from the previous key plus new data. That's why the tool overwrites the previous key, so Athena has the latest view."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360574110",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/10#issuecomment-360574110",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/10",
        "id": 360574110,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDU3NDExMA==",
        "user": {
            "login": "Nr18",
            "id": 1660601,
            "node_id": "MDQ6VXNlcjE2NjA2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1660601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nr18",
            "html_url": "https://github.com/Nr18",
            "followers_url": "https://api.github.com/users/Nr18/followers",
            "following_url": "https://api.github.com/users/Nr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nr18/subscriptions",
            "organizations_url": "https://api.github.com/users/Nr18/orgs",
            "repos_url": "https://api.github.com/users/Nr18/repos",
            "events_url": "https://api.github.com/users/Nr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T19:30:01Z",
        "updated_at": "2018-01-25T19:30:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "As far as i saw it that is true for each dump that they send to your S3 bucket not for the reports that are in a single hash.\r\n\r\nIf what you are saying is true, then you could only read the last report but your code downloads them all and then write it to a file and the next file will overwrite the previous content.\r\n\r\nI'm converting my data as i'm typing this so if i converted my reports i will query for doubles (and see if my missing is now accounted for)"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360578184",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/10#issuecomment-360578184",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/10",
        "id": 360578184,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDU3ODE4NA==",
        "user": {
            "login": "Nr18",
            "id": 1660601,
            "node_id": "MDQ6VXNlcjE2NjA2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1660601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nr18",
            "html_url": "https://github.com/Nr18",
            "followers_url": "https://api.github.com/users/Nr18/followers",
            "following_url": "https://api.github.com/users/Nr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nr18/subscriptions",
            "organizations_url": "https://api.github.com/users/Nr18/orgs",
            "repos_url": "https://api.github.com/users/Nr18/repos",
            "events_url": "https://api.github.com/users/Nr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T19:44:08Z",
        "updated_at": "2018-01-25T19:44:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "I can confirm that after i ran the processor with the append mode the total of the lineitem_unblendedcost matched the actual invoice of that month. Without the append mode i'm 60% off."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360580866",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/10#issuecomment-360580866",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/10",
        "id": 360580866,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDU4MDg2Ng==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T19:52:56Z",
        "updated_at": "2018-01-25T19:52:56Z",
        "author_association": "OWNER",
        "body": "You're right, thanks for clarifying. The aggregate of all files AWS places inside a new hash folder contain data from the previous hash folder plus new data.  So, it makes sense to append all data contained in a single hash folder. \r\n\r\nAlso, the reason files are downloaded is because Athena breaks when there's a header row, therefore the code removes the first row in each report file and it generates the table based on the manifest AWS places in S3. Athena doesn't seem to recognize the setting `TBLPROPERTIES (\"skip.header.line.count\"=\"1\");` in `org.apache.hadoop.hive.serde2.OpenCSVSerde`\r\n"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360711246",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/10#issuecomment-360711246",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/10",
        "id": 360711246,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDcxMTI0Ng==",
        "user": {
            "login": "Nr18",
            "id": 1660601,
            "node_id": "MDQ6VXNlcjE2NjA2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1660601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nr18",
            "html_url": "https://github.com/Nr18",
            "followers_url": "https://api.github.com/users/Nr18/followers",
            "following_url": "https://api.github.com/users/Nr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nr18/subscriptions",
            "organizations_url": "https://api.github.com/users/Nr18/orgs",
            "repos_url": "https://api.github.com/users/Nr18/repos",
            "events_url": "https://api.github.com/users/Nr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-26T08:07:19Z",
        "updated_at": "2018-01-26T08:07:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "So @concurrencylabs have you seen this: https://aws.amazon.com/about-aws/whats-new/2018/01/amazon-athena-engine-upgrades--support-for-lambda-expressions--and-ability-to-skip-headers/\r\n\r\nSo that means that you don't need to aggregate the files into 1 file and re-upload it, just updating the Athena table to the latest hash would be enough as far as i can see.\r\n\r\nThe reason why i'm looking into this is that you now have a single lambda function processing the objects on s3 with my current data set that takes almost 3 a 4 minutes with 3 a 4 report_keys. So i was already looking at an option to do this in parallel in separate lambda functions as Lambda has a timeout limit of 5 minutes. "
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360791927",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/9#issuecomment-360791927",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/9",
        "id": 360791927,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDc5MTkyNw==",
        "user": {
            "login": "Nr18",
            "id": 1660601,
            "node_id": "MDQ6VXNlcjE2NjA2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1660601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nr18",
            "html_url": "https://github.com/Nr18",
            "followers_url": "https://api.github.com/users/Nr18/followers",
            "following_url": "https://api.github.com/users/Nr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nr18/subscriptions",
            "organizations_url": "https://api.github.com/users/Nr18/orgs",
            "repos_url": "https://api.github.com/users/Nr18/repos",
            "events_url": "https://api.github.com/users/Nr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-26T14:00:37Z",
        "updated_at": "2018-01-26T14:00:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "It's a know limitation of SAM, see: https://github.com/awslabs/serverless-application-model/issues/142"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360805900",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/10#issuecomment-360805900",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/10",
        "id": 360805900,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDgwNTkwMA==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-26T14:55:31Z",
        "updated_at": "2018-01-26T14:55:31Z",
        "author_association": "OWNER",
        "body": "I wasn't aware of this new feature where Athena can now ignore headers, so thanks for bringing it up! You're right, this should solve that annoying problem that meant files had to be dowloaded, the header removed and then a new file uploaded to S3. For large accounts, it could mean the function would time out. \r\n\r\nThere's one thing to keep in mind, though. Athena doesn't like it when files other than data are present in a particular path. This means either 1)CUR data files are copied to a new location, 2) the CUR xxx-Manifest.json file that is placed under the hash folder has to be moved somewhere else (or removed, since AWS also places a Manifest.json one level up from the hash location.  That's the manifest that is used for creating the Athena tables.\r\n\r\nI like option #2 better, if it makes sense to move the hash-level manifest, then moving it to a folder inside the same bucket, that only keeps manifests, and rename it in a way that keeps the hash name in it, to keep track of history and not lose data (i.e. manifests/<hash>-Manifest.json)."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360810874",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/10#issuecomment-360810874",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/10",
        "id": 360810874,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDgxMDg3NA==",
        "user": {
            "login": "Nr18",
            "id": 1660601,
            "node_id": "MDQ6VXNlcjE2NjA2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1660601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nr18",
            "html_url": "https://github.com/Nr18",
            "followers_url": "https://api.github.com/users/Nr18/followers",
            "following_url": "https://api.github.com/users/Nr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nr18/subscriptions",
            "organizations_url": "https://api.github.com/users/Nr18/orgs",
            "repos_url": "https://api.github.com/users/Nr18/repos",
            "events_url": "https://api.github.com/users/Nr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-26T15:12:49Z",
        "updated_at": "2018-01-26T15:12:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "I also would go for your second option why move (potential large) data around if you don't have too. In terms of cost optimization you probably want to remove the previously dumped hashes and only keep the last x dumps. \r\n\r\nAnother thing you could do is when the previous month is \"closed\" you could convert the dumps to  a [columnar storage](https://parquet.apache.org) format on a different Athena table containing all months so that you are able to query across multiple months while being cost efficient."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/360837028",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/issues/9#issuecomment-360837028",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/9",
        "id": 360837028,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDgzNzAyOA==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-26T16:42:10Z",
        "updated_at": "2018-01-26T16:42:10Z",
        "author_association": "OWNER",
        "body": "I tried the following, removing the S3 event from the Lambda function and adding it to the S3 bucket:\r\n\r\n```\r\n  CostUsageReport:\r\n    Condition: CreateCurS3BucketEnabled\r\n    DependsOn: [ S3EventStepFunctionStarter ]\r\n    Type: AWS::S3::Bucket\r\n    Properties: \r\n      AccessControl: Private\r\n      BucketName: !Ref BucketName\r\n      LambdaConfigurations:\r\n        Event: s3:ObjectCreated:*\r\n        Filter:\r\n          S3Key:\r\n            Rules:\r\n              - Name: prefix\r\n                Value: !Sub '${ReportPathPrefix}/'\r\n              - Name: suffix\r\n                Value: Manifest.json\r\n        Function: !GetAtt S3EventStepFunctionStarter.Arn\r\n```\r\n\r\nI tried a new condition `CreateCurS3BucketEnabled` because the S3 bucket creation was interfering with existing stacks that already have an S3 bucket and a history of Cost and Usage reports in them. \r\n"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/362158762",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/7#issuecomment-362158762",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/7",
        "id": 362158762,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjE1ODc2Mg==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-01T04:57:41Z",
        "updated_at": "2018-02-01T04:57:41Z",
        "author_association": "OWNER",
        "body": "FYI... haven't forgotten about this PR. We're trying to make it work with existing stacks in both cross-account and single account scenarios and it's taking some time to set it up and test it. Will soon come back with a commit."
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/363140348",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/7#issuecomment-363140348",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/7",
        "id": 363140348,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzE0MDM0OA==",
        "user": {
            "login": "concurrencylabs",
            "id": 17148977,
            "node_id": "MDQ6VXNlcjE3MTQ4OTc3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17148977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/concurrencylabs",
            "html_url": "https://github.com/concurrencylabs",
            "followers_url": "https://api.github.com/users/concurrencylabs/followers",
            "following_url": "https://api.github.com/users/concurrencylabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/concurrencylabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/concurrencylabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/concurrencylabs/subscriptions",
            "organizations_url": "https://api.github.com/users/concurrencylabs/orgs",
            "repos_url": "https://api.github.com/users/concurrencylabs/repos",
            "events_url": "https://api.github.com/users/concurrencylabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/concurrencylabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-05T16:34:30Z",
        "updated_at": "2018-02-05T16:34:30Z",
        "author_association": "OWNER",
        "body": "I had to make a number of changes to this PR, in order to make it work with the way the tool it's currently used, especially in cross-account scenarios. They should be compatible with the way you're using it, except you need to make sure S3 prefixes that are passed as parameters in the SAM template end in a \"/\". More details here:\r\n\r\n- For consistency with how this tool is already used (for example, in cross-account processing), we need S3 prefixes to end in \"/\". Updated relevant parts of the code to reflect this.\r\n- Due to known limitations in SAM, where conditions are not recognized, I had to split the SAM templates, so now there is a separate one for executions triggered by an S3 event (curprocessor-sam.yml), and another one for cross-account executions (curprocessor-xacct-sam.yml). There is a bit of duplication as a result of having two SAM templates, but otherwise there are many issues in trying to make both scenarios work in the same template.\r\n- Updated README file, to reflect some of the changes.\r\n- Added an extra validation to the S3 starter function, since AWS places two different Manifest.json files each time there is a new Cost and Usage report. This would result in two Step Function executions, unnecessarily, without the added validation.\r\n\r\nThanks for all the improvements!\r\n"
    },
    {
        "url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/comments/363342250",
        "html_url": "https://github.com/concurrencylabs/aws-cost-analysis/pull/7#issuecomment-363342250",
        "issue_url": "https://api.github.com/repos/concurrencylabs/aws-cost-analysis/issues/7",
        "id": 363342250,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzM0MjI1MA==",
        "user": {
            "login": "Nr18",
            "id": 1660601,
            "node_id": "MDQ6VXNlcjE2NjA2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1660601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nr18",
            "html_url": "https://github.com/Nr18",
            "followers_url": "https://api.github.com/users/Nr18/followers",
            "following_url": "https://api.github.com/users/Nr18/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nr18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nr18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nr18/subscriptions",
            "organizations_url": "https://api.github.com/users/Nr18/orgs",
            "repos_url": "https://api.github.com/users/Nr18/repos",
            "events_url": "https://api.github.com/users/Nr18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nr18/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-06T08:06:36Z",
        "updated_at": "2018-02-06T08:06:36Z",
        "author_association": "CONTRIBUTOR",
        "body": "You're welcome"
    }
]