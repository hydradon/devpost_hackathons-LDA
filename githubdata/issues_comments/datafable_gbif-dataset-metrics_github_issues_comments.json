[
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/67652648",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/3#issuecomment-67652648",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/3",
        "id": 67652648,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjUyNjQ4",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-19T15:32:08Z",
        "updated_at": "2014-12-19T15:32:08Z",
        "author_association": "MEMBER",
        "body": "@bartaelterman, @niconoe, the list above is a rather complete overview of things we could show for a dataset...\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/67924859",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-67924859",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 67924859,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTI0ODU5",
        "user": {
            "login": "bartaelterman",
            "id": 2742677,
            "node_id": "MDQ6VXNlcjI3NDI2Nzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2742677?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bartaelterman",
            "html_url": "https://github.com/bartaelterman",
            "followers_url": "https://api.github.com/users/bartaelterman/followers",
            "following_url": "https://api.github.com/users/bartaelterman/following{/other_user}",
            "gists_url": "https://api.github.com/users/bartaelterman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bartaelterman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bartaelterman/subscriptions",
            "organizations_url": "https://api.github.com/users/bartaelterman/orgs",
            "repos_url": "https://api.github.com/users/bartaelterman/repos",
            "events_url": "https://api.github.com/users/bartaelterman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bartaelterman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-23T06:14:40Z",
        "updated_at": "2014-12-23T06:14:40Z",
        "author_association": "MEMBER",
        "body": "I was wondering wether we could use a hosted backend such as cartodb. Put data in a table there, and use their API. I'm not sure wether that would be feasible given the amount of data. (what do you think @peterdesmet ?) In that case, we would only need a place to run the scraper and have him send the metric data to cartodb (using the API).\n\nIf that is not an option (or anything similar), we'll need to develop and host our own backend, but that won't be free. (Although VPS indeed looks cheap). In that case I agree with Nico. I would personally think Django contains a lot of stuff that we don't need, so maybe Flask would be a better choice, but I have little experience with both, so best to stick to known technology.\n\nFurthermore, for calculating the metrics we could use pandas. I'm starting to get a hang on that one and it's data frame can save us some iterating over a dataset.\n\nConsidering the workload, I see myself mostly working on the calculation of the metrics (so that needs a tight integration with the scraper), generally on other backend stuff where needed, and on the frontend visualizations.\n\nI think Peter took off with a good start, adding a POC for the downloads bar chart (looking good by the way!). I'll try some stuff out while this discussion is going.\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/67950266",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-67950266",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 67950266,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTUwMjY2",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-23T13:23:59Z",
        "updated_at": "2014-12-23T13:23:59Z",
        "author_association": "MEMBER",
        "body": "Thanks @niconoe, nice summary. I agree with Bart that for our metrics store, it would be best to choose the solution where we'd have to invest the fewest time. CartoDB seems like a good candidate.\n\nRegarding the crawler: we won't be able to use this for the occurrence store: we ideally want to crawl all GBIF data, but the occurrence API has a [hard limit of 1 million records](http://www.gbif.org/developer/occurrence#search). We would have to use a download instead (estimated compressed size: 75GB).\n\nNote: for some metrics, we can use: http://www.gbif.org/developer/occurrence#metrics\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/67950624",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/3#issuecomment-67950624",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/3",
        "id": 67950624,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTUwNjI0",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-23T13:29:02Z",
        "updated_at": "2014-12-23T13:29:02Z",
        "author_association": "MEMBER",
        "body": "@bartaelterman, @niconoe, in the issue above can you each indicate (with the checkbox) the _top 5 features_ you'd like to implement for this round of the challenge? If something is already checked, consider it part of your top 5. Ideally we'll end up with 5 features to implement (because we agree 100%), in the worst case we have 15 (because we don't agree at all).\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/67952378",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-67952378",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 67952378,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTUyMzc4",
        "user": {
            "login": "niconoe",
            "id": 386387,
            "node_id": "MDQ6VXNlcjM4NjM4Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/386387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/niconoe",
            "html_url": "https://github.com/niconoe",
            "followers_url": "https://api.github.com/users/niconoe/followers",
            "following_url": "https://api.github.com/users/niconoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/niconoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/niconoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/niconoe/subscriptions",
            "organizations_url": "https://api.github.com/users/niconoe/orgs",
            "repos_url": "https://api.github.com/users/niconoe/repos",
            "events_url": "https://api.github.com/users/niconoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/niconoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-23T13:50:45Z",
        "updated_at": "2014-12-23T13:50:45Z",
        "author_association": "MEMBER",
        "body": "@bartaelterman, yep also agree on what you said. Maybe we will finally set the tool choices once we have properly defined interfaces and workload separation. I'd still be faster/more at ease with my solution if I had to implement it very quickly myself, but I'm pretty sure yours would would work great too. Do you have any experience with accessing Cartodb from python (tools stability, API [sql or something higher level?], ...)\n\n@peterdesmet: Allright, I was imagining using the API with a dataset filter for the first prototype, but your proposal is a bit better. I should probably use my python-dwca-reader. There may be difficulties in opening a 75Gb compressed file, but nothing impossible.\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/67953847",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-67953847",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 67953847,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTUzODQ3",
        "user": {
            "login": "bartaelterman",
            "id": 2742677,
            "node_id": "MDQ6VXNlcjI3NDI2Nzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2742677?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bartaelterman",
            "html_url": "https://github.com/bartaelterman",
            "followers_url": "https://api.github.com/users/bartaelterman/followers",
            "following_url": "https://api.github.com/users/bartaelterman/following{/other_user}",
            "gists_url": "https://api.github.com/users/bartaelterman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bartaelterman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bartaelterman/subscriptions",
            "organizations_url": "https://api.github.com/users/bartaelterman/orgs",
            "repos_url": "https://api.github.com/users/bartaelterman/repos",
            "events_url": "https://api.github.com/users/bartaelterman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bartaelterman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-23T14:07:28Z",
        "updated_at": "2014-12-23T14:07:28Z",
        "author_association": "MEMBER",
        "body": "@niconoe :+1: for those last three words! :metal:\n\nWe have more experience with reading from the Cartodb SQL API, but we're very happy with that so far. In the end we should also remember, if this tool is really going to be used, our backend will probably be replaced by something on GBIF's side because it makes much more sense to compute the metrics there. So let's keep our backend indeed to the bare minimum. Peter estimated the metric data to be small enough to fit in a free Cartodb table, so we're good to go. @peterdesmet can you create a table on cartodb where we can get access to?\n\nThe SQL API is documented [here](http://docs.cartodb.com/cartodb-platform/sql-api.html) and there is also a link to a [python client](https://github.com/vizzuality/cartodb-python) for the API. I haven't worked with it yet though and I'm not sure whether it can do much more than what [requests](http://docs.python-requests.org/en/latest/) does.\n\nConcerning the 75GB file. Well, if the python-dwca-reader can work with that, that would be... well... I'll just pop in the same icon: :metal: Can you give that a try @niconoe ?\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/67960591",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-67960591",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 67960591,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTYwNTkx",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-23T15:16:51Z",
        "updated_at": "2014-12-23T15:16:51Z",
        "author_association": "MEMBER",
        "body": "CartoDB SQL API is pretty awesome, I wish all APIs were like that. Python client might help. I created a table at: https://peterdesmet.cartodb.com/tables/gbif_dataset_metrics/table. The API key for writes is `4ef58d8caa05b8ee1b02a01929de1e035963eb78`. It doesn't have any structure yet, let me know what you need.\n\nJust created a full GBIF download: it's 82.7GB (compressed, not downloaded yet). Good luck with that. :goberserk: \n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68048954",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-68048954",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 68048954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDQ4OTU0",
        "user": {
            "login": "bartaelterman",
            "id": 2742677,
            "node_id": "MDQ6VXNlcjI3NDI2Nzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2742677?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bartaelterman",
            "html_url": "https://github.com/bartaelterman",
            "followers_url": "https://api.github.com/users/bartaelterman/followers",
            "following_url": "https://api.github.com/users/bartaelterman/following{/other_user}",
            "gists_url": "https://api.github.com/users/bartaelterman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bartaelterman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bartaelterman/subscriptions",
            "organizations_url": "https://api.github.com/users/bartaelterman/orgs",
            "repos_url": "https://api.github.com/users/bartaelterman/repos",
            "events_url": "https://api.github.com/users/bartaelterman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bartaelterman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-24T12:21:50Z",
        "updated_at": "2014-12-24T12:21:50Z",
        "author_association": "MEMBER",
        "body": "Downloaded 1GB of zipped GBIF data. Unzipped, there's 10GB of data in there, 6GB of occurrences and 4GB in a file called `verbatim.txt` (not sure what that is). So unzipping a 80GB file of occurrences could require 800GB of free space on your hard drive. I don't have that :-)\n\nSo if we're running against the limitations of our machines to process this, we'll need to come up with another solution.\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68264673",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/pull/5#issuecomment-68264673",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/5",
        "id": 68264673,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjY0Njcz",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-29T15:08:11Z",
        "updated_at": "2014-12-29T15:08:11Z",
        "author_association": "MEMBER",
        "body": "I have now moved to [C3](https://github.com/masayuki0812/c3) as a charting library. It is based on D3 and is better documented and has more functionality than chart.js. Compared to nvd3, it's much more coherent (e.g. changing chart type is just changing one property).\n\nThis pull request now includes a decent version of a downloads chart, with interaction disabled.\n\n![image](https://cloud.githubusercontent.com/assets/600993/5569659/cbe92c34-8f74-11e4-9b44-b64bb6e0652a.png)\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68347613",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/6#issuecomment-68347613",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/6",
        "id": 68347613,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzQ3NjEz",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-30T10:57:55Z",
        "updated_at": "2014-12-30T10:57:55Z",
        "author_association": "MEMBER",
        "body": "Done in 0d1328d59178ee18bc914b8edd99db2d3963252c, but I don't like the effect:\n1. It's nice that the chart is loaded before the data arrives\n2. But you need to load the chart with some dummy data (I opted for a single day)\n3. When loading data, this results in an unpleasant animation (see below): the chart shrinks from 1 to 30 points. It would be much better if the number of records on the x-axis didn't change.\n4. The interaction hoover doesn't select a single day, but a range up till the next day with data.\n\n![timeline](https://cloud.githubusercontent.com/assets/600993/5577856/b4b5c2ba-901a-11e4-9094-3de262070fe7.gif)\n\nI'll revisit the code and try to make sure we have all days on the x-axis.\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68348978",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/6#issuecomment-68348978",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/6",
        "id": 68348978,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzQ4OTc4",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-30T11:20:02Z",
        "updated_at": "2014-12-30T11:20:02Z",
        "author_association": "MEMBER",
        "body": "Preloading the x-axis with all the dates makes it better:\n1. The interaction only selects a single date\n2. The data loading is more smooth\n3. I need to set a max on the y-axis though.\n\n![timeline2](https://cloud.githubusercontent.com/assets/600993/5578002/164d0cba-901e-11e4-9c3d-5258dd2993a6.gif)\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68377378",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/6#issuecomment-68377378",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/6",
        "id": 68377378,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mzc3Mzc4",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-30T17:35:54Z",
        "updated_at": "2014-12-30T17:35:54Z",
        "author_association": "MEMBER",
        "body": "Finalized in 586c4d064655efeb214aa37429d2063538355fa4. No max necessary.\n\n![timeline-3](https://cloud.githubusercontent.com/assets/600993/5580950/a52cf678-9052-11e4-8863-71c071b7ace6.gif)\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68391399",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/8#issuecomment-68391399",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/8",
        "id": 68391399,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzkxMzk5",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-30T19:57:17Z",
        "updated_at": "2015-07-13T16:00:04Z",
        "author_association": "MEMBER",
        "body": "Regions are nice, but the bars are drawn left and right of the data points, and are thus not contained in the weekend region:\n\n![regions](https://cloud.githubusercontent.com/assets/600993/5582199/c7937882-9065-11e4-8cdc-bf958037736b.png)\n\nMaking those in 4 day weekends looks better, but still odd:\n\n![regions2](https://cloud.githubusercontent.com/assets/600993/5582211/092cfdfe-9066-11e4-8d0c-5befe30f173c.png)\n\nChanging to a `area-spline` chart works better for the regions, but a bar chart is more appropriate I think:\n\n![spline-region](https://cloud.githubusercontent.com/assets/600993/5582223/456249f0-9066-11e4-9d61-ecc0d4fcd957.png)\n\nSo... don't add weekends?\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68394184",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/10#issuecomment-68394184",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/10",
        "id": 68394184,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mzk0MTg0",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-30T20:22:21Z",
        "updated_at": "2014-12-30T20:22:21Z",
        "author_association": "MEMBER",
        "body": "E.g. this dataset has many, many downloads: http://www.gbif.org/dataset/50c9509d-22c7-4a22-a47d-8c48425ef4a7\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68689728",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/10#issuecomment-68689728",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/10",
        "id": 68689728,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4Njg5NzI4",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-05T10:19:03Z",
        "updated_at": "2015-01-05T10:30:39Z",
        "author_association": "MEMBER",
        "body": "Suggestion by Nico:\n\n``` JS\nvar downloads[]\nvar finished = false\n\nfunction store_results() {\n    // store in downloads[]\n   if at_last_date {\n       load_data_to_chart(downloads)\n       finished = true\n    }\n}\n\ndo\n    d3.json(store_results[])\nwhile(not finished)\n```\n\nTry to be as asynchronous as possible.\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68851848",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-68851848",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 68851848,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODUxODQ4",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-06T10:54:25Z",
        "updated_at": "2015-01-06T10:54:48Z",
        "author_association": "MEMBER",
        "body": "GBIF downloads are quite bloated. The occurrence file contains over 200 columns and most of the data is repeated in the `verbatim.txt` (which contains the data as provided by the provider). In addition, there is the rights statements, etc.\n\nThe [occurrence API](http://www.gbif.org/developer/occurrence) would give much cleaner and useful results, but is limited to 300 records per page and 1 million records total per query. Also, we need to verify that **all fields we want to use for our POC use cases are included**. If so, I would propose to reduce the scope for this POC to datasets with less than 1 million records and use the API to retrieve the data. For a user using the plugin, that seems like a reasonable (and easy detectable) limit.\n\nLooking at the data we downloaded on October 27, 2014 for the [GBIF data licenses](https://github.com/Datafable/gbif-data-licenses/blob/master/data/generated/datasets.csv), there are 13,802 datasets, 1,269 of which have 0 occurrences (9%) - probably all taxonomic checklists - and 60 with more than 1 million occurrences (4%). That means there are 12,473 datasets we could query, good for **145,000,000 occurrences**. If we do this dataset per dataset, at 300 records a page, we need to make **491.000 API calls**. Seems doable?\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68862200",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-68862200",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 68862200,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODYyMjAw",
        "user": {
            "login": "niconoe",
            "id": 386387,
            "node_id": "MDQ6VXNlcjM4NjM4Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/386387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/niconoe",
            "html_url": "https://github.com/niconoe",
            "followers_url": "https://api.github.com/users/niconoe/followers",
            "following_url": "https://api.github.com/users/niconoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/niconoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/niconoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/niconoe/subscriptions",
            "organizations_url": "https://api.github.com/users/niconoe/orgs",
            "repos_url": "https://api.github.com/users/niconoe/repos",
            "events_url": "https://api.github.com/users/niconoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/niconoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-06T13:01:39Z",
        "updated_at": "2015-01-06T13:01:39Z",
        "author_association": "MEMBER",
        "body": "Peter,\n\nI plan to investigate both solutions soon, and find a bit uncomfortable taking strong decision before more concrete testing (500,000 api calls are not trivial neither). I'm still confident that we'll be able to find a solution to process a substancial amount of records for the beginning of March. I'll let you know !\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68862519",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-68862519",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 68862519,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODYyNTE5",
        "user": {
            "login": "niconoe",
            "id": 386387,
            "node_id": "MDQ6VXNlcjM4NjM4Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/386387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/niconoe",
            "html_url": "https://github.com/niconoe",
            "followers_url": "https://api.github.com/users/niconoe/followers",
            "following_url": "https://api.github.com/users/niconoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/niconoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/niconoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/niconoe/subscriptions",
            "organizations_url": "https://api.github.com/users/niconoe/orgs",
            "repos_url": "https://api.github.com/users/niconoe/repos",
            "events_url": "https://api.github.com/users/niconoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/niconoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-06T13:05:07Z",
        "updated_at": "2015-01-06T13:05:07Z",
        "author_association": "MEMBER",
        "body": "Peter,\n\nSomething that may be think about early is the web services interface (between the backend and your JS code). Once we have confirmed the 5 use cases with Bart, could you start imagining how the exchanges would be for each (in terms of parameters and returned values). \n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/68993921",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/11#issuecomment-68993921",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/11",
        "id": 68993921,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTkzOTIx",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-07T08:52:37Z",
        "updated_at": "2015-01-07T08:52:37Z",
        "author_association": "MEMBER",
        "body": "Managed to write a very simple extension that injects some JS on a GBIF dataset page:\n\n![extension](https://cloud.githubusercontent.com/assets/600993/5642983/bd8afd68-9652-11e4-9c94-e330682adb1d.png)\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/69327026",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-69327026",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 69327026,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzI3MDI2",
        "user": {
            "login": "niconoe",
            "id": 386387,
            "node_id": "MDQ6VXNlcjM4NjM4Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/386387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/niconoe",
            "html_url": "https://github.com/niconoe",
            "followers_url": "https://api.github.com/users/niconoe/followers",
            "following_url": "https://api.github.com/users/niconoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/niconoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/niconoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/niconoe/subscriptions",
            "organizations_url": "https://api.github.com/users/niconoe/orgs",
            "repos_url": "https://api.github.com/users/niconoe/repos",
            "events_url": "https://api.github.com/users/niconoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/niconoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-09T12:13:05Z",
        "updated_at": "2015-01-09T12:13:05Z",
        "author_association": "MEMBER",
        "body": "Quick intermediate report on my progress:\n- I'm working with the downloads so far since it would be the best solution, if possible.\n- I've improved python-dwca-reader and can now comfortably open archives around 10Gb uncompressed archives.\n- Then uncompressed whole archive, after cutting out the verbatim records (keeping interpreted+metadata) is around 350Gb. I'm in the process in splitting it into multiple manageable 10Gb archives.\n- So far, those process are very slow (on my laptop with an USB external HDD...), but everything works.\n- I'm therefore confident that we'll be eventually able to parse the whole download on a rather standard machine. Each indexing will probably take a few days.\n\nHere is my proposal:\n- Go with the downloads to populate the backend (instead of API).\n- Do our developments with a subset of data (for example 10 manually selected datasets), so we can change/test things quickly during development.\n- In parallel, continue to improve the process to index the whole archive, so it's getting easier and faster over time.\n\nI continue investigating all of this and will keep you informed !\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/69391462",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/11#issuecomment-69391462",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/11",
        "id": 69391462,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzkxNDYy",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-09T20:10:23Z",
        "updated_at": "2015-01-09T20:10:23Z",
        "author_association": "MEMBER",
        "body": "All right! Let's make a Chrome extension! I now have enough basic knowledge to know how to inject our visualizations into the GBIF pages. Here's the download chart on the activity page:\n\n![vis fishes in inland waters in flanders belgium activity](https://cloud.githubusercontent.com/assets/600993/5686462/423da2b2-9843-11e4-85d3-4d526eb86751.png)\n\nSome remarks and conclusions:\n- I still need to clean up my code\n- I will discontinue the `viz` directory\n- For developments sake, it would probably be good to add an index.html to the extension, so I can test the visualizations there, without reloading the on GBIF all the time.\n- Figure out if I can get rid of jQuery... d3 should be capable of manipulating DOM objects, but the jQuery functions are so easy to use.\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/69412171",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/15#issuecomment-69412171",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/15",
        "id": 69412171,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDEyMTcx",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-09T22:38:13Z",
        "updated_at": "2015-01-09T22:38:13Z",
        "author_association": "MEMBER",
        "body": "Named it `demo.html` in 11eba8205a2fcb93cf5f236d0756b4b004286ccb\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/69473761",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/3#issuecomment-69473761",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/3",
        "id": 69473761,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDczNzYx",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-10T21:57:50Z",
        "updated_at": "2015-01-10T21:57:50Z",
        "author_association": "MEMBER",
        "body": "Completeness percentage for Darwin Core (groups of terms) can be combined with issues: e.g. only valid coordinates in decimalLat/Long (combined).\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/69507004",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/4#issuecomment-69507004",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/4",
        "id": 69507004,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTA3MDA0",
        "user": {
            "login": "bartaelterman",
            "id": 2742677,
            "node_id": "MDQ6VXNlcjI3NDI2Nzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2742677?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bartaelterman",
            "html_url": "https://github.com/bartaelterman",
            "followers_url": "https://api.github.com/users/bartaelterman/followers",
            "following_url": "https://api.github.com/users/bartaelterman/following{/other_user}",
            "gists_url": "https://api.github.com/users/bartaelterman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bartaelterman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bartaelterman/subscriptions",
            "organizations_url": "https://api.github.com/users/bartaelterman/orgs",
            "repos_url": "https://api.github.com/users/bartaelterman/repos",
            "events_url": "https://api.github.com/users/bartaelterman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bartaelterman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-11T19:21:37Z",
        "updated_at": "2015-01-11T19:21:37Z",
        "author_association": "MEMBER",
        "body": "Looks great Nico. I agree with your proposal. Anything I can help you with? Maybe I can start with the subset and write code to calculate the metrics while you chew further on the indexing?\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/70176390",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/20#issuecomment-70176390",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/20",
        "id": 70176390,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTc2Mzkw",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-15T22:40:07Z",
        "updated_at": "2015-01-19T14:58:09Z",
        "author_association": "MEMBER",
        "body": "For definitions of coordinate issues, see http://gbif.github.io/gbif-api/apidocs/org/gbif/api/vocabulary/OccurrenceIssue.html. Based on the download I have, this is how `hasGeospatialIssues` is interpreted:\n\n| Issue | hasGeospatialIssues |\n| --- | --- |\n| Zero coordinate | ? |\n| Coordinate out of range | true |\n| Coordinate invalid | **false** |\n| Coordinate rounded | false |\n| Geodetic datum invalid | false |\n| Geodetic datum assumed WGS84 | false |\n| Coordinate reprojected | false |\n| Coordinate reprojection failed | **false** |\n| Coordinate reprojection suspicious | ? |\n| Country coordinate mismatch | **true** |\n| Presumed swapped coordinate | ? |\n| Presumed negated longitude | false |\n| Presumed negated latitude | false |\n\nI find it odd that `coordinate invalid` is interpreted as `false` (see #22). Maybe even bad enough that we'd have to parse the issues ourselves. The advantage of doing so is that we can use the API or the download.\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/70177502",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/20#issuecomment-70177502",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/20",
        "id": 70177502,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTc3NTAy",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-15T22:47:55Z",
        "updated_at": "2015-01-15T22:58:07Z",
        "author_association": "MEMBER",
        "body": "After really digging into this issue, I'm wondering if the end result won't be exactly the same as `georeferenced records`... :dizzy_face: \n\nhttp://api.gbif.org/v1/occurrence/count?datasetKey=7f9eb622-c036-44c6-8be9-5793eaa1fa1e&isGeoreferenced=true\n\n`IS_GEOREFERENCED` has no definition though.\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/70177964",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/20#issuecomment-70177964",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/20",
        "id": 70177964,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTc3OTY0",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-15T22:51:17Z",
        "updated_at": "2015-01-15T22:51:17Z",
        "author_association": "MEMBER",
        "body": "Also, GBIF does correct negative/swapped ones and does transform geodetic datums it understands ([example](http://www.gbif.org/occurrence/783988549)). So what you're getting in decimalLatitude/Longitude is (mostly?) WGS84. Oddly, `hasCoordinateIssues` doesn't raise a flag when the reprojection failed.\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/70179809",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/20#issuecomment-70179809",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/20",
        "id": 70179809,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTc5ODA5",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-15T23:04:38Z",
        "updated_at": "2015-01-15T23:04:38Z",
        "author_association": "MEMBER",
        "body": "@bartaelterman @niconoe, please read this issue on GitHub... I've changed some previous comments. After a long search through all the fields, `IS_GEOREFERENCED` is maybe the easiest solution. The only disadvantage is that we don't know exactly what it is based on: to do that, we'd have to parse `decimalLatitude`, `decimalLongitude` and search for specific `issue`s. What do you think?\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/70223227",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/20#issuecomment-70223227",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/20",
        "id": 70223227,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjIzMjI3",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-16T08:39:29Z",
        "updated_at": "2015-01-16T08:39:29Z",
        "author_association": "MEMBER",
        "body": "Have thought about this a bit further, and I think our strength is in showing more than a `true/false` distinction. On a bar chart we could show:\n- Good coordinates\n- Coordinates with serious issues\n- Coordinates not provided\n\nThat way the user has an idea of what he is getting, and the publisher has an idea how well he's doing. We can do very similar overviews for other metrics (taxon, date, elevation), maybe even including precision. I'll create separate use cases.\n"
    },
    {
        "url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/comments/70239673",
        "html_url": "https://github.com/Datafable/gbif-dataset-metrics/issues/23#issuecomment-70239673",
        "issue_url": "https://api.github.com/repos/Datafable/gbif-dataset-metrics/issues/23",
        "id": 70239673,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjM5Njcz",
        "user": {
            "login": "peterdesmet",
            "id": 600993,
            "node_id": "MDQ6VXNlcjYwMDk5Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/600993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterdesmet",
            "html_url": "https://github.com/peterdesmet",
            "followers_url": "https://api.github.com/users/peterdesmet/followers",
            "following_url": "https://api.github.com/users/peterdesmet/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterdesmet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterdesmet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterdesmet/subscriptions",
            "organizations_url": "https://api.github.com/users/peterdesmet/orgs",
            "repos_url": "https://api.github.com/users/peterdesmet/repos",
            "events_url": "https://api.github.com/users/peterdesmet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterdesmet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-16T11:12:03Z",
        "updated_at": "2015-01-16T11:12:03Z",
        "author_association": "MEMBER",
        "body": "Discovered that:\n1. If there are no coordinates, GBIF does interpret verbatim coordinates. If it can interpret those, it populates `decimalLatitude` and `decimalLongitude` and applies `COORDINATE_ROUNDED` and `GEODETIC_DATUM_ASSUMED_WGS84`. [Example](http://www.gbif.org/occurrence/1019951505)\n2. When does coordinates cannot be interpreted, it might apply `COORDINATE_INVALID` and `COORDINATE_OUT_OF_RANGE` and leave the decimal coordinates empty. [Example](http://www.gbif.org/occurrence/476867963). That means we need to change the order in which things are interpreted. Will do that in the body of the issue\n"
    }
]