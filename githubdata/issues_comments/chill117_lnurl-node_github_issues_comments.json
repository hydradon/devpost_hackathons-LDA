[
    {
        "url": "https://api.github.com/repos/chill117/lnurl-node/issues/comments/547905423",
        "html_url": "https://github.com/chill117/lnurl-node/issues/1#issuecomment-547905423",
        "issue_url": "https://api.github.com/repos/chill117/lnurl-node/issues/1",
        "id": 547905423,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzkwNTQyMw==",
        "user": {
            "login": "fiatjaf",
            "id": 1653275,
            "node_id": "MDQ6VXNlcjE2NTMyNzU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1653275?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fiatjaf",
            "html_url": "https://github.com/fiatjaf",
            "followers_url": "https://api.github.com/users/fiatjaf/followers",
            "following_url": "https://api.github.com/users/fiatjaf/following{/other_user}",
            "gists_url": "https://api.github.com/users/fiatjaf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fiatjaf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fiatjaf/subscriptions",
            "organizations_url": "https://api.github.com/users/fiatjaf/orgs",
            "repos_url": "https://api.github.com/users/fiatjaf/repos",
            "events_url": "https://api.github.com/users/fiatjaf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fiatjaf/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-30T13:34:47Z",
        "updated_at": "2019-10-30T13:34:47Z",
        "author_association": "NONE",
        "body": "`lnurl-auth` is only one request, it doesn't have the first request to fetch params from the server then another request that provides the server with actionable data. Instead the lnurl itself already contains query string `tag=login&k1=random-32byte-hex`. Wallet will see that and call the URL directly with query string params `tag=login`, `k1=...`, `key` and `sig`.\r\n\r\nOn the server side, once you use the `tag=login` to route the request to the appropriate handler. Then you use `k1`, `key` and `sig` to verify the signature.\r\n\r\n```js\r\nconst secp256k1 = require(\"secp256k1\")\r\n\r\nlet signatureOk = secp256k1.verify(k1, secp256k1.signatureImport(sig), key)\r\nif (signatureOk) {\r\n  activeSessions[k1] = key\r\n}\r\n```\r\n\r\nThat example above supposes you have a super na\u00efve object with the current active sessions (could be session cookies or any other form of session) and then you're assigning a pubkey to one of them, meaning that that session is now identified with a public key.\r\n\r\nIn reality you would probably keep these sessions on Redis or somewhere else. And if the application requires it (commonly) then create a user in a database with the given public key.\r\n\r\n---\r\n\r\nAt https://etleneum.com/ I use the following approach:\r\n\r\n1. Once someone visits the site, they start listening to a Server-Sent Events (SSE) endpoint identified by a secret random string.\r\n2. At server-side, each secret is associated with a `k1`. That `k1` is used in the lnurl-auth QR code the user sees.\r\n3. If at anytime the user scans the lnurl-auth QR code, the server backend knows what `k1` corresponds to each secret and sends a message over the SSE connection to that specific secret saying: \"you're logged!!!!!!\" and stores the secret temporarily as a login token on Redis.\r\n4. Once user gets the logged message it stores the secret on `localStorage` so next time it visits the site once it starts listening to the SSE using that same secret the server already knows it is logged and sends \"you're logged already!!!!!!!!!!!!!! welcome back user <pubkey>!!!!!!!!!!!!!!!!!!!\".\r\n\r\nPlease note my code still has some stupid bugs there."
    },
    {
        "url": "https://api.github.com/repos/chill117/lnurl-node/issues/comments/548501074",
        "html_url": "https://github.com/chill117/lnurl-node/issues/1#issuecomment-548501074",
        "issue_url": "https://api.github.com/repos/chill117/lnurl-node/issues/1",
        "id": 548501074,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODUwMTA3NA==",
        "user": {
            "login": "chill117",
            "id": 1775417,
            "node_id": "MDQ6VXNlcjE3NzU0MTc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1775417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chill117",
            "html_url": "https://github.com/chill117",
            "followers_url": "https://api.github.com/users/chill117/followers",
            "following_url": "https://api.github.com/users/chill117/following{/other_user}",
            "gists_url": "https://api.github.com/users/chill117/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chill117/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chill117/subscriptions",
            "organizations_url": "https://api.github.com/users/chill117/orgs",
            "repos_url": "https://api.github.com/users/chill117/repos",
            "events_url": "https://api.github.com/users/chill117/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chill117/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-31T18:08:23Z",
        "updated_at": "2019-10-31T18:08:23Z",
        "author_association": "OWNER",
        "body": "Thank you for the additional information. What about logging out / de-authorizing a linkingKey?"
    },
    {
        "url": "https://api.github.com/repos/chill117/lnurl-node/issues/comments/551448885",
        "html_url": "https://github.com/chill117/lnurl-node/issues/1#issuecomment-551448885",
        "issue_url": "https://api.github.com/repos/chill117/lnurl-node/issues/1",
        "id": 551448885,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTQ0ODg4NQ==",
        "user": {
            "login": "chill117",
            "id": 1775417,
            "node_id": "MDQ6VXNlcjE3NzU0MTc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1775417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chill117",
            "html_url": "https://github.com/chill117",
            "followers_url": "https://api.github.com/users/chill117/followers",
            "following_url": "https://api.github.com/users/chill117/following{/other_user}",
            "gists_url": "https://api.github.com/users/chill117/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chill117/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chill117/subscriptions",
            "organizations_url": "https://api.github.com/users/chill117/orgs",
            "repos_url": "https://api.github.com/users/chill117/repos",
            "events_url": "https://api.github.com/users/chill117/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chill117/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-08T09:13:56Z",
        "updated_at": "2019-11-08T09:13:56Z",
        "author_association": "OWNER",
        "body": "I've implemented the lnurl-login flow in this module, but I don't see how it is useful with either the current CLI or API. For this subprotocol to be useful, a session should be persisted to some datastore (in the case of CLI) or the API should allow the developer to listen for new successful logins."
    },
    {
        "url": "https://api.github.com/repos/chill117/lnurl-node/issues/comments/551740080",
        "html_url": "https://github.com/chill117/lnurl-node/issues/1#issuecomment-551740080",
        "issue_url": "https://api.github.com/repos/chill117/lnurl-node/issues/1",
        "id": 551740080,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTc0MDA4MA==",
        "user": {
            "login": "fiatjaf",
            "id": 1653275,
            "node_id": "MDQ6VXNlcjE2NTMyNzU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1653275?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fiatjaf",
            "html_url": "https://github.com/fiatjaf",
            "followers_url": "https://api.github.com/users/fiatjaf/followers",
            "following_url": "https://api.github.com/users/fiatjaf/following{/other_user}",
            "gists_url": "https://api.github.com/users/fiatjaf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fiatjaf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fiatjaf/subscriptions",
            "organizations_url": "https://api.github.com/users/fiatjaf/orgs",
            "repos_url": "https://api.github.com/users/fiatjaf/repos",
            "events_url": "https://api.github.com/users/fiatjaf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fiatjaf/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-08T12:51:07Z",
        "updated_at": "2019-11-08T12:51:07Z",
        "author_association": "NONE",
        "body": "I didn't really look at how the module is organized, but it will be useful if some existing service could import it and use it to verify lnurl-login attempts (just verify the signature, in fact). That would be very useful for developers as no one understand signatures and public keys and so on in the webapp world."
    }
]