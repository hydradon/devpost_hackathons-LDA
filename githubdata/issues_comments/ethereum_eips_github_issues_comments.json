[
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/151411331",
        "html_url": "https://github.com/ethereum/EIPs/issues/5#issuecomment-151411331",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/5",
        "id": 151411331,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTQxMTMzMQ==",
        "user": {
            "login": "obscuren",
            "id": 6264126,
            "node_id": "MDQ6VXNlcjYyNjQxMjY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6264126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/obscuren",
            "html_url": "https://github.com/obscuren",
            "followers_url": "https://api.github.com/users/obscuren/followers",
            "following_url": "https://api.github.com/users/obscuren/following{/other_user}",
            "gists_url": "https://api.github.com/users/obscuren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/obscuren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/obscuren/subscriptions",
            "organizations_url": "https://api.github.com/users/obscuren/orgs",
            "repos_url": "https://api.github.com/users/obscuren/repos",
            "events_url": "https://api.github.com/users/obscuren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/obscuren/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-27T08:21:03Z",
        "updated_at": "2015-10-27T08:21:03Z",
        "author_association": "MEMBER",
        "body": "Will add them ASAP. I have a copy locally of most of the PoCs\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157041778",
        "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-157041778",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
        "id": 157041778,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzA0MTc3OA==",
        "user": {
            "login": "pipermerriam",
            "id": 824194,
            "node_id": "MDQ6VXNlcjgyNDE5NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pipermerriam",
            "html_url": "https://github.com/pipermerriam",
            "followers_url": "https://api.github.com/users/pipermerriam/followers",
            "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}",
            "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions",
            "organizations_url": "https://api.github.com/users/pipermerriam/orgs",
            "repos_url": "https://api.github.com/users/pipermerriam/repos",
            "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pipermerriam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-16T14:13:40Z",
        "updated_at": "2015-11-16T14:13:40Z",
        "author_association": "MEMBER",
        "body": "This would be quite useful from a contract/library author's perspective.  It currently requires some major _hoop jumping_ to get bytes from another contract.\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157371717",
        "html_url": "https://github.com/ethereum/EIPs/pull/12#issuecomment-157371717",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/12",
        "id": 157371717,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzM3MTcxNw==",
        "user": {
            "login": "wanderer",
            "id": 158211,
            "node_id": "MDQ6VXNlcjE1ODIxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/158211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanderer",
            "html_url": "https://github.com/wanderer",
            "followers_url": "https://api.github.com/users/wanderer/followers",
            "following_url": "https://api.github.com/users/wanderer/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanderer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanderer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanderer/subscriptions",
            "organizations_url": "https://api.github.com/users/wanderer/orgs",
            "repos_url": "https://api.github.com/users/wanderer/repos",
            "events_url": "https://api.github.com/users/wanderer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanderer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-17T13:33:58Z",
        "updated_at": "2015-11-17T13:33:58Z",
        "author_association": "MEMBER",
        "body": "thanks @ethers!\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157377754",
        "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-157377754",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
        "id": 157377754,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzM3Nzc1NA==",
        "user": {
            "login": "Nashatyrev",
            "id": 8173857,
            "node_id": "MDQ6VXNlcjgxNzM4NTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/8173857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nashatyrev",
            "html_url": "https://github.com/Nashatyrev",
            "followers_url": "https://api.github.com/users/Nashatyrev/followers",
            "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
            "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
            "repos_url": "https://api.github.com/users/Nashatyrev/repos",
            "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-17T14:03:13Z",
        "updated_at": "2015-11-17T14:03:13Z",
        "author_association": "MEMBER",
        "body": "Voting for this proposal. IMHO this will be a huge jump to multi-contract apps.\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157428113",
        "html_url": "https://github.com/ethereum/EIPs/issues/8#issuecomment-157428113",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/8",
        "id": 157428113,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzQyODExMw==",
        "user": {
            "login": "wanderer",
            "id": 158211,
            "node_id": "MDQ6VXNlcjE1ODIxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/158211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanderer",
            "html_url": "https://github.com/wanderer",
            "followers_url": "https://api.github.com/users/wanderer/followers",
            "following_url": "https://api.github.com/users/wanderer/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanderer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanderer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanderer/subscriptions",
            "organizations_url": "https://api.github.com/users/wanderer/orgs",
            "repos_url": "https://api.github.com/users/wanderer/repos",
            "events_url": "https://api.github.com/users/wanderer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanderer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-17T16:48:52Z",
        "updated_at": "2015-11-18T00:40:38Z",
        "author_association": "MEMBER",
        "body": "> applied depending on the size of the written memory area, not the reserved memory area.   \n\nSo would there be a max allocation size the the callee would specify? \n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157444309",
        "html_url": "https://github.com/ethereum/EIPs/pull/11#issuecomment-157444309",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/11",
        "id": 157444309,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzQ0NDMwOQ==",
        "user": {
            "login": "wanderer",
            "id": 158211,
            "node_id": "MDQ6VXNlcjE1ODIxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/158211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanderer",
            "html_url": "https://github.com/wanderer",
            "followers_url": "https://api.github.com/users/wanderer/followers",
            "following_url": "https://api.github.com/users/wanderer/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanderer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanderer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanderer/subscriptions",
            "organizations_url": "https://api.github.com/users/wanderer/orgs",
            "repos_url": "https://api.github.com/users/wanderer/repos",
            "events_url": "https://api.github.com/users/wanderer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanderer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-17T17:27:22Z",
        "updated_at": "2015-11-17T17:27:22Z",
        "author_association": "MEMBER",
        "body": "I'm going to hold off on this on for now. It would be nice if the forums got more use.\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157534381",
        "html_url": "https://github.com/ethereum/EIPs/pull/17#issuecomment-157534381",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/17",
        "id": 157534381,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzUzNDM4MQ==",
        "user": {
            "login": "wanderer",
            "id": 158211,
            "node_id": "MDQ6VXNlcjE1ODIxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/158211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanderer",
            "html_url": "https://github.com/wanderer",
            "followers_url": "https://api.github.com/users/wanderer/followers",
            "following_url": "https://api.github.com/users/wanderer/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanderer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanderer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanderer/subscriptions",
            "organizations_url": "https://api.github.com/users/wanderer/orgs",
            "repos_url": "https://api.github.com/users/wanderer/repos",
            "events_url": "https://api.github.com/users/wanderer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanderer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-17T22:45:57Z",
        "updated_at": "2015-11-17T22:45:57Z",
        "author_association": "MEMBER",
        "body": "needs to be cleaned up a bit. It still mentions Bitcoin. And Networking is already specified to track seperatly in EIP-1 \n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157537231",
        "html_url": "https://github.com/ethereum/EIPs/issues/16#issuecomment-157537231",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/16",
        "id": 157537231,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzUzNzIzMQ==",
        "user": {
            "login": "niran",
            "id": 106437,
            "node_id": "MDQ6VXNlcjEwNjQzNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/106437?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/niran",
            "html_url": "https://github.com/niran",
            "followers_url": "https://api.github.com/users/niran/followers",
            "following_url": "https://api.github.com/users/niran/following{/other_user}",
            "gists_url": "https://api.github.com/users/niran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/niran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/niran/subscriptions",
            "organizations_url": "https://api.github.com/users/niran/orgs",
            "repos_url": "https://api.github.com/users/niran/repos",
            "events_url": "https://api.github.com/users/niran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/niran/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-17T22:58:57Z",
        "updated_at": "2015-11-17T22:58:57Z",
        "author_association": "NONE",
        "body": "Is it correct to view the token work as an \"informational\" EIP? If issues outside of the core protocol were fine for BIPs, like HD wallets, I'd expect them to be fine for EIPs as well.\n\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-1.mediawiki#eip-types\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157539564",
        "html_url": "https://github.com/ethereum/EIPs/issues/16#issuecomment-157539564",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/16",
        "id": 157539564,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzUzOTU2NA==",
        "user": {
            "login": "wanderer",
            "id": 158211,
            "node_id": "MDQ6VXNlcjE1ODIxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/158211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanderer",
            "html_url": "https://github.com/wanderer",
            "followers_url": "https://api.github.com/users/wanderer/followers",
            "following_url": "https://api.github.com/users/wanderer/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanderer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanderer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanderer/subscriptions",
            "organizations_url": "https://api.github.com/users/wanderer/orgs",
            "repos_url": "https://api.github.com/users/wanderer/repos",
            "events_url": "https://api.github.com/users/wanderer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanderer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-17T23:09:54Z",
        "updated_at": "2015-11-17T23:09:54Z",
        "author_association": "MEMBER",
        "body": "@niran yeah that was the idea for \"informational\" EIP. \n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157898006",
        "html_url": "https://github.com/ethereum/EIPs/issues/16#issuecomment-157898006",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/16",
        "id": 157898006,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzg5ODAwNg==",
        "user": {
            "login": "ethers",
            "id": 6937903,
            "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6937903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethers",
            "html_url": "https://github.com/ethers",
            "followers_url": "https://api.github.com/users/ethers/followers",
            "following_url": "https://api.github.com/users/ethers/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
            "organizations_url": "https://api.github.com/users/ethers/orgs",
            "repos_url": "https://api.github.com/users/ethers/repos",
            "events_url": "https://api.github.com/users/ethers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-18T23:29:50Z",
        "updated_at": "2015-11-18T23:29:50Z",
        "author_association": "MEMBER",
        "body": "opportunity for someone to write the token proposal as the first informational EIP... (@frozeman ?)\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157899793",
        "html_url": "https://github.com/ethereum/EIPs/pull/17#issuecomment-157899793",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/17",
        "id": 157899793,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzg5OTc5Mw==",
        "user": {
            "login": "ethers",
            "id": 6937903,
            "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6937903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethers",
            "html_url": "https://github.com/ethers",
            "followers_url": "https://api.github.com/users/ethers/followers",
            "following_url": "https://api.github.com/users/ethers/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
            "organizations_url": "https://api.github.com/users/ethers/orgs",
            "repos_url": "https://api.github.com/users/ethers/repos",
            "events_url": "https://api.github.com/users/ethers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-18T23:40:23Z",
        "updated_at": "2015-11-18T23:40:23Z",
        "author_association": "MEMBER",
        "body": "thanks for the feedback.  Before this EIP, I did see EIP-1 did mention Networking separately.  But it didn't seem as clean as BIP123.  So it sounds like there's 2 approaches.  We either remove the \"Peer Services\" in this EIP, or remove Networking in EIP-1 and let this EIP manage it/Networking under \"Peer Services\".\nWhich would you prefer?\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157920585",
        "html_url": "https://github.com/ethereum/EIPs/issues/19#issuecomment-157920585",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/19",
        "id": 157920585,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzkyMDU4NQ==",
        "user": {
            "login": "ethers",
            "id": 6937903,
            "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6937903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethers",
            "html_url": "https://github.com/ethers",
            "followers_url": "https://api.github.com/users/ethers/followers",
            "following_url": "https://api.github.com/users/ethers/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
            "organizations_url": "https://api.github.com/users/ethers/orgs",
            "repos_url": "https://api.github.com/users/ethers/repos",
            "events_url": "https://api.github.com/users/ethers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T01:45:15Z",
        "updated_at": "2015-11-19T01:45:15Z",
        "author_association": "MEMBER",
        "body": "recent discussion from https://gist.github.com/frozeman/090ae32041bcfe120824\n\n@vbuterin said:\nYeah, createCheque and cashCheque as above, plus transferCheque(address _from, address _to, uint256 _value) sounds good. In that case, we should probably remove the _to argument from cashCheque; generally, you can only cash cheques from your own bank account.\n\nWe probably also want getChequeValue(address _from, address _for). We then have a choice of whether we want to keep the value argument in cashCheque rather than simply only allowing cashing in 100% of whatever is in there. If we want to fully follow the cheque analogy, this triad seems most intuitive to me:\n\nfunction createCheque(address _for, uint256 _maxValue)\nfunction cashCheque(address _from)\nfunction getChequeValue(address _from, address _for)\nQuestion: does running createCheque twice add the value of the two cheques together? Are there legitimate use cases for creating a cheque multiple times and then cashing either once or multiple times?\n\n@nmushegian said:\nAll the functions that return uint should return (uint, bool) instead. You can easily make up scenarios where a 0 return value is ambiguous and significant. Is there any other simpler pattern for handling this?\n\n@niran said:\nI think the value parameter is useful in cashCheque. It absolves callers from having to verify that the amount they needed was provided, and from having to refund amounts greater than what was needed. cashCheque would only succeed if the provided value was remaining in the cheque.\nAlso, I think using createCheque(2**100) for the approve use case is going to lead to less clear code. It gets better if you make the magic number a constant, like createCheque(UNLIMITED_CHEQUE_VALUE), but lots of people won't do that. I think it's worth having a createBlankCheque or something for the approve scenario. Most tokens will use the TokenLib to handle all of the cheque logic, so it doesn't really make things worse for token authors.\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/157998723",
        "html_url": "https://github.com/ethereum/EIPs/issues/16#issuecomment-157998723",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/16",
        "id": 157998723,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzk5ODcyMw==",
        "user": {
            "login": "frozeman",
            "id": 232662,
            "node_id": "MDQ6VXNlcjIzMjY2Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/232662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frozeman",
            "html_url": "https://github.com/frozeman",
            "followers_url": "https://api.github.com/users/frozeman/followers",
            "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
            "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
            "organizations_url": "https://api.github.com/users/frozeman/orgs",
            "repos_url": "https://api.github.com/users/frozeman/repos",
            "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frozeman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T09:23:51Z",
        "updated_at": "2015-11-19T09:24:24Z",
        "author_association": "MEMBER",
        "body": "@wanderer if you can make me collaborator of this repo i can edit the issues (ERCs), to give them a good form, we should also add labels, and add them to the issues\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158017280",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158017280",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158017280,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAxNzI4MA==",
        "user": {
            "login": "frozeman",
            "id": 232662,
            "node_id": "MDQ6VXNlcjIzMjY2Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/232662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frozeman",
            "html_url": "https://github.com/frozeman",
            "followers_url": "https://api.github.com/users/frozeman/followers",
            "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
            "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
            "organizations_url": "https://api.github.com/users/frozeman/orgs",
            "repos_url": "https://api.github.com/users/frozeman/repos",
            "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frozeman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T10:31:17Z",
        "updated_at": "2015-11-19T10:31:36Z",
        "author_association": "MEMBER",
        "body": "recent discussion from https://gist.github.com/frozeman/090ae32041bcfe120824\n\n@vbuterin said:\nYeah, `createCheque` and `cashCheque` as above, plus `transferCheque(address _from, address _to, uint256 _value)` sounds good. In that case, we should probably remove the `_to` argument from `cashCheque`; generally, you can only cash cheques from your own bank account.\n\nWe probably also want `getChequeValue(address _from, address _for)`. We then have a choice of whether we want to keep the value argument in `cashCheque` rather than simply only allowing cashing in 100% of whatever is in there. If we want to fully follow the cheque analogy, this triad seems most intuitive to me:\n\n``` js\nfunction createCheque(address _for, uint256 _maxValue)\nfunction cashCheque(address _from)\nfunction getChequeValue(address _from, address _for)\n```\n\nQuestion: does running createCheque twice add the value of the two cheques together? Are there legitimate use cases for creating a cheque multiple times and then cashing either once or multiple times?\n\n@nmushegian said:\nAll the functions that return uint should `return (uint, bool)` instead. You can easily make up scenarios where a 0 return value is ambiguous and significant. Is there any other simpler pattern for handling this?\n\n@niran said:\nI think the value parameter is useful in `cashCheque`. It absolves callers from having to verify that the amount they needed was provided, and from having to refund amounts greater than what was needed. cashCheque would only succeed if the provided value was remaining in the cheque.\nAlso, I think using `createCheque(2**100)` for the approve use case is going to lead to less clear code. It gets better if you make the magic number a constant, like `createCheque(UNLIMITED_CHEQUE_VALUE)`, but lots of people won't do that. I think it's worth having a createBlankCheque or something for the approve scenario. Most tokens will use the TokenLib to handle all of the cheque logic, so it doesn't really make things worse for token authors.\n\n@caktux \nI also think there is a problem with the terminology of cheques since they imply one-offs. Cheques are also unique, and here cheques wouldn't return unique IDs or anything; those are merely approval methods for transfers using internal bookkeeping. I think the current approve/transfer terminology is accurate and simple enough, instead of ending up with a mix of transfer and cashCheque. Would we change unapprove to `tearCheque`? There's also that ambiguity of cheques adding up, where approvals more clearly override a previous one.\n\nIn the use case described by Vitalik of contracts charging fees in subcurrencies, it could easily cost more to have to call approveOnce each time (if we replace the current approve method with it) than the actual fee in subcurrency. For that reason I think we should keep both `approve` and `approveOnce`, but we could add the `_maxValue` argument to the former, that way subscriptions or fees could be taken in multiple calls but only up to a certain amount. Another reason to keep the approval terminology, as I think it's much simpler to describe approve and approveOnce than some createMultiCheque and createCheque. Regarding `isApprovedFor`, it would have to return the approved amount if we do add `_maxValue`, just as `isApprovedOnceFor` does.\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158017920",
        "html_url": "https://github.com/ethereum/EIPs/issues/19#issuecomment-158017920",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/19",
        "id": 158017920,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAxNzkyMA==",
        "user": {
            "login": "simondlr",
            "id": 716965,
            "node_id": "MDQ6VXNlcjcxNjk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/716965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simondlr",
            "html_url": "https://github.com/simondlr",
            "followers_url": "https://api.github.com/users/simondlr/followers",
            "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
            "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
            "organizations_url": "https://api.github.com/users/simondlr/orgs",
            "repos_url": "https://api.github.com/users/simondlr/repos",
            "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simondlr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T10:34:45Z",
        "updated_at": "2015-11-19T10:34:45Z",
        "author_association": "NONE",
        "body": "Please continue discussion here instead: https://github.com/ethereum/EIPs/issues/20\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158019055",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158019055",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158019055,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAxOTA1NQ==",
        "user": {
            "login": "ethers",
            "id": 6937903,
            "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6937903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethers",
            "html_url": "https://github.com/ethers",
            "followers_url": "https://api.github.com/users/ethers/followers",
            "following_url": "https://api.github.com/users/ethers/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
            "organizations_url": "https://api.github.com/users/ethers/orgs",
            "repos_url": "https://api.github.com/users/ethers/repos",
            "events_url": "https://api.github.com/users/ethers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T10:40:54Z",
        "updated_at": "2015-11-19T10:40:54Z",
        "author_association": "MEMBER",
        "body": "`decimals()` doesn't seem needed.  The Token itself represents an indivisible unit.  A higher-level, like SubCurrency, should use Token, SubCurrency is where `decimals()` or other things like `symbol()` could be implemented.\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158019498",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158019498",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158019498,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAxOTQ5OA==",
        "user": {
            "login": "ethers",
            "id": 6937903,
            "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6937903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethers",
            "html_url": "https://github.com/ethers",
            "followers_url": "https://api.github.com/users/ethers/followers",
            "following_url": "https://api.github.com/users/ethers/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
            "organizations_url": "https://api.github.com/users/ethers/orgs",
            "repos_url": "https://api.github.com/users/ethers/repos",
            "events_url": "https://api.github.com/users/ethers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T10:43:19Z",
        "updated_at": "2015-11-19T10:43:19Z",
        "author_association": "MEMBER",
        "body": "In all method descriptions, let's also remove \"coin\", eg \"Get the total coin supply\" -> \"Get the total token supply\"\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158019756",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158019756",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158019756,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAxOTc1Ng==",
        "user": {
            "login": "frozeman",
            "id": 232662,
            "node_id": "MDQ6VXNlcjIzMjY2Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/232662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frozeman",
            "html_url": "https://github.com/frozeman",
            "followers_url": "https://api.github.com/users/frozeman/followers",
            "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
            "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
            "organizations_url": "https://api.github.com/users/frozeman/orgs",
            "repos_url": "https://api.github.com/users/frozeman/repos",
            "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frozeman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T10:44:43Z",
        "updated_at": "2015-11-19T10:46:26Z",
        "author_association": "MEMBER",
        "body": "I disagree, as the token is the currency or whatever and to represent it properly in any kind of dapp you need to know what is the proper way to represent that token. Ideally the user has to add only one contract address and the dapp can derive everything from there. Otherwise you make every dapp implement the low level token, plus some high level currency contract API. And not knowing the decimal points can be dangerous, otherwise one user sends 100.00 and another 100 (equals 1.00)\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158021707",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158021707",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158021707,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyMTcwNw==",
        "user": {
            "login": "simondlr",
            "id": 716965,
            "node_id": "MDQ6VXNlcjcxNjk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/716965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simondlr",
            "html_url": "https://github.com/simondlr",
            "followers_url": "https://api.github.com/users/simondlr/followers",
            "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
            "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
            "organizations_url": "https://api.github.com/users/simondlr/orgs",
            "repos_url": "https://api.github.com/users/simondlr/repos",
            "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simondlr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T10:53:20Z",
        "updated_at": "2015-11-19T10:55:10Z",
        "author_association": "NONE",
        "body": "I'm neither here not there about the terminology. I think \"approve\" OR \"cheque\" terminology is good enough.\n\nAt the end of the day, it seems we need both blanket approvals & once-offs. Or rather, it seems it would be useful to specify 3 things: 1) Total value that can be withdrawn, 2) How many times they can do that, & 3) How much at a time.\n\nSpitballing another option:\n\nJust one method, called approve (or setCustodian) that takes 2 parameters. How many times they are allowed to withdraw & how much each time?\n\napprove(address _for, uint256 _withdraws, uint256 _max)\n\n?\n\n@frozeman Regarding names & other information. I agree with @ethers here. There will be tokens minted that don't have any requirement for names, symbols or decimals. Like prediction market outcomes or energy meter kwh tokens for example. This should not be at the token layer. All tokens are not automatically a sub-currency or coin (that uses additional information).\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158021858",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158021858",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158021858,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyMTg1OA==",
        "user": {
            "login": "ethers",
            "id": 6937903,
            "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6937903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethers",
            "html_url": "https://github.com/ethers",
            "followers_url": "https://api.github.com/users/ethers/followers",
            "following_url": "https://api.github.com/users/ethers/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
            "organizations_url": "https://api.github.com/users/ethers/orgs",
            "repos_url": "https://api.github.com/users/ethers/repos",
            "events_url": "https://api.github.com/users/ethers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T10:54:09Z",
        "updated_at": "2015-11-19T10:54:09Z",
        "author_association": "MEMBER",
        "body": "@frozeman @alexvandesande  I think another EIP is needed for \"TF Registries\" https://github.com/ethereum/wiki/wiki/Standardized_Contract_APIs#tf-registries\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158022615",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158022615",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158022615,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyMjYxNQ==",
        "user": {
            "login": "frozeman",
            "id": 232662,
            "node_id": "MDQ6VXNlcjIzMjY2Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/232662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frozeman",
            "html_url": "https://github.com/frozeman",
            "followers_url": "https://api.github.com/users/frozeman/followers",
            "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
            "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
            "organizations_url": "https://api.github.com/users/frozeman/orgs",
            "repos_url": "https://api.github.com/users/frozeman/repos",
            "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frozeman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T10:57:29Z",
        "updated_at": "2015-11-19T10:57:29Z",
        "author_association": "MEMBER",
        "body": "Created it here https://github.com/ethereum/EIPs/issues/22\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158023372",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158023372",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158023372,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyMzM3Mg==",
        "user": {
            "login": "frozeman",
            "id": 232662,
            "node_id": "MDQ6VXNlcjIzMjY2Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/232662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frozeman",
            "html_url": "https://github.com/frozeman",
            "followers_url": "https://api.github.com/users/frozeman/followers",
            "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
            "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
            "organizations_url": "https://api.github.com/users/frozeman/orgs",
            "repos_url": "https://api.github.com/users/frozeman/repos",
            "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frozeman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T11:01:03Z",
        "updated_at": "2015-11-19T11:01:03Z",
        "author_association": "MEMBER",
        "body": "@simondlr @ethers i think divisibility belongs to the token contract, as even non currency token can need that. Im fine with putting the name and symbol in the registry tho.\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158023502",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158023502",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158023502,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyMzUwMg==",
        "user": {
            "login": "ethers",
            "id": 6937903,
            "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6937903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethers",
            "html_url": "https://github.com/ethers",
            "followers_url": "https://api.github.com/users/ethers/followers",
            "following_url": "https://api.github.com/users/ethers/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
            "organizations_url": "https://api.github.com/users/ethers/orgs",
            "repos_url": "https://api.github.com/users/ethers/repos",
            "events_url": "https://api.github.com/users/ethers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T11:01:50Z",
        "updated_at": "2015-11-19T11:33:46Z",
        "author_association": "MEMBER",
        "body": "`approve(address _address, uint256 _withdraws, uint256 _max)` seems quite clean (suggested by @simondlr).\nMay tweak it as `approve(address _address, uint256 _withdrawals, uint256 _maxValue)`\n\n(`isApprovedFor` then checks if there's at least 1 withdrawal approved for the amount)\n\nEDIT:  add address\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158024845",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158024845",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158024845,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyNDg0NQ==",
        "user": {
            "login": "frozeman",
            "id": 232662,
            "node_id": "MDQ6VXNlcjIzMjY2Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/232662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frozeman",
            "html_url": "https://github.com/frozeman",
            "followers_url": "https://api.github.com/users/frozeman/followers",
            "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
            "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
            "organizations_url": "https://api.github.com/users/frozeman/orgs",
            "repos_url": "https://api.github.com/users/frozeman/repos",
            "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frozeman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T11:08:25Z",
        "updated_at": "2015-11-19T11:08:25Z",
        "author_association": "MEMBER",
        "body": "You mean `function approve(address _address, uint256 _withdraws, uint256 _max)`\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158025123",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158025123",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158025123,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyNTEyMw==",
        "user": {
            "login": "simondlr",
            "id": 716965,
            "node_id": "MDQ6VXNlcjcxNjk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/716965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simondlr",
            "html_url": "https://github.com/simondlr",
            "followers_url": "https://api.github.com/users/simondlr/followers",
            "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
            "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
            "organizations_url": "https://api.github.com/users/simondlr/orgs",
            "repos_url": "https://api.github.com/users/simondlr/repos",
            "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simondlr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T11:10:06Z",
        "updated_at": "2015-11-19T11:10:32Z",
        "author_association": "NONE",
        "body": "@frozeman wrt decimals. Neither really here nor there about it. You can have multiple thresholds as is the case with Ether. The base token is still wei at the end of the day. You can't have decimal wei. You can write the wei in Ether, Finney, Shannon, etc. Each with their own decimal position. Should multiple thresholds be specified? Or only one? If so, is the token name specified to the base unit, or where the decimal point starts? ie Ether or Wei? It's a naming/usability convention, not a specification on how the token actually works.\n\nPersonally, for most new tokens that will be created, it doesn't really make sense to have them anymore. I do however see scenarios where it can be used. Thus, I'm neutral on this point. Don't mind. Perhaps it should be optional.\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158025858",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158025858",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158025858,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAyNTg1OA==",
        "user": {
            "login": "frozeman",
            "id": 232662,
            "node_id": "MDQ6VXNlcjIzMjY2Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/232662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frozeman",
            "html_url": "https://github.com/frozeman",
            "followers_url": "https://api.github.com/users/frozeman/followers",
            "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
            "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
            "organizations_url": "https://api.github.com/users/frozeman/orgs",
            "repos_url": "https://api.github.com/users/frozeman/repos",
            "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frozeman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T11:14:15Z",
        "updated_at": "2015-11-19T11:14:15Z",
        "author_association": "MEMBER",
        "body": "I should be optional sure, but for tokens which will be used in the wallet or user facing stuff, its quite necessary, except you don't want them to be divisible.\n\nConcerning multiple steps, i think only one basic step is necessary from there on you can go in `/100`steps as usual, thats not hard to guess.\n\nBut it surely makes a difference if a user accidentally sends 10000 vs 100.00 token units ;)\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158032848",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158032848",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158032848,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODAzMjg0OA==",
        "user": {
            "login": "ethers",
            "id": 6937903,
            "node_id": "MDQ6VXNlcjY5Mzc5MDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6937903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethers",
            "html_url": "https://github.com/ethers",
            "followers_url": "https://api.github.com/users/ethers/followers",
            "following_url": "https://api.github.com/users/ethers/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethers/subscriptions",
            "organizations_url": "https://api.github.com/users/ethers/orgs",
            "repos_url": "https://api.github.com/users/ethers/repos",
            "events_url": "https://api.github.com/users/ethers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T11:47:12Z",
        "updated_at": "2015-11-19T11:47:12Z",
        "author_association": "MEMBER",
        "body": "No one wants many informational EIPs, but from a design perspective is it better to consider EIPs as composable and keep them modular and lean?\n\nFor example, an informational EIP for Wallet Tokens could be composed of EIP20, EIP22, EIPX?\n\nLet's not forget https://gist.github.com/frozeman/090ae32041bcfe120824#gistcomment-1623513\nAs there's also been some discussion about the approve functionality, maybe approve APIs should also be its own EIP?\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158042629",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158042629",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158042629,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODA0MjYyOQ==",
        "user": {
            "login": "frozeman",
            "id": 232662,
            "node_id": "MDQ6VXNlcjIzMjY2Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/232662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frozeman",
            "html_url": "https://github.com/frozeman",
            "followers_url": "https://api.github.com/users/frozeman/followers",
            "following_url": "https://api.github.com/users/frozeman/following{/other_user}",
            "gists_url": "https://api.github.com/users/frozeman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frozeman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frozeman/subscriptions",
            "organizations_url": "https://api.github.com/users/frozeman/orgs",
            "repos_url": "https://api.github.com/users/frozeman/repos",
            "events_url": "https://api.github.com/users/frozeman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frozeman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T12:21:31Z",
        "updated_at": "2015-11-19T12:21:31Z",
        "author_association": "MEMBER",
        "body": "I think its best, when somebody makes a change proposal he list nicely formatted exactly what he would change. In the same as above in the first comment, then these changes are easier to understand, and later move into the actual proposal. Simply:\n\n```\nfunction myFunc(address _address, ...) returns (bool)\n```\n\netc.\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158043214",
        "html_url": "https://github.com/ethereum/EIPs/issues/20#issuecomment-158043214",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/20",
        "id": 158043214,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODA0MzIxNA==",
        "user": {
            "login": "simondlr",
            "id": 716965,
            "node_id": "MDQ6VXNlcjcxNjk2NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/716965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simondlr",
            "html_url": "https://github.com/simondlr",
            "followers_url": "https://api.github.com/users/simondlr/followers",
            "following_url": "https://api.github.com/users/simondlr/following{/other_user}",
            "gists_url": "https://api.github.com/users/simondlr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simondlr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simondlr/subscriptions",
            "organizations_url": "https://api.github.com/users/simondlr/orgs",
            "repos_url": "https://api.github.com/users/simondlr/repos",
            "events_url": "https://api.github.com/users/simondlr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simondlr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T12:24:52Z",
        "updated_at": "2015-11-19T12:24:52Z",
        "author_association": "NONE",
        "body": "Agreed @frozeman. wrt to this method.\n\n```\nfunction approve(address _address, uint256 _withdraws, uint256 _max) returns (bool success)\n```\n\nIt's still slightly clunky as opposed to true or false (as you mentioned previously @niran). ie having to specify 2**100. We could add a helper function that replicates this internally? ie\n\n```\nfunction approveAll(address _address) returns (bool success)\n```\n\nit internally calls `approve(_address, 2**100, 2**100)`\n\nAny other comments from others on this method?\n"
    },
    {
        "url": "https://api.github.com/repos/ethereum/EIPs/issues/comments/158060021",
        "html_url": "https://github.com/ethereum/EIPs/issues/16#issuecomment-158060021",
        "issue_url": "https://api.github.com/repos/ethereum/EIPs/issues/16",
        "id": 158060021,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODA2MDAyMQ==",
        "user": {
            "login": "wanderer",
            "id": 158211,
            "node_id": "MDQ6VXNlcjE1ODIxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/158211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanderer",
            "html_url": "https://github.com/wanderer",
            "followers_url": "https://api.github.com/users/wanderer/followers",
            "following_url": "https://api.github.com/users/wanderer/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanderer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanderer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanderer/subscriptions",
            "organizations_url": "https://api.github.com/users/wanderer/orgs",
            "repos_url": "https://api.github.com/users/wanderer/repos",
            "events_url": "https://api.github.com/users/wanderer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanderer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-19T13:43:56Z",
        "updated_at": "2015-11-19T15:15:09Z",
        "author_association": "MEMBER",
        "body": "@ethers @frozeman I think with [EIP-3](https://github.com/ethers/EIPs/blob/master/EIPS/eip-3.mediawiki) we don't need to have RFC's ESD. The process for Informational EIPs would be 1) submit an EIP 2) If it gets adopted by a Majority then change the EIPs status to \"Accepted\" which would be the equivalent to becoming an ESD\n"
    }
]