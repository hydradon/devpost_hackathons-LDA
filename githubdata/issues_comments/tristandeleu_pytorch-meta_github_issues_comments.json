[
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/533718362",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/3#issuecomment-533718362",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/3",
        "id": 533718362,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzcxODM2Mg==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-20T21:42:24Z",
        "updated_at": "2019-09-20T21:42:24Z",
        "author_association": "OWNER",
        "body": "Thank you very much for the kind words!\r\n\r\n1. The default processing for Mini-ImageNet in `helpers` is based on how the [dataset was processed in (Ravi et al., 2017)](https://github.com/twitter/meta-learning-lstm/blob/master/dataset/miniImagenet.lua), where the images are only scaled to 84x84. That's why there is no RandomCrop, nor Normalize, to keep it as close as possible to the original dataset. However, if normalization and/or random crops are used more often in more recent papers, I'd be happy to change these defaults accordingly! Nonetheless, you can specify your own transform if you want to change the preprocessing, even in the helper function (just use the `transform=Compose([...])` argument).\r\n2. I haven't faced this issue while using the dataloaders on GPU, but I will investigate that! This looks like it might be a memory leak?"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/533759927",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/3#issuecomment-533759927",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/3",
        "id": 533759927,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzc1OTkyNw==",
        "user": {
            "login": "CSer-Tang-hao",
            "id": 35449729,
            "node_id": "MDQ6VXNlcjM1NDQ5NzI5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/35449729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CSer-Tang-hao",
            "html_url": "https://github.com/CSer-Tang-hao",
            "followers_url": "https://api.github.com/users/CSer-Tang-hao/followers",
            "following_url": "https://api.github.com/users/CSer-Tang-hao/following{/other_user}",
            "gists_url": "https://api.github.com/users/CSer-Tang-hao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CSer-Tang-hao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CSer-Tang-hao/subscriptions",
            "organizations_url": "https://api.github.com/users/CSer-Tang-hao/orgs",
            "repos_url": "https://api.github.com/users/CSer-Tang-hao/repos",
            "events_url": "https://api.github.com/users/CSer-Tang-hao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CSer-Tang-hao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-21T02:18:51Z",
        "updated_at": "2019-09-21T02:18:51Z",
        "author_association": "NONE",
        "body": "I a newbie, maybe is my code using pytorchmeta non-standard? Could you please use miniimagenet to test the GPU memory usage on protonet which is in your example? I wonder if it is a bug of my own code? thank you!"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/533769234",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/3#issuecomment-533769234",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/3",
        "id": 533769234,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzc2OTIzNA==",
        "user": {
            "login": "CSer-Tang-hao",
            "id": 35449729,
            "node_id": "MDQ6VXNlcjM1NDQ5NzI5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/35449729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CSer-Tang-hao",
            "html_url": "https://github.com/CSer-Tang-hao",
            "followers_url": "https://api.github.com/users/CSer-Tang-hao/followers",
            "following_url": "https://api.github.com/users/CSer-Tang-hao/following{/other_user}",
            "gists_url": "https://api.github.com/users/CSer-Tang-hao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CSer-Tang-hao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CSer-Tang-hao/subscriptions",
            "organizations_url": "https://api.github.com/users/CSer-Tang-hao/orgs",
            "repos_url": "https://api.github.com/users/CSer-Tang-hao/repos",
            "events_url": "https://api.github.com/users/CSer-Tang-hao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CSer-Tang-hao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-21T05:20:56Z",
        "updated_at": "2019-09-21T05:20:56Z",
        "author_association": "NONE",
        "body": " I can't see the length of BatchMetaDataLoder, I guess that the arg.num_batches in the example is equal to the num of episode which one episode contains \"batchsize\" tasks(K-way N-shot) , is right?  I also want to know : whether the one iteration  of BatchMetaDataLoder is random?  If so, can it traverse the entire train_dataset?"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/533788747",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/3#issuecomment-533788747",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/3",
        "id": 533788747,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzc4ODc0Nw==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-21T10:59:53Z",
        "updated_at": "2019-09-21T10:59:53Z",
        "author_association": "OWNER",
        "body": "I was indeed able to reproduce the memory issue. This is very likely due to the size of the tensors being stored in memory (`(16, 25, 3, 84, 84)` & `(16, 75, 3, 84, 84)`, if this is 5-way 5-shot with 15 test images). Here are a couple of solutions:\r\n - Reduce the batch size. If I'm using `batch_size=8` instead of 16 it fits into my GPU (with 12G of memory).\r\n - Reduce the amount of test images. The `test_shots=15` is used for Omniglot, but not necessarily for Mini-Imagenet. If I use `test_shots=None` (ie. same amount as `shots`), then it also fits in memory.\r\n - Be sure to also update the model to make sure that it outputs embeddings with the correct embedding size. I updated it with a simple mean pooling over the final representations, but having additional convolutions might be better. If you don't do that, the embedding will have size 1600 instead of 64.\r\n\r\nHere is the diff for my test on Prototypical Networks:\r\n```diff\r\ndiff --git a/examples/protonet/model.py b/examples/protonet/model.py\r\nindex 8d64a83..a4ce1e6 100644\r\n--- a/examples/protonet/model.py\r\n+++ b/examples/protonet/model.py\r\n@@ -24,4 +24,5 @@ class PrototypicalNetwork(nn.Module):\r\n\r\n     def forward(self, inputs):\r\n         embeddings = self.encoder(inputs.view(-1, *inputs.shape[2:]))\r\n+        embeddings = embeddings.mean([2, 3])\r\n         return embeddings.view(*inputs.shape[:2], -1)\r\ndiff --git a/examples/protonet/train.py b/examples/protonet/train.py\r\nindex 1f89913..8cc7cd3 100644\r\n--- a/examples/protonet/train.py\r\n+++ b/examples/protonet/train.py\r\n@@ -2,19 +2,20 @@ import os\r\n import torch\r\n from tqdm import tqdm\r\n\r\n-from torchmeta.datasets.helpers import omniglot\r\n+from torchmeta.datasets.helpers import omniglot, miniimagenet\r\n from torchmeta.utils.data import BatchMetaDataLoader\r\n\r\n from model import PrototypicalNetwork\r\n from utils import get_prototypes, prototypical_loss, get_accuracy\r\n\r\n def train(args):\r\n-    dataset = omniglot(args.folder, shots=args.num_shots, ways=args.num_ways,\r\n-        shuffle=True, test_shots=15, meta_train=True, download=args.download)\r\n+    dataset = miniimagenet(args.folder, shots=args.num_shots, ways=args.num_ways,\r\n+                           shuffle=True, test_shots=None, meta_train=True,\r\n+                           download=args.download)\r\n     dataloader = BatchMetaDataLoader(dataset, batch_size=args.batch_size,\r\n         shuffle=True, num_workers=args.num_workers)\r\n\r\n-    model = PrototypicalNetwork(1, args.embedding_size,\r\n+    model = PrototypicalNetwork(3, args.embedding_size,\r\n         hidden_size=args.hidden_size)\r\n     model.to(device=args.device)\r\n     model.train()\r\n```\r\n\r\nRegarding your second question you are right: in the protonet example, `num_batches` corresponds to the number of episodes and each episode contains `batch_size` tasks. The iterations of `BatchMetaDataLoader` are not random by default, but you can use the argument `shuffle=True` to get random batches. It _could_ traverse the entire dataset, but since the size of the dataset is combinatorial (all possible tuples of classes), then it would be very impractical. One workaround is to stop iterating over `BatchMetaDataLoader` after a certain number of batches (as in the protonet example)."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/533951871",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/3#issuecomment-533951871",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/3",
        "id": 533951871,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzk1MTg3MQ==",
        "user": {
            "login": "CSer-Tang-hao",
            "id": 35449729,
            "node_id": "MDQ6VXNlcjM1NDQ5NzI5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/35449729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CSer-Tang-hao",
            "html_url": "https://github.com/CSer-Tang-hao",
            "followers_url": "https://api.github.com/users/CSer-Tang-hao/followers",
            "following_url": "https://api.github.com/users/CSer-Tang-hao/following{/other_user}",
            "gists_url": "https://api.github.com/users/CSer-Tang-hao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CSer-Tang-hao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CSer-Tang-hao/subscriptions",
            "organizations_url": "https://api.github.com/users/CSer-Tang-hao/orgs",
            "repos_url": "https://api.github.com/users/CSer-Tang-hao/repos",
            "events_url": "https://api.github.com/users/CSer-Tang-hao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CSer-Tang-hao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-23T03:47:22Z",
        "updated_at": "2019-09-23T03:47:22Z",
        "author_association": "NONE",
        "body": "I have to admit that I really appreciate this project, i think if you want to enable seamless and consistent evaluation of meta-learning algorithms ,  you should verify availability of  Torchmeta. You should show the results or examples of different algorithms to us to make a fair comparison. I test Torchmeta on miniImagenet use your provided  protonet example, the obtained results are much higher than value provided in the origial paper, so I was amazed. I will continue to care about this project, we are looking forward to your comprehensive experimental verification!"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/534561582",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/3#issuecomment-534561582",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/3",
        "id": 534561582,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDU2MTU4Mg==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-24T13:36:55Z",
        "updated_at": "2019-09-24T13:36:55Z",
        "author_association": "OWNER",
        "body": "Thank you! Having the results for the examples in the repo would be great, I will definitely try to have them available."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/538114189",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/4#issuecomment-538114189",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/4",
        "id": 538114189,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzODExNDE4OQ==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-03T20:26:52Z",
        "updated_at": "2019-10-03T20:26:52Z",
        "author_association": "OWNER",
        "body": "I think that's very reasonable, I'm all for it, to avoid any confusion. The reason behind this default value was that [PyTorch's DataLoader](https://github.com/pytorch/pytorch/blob/082f195ac9ec7e2ee9b1d25329b357cb2cedd6f3/torch/utils/data/dataloader.py#L75-L76) has a default value of `shuffle=False`. However while this might not be too much of a issue in standard learning, this definitely is in meta-learning (and especially the way the tasks are created). I will update the default value, thanks!"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/538179999",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/5#issuecomment-538179999",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/5",
        "id": 538179999,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzODE3OTk5OQ==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-04T00:28:22Z",
        "updated_at": "2019-10-04T00:28:22Z",
        "author_association": "OWNER",
        "body": "That's quite a significant slowdown! I have not experienced it myself, but it is possible that something is suboptimal at the moment. Any help for profiling the bottleneck is more than welcome, thanks! Can you share your baseline implementation for reference?"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/540228105",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/pull/6#issuecomment-540228105",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/6",
        "id": 540228105,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDIyODEwNQ==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-09T22:17:09Z",
        "updated_at": "2019-10-09T22:17:09Z",
        "author_association": "OWNER",
        "body": "Thank you very much! I have really been behind in getting better error messages."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/543859760",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/7#issuecomment-543859760",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/7",
        "id": 543859760,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg1OTc2MA==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-18T17:51:30Z",
        "updated_at": "2019-10-18T17:51:30Z",
        "author_association": "OWNER",
        "body": "It is conservative in the sense that `MetaModule` implementations are based on the implementations of `nn.Module` in PyTorch 1.2. I haven't checked how this changes in 1.3, but chances are it would still work in PyTorch 1.3. I will update that as soon as possible.\r\n\r\nPyTorch 1.3 also introduces new features for dataloaders which might be of interest for Torchmeta, so a more general update is to be expected as well to make full use of the latest features."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/544267143",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/8#issuecomment-544267143",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/8",
        "id": 544267143,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDI2NzE0Mw==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-20T16:18:47Z",
        "updated_at": "2019-10-20T16:18:47Z",
        "author_association": "OWNER",
        "body": "I am not sure, but I think Colab has PIL installed by default, whereas Torchmeta (as well as Torchvision) uses Pillow, so that creates some kind of conflict. If you are installing Torchmeta with `!pip install torchmeta` it should ask you to restart the runtime to use Pillow instead. If you restart the runtime, it should work."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/548421885",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/10#issuecomment-548421885",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/10",
        "id": 548421885,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODQyMTg4NQ==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-31T15:09:36Z",
        "updated_at": "2019-10-31T15:09:36Z",
        "author_association": "OWNER",
        "body": "Hi Pau! I would love to add CUB, but I haven't been able to find a standard split for meta-train/meta-test classes. From what I have seen in papers using CUB, a random split is generally used for meta-train/meta-test, which might be an issue for reproducibility. The closest I can find from a fixed split is the way @wyharveychen created the split [here](https://github.com/wyharveychen/CloserLookFewShot/blob/master/filelists/CUB/write_CUB_filelist.py).\r\n\r\nIf we can all agree on this meta-train/meta-validation/meta-test split as being standard, then I'd be very happy to add CUB! I'm pinging @nhilliard & @wyharveychen for discussion."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/548422836",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/9#issuecomment-548422836",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/9",
        "id": 548422836,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODQyMjgzNg==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-31T15:11:29Z",
        "updated_at": "2019-10-31T15:11:29Z",
        "author_association": "OWNER",
        "body": "No reason in particular, I wrote helpers for datasets that I have seen being used the most often in papers, but I'm completely open to add more helpers!"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/548428220",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/10#issuecomment-548428220",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/10",
        "id": 548428220,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODQyODIyMA==",
        "user": {
            "login": "prlz77",
            "id": 1070504,
            "node_id": "MDQ6VXNlcjEwNzA1MDQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1070504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prlz77",
            "html_url": "https://github.com/prlz77",
            "followers_url": "https://api.github.com/users/prlz77/followers",
            "following_url": "https://api.github.com/users/prlz77/following{/other_user}",
            "gists_url": "https://api.github.com/users/prlz77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prlz77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prlz77/subscriptions",
            "organizations_url": "https://api.github.com/users/prlz77/orgs",
            "repos_url": "https://api.github.com/users/prlz77/repos",
            "events_url": "https://api.github.com/users/prlz77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prlz77/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-31T15:23:01Z",
        "updated_at": "2019-10-31T15:23:01Z",
        "author_association": "NONE",
        "body": "Thanks! I am currently using the split you are pointing to. But I agree it is a very recent dataset in the few-shot literature.\r\n"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/548556494",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/pull/11#issuecomment-548556494",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/11",
        "id": 548556494,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODU1NjQ5NA==",
        "user": {
            "login": "gdahia",
            "id": 13017652,
            "node_id": "MDQ6VXNlcjEzMDE3NjUy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13017652?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gdahia",
            "html_url": "https://github.com/gdahia",
            "followers_url": "https://api.github.com/users/gdahia/followers",
            "following_url": "https://api.github.com/users/gdahia/following{/other_user}",
            "gists_url": "https://api.github.com/users/gdahia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gdahia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gdahia/subscriptions",
            "organizations_url": "https://api.github.com/users/gdahia/orgs",
            "repos_url": "https://api.github.com/users/gdahia/repos",
            "events_url": "https://api.github.com/users/gdahia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gdahia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-31T20:31:54Z",
        "updated_at": "2019-10-31T20:31:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks. i have done the modifications you suggested. :smile: "
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/552297631",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/10#issuecomment-552297631",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/10",
        "id": 552297631,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjI5NzYzMQ==",
        "user": {
            "login": "vmichals",
            "id": 1757177,
            "node_id": "MDQ6VXNlcjE3NTcxNzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1757177?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vmichals",
            "html_url": "https://github.com/vmichals",
            "followers_url": "https://api.github.com/users/vmichals/followers",
            "following_url": "https://api.github.com/users/vmichals/following{/other_user}",
            "gists_url": "https://api.github.com/users/vmichals/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vmichals/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vmichals/subscriptions",
            "organizations_url": "https://api.github.com/users/vmichals/orgs",
            "repos_url": "https://api.github.com/users/vmichals/repos",
            "events_url": "https://api.github.com/users/vmichals/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vmichals/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-11T05:22:27Z",
        "updated_at": "2019-11-11T05:22:27Z",
        "author_association": "NONE",
        "body": "Here's another publication using the split by @wyharveychen: [Shaping Visual Representations with Language for Few-shot Classification](https://arxiv.org/abs/1911.02683).\r\n\r\nI think it can considered a reasonable choice for a standard split."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/554693913",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/12#issuecomment-554693913",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/12",
        "id": 554693913,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY5MzkxMw==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-17T02:00:40Z",
        "updated_at": "2019-11-17T02:00:40Z",
        "author_association": "OWNER",
        "body": "Thank you for the bug report! There was indeed a few issues due to refactoring FC100 and CIFAR-FS."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/558373946",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/14#issuecomment-558373946",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/14",
        "id": 558373946,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM3Mzk0Ng==",
        "user": {
            "login": "vmichals",
            "id": 1757177,
            "node_id": "MDQ6VXNlcjE3NTcxNzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1757177?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vmichals",
            "html_url": "https://github.com/vmichals",
            "followers_url": "https://api.github.com/users/vmichals/followers",
            "following_url": "https://api.github.com/users/vmichals/following{/other_user}",
            "gists_url": "https://api.github.com/users/vmichals/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vmichals/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vmichals/subscriptions",
            "organizations_url": "https://api.github.com/users/vmichals/orgs",
            "repos_url": "https://api.github.com/users/vmichals/repos",
            "events_url": "https://api.github.com/users/vmichals/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vmichals/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-25T22:42:55Z",
        "updated_at": "2019-11-25T22:43:15Z",
        "author_association": "NONE",
        "body": "I ran the script from @andac-demir, saving the episode of the first batch instead of visualizing (see below). I think the images and labels might not be shuffled in the same way.\r\n\r\nWhen I print the labels of the first episode in the batch, I get 5 of each of the following:\r\nn01930112 (nematode, roundworm)\r\nn02110063 (malamute)\r\nn01981276 (king crab)\r\nn02110341 (dalmatian)\r\nn02099601 (golden retriever)\r\n\r\nThe images in the batch don't seem to be in the same order (e.g. the second, not the third row shows king crabs):\r\n![image XO5XB0](https://user-images.githubusercontent.com/1757177/69584002-13545a00-0fd4-11ea-9fe2-d1a49a159f48.png)\r\n\r\nI might be making a mistake somewhere (I didn't check the script in detail)."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/559620404",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/14#issuecomment-559620404",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/14",
        "id": 559620404,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYyMDQwNA==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-28T23:48:13Z",
        "updated_at": "2019-11-28T23:48:13Z",
        "author_association": "OWNER",
        "body": "Hi @andac-demir! Sorry for the late reply.\r\n - For the first two issues, my guess is that the version of CIFAR 100 dataset you have was processed before the recent changes to fix FC100. There is a check missing in `_check_integrity` which I am going to add for `fine_names.json`. If you delete the `cifar100` folder in your data folder and download/process the dataset again this should be resolved. If this doesn't fix the first issue (with index out of range), can you provide me an example script (I haven't been able to reproduce it)?\r\n - The third issue seems very critical indeed, I am going to look into it. Thank you @vmichals for the help!"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/559622858",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/14#issuecomment-559622858",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/14",
        "id": 559622858,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYyMjg1OA==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-29T00:14:29Z",
        "updated_at": "2019-11-29T00:14:29Z",
        "author_association": "OWNER",
        "body": "I haven't been able to reproduce the issue you were having with your script (I always get 5 examples of each). However I have been able to reproduce the first issue (I didn't test CIFAR 100 datasets with class augmentations, that was the issue!), and I am going to fix it right away.\r\n\r\n@vmichals Regarding the shuffle of the labels/images, there is shuffling happening in the `Categorical()` target transform, so the order in which you see the actual labels from ImageNet might not be the order of the labels in the episode. This is to ensure that the same task might get different labeling functions."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/559623659",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/10#issuecomment-559623659",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/10",
        "id": 559623659,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYyMzY1OQ==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-29T00:22:50Z",
        "updated_at": "2019-11-29T00:22:50Z",
        "author_association": "OWNER",
        "body": "I have added the CUB dataset in Torchmeta 1.2.0, with the split above."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/559625089",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/7#issuecomment-559625089",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/7",
        "id": 559625089,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYyNTA4OQ==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-29T00:37:35Z",
        "updated_at": "2019-11-29T00:37:35Z",
        "author_association": "OWNER",
        "body": "I have upgraded the requirement for PyTorch in the latest version of Torchmeta. It now requires PyTorch>=1.3.0"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/559824452",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/15#issuecomment-559824452",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/15",
        "id": 559824452,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTgyNDQ1Mg==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-29T15:31:27Z",
        "updated_at": "2019-11-29T15:31:27Z",
        "author_association": "OWNER",
        "body": "That would be a great addition! I am not as familiar with the standard few-shot object detection in the literature, so any help is welcome."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/560022726",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/16#issuecomment-560022726",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/16",
        "id": 560022726,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAyMjcyNg==",
        "user": {
            "login": "Franklin-Yao",
            "id": 9799610,
            "node_id": "MDQ6VXNlcjk3OTk2MTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9799610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Franklin-Yao",
            "html_url": "https://github.com/Franklin-Yao",
            "followers_url": "https://api.github.com/users/Franklin-Yao/followers",
            "following_url": "https://api.github.com/users/Franklin-Yao/following{/other_user}",
            "gists_url": "https://api.github.com/users/Franklin-Yao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Franklin-Yao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Franklin-Yao/subscriptions",
            "organizations_url": "https://api.github.com/users/Franklin-Yao/orgs",
            "repos_url": "https://api.github.com/users/Franklin-Yao/repos",
            "events_url": "https://api.github.com/users/Franklin-Yao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Franklin-Yao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-30T21:29:24Z",
        "updated_at": "2019-11-30T21:29:24Z",
        "author_association": "NONE",
        "body": "I found lots of meta learning methods have backbone networks like Conv32, conv64, resnet12 and resnet18 but details are a little bit different. For example, some have more layers, more filters than others.Maybe we can standardize it and integrate this part to torchmeta for fair comparison"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/560037370",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/15#issuecomment-560037370",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/15",
        "id": 560037370,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAzNzM3MA==",
        "user": {
            "login": "XinyiYS",
            "id": 17292375,
            "node_id": "MDQ6VXNlcjE3MjkyMzc1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17292375?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XinyiYS",
            "html_url": "https://github.com/XinyiYS",
            "followers_url": "https://api.github.com/users/XinyiYS/followers",
            "following_url": "https://api.github.com/users/XinyiYS/following{/other_user}",
            "gists_url": "https://api.github.com/users/XinyiYS/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XinyiYS/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XinyiYS/subscriptions",
            "organizations_url": "https://api.github.com/users/XinyiYS/orgs",
            "repos_url": "https://api.github.com/users/XinyiYS/repos",
            "events_url": "https://api.github.com/users/XinyiYS/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XinyiYS/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-12-01T01:36:58Z",
        "updated_at": "2019-12-01T01:36:58Z",
        "author_association": "NONE",
        "body": "Got it, I will look into this. First let me get familiar with the repo. A great collection of data sets for few-shot learning by the way. Kudos!"
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/573320193",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/16#issuecomment-573320193",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/16",
        "id": 573320193,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzMyMDE5Mw==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-11T14:10:26Z",
        "updated_at": "2020-01-11T14:10:26Z",
        "author_association": "OWNER",
        "body": "Apologies for the very late reply. Any kind of help is very welcome, and thank you for volunteering!\r\nI think having standard backbone networks here would be a great idea. If you add them, please include some previous papers that use them to keep track.\r\n\r\nAnother area that always requires more work is adding datasets. Some of which were suggested here #17.\r\n\r\nI am closing this issue for now, but feel free to open other issues or PRs depending on what you want to add to Torchmeta."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/573320610",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/17#issuecomment-573320610",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/17",
        "id": 573320610,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzMyMDYxMA==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-11T14:15:52Z",
        "updated_at": "2020-01-11T14:15:52Z",
        "author_association": "OWNER",
        "body": "Once again apologies for the late reply. You are absolutely right, having these datasets would be great, and they are really missing at the moment (especially Meta-Dataset).\r\n\r\nI have looked at how Meta-Dataset could be integrated, and that one is particularly difficult since the original dataset was released as TFRecords. We have been discussing with the team behind Meta-Dataset what would be the best strategy to include it in Torchmeta, and the conclusion was that it would most likely require some rewriting of the original version here. But still, it would probably be tricky, especially with the `download` option in Torchmeta/Torchvision (these datasets are very large, processing could be long, and there are some licensing issues)."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/573320723",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/17#issuecomment-573320723",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/17",
        "id": 573320723,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzMyMDcyMw==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-11T14:17:11Z",
        "updated_at": "2020-01-11T14:17:11Z",
        "author_association": "OWNER",
        "body": "Speaking of Meta-Dataset in particular, I have heard that the team at University of Freiburg might have a PyTorch version of Meta-Dataset, which could be a good starting point."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/573412337",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/17#issuecomment-573412337",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/17",
        "id": 573412337,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzQxMjMzNw==",
        "user": {
            "login": "Franklin-Yao",
            "id": 9799610,
            "node_id": "MDQ6VXNlcjk3OTk2MTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9799610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Franklin-Yao",
            "html_url": "https://github.com/Franklin-Yao",
            "followers_url": "https://api.github.com/users/Franklin-Yao/followers",
            "following_url": "https://api.github.com/users/Franklin-Yao/following{/other_user}",
            "gists_url": "https://api.github.com/users/Franklin-Yao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Franklin-Yao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Franklin-Yao/subscriptions",
            "organizations_url": "https://api.github.com/users/Franklin-Yao/orgs",
            "repos_url": "https://api.github.com/users/Franklin-Yao/repos",
            "events_url": "https://api.github.com/users/Franklin-Yao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Franklin-Yao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-12T12:51:11Z",
        "updated_at": "2020-01-12T12:51:11Z",
        "author_association": "NONE",
        "body": "OK, let include Meta_Dataset first."
    },
    {
        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/575711660",
        "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/19#issuecomment-575711660",
        "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/19",
        "id": 575711660,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTcxMTY2MA==",
        "user": {
            "login": "tristandeleu",
            "id": 2018752,
            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "html_url": "https://github.com/tristandeleu",
            "followers_url": "https://api.github.com/users/tristandeleu/followers",
            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
            "repos_url": "https://api.github.com/users/tristandeleu/repos",
            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-17T17:04:04Z",
        "updated_at": "2020-01-17T17:04:04Z",
        "author_association": "OWNER",
        "body": "I don't think that would do the trick. Having `params.get('bias', None)` means that if you don't have any bias in your parameter dict (setting `bias=False` when creating you layer), then bias is set to `None`. This is similar to [the way `self.bias` is created when instantiating](https://github.com/pytorch/pytorch/blob/master/torch/nn/modules/conv.py#L48-L51)."
    }
]