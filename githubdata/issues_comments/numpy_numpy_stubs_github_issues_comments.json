[
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/349506344",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/1#issuecomment-349506344",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/1",
        "id": 349506344,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTUwNjM0NA==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T02:04:17Z",
        "updated_at": "2017-12-06T02:04:17Z",
        "author_association": "MEMBER",
        "body": "> Presumably, the eventual plan, once it stabilizes, and numpy drops python 2, would for this to be part of the numpy source code itself?\r\n\r\nYes, though I don't think that's contingent on Python 3. Type stubs in separate files can exist even under Python 2."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/349512766",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/2#issuecomment-349512766",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/2",
        "id": 349512766,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTUxMjc2Ng==",
        "user": {
            "login": "ethanhs",
            "id": 9504279,
            "node_id": "MDQ6VXNlcjk1MDQyNzk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9504279?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethanhs",
            "html_url": "https://github.com/ethanhs",
            "followers_url": "https://api.github.com/users/ethanhs/followers",
            "following_url": "https://api.github.com/users/ethanhs/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethanhs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethanhs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethanhs/subscriptions",
            "organizations_url": "https://api.github.com/users/ethanhs/orgs",
            "repos_url": "https://api.github.com/users/ethanhs/repos",
            "events_url": "https://api.github.com/users/ethanhs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethanhs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T02:40:03Z",
        "updated_at": "2017-12-06T02:40:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "You can find an example package with setup.py for PEP 561 at https://github.com/ethanhs/sample-typed-package."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/349523133",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/3#issuecomment-349523133",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/3",
        "id": 349523133,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTUyMzEzMw==",
        "user": {
            "login": "henryJack",
            "id": 22593502,
            "node_id": "MDQ6VXNlcjIyNTkzNTAy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/22593502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/henryJack",
            "html_url": "https://github.com/henryJack",
            "followers_url": "https://api.github.com/users/henryJack/followers",
            "following_url": "https://api.github.com/users/henryJack/following{/other_user}",
            "gists_url": "https://api.github.com/users/henryJack/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/henryJack/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/henryJack/subscriptions",
            "organizations_url": "https://api.github.com/users/henryJack/orgs",
            "repos_url": "https://api.github.com/users/henryJack/repos",
            "events_url": "https://api.github.com/users/henryJack/events{/privacy}",
            "received_events_url": "https://api.github.com/users/henryJack/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T03:44:01Z",
        "updated_at": "2017-12-06T03:44:01Z",
        "author_association": "NONE",
        "body": "Happy to write the example annotated code once the stubs are done. It's probably best to add a mypy job to the pipeline with multiple scripts testing that mypy passes and throws errors where it's supposed to.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/349547487",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/3#issuecomment-349547487",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/3",
        "id": 349547487,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTU0NzQ4Nw==",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T06:25:27Z",
        "updated_at": "2017-12-06T06:25:27Z",
        "author_association": "MEMBER",
        "body": "I'm workin on #2, and I'm not even sure I'm able to test this locally - it seems `mypy` doesn't support `_stubs` packages yet."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/349548961",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/3#issuecomment-349548961",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/3",
        "id": 349548961,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTU0ODk2MQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T06:34:39Z",
        "updated_at": "2017-12-06T06:34:39Z",
        "author_association": "MEMBER",
        "body": "It seems that we are very cutting edge here in relying on PEP 561. @ethanhs is still finishing up the mypy implementation in https://github.com/python/mypy/pull/4278, but I guess we could test locally against his branch."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/349550722",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/3#issuecomment-349550722",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/3",
        "id": 349550722,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTU1MDcyMg==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T06:46:10Z",
        "updated_at": "2017-12-06T06:46:10Z",
        "author_association": "MEMBER",
        "body": "See https://github.com/python/typeshed/issues/754 and https://github.com/python/typeshed/issues/1339. It seems like tests for stubs make sense for at least tricky cases, but are probably overkill when required for everything."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/349551049",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/3#issuecomment-349551049",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/3",
        "id": 349551049,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTU1MTA0OQ==",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T06:48:10Z",
        "updated_at": "2017-12-06T06:48:10Z",
        "author_association": "MEMBER",
        "body": "We're probably going to want to use whatever mypy is using to run its own tests here. Perhaps to support PEP561, mypy should extract its testing module to be standalone"
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/349551212",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/3#issuecomment-349551212",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/3",
        "id": 349551212,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTU1MTIxMg==",
        "user": {
            "login": "ethanhs",
            "id": 9504279,
            "node_id": "MDQ6VXNlcjk1MDQyNzk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9504279?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethanhs",
            "html_url": "https://github.com/ethanhs",
            "followers_url": "https://api.github.com/users/ethanhs/followers",
            "following_url": "https://api.github.com/users/ethanhs/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethanhs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethanhs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethanhs/subscriptions",
            "organizations_url": "https://api.github.com/users/ethanhs/orgs",
            "repos_url": "https://api.github.com/users/ethanhs/repos",
            "events_url": "https://api.github.com/users/ethanhs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethanhs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T06:49:13Z",
        "updated_at": "2017-12-06T06:49:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "The branch is in a somewhat limited state, it checks against packages installed only for the Python mypy is installed in. Just a heads up. It should work for the simple case."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/350090980",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/5#issuecomment-350090980",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/5",
        "id": 350090980,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDA5MDk4MA==",
        "user": {
            "login": "ethanhs",
            "id": 9504279,
            "node_id": "MDQ6VXNlcjk1MDQyNzk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9504279?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethanhs",
            "html_url": "https://github.com/ethanhs",
            "followers_url": "https://api.github.com/users/ethanhs/followers",
            "following_url": "https://api.github.com/users/ethanhs/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethanhs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethanhs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethanhs/subscriptions",
            "organizations_url": "https://api.github.com/users/ethanhs/orgs",
            "repos_url": "https://api.github.com/users/ethanhs/repos",
            "events_url": "https://api.github.com/users/ethanhs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethanhs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-07T20:53:00Z",
        "updated_at": "2017-12-07T20:53:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "This will take quite some work here and in mypy. At a discussion held several weeks ago, the agreement was on the plan in the [README](https://github.com/numpy/numpy_stubs/blob/master/README.md). So while this will happen, adding support for checking shapes will not happen soon. There is much to decide, such as how to define syntax related to declaring array shape, and how an actual type checking implementation should work."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/350936557",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/7#issuecomment-350936557",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/7",
        "id": 350936557,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDkzNjU1Nw==",
        "user": {
            "login": "rmcgibbo",
            "id": 641278,
            "node_id": "MDQ6VXNlcjY0MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmcgibbo",
            "html_url": "https://github.com/rmcgibbo",
            "followers_url": "https://api.github.com/users/rmcgibbo/followers",
            "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
            "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
            "repos_url": "https://api.github.com/users/rmcgibbo/repos",
            "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T03:44:20Z",
        "updated_at": "2017-12-12T03:44:20Z",
        "author_association": "NONE",
        "body": "For  complex dtypes like `datetime64`, `np.void`, and the string dtypes, I propose that we delay dealing with them until this package is much more fully developed.\r\n\r\nVery little functionality is lost in the meantime if numpy functions that return arrays of `dtype('S1')` are labeled as returning (or are inferred to return) results of type `ndarray[Any, str]`. More specificity can be added later."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/351078047",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/6#issuecomment-351078047",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/6",
        "id": 351078047,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTA3ODA0Nw==",
        "user": {
            "login": "rmcgibbo",
            "id": 641278,
            "node_id": "MDQ6VXNlcjY0MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmcgibbo",
            "html_url": "https://github.com/rmcgibbo",
            "followers_url": "https://api.github.com/users/rmcgibbo/followers",
            "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
            "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
            "repos_url": "https://api.github.com/users/rmcgibbo/repos",
            "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T15:05:29Z",
        "updated_at": "2017-12-12T15:49:53Z",
        "author_association": "NONE",
        "body": "I think `ndarray[Shape, Dtype]` is the best way to specify the type.\r\n\r\nMy reason for preferring that the shape specification come before the dtype specification is that I anticipate that we'll probably want to have type aliases. Putting the `Shape` first in the syntax makes something like a `array1d[Dtype]` a natural shorthand, in that looks like a partially applied function, for `ndarray[\"OneDimensional\", Dtype]`. That looks totally sensible. Using the other syntax, you'd have a shorthand like `arrayf64[Shape]` that \"expands\" to `ndarray[Shape, float64]`, which seems unnatural.\r\n\r\nEdit: based on my comment below, I'm reconsidering this position."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/351081768",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/5#issuecomment-351081768",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/5",
        "id": 351081768,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTA4MTc2OA==",
        "user": {
            "login": "rmcgibbo",
            "id": 641278,
            "node_id": "MDQ6VXNlcjY0MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmcgibbo",
            "html_url": "https://github.com/rmcgibbo",
            "followers_url": "https://api.github.com/users/rmcgibbo/followers",
            "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
            "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
            "repos_url": "https://api.github.com/users/rmcgibbo/repos",
            "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T15:17:14Z",
        "updated_at": "2017-12-12T15:17:46Z",
        "author_association": "NONE",
        "body": "@shoyer: I'm not sure where this should be noted, but the framing of #6 and python/typing#516 seems to indicate that you're favoring putting the full shape in the type specification: that is, for a two-dimensional array of size (M,N), the proposal seems to be that the type annotation would convey both the value of M and N.\r\n\r\nI think we should consider a more modest version in which only the number of dimensions is tracked via the type, but not the shape itself. That is, instead of `ndarray[Shape[100, 200], Dtype]` for an array of `shape=(100,200)`, we go for `ndarray[2, Dtype]`, to indicate only the fact that the array has ndim=2."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/351090841",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/6#issuecomment-351090841",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/6",
        "id": 351090841,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTA5MDg0MQ==",
        "user": {
            "login": "rmcgibbo",
            "id": 641278,
            "node_id": "MDQ6VXNlcjY0MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmcgibbo",
            "html_url": "https://github.com/rmcgibbo",
            "followers_url": "https://api.github.com/users/rmcgibbo/followers",
            "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
            "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
            "repos_url": "https://api.github.com/users/rmcgibbo/repos",
            "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T15:45:07Z",
        "updated_at": "2017-12-12T15:49:31Z",
        "author_association": "NONE",
        "body": "Perhaps we should quickly survey other type systems for multidimensional arrays. If there's a clear majority for one formulation or the other, that might better indicate which scheme is most natural.\r\n\r\n - In [xtensor](http://xtensor.readthedocs.io/en/latest/api/xtensor.html), the dtype is the first template parameter and the dimension is the second template parameter.\r\n- Eigen's [tensor](http://eigen.tuxfamily.org/dox-devel/unsupported/classEigen_1_1Tensor.html) class puts the dtype before the rank."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/351099705",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/5#issuecomment-351099705",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/5",
        "id": 351099705,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTA5OTcwNQ==",
        "user": {
            "login": "rmcgibbo",
            "id": 641278,
            "node_id": "MDQ6VXNlcjY0MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmcgibbo",
            "html_url": "https://github.com/rmcgibbo",
            "followers_url": "https://api.github.com/users/rmcgibbo/followers",
            "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
            "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
            "repos_url": "https://api.github.com/users/rmcgibbo/repos",
            "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T16:12:02Z",
        "updated_at": "2017-12-12T16:12:02Z",
        "author_association": "NONE",
        "body": "Tracking only the rank (as opposed to the full shape) of the array through the type system is, for what it's worth, how all of the C++ tensor libraries work to the best of my knowledge. It's more consistent with the rest of the PEP484 container types as well, in the sense that the type `List[int]` doesn't track the number of elements."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/351116822",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/5#issuecomment-351116822",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/5",
        "id": 351116822,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTExNjgyMg==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T17:04:19Z",
        "updated_at": "2017-12-12T17:04:19Z",
        "author_association": "MEMBER",
        "body": "@rmcgibbo Yes, this needs justification.\r\n\r\nMy reasoning for favoring specifying shapes in types comes down to:\r\n- Rank and shape are not mutually exclusive: if we do shape, we get rank as well. We could even have an explicit `Rank` type, which we tell type checkers should be treated as equivalent to anonymous dimensions, e.g., `ndarray[Rank[2]]` could be the same as `ndarray[Shape[:, :]]`.\r\n- For code directly using NumPy, rank checks would not be anywhere near as valuable as shape checks. The problem is that nearly NumPy operation is valid on inputs with an arbitrary number of dimensions (even between arguments, with broadcasting). Giving up on shape checks would means we couldn't type ufuncs in a useful way, or catch the common errors with broadcasting. This would basically mean reserving shape/rank checks for the (many) applications and libraries that only use on particular ranks (e.g., vectors and matrices).\r\n\r\nWith regards to C++ libraries, [Eigen](https://eigen.tuxfamily.org/dox/group__TutorialMatrixClass.html) at least does allow for either runtime and statically defined shapes. That said, I certainly would not bother with static/compile-time shapes on their own, because it is indeed rare that you know the exact shape of arrays before running a program. But with generics, we have the possibility of doing much more sophisticated pattern matching. This isn't feasible in C++, where you would need to use templates for every possible dimension size. In contrast, we can probably do something more sophisticated in Python to allow for typing shapes without enumerating all of them (similar to what you see in Haskell)."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/351129825",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/5#issuecomment-351129825",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/5",
        "id": 351129825,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTEyOTgyNQ==",
        "user": {
            "login": "rmcgibbo",
            "id": 641278,
            "node_id": "MDQ6VXNlcjY0MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmcgibbo",
            "html_url": "https://github.com/rmcgibbo",
            "followers_url": "https://api.github.com/users/rmcgibbo/followers",
            "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
            "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
            "repos_url": "https://api.github.com/users/rmcgibbo/repos",
            "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T17:48:29Z",
        "updated_at": "2017-12-12T18:03:31Z",
        "author_association": "NONE",
        "body": "Shape is clearly more expressive than rank. So in that sense, I agree with both of your bulleted points above (not mutually exclusive, and static shape checks, if they worked, would provide more value to users). There are two factors on the other side that come to mind.\r\n\r\n* In almost any real code, it will be impossible for mypy to statically infer the shapes. For example, take the following:\r\n\r\n```\r\nM = 5\r\nN = 10\r\narr = np.zeros((M, N))\r\nreveal_type(arr)\r\n```\r\n\r\nMypy tracks the type of M and N, but not their values. It can infer the rank of `arr`, but not the full shape. Want to do something more complicated?\r\n\r\n```\r\ndef compute_length() -> int:\r\n    return <something>\r\ndef compute_width() > int:\r\n    return <something>\r\narr = np.zeros((compute_length(), compute_width()))\r\nreveal_type(arr)\r\n```\r\nNot going to work.\r\n\r\n* If the shape is to be tracked explicitly, for example, to the best of my understanding there is no way to express even the *simplest* numpy function signatures with the current generation of PEP484/mypy. For example, take\r\n\r\n```\r\n# requires a type-level addition function to express the return type.\r\ndef concatenate_1d_arrays(arr1 : ndarray[D, Shape[M]], arr2 : ndarray[D, Shape[N]] -> ?\r\n```"
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/351135448",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/5#issuecomment-351135448",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/5",
        "id": 351135448,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTEzNTQ0OA==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T18:07:15Z",
        "updated_at": "2017-12-12T18:07:15Z",
        "author_association": "MEMBER",
        "body": "Take another look at [my doc on shape typing](https://docs.google.com/document/d/1vpMse4c6DrWH5rq2tQSx3qwP_m_0lyn-Ij4WHqQqRHY/edit#heading=h.rkj7d39awayl). You're right that functions like `concatenate` are hard, but I would claim that even mere matching of integer sizes (without arithmetic) along with dimension identity would be enough to be valuable:\r\n- You could catch broadcasting errors when using ufuncs.\r\n- You could catch errors with regards to which dimension is removed by aggregation or indexing\r\n- You could verify that the shapes of non-concatenated axes of arrays in `concatenate` match, and are propagated to the result, e.g., `stack_matrices(x: ndarray[Shape[:, N], y: ndarray[Shape[:, N]]) -> ndarray[Shape[:, N]]`.\r\n\r\n> In almost any real code, it will be impossible for mypy to statically infer the shapes. For example, take the following:\r\n```\r\nM = 5\r\nN = 10\r\narr = np.zeros((M, N))\r\nreveal_type(arr)\r\n```\r\n\r\nI'm not certain that mypy will be unable to infer shapes in this case. If typing adds support for literals (which is almost certainly necessary regardless for NumPy), then I imagine it will also support literals in variables, in the same way that it supports type aliases."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/351138816",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/5#issuecomment-351138816",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/5",
        "id": 351138816,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTEzODgxNg==",
        "user": {
            "login": "rmcgibbo",
            "id": 641278,
            "node_id": "MDQ6VXNlcjY0MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmcgibbo",
            "html_url": "https://github.com/rmcgibbo",
            "followers_url": "https://api.github.com/users/rmcgibbo/followers",
            "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions",
            "organizations_url": "https://api.github.com/users/rmcgibbo/orgs",
            "repos_url": "https://api.github.com/users/rmcgibbo/repos",
            "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmcgibbo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T18:16:43Z",
        "updated_at": "2017-12-12T18:17:14Z",
        "author_association": "NONE",
        "body": "My suspicions are that shape tracking is (1) going to add a small marginal value, since it will be rarely be possible to statically infer them (e.g. my two examples above) in real world code, whereas it will often be possible to statically infer rank in real world code; and (2) going to add a ton of complexity. That suggests to me it's not the best place to start for the \"1.0\".\r\n\r\nIf there's a way to design the syntax so that it is initially rank-only, build a viable package around that, and add shape information afterwards in a second stage, then that would be my preference."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/357879553",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/4#issuecomment-357879553",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/4",
        "id": 357879553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg3OTU1Mw==",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-16T07:52:48Z",
        "updated_at": "2018-01-16T07:52:48Z",
        "author_association": "MEMBER",
        "body": "Updated to address PEP8"
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/359276703",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/6#issuecomment-359276703",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/6",
        "id": 359276703,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTI3NjcwMw==",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-21T20:10:27Z",
        "updated_at": "2018-01-21T20:10:27Z",
        "author_association": "MEMBER",
        "body": "Another option - allow product types to be created using `&`, and specify the traits separately:\r\n\r\n```\r\nx : np.Array[float] & np.Shaped[N,M]\r\n```"
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/359568362",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/6#issuecomment-359568362",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/6",
        "id": 359568362,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTU2ODM2Mg==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-22T21:19:51Z",
        "updated_at": "2018-01-22T21:19:51Z",
        "author_association": "MEMBER",
        "body": "@eric-wieser That looks like the `Intersection` typing proposal (https://github.com/python/typing/issues/213), which would spell that like `Intersection[np.Array[float], np.Shaped[N,M]]`. But I doubt the extra sugar of using `&` for `Intersection` would really fly from a Python typing perspective."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/359573427",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/6#issuecomment-359573427",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/6",
        "id": 359573427,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTU3MzQyNw==",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-22T21:37:27Z",
        "updated_at": "2018-01-22T21:38:14Z",
        "author_association": "MEMBER",
        "body": "Thanks for the reference. [There's a comment about `&` there](https://github.com/python/typing/issues/213#issuecomment-344447892), but I suppose it doesn't work well with built-in types. Of course, we're free to implement it anyway for our types if we have a convincing use case and think its a good idea"
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/366484132",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/8#issuecomment-366484132",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/8",
        "id": 366484132,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQ4NDEzMg==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-18T01:06:03Z",
        "updated_at": "2018-02-18T01:06:03Z",
        "author_association": "MEMBER",
        "body": "Can you also add a Travis-CI link to the README?\r\n\r\n    [![Build Status](https://travis-ci.org/numpy/numpy_stubs.svg?branch=master)](https://travis-ci.org/numpy/numpy_stubs)"
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/366484729",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/8#issuecomment-366484729",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/8",
        "id": 366484729,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQ4NDcyOQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-18T01:19:07Z",
        "updated_at": "2018-02-18T01:19:07Z",
        "author_association": "MEMBER",
        "body": "And we're green!\r\n\r\nThanks helping get thing set up here... I'll go ahead and merge shortly."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/366519721",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#issuecomment-366519721",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/9",
        "id": 366519721,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjUxOTcyMQ==",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-18T14:24:51Z",
        "updated_at": "2018-02-18T14:24:51Z",
        "author_association": "CONTRIBUTOR",
        "body": "This should be ready for another round of review!"
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/366780917",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#issuecomment-366780917",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/9",
        "id": 366780917,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njc4MDkxNw==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-19T19:12:32Z",
        "updated_at": "2018-02-19T19:12:32Z",
        "author_association": "MEMBER",
        "body": "Thanks @alanhdu !"
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/366790782",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/5#issuecomment-366790782",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/5",
        "id": 366790782,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njc5MDc4Mg==",
        "user": {
            "login": "hameerabbasi",
            "id": 2190658,
            "node_id": "MDQ6VXNlcjIxOTA2NTg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2190658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hameerabbasi",
            "html_url": "https://github.com/hameerabbasi",
            "followers_url": "https://api.github.com/users/hameerabbasi/followers",
            "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions",
            "organizations_url": "https://api.github.com/users/hameerabbasi/orgs",
            "repos_url": "https://api.github.com/users/hameerabbasi/repos",
            "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hameerabbasi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-19T20:03:44Z",
        "updated_at": "2018-02-20T08:10:02Z",
        "author_association": "NONE",
        "body": "Maybe for v1.0 we could have `ndarray[2, Dtype]` be an alias for `ndarray[Shape[Any, Any], Dtype]`, ignoring the length of the shape but keeping the `ndim` in mind. This would probably be a good-ish idea to keep forward compatibility.\r\n\r\nEdit: It might also be a good idea to have a warning if the shape contains anything other than `Any` (or similar), for now."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/366812978",
        "html_url": "https://github.com/numpy/numpy-stubs/issues/5#issuecomment-366812978",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/5",
        "id": 366812978,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjgxMjk3OA==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-19T22:01:53Z",
        "updated_at": "2018-02-19T22:01:53Z",
        "author_association": "MEMBER",
        "body": "Yes, I agree that it could make sense to add shape support incrementally. We'll probably still need  upstream work in typing even to make that work well, though (e.g., to support integer values in types)."
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/369354704",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/10#issuecomment-369354704",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/10",
        "id": 369354704,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTM1NDcwNA==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-28T19:29:04Z",
        "updated_at": "2018-02-28T19:29:04Z",
        "author_association": "MEMBER",
        "body": "@eric-wieser Want to take a look?"
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/issues/comments/369444243",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/11#issuecomment-369444243",
        "issue_url": "https://api.github.com/repos/numpy/numpy-stubs/issues/11",
        "id": 369444243,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTQ0NDI0Mw==",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-01T01:33:05Z",
        "updated_at": "2018-03-01T01:33:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "This isn't ready yet, but I wanted to get feedback about whether this was the right approach (lots of `@overload`s for type-hinting). The problems I have with it are:\r\n\r\n- It's verbose and irritating (I actually have a `jinja2` template that generates this file), although this is a one-time cost so I'm not too concerned.\r\n - `overload` semantics are a little in flux -- because of https://github.com/python/mypy/issues/4020, some of the overloads are counted as overlapping from MyPy and return an error (see that last commit)\r\n- The type signatures aren't strictly correct -- if you pass in a scalar `ndarray` into one of these functions, you get a scalar non-`ndarray` out. I'm not sure how to deal with this until we can distinguish scalar `ndarray`s and non-scalar `ndarray`s.\r\n\r\nI'm not sure what the alternative approaches are -- I thought about trying to create a special `_Distribution`  that subclasses `Callable` and somehow does all of the broadcasting for us, but I couldn't actually figure out how to get that to work."
    }
]