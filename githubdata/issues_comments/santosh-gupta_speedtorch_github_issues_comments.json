[
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/530126442",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/pull/3#issuecomment-530126442",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/3",
        "id": 530126442,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDEyNjQ0Mg==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-10T21:23:46Z",
        "updated_at": "2019-09-10T21:23:46Z",
        "author_association": "OWNER",
        "body": "Cupy is somehow messy when it comes to checking if it's already installed. So if it's already installed on your system, it might try to reinstall it. For this reason, I recommend installing cupy separately if you don't already have it, rather than having it as a requirement. "
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/532362261",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/pull/4#issuecomment-532362261",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/4",
        "id": 532362261,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjM2MjI2MQ==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-17T19:16:11Z",
        "updated_at": "2019-09-17T19:16:11Z",
        "author_association": "OWNER",
        "body": "Thanks!"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/533862431",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/5#issuecomment-533862431",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/5",
        "id": 533862431,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzg2MjQzMQ==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-22T08:52:26Z",
        "updated_at": "2019-09-22T08:52:26Z",
        "author_association": "OWNER",
        "body": "it's under the benchmarking section, here's a direct link \r\n\r\nhttps://colab.research.google.com/drive/1PXhbmBZqtiq_NlfgUIaNpf_MfpiQSKKs"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/534272815",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/6#issuecomment-534272815",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/6",
        "id": 534272815,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDI3MjgxNQ==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-23T20:34:07Z",
        "updated_at": "2019-09-23T20:34:40Z",
        "author_association": "OWNER",
        "body": "This makes sense. I initially didn't know why pinned cupy tensors were getting faster performance, but a pytorch engineer pointed it out, I updated the 'How it works?' section but the pinned cupy tensors aren't copying faster, they're using a different indexing kernal, which works better for CPUs with a lower number of cores. \r\n\r\nIn either case, for smaller tensors, there's probably not that much indexing going on, so it would make sense that Pytorch's pinned CPU tensors are faster. \r\n\r\nMore details here\r\n\r\nhttps://discuss.pytorch.org/t/introducing-speedtorch-4x-speed-cpu-gpu-transfer-110x-gpu-cpu-transfer/56147/2\r\n\r\nIn your case, I would imagine the number of CPU cores wouldn't make too much of a difference, but out of curiosity, how many CPU cores are you working with? "
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/534378024",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/6#issuecomment-534378024",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/6",
        "id": 534378024,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDM3ODAyNA==",
        "user": {
            "login": "juanmed",
            "id": 21977733,
            "node_id": "MDQ6VXNlcjIxOTc3NzMz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/21977733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juanmed",
            "html_url": "https://github.com/juanmed",
            "followers_url": "https://api.github.com/users/juanmed/followers",
            "following_url": "https://api.github.com/users/juanmed/following{/other_user}",
            "gists_url": "https://api.github.com/users/juanmed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juanmed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juanmed/subscriptions",
            "organizations_url": "https://api.github.com/users/juanmed/orgs",
            "repos_url": "https://api.github.com/users/juanmed/repos",
            "events_url": "https://api.github.com/users/juanmed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juanmed/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-24T03:58:52Z",
        "updated_at": "2019-09-24T04:02:49Z",
        "author_association": "NONE",
        "body": "@Santosh-Gupta, thanks for your reply.\r\n\r\nThe Jetson Nano platform has a quad-core ARM A57 64-bit CPU.  \r\n\r\n> but the pinned cupy tensors aren't copying faster, they're using a different indexing kernal, which works better for CPUs with a lower number of cores.\r\n\r\n> In either case, for smaller tensors, there's probably not that much indexing going on, so it would make sense that Pytorch's pinned CPU tensors are faster.\r\n>More details here:  https://discuss.pytorch.org/t/introducing-speedtorch-4x-speed-cpu-gpu-transfer-110x-gpu-cpu-transfer/56147/2\r\n\r\nSo it seems the best use case for SpeedTorch is CPU<->GPU transfer of slices of big tensors? After I transfer the tensor to GPU I am creating one variable per row like ` row1 = xgpu[1]` and end up with 20 variables (20 rows in tensor). \r\n\r\n~~Does this mean SpeedTorch advantage is dependent **both** on the number of cores and size of the matrices, for all operations (both transfer and indexing), and the underlying reason is a bug in Pytorch's implementation? I read in the 'How it works?' section that Pytorch's performance gets better with the number of cores, but I understood from the benchmark tables that the speed ups, more importantly for Speedtorch pinned CPU <-> Pytorch cuda (for which a 124x is indicated), were to be expected. Sorry if the question is answered in your readme and links, I would just like to make sure I am getting it right.~~\r\n\r\nIn [this comment](https://discuss.pytorch.org/t/introducing-speedtorch-4x-speed-cpu-gpu-transfer-110x-gpu-cpu-transfer/56147/4?u=juanmed) though, talking about a DataGadget (cpu-pinned??) object they mention:\r\n\r\n>CuPy is only intended to hold CUDA data, but in this case it\u2019s actually holding CPU data (pinned memory). \r\n\r\nSo I am left wondering if somehow I could still use  SpeedTorch to speed-up this particular characteristic. I am not sure if you were able to look at my code but, is the following script a sensible way of getting the best performance? In `__init__()` I initialize all tensors that will transfer data, and `control_law` is the callback which should be executed at greater than 100Hz.\r\n\r\n```python\r\n\r\ndef __init__(self):\r\n    #initialize CPU and GPU tensors\r\n    \r\n    # this will receive data in GPU\r\n    self.data_gpu = torch.zeros(18,3).to('cuda')  \r\n    self.data = np.zeros((18,3))\r\n\r\n    # this will receive all CPU data and transfer to GPU\r\n    self.data_cpu = SpeedTorch.DataGadget(data, CPUPinn = True )  # is this using CPU memory? \r\n    self.data_cpu.gadgetInit()\r\n    \r\n    # this will receive GPU data and transfer to CPU\r\n    data2 = np.zeros((6,3))\r\n    self.return_cpu =  SpeedTorch.DataGadget(data2, CPUPinn = True )  # is this using CPU memory? \r\n    self.data_cpu.gadgetInit()\r\n\r\n\r\n# inside a callback @ 100Hz\r\ndef control_law(self, new_data):   #new_data is an 18x3 np.array\r\n\r\n       # update data in pinned CPU memory, would this be still using pinned memory?\r\n       self.data_cpu.CUPYcorpus = cp.asarray(new_data) \r\n\r\n        #transfer from CPU to GPU\r\n       self.data_gpu[:] = self.data_cpu.getData(indexes = (slice(0,18),slice(0,3)))\r\n\r\n       #slice all GPU data\r\n       a = self.data_gpu[0] \r\n       b = self.data_gpu[1]\r\n       c = self.data_gpu[2:5]\r\n       # etc etc etc\r\n       h = self.data_gpu[17]\r\n       \r\n       # do various linear algebra operations in GPU with torch cuda tensors\r\n       res = self.do_linear_algebra(a,b,....h)   \r\n      \r\n      #transfer back to pinned CPU memory\r\n       self.return_cpu.insertData(dataObject = res, indexes = (slice(0,6),slice(0,3))) \r\n\r\n       # continue processing\r\n       return self.return_cpu.CUPYcorpus.asnumpy() \r\n```\r\nPrevious to this I have modified SpeedTorch's CUPYLive.py to accept numpy array as input when initializing:\r\n\r\n```python\r\n    def gadgetInit(self):\r\n        if self.CPUPinn == True:\r\n            cupy.cuda.set_allocator(my_pinned_allocator)\r\n\r\n        if(type(self.fileName) == np.ndarray):\r\n            self.CUPYcorpus = cupy.asarray(self.fileName)\r\n        else:\r\n            self.CUPYcorpus = cupy.load( self.fileName)\r\n\r\n        if self.CPUPinn == True:\r\n            cupy.cuda.set_allocator(None)\r\n```\r\n\r\nThank you very much for your comments! Getting to know SpeedTorch has allowed me to better understand the interaction between CPU and GPU :)"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/534382478",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/6#issuecomment-534382478",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/6",
        "id": 534382478,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDM4MjQ3OA==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-24T04:24:02Z",
        "updated_at": "2019-09-24T04:24:36Z",
        "author_association": "OWNER",
        "body": ">quad-core ARM A57 64-bit CPU\r\n\r\nSo this would have 4 cores?\r\n\r\n>So it seems the best use case for SpeedTorch is CPU<->GPU transfer of slices of big tensors?\r\n\r\nYes, but I am also wondering if even you copy the whole tensor, that would also needed to go though indexing operations, and thus a Speedup. This is something I'll need to test. \r\n\r\n>In this comment though, talking about a DataGadget (cpu-pinned??)\r\n\r\nYeah, they're talking about cpu-pinned DataGadget\r\n\r\n`self.data_cpu = SpeedTorch.DataGadget(data, CPUPinn = True )  # is this using CPU memory? `\r\n\r\nWith the new modification, I imagine this would still be using pinned CPU memory. I would be surprised if it wasn't. But I haven't explicitly tested this so I can't 100% sure. \r\n\r\n`       # update data in pinned CPU memory, would this be still using pinned memory?\r\n       self.data_cpu.CUPYcorpus = cp.asarray(new_data) `\r\n\r\nI haven't tested this, but I don't believe this would be pinned memory. If `cp.asarray(new_data)` was pinned, then yes, it would be pinned. Perhaps a data pinner is a method I should include in the next update. But I'll need to test this to be 100% sure, by creating a large array for `cp.asarray(new_data)` and checking if the CPU or GPU memory increases. \r\n\r\nHmmm, since the data dimension is 18,3, and 16,3, I imagine that the indexing will not be too heavy, and there may not be that much of a speedup. Particularly when the slices are only a few rows. But perhaps the facebook engineer in that one link can give better insight. \r\n\r\nEither way, it's worth a test. If you do, would love to hear the results. \r\n\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/534395660",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/6#issuecomment-534395660",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/6",
        "id": 534395660,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDM5NTY2MA==",
        "user": {
            "login": "juanmed",
            "id": 21977733,
            "node_id": "MDQ6VXNlcjIxOTc3NzMz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/21977733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juanmed",
            "html_url": "https://github.com/juanmed",
            "followers_url": "https://api.github.com/users/juanmed/followers",
            "following_url": "https://api.github.com/users/juanmed/following{/other_user}",
            "gists_url": "https://api.github.com/users/juanmed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juanmed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juanmed/subscriptions",
            "organizations_url": "https://api.github.com/users/juanmed/orgs",
            "repos_url": "https://api.github.com/users/juanmed/repos",
            "events_url": "https://api.github.com/users/juanmed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juanmed/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-24T05:31:29Z",
        "updated_at": "2019-09-24T05:31:29Z",
        "author_association": "NONE",
        "body": "@Santosh-Gupta  Thanks for your reply back. Yes, that would be 4 cores in the cpu. I will try to confirm if the `self.data_cpu.CUPYcorpus = cp.asarray(new_data)` would still be using cpu pinned memory and come back with the results. Thanks!\r\n"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/534821937",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/6#issuecomment-534821937",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/6",
        "id": 534821937,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDgyMTkzNw==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-25T02:21:06Z",
        "updated_at": "2019-09-25T02:21:06Z",
        "author_association": "OWNER",
        "body": "Another approach you might want to consider is using the PyCuda and Numba indexing kernals, using a similar approach, disguising CPU pinned tensors as GPU tensors. I didn't have a chance to try this approach. "
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/539705121",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-539705121",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 539705121,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTcwNTEyMQ==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-08T21:08:23Z",
        "updated_at": "2019-10-08T21:08:23Z",
        "author_association": "OWNER",
        "body": "Hi xscjun, \r\n\r\nThat is very confusing. I am investigating by trying to recreate the issue. So far I am unable to re-create the issue in Colab. \r\n\r\nHere's the code I used\r\n\r\n```\r\n!pip install SpeedTorch\r\n#Always import cupy before SpeedTorch \r\nimport cupy\r\nimport SpeedTorch\r\nimport torch\r\nimport numpy as np\r\nimport torch.nn as nn\r\n\r\nsampl = np.random.uniform(low=-1.0, high=1.0, size=(10, 10, 10, 10))\r\nnp.save('data.npy', sampl)\r\ndel sampl\r\n\r\ngadgetGPU = SpeedTorch.DataGadget( 'data.npy', CPUPinn=True )\r\ngadgetGPU.gadgetInit()\r\n```\r\n\r\nFor convenience, here's the colab notebook I used. \r\n\r\nhttps://colab.research.google.com/drive/1TbqKwZ94p_B6q0t_orYObKsWwa7Fg0ld\r\n\r\nAre you able to recreate the issue in Colab? If so, link a notebook for further investigation. \r\n\r\nIf not, it looks like it's an issue with your system. In that case, you could provide your system information and see if we can figure out what is causing the error from that info. "
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/539783254",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-539783254",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 539783254,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTc4MzI1NA==",
        "user": {
            "login": "xscjun",
            "id": 17404857,
            "node_id": "MDQ6VXNlcjE3NDA0ODU3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17404857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xscjun",
            "html_url": "https://github.com/xscjun",
            "followers_url": "https://api.github.com/users/xscjun/followers",
            "following_url": "https://api.github.com/users/xscjun/following{/other_user}",
            "gists_url": "https://api.github.com/users/xscjun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xscjun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xscjun/subscriptions",
            "organizations_url": "https://api.github.com/users/xscjun/orgs",
            "repos_url": "https://api.github.com/users/xscjun/repos",
            "events_url": "https://api.github.com/users/xscjun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xscjun/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-09T01:48:36Z",
        "updated_at": "2019-10-09T01:48:36Z",
        "author_association": "NONE",
        "body": "> Hi xscjun,\r\n> \r\n> That is very confusing. I am investigating by trying to recreate the issue. So far I am unable to re-create the issue in Colab.\r\n> \r\n> Here's the code I used\r\n> \r\n> ```\r\n> !pip install SpeedTorch\r\n> #Always import cupy before SpeedTorch \r\n> import cupy\r\n> import SpeedTorch\r\n> import torch\r\n> import numpy as np\r\n> import torch.nn as nn\r\n> \r\n> sampl = np.random.uniform(low=-1.0, high=1.0, size=(10, 10, 10, 10))\r\n> np.save('data.npy', sampl)\r\n> del sampl\r\n> \r\n> gadgetGPU = SpeedTorch.DataGadget( 'data.npy', CPUPinn=True )\r\n> gadgetGPU.gadgetInit()\r\n> ```\r\n> \r\n> For convenience, here's the colab notebook I used.\r\n> \r\n> https://colab.research.google.com/drive/1TbqKwZ94p_B6q0t_orYObKsWwa7Fg0ld\r\n> \r\n> Are you able to recreate the issue in Colab? If so, link a notebook for further investigation.\r\n> \r\n> If not, it looks like it's an issue with your system. In that case, you could provide your system information and see if we can figure out what is causing the error from that info.\r\n\r\nThanks for your reply\uff0cIt's the python3.7 that report the error, I change the version of python to 2.7,   It's ok now."
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/539784968",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-539784968",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 539784968,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTc4NDk2OA==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-09T01:54:05Z",
        "updated_at": "2019-10-09T01:54:05Z",
        "author_association": "OWNER",
        "body": "Glad you were able to get it working. I am wondering what the cause is; I did all my testing in Python 3. "
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/539856450",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-539856450",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 539856450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTg1NjQ1MA==",
        "user": {
            "login": "xscjun",
            "id": 17404857,
            "node_id": "MDQ6VXNlcjE3NDA0ODU3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17404857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xscjun",
            "html_url": "https://github.com/xscjun",
            "followers_url": "https://api.github.com/users/xscjun/followers",
            "following_url": "https://api.github.com/users/xscjun/following{/other_user}",
            "gists_url": "https://api.github.com/users/xscjun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xscjun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xscjun/subscriptions",
            "organizations_url": "https://api.github.com/users/xscjun/orgs",
            "repos_url": "https://api.github.com/users/xscjun/repos",
            "events_url": "https://api.github.com/users/xscjun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xscjun/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-09T06:29:09Z",
        "updated_at": "2019-10-09T06:29:09Z",
        "author_association": "NONE",
        "body": "> Glad you were able to get it working. I am wondering what the cause is; I did all my testing in Python 3.\r\n\r\nI can't get it working in python3.7 ,it is confusing."
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/540213749",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-540213749",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 540213749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDIxMzc0OQ==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-09T21:42:40Z",
        "updated_at": "2019-10-09T21:42:40Z",
        "author_association": "OWNER",
        "body": "I noticed Colab has Python 3.6.8 by default, so perhaps there is something off about 3.7. \r\n\r\nAre you able to recreate the issue in Colab? Is the 'data.npy' the same as in the notebook? "
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/540337562",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-540337562",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 540337562,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDMzNzU2Mg==",
        "user": {
            "login": "xscjun",
            "id": 17404857,
            "node_id": "MDQ6VXNlcjE3NDA0ODU3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17404857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xscjun",
            "html_url": "https://github.com/xscjun",
            "followers_url": "https://api.github.com/users/xscjun/followers",
            "following_url": "https://api.github.com/users/xscjun/following{/other_user}",
            "gists_url": "https://api.github.com/users/xscjun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xscjun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xscjun/subscriptions",
            "organizations_url": "https://api.github.com/users/xscjun/orgs",
            "repos_url": "https://api.github.com/users/xscjun/repos",
            "events_url": "https://api.github.com/users/xscjun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xscjun/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-10T03:59:21Z",
        "updated_at": "2019-10-10T03:59:21Z",
        "author_association": "NONE",
        "body": "> I noticed Colab has Python 3.6.8 by default, so perhaps there is something off about 3.7.\r\n> \r\n> Are you able to recreate the issue in Colab? Is the 'data.npy' the same as in the notebook?\r\n\r\nThe 'data.npy' is the same as in the notebook. I haven't recreate the issue in Colab"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/570901231",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-570901231",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 570901231,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDkwMTIzMQ==",
        "user": {
            "login": "Approximetal",
            "id": 25227045,
            "node_id": "MDQ6VXNlcjI1MjI3MDQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25227045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Approximetal",
            "html_url": "https://github.com/Approximetal",
            "followers_url": "https://api.github.com/users/Approximetal/followers",
            "following_url": "https://api.github.com/users/Approximetal/following{/other_user}",
            "gists_url": "https://api.github.com/users/Approximetal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Approximetal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Approximetal/subscriptions",
            "organizations_url": "https://api.github.com/users/Approximetal/orgs",
            "repos_url": "https://api.github.com/users/Approximetal/repos",
            "events_url": "https://api.github.com/users/Approximetal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Approximetal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-05T11:12:19Z",
        "updated_at": "2020-01-05T11:12:19Z",
        "author_association": "NONE",
        "body": "I got OOM error, how can I deel with it? BTY,  how can I load multiple data in one container\uff1f\r\n`gadgetGPU = SpeedTorch.DataGadget(target_mel)\r\ngadgetGPU.gadgetInit()\r\nTraceback (most recent call last):\r\n  File \"/home/zzy/anaconda3/envs/StarGAN-VC/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 3326, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-19-226edd99569f>\", line 1, in <module>\r\n    gadgetGPU.gadgetInit()\r\n  File \"/home/zzy/anaconda3/envs/StarGAN-VC/lib/python3.6/site-packages/SpeedTorch/CUPYLive.py\", line 265, in gadgetInit\r\n    self.CUPYcorpus = cupy.load( self.fileName)\r\n  File \"/home/zzy/anaconda3/envs/StarGAN-VC/lib/python3.6/site-packages/cupy/io/npz.py\", line 71, in load\r\n    return cupy.array(obj)\r\n  File \"/home/zzy/anaconda3/envs/StarGAN-VC/lib/python3.6/site-packages/cupy/creation/from_data.py\", line 43, in array\r\n    return core.array(obj, dtype, copy, order, subok, ndmin)\r\n  File \"cupy/core/core.pyx\", line 1768, in cupy.core.core.array\r\n  File \"cupy/core/core.pyx\", line 1845, in cupy.core.core.array\r\n  File \"cupy/core/core.pyx\", line 1920, in cupy.core.core._send_object_to_gpu\r\n  File \"cupy/core/core.pyx\", line 134, in cupy.core.core.ndarray.__init__\r\n  File \"cupy/cuda/memory.pyx\", line 540, in cupy.cuda.memory.alloc\r\n  File \"cupy/cuda/memory.pyx\", line 1234, in cupy.cuda.memory.MemoryPool.malloc\r\n  File \"cupy/cuda/memory.pyx\", line 1255, in cupy.cuda.memory.MemoryPool.malloc\r\n  File \"cupy/cuda/memory.pyx\", line 1033, in cupy.cuda.memory.SingleDeviceMemoryPool.malloc\r\n  File \"cupy/cuda/memory.pyx\", line 1053, in cupy.cuda.memory.SingleDeviceMemoryPool._malloc\r\n  File \"cupy/cuda/memory.pyx\", line 775, in cupy.cuda.memory._try_malloc\r\ncupy.cuda.memory.OutOfMemoryError: Out of memory allocating 86,528 bytes (allocated so far: 0 bytes).`\r\n"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/570944080",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-570944080",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 570944080,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDk0NDA4MA==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-05T20:20:47Z",
        "updated_at": "2020-01-05T20:20:47Z",
        "author_association": "OWNER",
        "body": "> I got OOM error, how can I deel with it? BTY, how can I load multiple data in one container\uff1f\r\n> `gadgetGPU = SpeedTorch.DataGadget(target_mel) gadgetGPU.gadgetInit() Traceback (most recent call last): File \"/home/zzy/anaconda3/envs/StarGAN-VC/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 3326, in run_code exec(code_obj, self.user_global_ns, self.user_ns) File \"<ipython-input-19-226edd99569f>\", line 1, in <module> gadgetGPU.gadgetInit() File \"/home/zzy/anaconda3/envs/StarGAN-VC/lib/python3.6/site-packages/SpeedTorch/CUPYLive.py\", line 265, in gadgetInit self.CUPYcorpus = cupy.load( self.fileName) File \"/home/zzy/anaconda3/envs/StarGAN-VC/lib/python3.6/site-packages/cupy/io/npz.py\", line 71, in load return cupy.array(obj) File \"/home/zzy/anaconda3/envs/StarGAN-VC/lib/python3.6/site-packages/cupy/creation/from_data.py\", line 43, in array return core.array(obj, dtype, copy, order, subok, ndmin) File \"cupy/core/core.pyx\", line 1768, in cupy.core.core.array File \"cupy/core/core.pyx\", line 1845, in cupy.core.core.array File \"cupy/core/core.pyx\", line 1920, in cupy.core.core._send_object_to_gpu File \"cupy/core/core.pyx\", line 134, in cupy.core.core.ndarray.__init__ File \"cupy/cuda/memory.pyx\", line 540, in cupy.cuda.memory.alloc File \"cupy/cuda/memory.pyx\", line 1234, in cupy.cuda.memory.MemoryPool.malloc File \"cupy/cuda/memory.pyx\", line 1255, in cupy.cuda.memory.MemoryPool.malloc File \"cupy/cuda/memory.pyx\", line 1033, in cupy.cuda.memory.SingleDeviceMemoryPool.malloc File \"cupy/cuda/memory.pyx\", line 1053, in cupy.cuda.memory.SingleDeviceMemoryPool._malloc File \"cupy/cuda/memory.pyx\", line 775, in cupy.cuda.memory._try_malloc cupy.cuda.memory.OutOfMemoryError: Out of memory allocating 86,528 bytes (allocated so far: 0 bytes).`\r\n\r\nCan you make a colab that reproduces this error? That way I can interact with the bug. \r\n\r\n>BTY, how can I load multiple data in one container\uff1f\r\n\r\nI haven't put that feature in, but I can put it in. So you would want \r\n`ModelFactoryObject.loadCupy( loadFileName)` for the first dataset, and then \r\nfor new datasets. something like\r\n`ModelFactoryObject.appendCupy( loadFileName2)`  \r\n\r\n?"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/570980303",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-570980303",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 570980303,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDk4MDMwMw==",
        "user": {
            "login": "Approximetal",
            "id": 25227045,
            "node_id": "MDQ6VXNlcjI1MjI3MDQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25227045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Approximetal",
            "html_url": "https://github.com/Approximetal",
            "followers_url": "https://api.github.com/users/Approximetal/followers",
            "following_url": "https://api.github.com/users/Approximetal/following{/other_user}",
            "gists_url": "https://api.github.com/users/Approximetal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Approximetal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Approximetal/subscriptions",
            "organizations_url": "https://api.github.com/users/Approximetal/orgs",
            "repos_url": "https://api.github.com/users/Approximetal/repos",
            "events_url": "https://api.github.com/users/Approximetal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Approximetal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-06T02:29:54Z",
        "updated_at": "2020-01-06T02:30:16Z",
        "author_association": "NONE",
        "body": "import cupy\r\nimport SpeedTorch\r\ngadgetGPU = SpeedTorch.DataGadget('mel-20170001P00084I0004.npy')\r\ngadgetGPU.gadgetInit()\r\n[mel-20170001P00084I0004.zip](https://github.com/Santosh-Gupta/SpeedTorch/files/4024469/mel-20170001P00084I0004.zip)\r\nIt seems `gadgetGPU.gadgetInit()`will result this error no matter which data I load."
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/571009776",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-571009776",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 571009776,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTAwOTc3Ng==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-06T05:31:01Z",
        "updated_at": "2020-01-06T05:31:01Z",
        "author_association": "OWNER",
        "body": "It looks like the data format is incorrect. It looks like there's an issue with how you're saving the data, and/or how your zipping the file. \r\n\r\nCheckout this notebook, which saves and loads numpy data \r\n\r\nhttps://colab.research.google.com/drive/185Z5Gi62AZxh-EeMfrTtjqxEifHOBXxF\r\n\r\nTry using numpy.save to directly save your data into a numpy format file. "
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/571435726",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-571435726",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 571435726,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTQzNTcyNg==",
        "user": {
            "login": "Approximetal",
            "id": 25227045,
            "node_id": "MDQ6VXNlcjI1MjI3MDQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25227045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Approximetal",
            "html_url": "https://github.com/Approximetal",
            "followers_url": "https://api.github.com/users/Approximetal/followers",
            "following_url": "https://api.github.com/users/Approximetal/following{/other_user}",
            "gists_url": "https://api.github.com/users/Approximetal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Approximetal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Approximetal/subscriptions",
            "organizations_url": "https://api.github.com/users/Approximetal/orgs",
            "repos_url": "https://api.github.com/users/Approximetal/repos",
            "events_url": "https://api.github.com/users/Approximetal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Approximetal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-07T05:04:59Z",
        "updated_at": "2020-01-07T05:06:16Z",
        "author_association": "NONE",
        "body": "> It looks like the data format is incorrect. It looks like there's an issue with how you're saving the data, and/or how your zipping the file.\r\n> \r\n> Checkout this notebook, which saves and loads numpy data\r\n> \r\n> https://colab.research.google.com/drive/185Z5Gi62AZxh-EeMfrTtjqxEifHOBXxF\r\n> \r\n> Try using numpy.save to directly save your data into a numpy format file.\r\n\r\nIt seems hard to change the data formate as my model has trained for a long time... Is there any method I can transfer data from CPU to your container? Or is there any method can replace torch.utils.data.Dataloader in pytorch? For example I've already preprocessed my data and saved it in a list. "
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/571436557",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-571436557",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 571436557,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTQzNjU1Nw==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-07T05:09:03Z",
        "updated_at": "2020-01-07T05:09:03Z",
        "author_association": "OWNER",
        "body": "Yup, I forgot the exact commands, but you can access your embedding data and mount them to CPU, in numpy form. It looks something like this  YourModel.YourEmbeddingVariable.Weight.data.cpu().numpy() \r\n\r\ndetails\r\n\r\nhttps://discuss.pytorch.org/t/how-to-transform-variable-into-numpy/104/5"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/571454175",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-571454175",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 571454175,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTQ1NDE3NQ==",
        "user": {
            "login": "Approximetal",
            "id": 25227045,
            "node_id": "MDQ6VXNlcjI1MjI3MDQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25227045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Approximetal",
            "html_url": "https://github.com/Approximetal",
            "followers_url": "https://api.github.com/users/Approximetal/followers",
            "following_url": "https://api.github.com/users/Approximetal/following{/other_user}",
            "gists_url": "https://api.github.com/users/Approximetal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Approximetal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Approximetal/subscriptions",
            "organizations_url": "https://api.github.com/users/Approximetal/orgs",
            "repos_url": "https://api.github.com/users/Approximetal/repos",
            "events_url": "https://api.github.com/users/Approximetal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Approximetal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-07T06:25:39Z",
        "updated_at": "2020-01-07T06:41:05Z",
        "author_association": "NONE",
        "body": "> Yup, I forgot the exact commands, but you can access your embedding data and mount them to CPU, in numpy form. It looks something like this YourModel.YourEmbeddingVariable.Weight.data.cpu().numpy()\r\n> \r\n> details\r\n> \r\n> https://discuss.pytorch.org/t/how-to-transform-variable-into-numpy/104/5\r\n\r\nCan't open the link... I don't mean the embedding data like weight or parameters in model, I mean the training data, a set of data loaded in CPU, the time cost usually waste on loading batch from CPU to GPU. So I was wondering if I could save training data in speedtorch. It will helpful if there is a document to explain those functions in speedtorch."
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/571500729",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-571500729",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 571500729,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTUwMDcyOQ==",
        "user": {
            "login": "Approximetal",
            "id": 25227045,
            "node_id": "MDQ6VXNlcjI1MjI3MDQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25227045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Approximetal",
            "html_url": "https://github.com/Approximetal",
            "followers_url": "https://api.github.com/users/Approximetal/followers",
            "following_url": "https://api.github.com/users/Approximetal/following{/other_user}",
            "gists_url": "https://api.github.com/users/Approximetal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Approximetal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Approximetal/subscriptions",
            "organizations_url": "https://api.github.com/users/Approximetal/orgs",
            "repos_url": "https://api.github.com/users/Approximetal/repos",
            "events_url": "https://api.github.com/users/Approximetal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Approximetal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-07T09:11:53Z",
        "updated_at": "2020-01-07T09:12:20Z",
        "author_association": "NONE",
        "body": "Thank you for replying! I can load files by using speedtorch now. But cupy doesn't support multi-thread, so I have to modify the thread from 8 to 1, after that, the time cost is even longer......"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/571502165",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-571502165",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 571502165,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTUwMjE2NQ==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-07T09:15:53Z",
        "updated_at": "2020-01-07T09:15:53Z",
        "author_association": "OWNER",
        "body": "Yes, as long as the data is saved in numpy format, data gadget can open it, or your could transfer live data onto there. If you give me a colab notebook which loads your data, I can tinker around with it. I think the easiest way to do this to upload your data onto google drive, then use `!gdown --id` followed by the google drive id to download it directly to your notebook. \r\n\r\nThere's documentation at the bottom of the readme, and here's a colab notebook which shows how to use the data gadget:\r\n\r\nhttps://colab.research.google.com/drive/1TbqKwZ94p_B6q0t_orYObKsWwa7Fg0ld"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/571502795",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-571502795",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 571502795,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTUwMjc5NQ==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-07T09:17:38Z",
        "updated_at": "2020-01-07T09:17:38Z",
        "author_association": "OWNER",
        "body": "> Thank you for replying! I can load files by using speedtorch now. But cupy doesn't support multi-thread, so I have to modify the thread from 8 to 1, after that, the time cost is even longer......\r\n\r\nHow many cores is your CPU? The main speedtorch advantages are for a lower number of CPUs like, 1-4. After that, Pytorches indexing kernals become more efficient. \r\n\r\nI would love to see a colab version of your code, maybe i can tinker a bit"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/572892733",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-572892733",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 572892733,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3Mjg5MjczMw==",
        "user": {
            "login": "Approximetal",
            "id": 25227045,
            "node_id": "MDQ6VXNlcjI1MjI3MDQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25227045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Approximetal",
            "html_url": "https://github.com/Approximetal",
            "followers_url": "https://api.github.com/users/Approximetal/followers",
            "following_url": "https://api.github.com/users/Approximetal/following{/other_user}",
            "gists_url": "https://api.github.com/users/Approximetal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Approximetal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Approximetal/subscriptions",
            "organizations_url": "https://api.github.com/users/Approximetal/orgs",
            "repos_url": "https://api.github.com/users/Approximetal/repos",
            "events_url": "https://api.github.com/users/Approximetal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Approximetal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-10T06:25:53Z",
        "updated_at": "2020-01-10T06:28:12Z",
        "author_association": "NONE",
        "body": "> > Thank you for replying! I can load files by using speedtorch now. But cupy doesn't support multi-thread, so I have to modify the thread from 8 to 1, after that, the time cost is even longer......\r\n> \r\n> How many cores is your CPU? The main speedtorch advantages are for a lower number of CPUs like, 1-4. After that, Pytorches indexing kernals become more efficient.\r\n> \r\n> I would love to see a colab version of your code, maybe i can tinker a bit\r\n\r\nMy CPU info: 8  Intel(R) Xeon(R) W-2123 CPU @ 3.60GHz\r\nThe model I use is based on https://github.com/NVIDIA/tacotron2\r\nAnd I replaced  [this line](https://github.com/NVIDIA/tacotron2/blob/6d0635e8c12bcd450fe8b65a40cecb917955b7bd/data_utils.py#L49) by using\r\n> melspec = SpeedTorch.DataGadget(full_path)\r\n> melspec.gadgetInit()\r\n> melspec = melspec.getData()\r\n\r\n(BTW, I don't know how to get full Data, so I modified `getData()` and removed the parameter `index`)"
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/572893196",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-572893196",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 572893196,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3Mjg5MzE5Ng==",
        "user": {
            "login": "Santosh-Gupta",
            "id": 5524261,
            "node_id": "MDQ6VXNlcjU1MjQyNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5524261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Santosh-Gupta",
            "html_url": "https://github.com/Santosh-Gupta",
            "followers_url": "https://api.github.com/users/Santosh-Gupta/followers",
            "following_url": "https://api.github.com/users/Santosh-Gupta/following{/other_user}",
            "gists_url": "https://api.github.com/users/Santosh-Gupta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Santosh-Gupta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Santosh-Gupta/subscriptions",
            "organizations_url": "https://api.github.com/users/Santosh-Gupta/orgs",
            "repos_url": "https://api.github.com/users/Santosh-Gupta/repos",
            "events_url": "https://api.github.com/users/Santosh-Gupta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Santosh-Gupta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-10T06:28:02Z",
        "updated_at": "2020-01-10T06:28:02Z",
        "author_association": "OWNER",
        "body": "How many cores does that CPU have? I can't seem to look it up. \r\n\r\nI'm not too familiar with that model. But with a colab notebook perhaps I can tinker around. "
    },
    {
        "url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/comments/572922486",
        "html_url": "https://github.com/Santosh-Gupta/SpeedTorch/issues/7#issuecomment-572922486",
        "issue_url": "https://api.github.com/repos/Santosh-Gupta/SpeedTorch/issues/7",
        "id": 572922486,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MjkyMjQ4Ng==",
        "user": {
            "login": "Approximetal",
            "id": 25227045,
            "node_id": "MDQ6VXNlcjI1MjI3MDQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25227045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Approximetal",
            "html_url": "https://github.com/Approximetal",
            "followers_url": "https://api.github.com/users/Approximetal/followers",
            "following_url": "https://api.github.com/users/Approximetal/following{/other_user}",
            "gists_url": "https://api.github.com/users/Approximetal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Approximetal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Approximetal/subscriptions",
            "organizations_url": "https://api.github.com/users/Approximetal/orgs",
            "repos_url": "https://api.github.com/users/Approximetal/repos",
            "events_url": "https://api.github.com/users/Approximetal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Approximetal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-10T08:13:57Z",
        "updated_at": "2020-01-10T08:13:57Z",
        "author_association": "NONE",
        "body": "> How many cores does that CPU have? I can't seem to look it up.\r\n> \r\n> I'm not too familiar with that model. But with a colab notebook perhaps I can tinker around.\r\n\r\n4 cores. I'm afraid I can't upload the model on colab, every time I open that link, my computer is about to freeze......"
    }
]