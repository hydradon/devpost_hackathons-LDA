[
    {
        "url": "https://api.github.com/repos/ee08b397/buzz/issues/comments/94170994",
        "html_url": "https://github.com/ee08b397/buzz/issues/4#issuecomment-94170994",
        "issue_url": "https://api.github.com/repos/ee08b397/buzz/issues/4",
        "id": 94170994,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTcwOTk0",
        "user": {
            "login": "galarant",
            "id": 1584607,
            "node_id": "MDQ6VXNlcjE1ODQ2MDc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1584607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galarant",
            "html_url": "https://github.com/galarant",
            "followers_url": "https://api.github.com/users/galarant/followers",
            "following_url": "https://api.github.com/users/galarant/following{/other_user}",
            "gists_url": "https://api.github.com/users/galarant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galarant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galarant/subscriptions",
            "organizations_url": "https://api.github.com/users/galarant/orgs",
            "repos_url": "https://api.github.com/users/galarant/repos",
            "events_url": "https://api.github.com/users/galarant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galarant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-18T14:54:15Z",
        "updated_at": "2015-04-18T14:54:15Z",
        "author_association": "COLLABORATOR",
        "body": "for both @pkarp0 and me\n"
    },
    {
        "url": "https://api.github.com/repos/ee08b397/buzz/issues/comments/94171233",
        "html_url": "https://github.com/ee08b397/buzz/issues/3#issuecomment-94171233",
        "issue_url": "https://api.github.com/repos/ee08b397/buzz/issues/3",
        "id": 94171233,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTcxMjMz",
        "user": {
            "login": "ee08b397",
            "id": 4334970,
            "node_id": "MDQ6VXNlcjQzMzQ5NzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4334970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ee08b397",
            "html_url": "https://github.com/ee08b397",
            "followers_url": "https://api.github.com/users/ee08b397/followers",
            "following_url": "https://api.github.com/users/ee08b397/following{/other_user}",
            "gists_url": "https://api.github.com/users/ee08b397/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ee08b397/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ee08b397/subscriptions",
            "organizations_url": "https://api.github.com/users/ee08b397/orgs",
            "repos_url": "https://api.github.com/users/ee08b397/repos",
            "events_url": "https://api.github.com/users/ee08b397/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ee08b397/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-18T14:58:41Z",
        "updated_at": "2015-04-18T14:59:50Z",
        "author_association": "OWNER",
        "body": "My parser is bug-free, walrus can load out properly, but not render properly, exception raised\n\nIt turns out the examples in docs/graph-example.txt are not working. \nwalrus can load the examples but but cannot render properly, same exception raised\n\nException in thread \"AWT-EventQueue-0\" java.lang.IllegalArgumentException: spanning tree qualifier `null' not found\n    at H3GraphLoader.findSpanningTreeQualifierAttributes(H3GraphLoader.java:118)\n    at H3GraphLoader.load(H3GraphLoader.java:61)\n    at H3Main.setupRendering(H3Main.java:958)\n    at H3Main.handleStartRenderingRequest(H3Main.java:346)\n    at H3Main.access$1000(H3Main.java:39)\n    at H3Main$5.actionPerformed(H3Main.java:1677)\n    at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2022)\n    at javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2346)\n    at javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:402)\n    at javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:259)\n    at javax.swing.AbstractButton.doClick(AbstractButton.java:376)\n    at javax.swing.plaf.basic.BasicMenuItemUI.doClick(BasicMenuItemUI.java:833)\n    at javax.swing.plaf.basic.BasicMenuItemUI$Handler.mouseReleased(BasicMenuItemUI.java:877)\n    at java.awt.Component.processMouseEvent(Component.java:6525)\n    at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)\n    at java.awt.Component.processEvent(Component.java:6290)\n    at java.awt.Container.processEvent(Container.java:2234)\n    at java.awt.Component.dispatchEventImpl(Component.java:4881)\n    at java.awt.Container.dispatchEventImpl(Container.java:2292)\n    at java.awt.Component.dispatchEvent(Component.java:4703)\n    at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4898)\n    at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4533)\n    at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4462)\n    at java.awt.Container.dispatchEventImpl(Container.java:2278)\n    at java.awt.Window.dispatchEventImpl(Window.java:2750)\n    at java.awt.Component.dispatchEvent(Component.java:4703)\n    at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)\n    at java.awt.EventQueue.access$500(EventQueue.java:97)\n    at java.awt.EventQueue$3.run(EventQueue.java:709)\n    at java.awt.EventQueue$3.run(EventQueue.java:703)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)\n    at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:86)\n    at java.awt.EventQueue$4.run(EventQueue.java:731)\n    at java.awt.EventQueue$4.run(EventQueue.java:729)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)\n    at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\n"
    },
    {
        "url": "https://api.github.com/repos/ee08b397/buzz/issues/comments/94171388",
        "html_url": "https://github.com/ee08b397/buzz/issues/6#issuecomment-94171388",
        "issue_url": "https://api.github.com/repos/ee08b397/buzz/issues/6",
        "id": 94171388,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTcxMzg4",
        "user": {
            "login": "ee08b397",
            "id": 4334970,
            "node_id": "MDQ6VXNlcjQzMzQ5NzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4334970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ee08b397",
            "html_url": "https://github.com/ee08b397",
            "followers_url": "https://api.github.com/users/ee08b397/followers",
            "following_url": "https://api.github.com/users/ee08b397/following{/other_user}",
            "gists_url": "https://api.github.com/users/ee08b397/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ee08b397/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ee08b397/subscriptions",
            "organizations_url": "https://api.github.com/users/ee08b397/orgs",
            "repos_url": "https://api.github.com/users/ee08b397/repos",
            "events_url": "https://api.github.com/users/ee08b397/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ee08b397/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-18T15:02:01Z",
        "updated_at": "2015-04-18T15:02:11Z",
        "author_association": "OWNER",
        "body": "got this done: iterate json and get # nodes and # links, by list and dictionary \n\nif the dataset is too large, we can separate this module and compute the 2 numbers before parsing. \n"
    },
    {
        "url": "https://api.github.com/repos/ee08b397/buzz/issues/comments/94171719",
        "html_url": "https://github.com/ee08b397/buzz/issues/5#issuecomment-94171719",
        "issue_url": "https://api.github.com/repos/ee08b397/buzz/issues/5",
        "id": 94171719,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTcxNzE5",
        "user": {
            "login": "galarant",
            "id": 1584607,
            "node_id": "MDQ6VXNlcjE1ODQ2MDc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1584607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galarant",
            "html_url": "https://github.com/galarant",
            "followers_url": "https://api.github.com/users/galarant/followers",
            "following_url": "https://api.github.com/users/galarant/following{/other_user}",
            "gists_url": "https://api.github.com/users/galarant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galarant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galarant/subscriptions",
            "organizations_url": "https://api.github.com/users/galarant/orgs",
            "repos_url": "https://api.github.com/users/galarant/repos",
            "events_url": "https://api.github.com/users/galarant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galarant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-18T15:05:16Z",
        "updated_at": "2015-04-18T15:05:16Z",
        "author_association": "COLLABORATOR",
        "body": "this should parse data into the walrus input format as it iterates\n"
    },
    {
        "url": "https://api.github.com/repos/ee08b397/buzz/issues/comments/94178917",
        "html_url": "https://github.com/ee08b397/buzz/issues/3#issuecomment-94178917",
        "issue_url": "https://api.github.com/repos/ee08b397/buzz/issues/3",
        "id": 94178917,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTc4OTE3",
        "user": {
            "login": "ee08b397",
            "id": 4334970,
            "node_id": "MDQ6VXNlcjQzMzQ5NzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4334970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ee08b397",
            "html_url": "https://github.com/ee08b397",
            "followers_url": "https://api.github.com/users/ee08b397/followers",
            "following_url": "https://api.github.com/users/ee08b397/following{/other_user}",
            "gists_url": "https://api.github.com/users/ee08b397/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ee08b397/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ee08b397/subscriptions",
            "organizations_url": "https://api.github.com/users/ee08b397/orgs",
            "repos_url": "https://api.github.com/users/ee08b397/repos",
            "events_url": "https://api.github.com/users/ee08b397/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ee08b397/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-18T16:32:01Z",
        "updated_at": "2015-04-18T16:32:01Z",
        "author_association": "OWNER",
        "body": "@qualifiers is required to config the root node and spanning tree type\n"
    },
    {
        "url": "https://api.github.com/repos/ee08b397/buzz/issues/comments/94179690",
        "html_url": "https://github.com/ee08b397/buzz/issues/12#issuecomment-94179690",
        "issue_url": "https://api.github.com/repos/ee08b397/buzz/issues/12",
        "id": 94179690,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTc5Njkw",
        "user": {
            "login": "ee08b397",
            "id": 4334970,
            "node_id": "MDQ6VXNlcjQzMzQ5NzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4334970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ee08b397",
            "html_url": "https://github.com/ee08b397",
            "followers_url": "https://api.github.com/users/ee08b397/followers",
            "following_url": "https://api.github.com/users/ee08b397/following{/other_user}",
            "gists_url": "https://api.github.com/users/ee08b397/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ee08b397/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ee08b397/subscriptions",
            "organizations_url": "https://api.github.com/users/ee08b397/orgs",
            "repos_url": "https://api.github.com/users/ee08b397/repos",
            "events_url": "https://api.github.com/users/ee08b397/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ee08b397/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-18T16:40:54Z",
        "updated_at": "2015-04-18T16:40:54Z",
        "author_association": "OWNER",
        "body": "bfs would be used to connect all trees that are not connected, by a fake node\n"
    },
    {
        "url": "https://api.github.com/repos/ee08b397/buzz/issues/comments/94188506",
        "html_url": "https://github.com/ee08b397/buzz/issues/12#issuecomment-94188506",
        "issue_url": "https://api.github.com/repos/ee08b397/buzz/issues/12",
        "id": 94188506,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTg4NTA2",
        "user": {
            "login": "ee08b397",
            "id": 4334970,
            "node_id": "MDQ6VXNlcjQzMzQ5NzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4334970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ee08b397",
            "html_url": "https://github.com/ee08b397",
            "followers_url": "https://api.github.com/users/ee08b397/followers",
            "following_url": "https://api.github.com/users/ee08b397/following{/other_user}",
            "gists_url": "https://api.github.com/users/ee08b397/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ee08b397/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ee08b397/subscriptions",
            "organizations_url": "https://api.github.com/users/ee08b397/orgs",
            "repos_url": "https://api.github.com/users/ee08b397/repos",
            "events_url": "https://api.github.com/users/ee08b397/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ee08b397/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-18T18:14:08Z",
        "updated_at": "2015-04-20T19:24:12Z",
        "author_association": "OWNER",
        "body": "brute force: \nget all parent-less nodes \ncreate a fake node that's not in the original file\nconnect all parent-less nodes with the fake node\n\ndone! now we can load and render some edges from edges.json successfully \n"
    },
    {
        "url": "https://api.github.com/repos/ee08b397/buzz/issues/comments/94546347",
        "html_url": "https://github.com/ee08b397/buzz/issues/12#issuecomment-94546347",
        "issue_url": "https://api.github.com/repos/ee08b397/buzz/issues/12",
        "id": 94546347,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTQ2MzQ3",
        "user": {
            "login": "ee08b397",
            "id": 4334970,
            "node_id": "MDQ6VXNlcjQzMzQ5NzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4334970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ee08b397",
            "html_url": "https://github.com/ee08b397",
            "followers_url": "https://api.github.com/users/ee08b397/followers",
            "following_url": "https://api.github.com/users/ee08b397/following{/other_user}",
            "gists_url": "https://api.github.com/users/ee08b397/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ee08b397/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ee08b397/subscriptions",
            "organizations_url": "https://api.github.com/users/ee08b397/orgs",
            "repos_url": "https://api.github.com/users/ee08b397/repos",
            "events_url": "https://api.github.com/users/ee08b397/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ee08b397/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T19:23:21Z",
        "updated_at": "2015-04-20T19:23:21Z",
        "author_association": "OWNER",
        "body": "# Current status\n\nCurrent status: first 409 edges can be rendered properly, problem pops when loading the 410th. Except some hard constraints listed in the official doc, we learnt some \"hidden constraints\" during our experience in walrus :+1: , such as sorting parent and child nodes in the edge list is required. \n\n# What's the problem\n\nAfter some tweaks, now I can reproduce the problem, LOL: if the node id is not a continuous list (let's say, node i is not in the list while (i-1) and (i+1) exists), walrus wouldn't consider the edge list as a spanning tree. (same pop-up as the first listed in here: walrus require the selected spanning tree cover all nodes, it means no spare node or spare tree)\n\nTo prove my finding, make 2 simple modifications in /samples/simple2.graph. (explain the edges.json directly is too confusing)\nchange line 6,\n\n```\n@numNodes=15;\n```\n\nto \n\n```\n@numNodes=16;\n```\n\nand change line 28 \n\n```\n{ @source=14; @destination=0; },\n```\n\nto\n\n```\n{ @source=15; @destination=0; },\n```\n\nThen we got the same issue when I load the first 410th edges\n![image](https://cloud.githubusercontent.com/assets/4334970/7237912/d3012418-e76c-11e4-9dba-939cce9aba71.png)\n\n# The reason\n\nDuring loading, @numNodes is actually the value of ( max(node_id) + 1 ), not the total number of nodes in the spanning tree. If we don't change line 6, loading file would fail and claiming node id exceeding id < 15. I also tried change the @linkValues list for the id index, but it didn't work;\n\nWhile during rendering, @numNodes means the total number of nodes in the spanning tree, otherwise it complain there's free nodes or free tress. In a word, the node id list (with n nodes) needs to be a list of integers [0, ... , n], without any integer i that 0 < i < n and doesn't exist in the list. \n\n# Proposed solution\n\nStoring all node id as a set and get all \"wholes\" in the full list, \n\nMethod 1. brute force: truncate id down\nspace 2n, time n^2\n\nMethod 2: swap largest ids with these \"wholes\"\nspace n, time n\n\nI can smell this is the last step before we can load all edges ... LOL\n"
    },
    {
        "url": "https://api.github.com/repos/ee08b397/buzz/issues/comments/94555134",
        "html_url": "https://github.com/ee08b397/buzz/issues/12#issuecomment-94555134",
        "issue_url": "https://api.github.com/repos/ee08b397/buzz/issues/12",
        "id": 94555134,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTU1MTM0",
        "user": {
            "login": "galarant",
            "id": 1584607,
            "node_id": "MDQ6VXNlcjE1ODQ2MDc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1584607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galarant",
            "html_url": "https://github.com/galarant",
            "followers_url": "https://api.github.com/users/galarant/followers",
            "following_url": "https://api.github.com/users/galarant/following{/other_user}",
            "gists_url": "https://api.github.com/users/galarant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galarant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galarant/subscriptions",
            "organizations_url": "https://api.github.com/users/galarant/orgs",
            "repos_url": "https://api.github.com/users/galarant/repos",
            "events_url": "https://api.github.com/users/galarant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galarant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T20:06:23Z",
        "updated_at": "2015-04-20T20:06:23Z",
        "author_association": "COLLABORATOR",
        "body": "Awesome!!\n\nOn Mon, Apr 20, 2015 at 3:23 PM, Songxiao Zhang notifications@github.com\nwrote:\n\n> Current status\n> \n> Current status: first 409 edges can be rendered properly, problem pops\n> when loading the 410th. Except some hard constraints listed in the official\n> doc, we learnt some \"hidden constraints\" during our experience in walrus [image:\n> :+1:] , such as sorting parent and child nodes in the edge list is\n> required.\n> What's the problem\n> \n> After some tweaks, now I can reproduce the problem, LOL: if the node id is\n> not a continuous list (let's say, node i is not in the list while (i-1) and\n> (i+1) exists), walrus wouldn't consider the edge list as a spanning tree.\n> (same pop-up as the first listed in here: walrus require the selected\n> spanning tree cover all nodes, it means no spare node or spare tree)\n> \n> To prove my finding, make 2 simple modifications in\n> /samples/simple2.graph. (explain the edges.json directly is too confusing)\n> change line 6,\n> \n> @numNodes=15;\n> \n> to\n> \n> @numNodes=16;\n> \n> and change line 28\n> \n> { @source=14; @destination=0; },\n> \n> to\n> \n> { @source=15; @destination=0; },\n> \n> Then we got the same issue when I load the first 410th edges\n> [image: image]\n> https://cloud.githubusercontent.com/assets/4334970/7237912/d3012418-e76c-11e4-9dba-939cce9aba71.png\n> The reason\n> \n> During loading, @numNodes is actually the value of ( max(node_id) + 1 ),\n> not the total number of nodes in the spanning tree. If we don't change line\n> 6, loading file would fail and claiming node id exceeding id < 15. I also\n> tried change the @linkValues list for the id index, but it didn't work;\n> \n> While during rendering, @numNodes means the total number of nodes in the\n> spanning tree, otherwise it complain there's free nodes or free tress. In a\n> word, the node id list (with n nodes) needs to be a list of integers [0,\n> ... , n], without any integer i that 0 < i < n and doesn't exist in the\n> list.\n> Proposed solution\n> \n> Storing all node id as a set and get all \"wholes\" in the full list,\n> \n> Method 1. brute force: truncate id down\n> space 2n, time n^2\n> \n> Method 2: swap largest ids with these \"wholes\"\n> space n, time n\n> \n> I can smell this is the last step before we can load all edges ... LOL\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/ee08b397/buzz/issues/12#issuecomment-94546347.\n"
    },
    {
        "url": "https://api.github.com/repos/ee08b397/buzz/issues/comments/95355843",
        "html_url": "https://github.com/ee08b397/buzz/issues/12#issuecomment-95355843",
        "issue_url": "https://api.github.com/repos/ee08b397/buzz/issues/12",
        "id": 95355843,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk1MzU1ODQz",
        "user": {
            "login": "ee08b397",
            "id": 4334970,
            "node_id": "MDQ6VXNlcjQzMzQ5NzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4334970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ee08b397",
            "html_url": "https://github.com/ee08b397",
            "followers_url": "https://api.github.com/users/ee08b397/followers",
            "following_url": "https://api.github.com/users/ee08b397/following{/other_user}",
            "gists_url": "https://api.github.com/users/ee08b397/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ee08b397/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ee08b397/subscriptions",
            "organizations_url": "https://api.github.com/users/ee08b397/orgs",
            "repos_url": "https://api.github.com/users/ee08b397/repos",
            "events_url": "https://api.github.com/users/ee08b397/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ee08b397/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-22T22:25:17Z",
        "updated_at": "2015-04-22T22:25:17Z",
        "author_association": "OWNER",
        "body": "## First 1316 edges loaded and rendered\n\n![screenshot from 2015-04-22 17 53 42](https://cloud.githubusercontent.com/assets/4334970/7286504/77c924f6-e91a-11e4-8f24-71e82e3a3639.png)\n\n#### Analysis\n\nInstead of implementing the 2 methods I mentioned above, both require  \n- traversing either all edges or vertices (time consuming)\n- storing information about either all edges or vertices (space consuming)\n\n#### Implementation\n\nWhat I came up with 1 hour ago was adding dummy nodes for unused node ids that are smaller than max node id. And then chain these dummy node ids together, then its root attach to the (root.id - 1). I called them \"accessory edges\" and added them to the edge list. And to get the used node ids, the code is very clean\n\n```\n 85  print(set(range(max(all_ids) + 1)) - set(all_ids))\n```\n\nIt's quite similar to get duplicates\n\n```\n 64  print \"\\n\\n\" + str(all_ids - set(range(mxv)))\n```\n\nCode pushed to my branch. This implementation also minimize the effect of changing the general shape of the graph. Just remember to paint them as transparent :+1: \n\n#### Next step\n\nThere's still something wrong rendering the 1317th edge. I don't know what's wrong, yet. I'll figure it out and then think about possible solutions.  \n\n![screenshot from 2015-04-22 17 44 59](https://cloud.githubusercontent.com/assets/4334970/7286631/654178b4-e91b-11e4-8c26-06e971a9ce67.png)\n\n---\n\nBut we're getting there. Looks cool~\n\n![out](https://cloud.githubusercontent.com/assets/4334970/7286512/88b25f44-e91a-11e4-85ce-284608d0a688.gif)\n"
    }
]