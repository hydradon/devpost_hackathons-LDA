[
    {
        "url": "https://api.github.com/repos/LLazarek/sit/issues/comments/256812635",
        "html_url": "https://github.com/LLazarek/sit/issues/1#issuecomment-256812635",
        "issue_url": "https://api.github.com/repos/LLazarek/sit/issues/1",
        "id": 256812635,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjgxMjYzNQ==",
        "user": {
            "login": "Captain456",
            "id": 12720081,
            "node_id": "MDQ6VXNlcjEyNzIwMDgx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/12720081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Captain456",
            "html_url": "https://github.com/Captain456",
            "followers_url": "https://api.github.com/users/Captain456/followers",
            "following_url": "https://api.github.com/users/Captain456/following{/other_user}",
            "gists_url": "https://api.github.com/users/Captain456/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Captain456/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Captain456/subscriptions",
            "organizations_url": "https://api.github.com/users/Captain456/orgs",
            "repos_url": "https://api.github.com/users/Captain456/repos",
            "events_url": "https://api.github.com/users/Captain456/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Captain456/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-28T01:15:15Z",
        "updated_at": "2016-10-28T01:15:15Z",
        "author_association": "COLLABORATOR",
        "body": "We could probably fix this by adding a special test-class keyword. You would provide the class type and it would create an instantiation of the class with a generic name and test the function.\n\nThis could be expanded to functions that mutate a data member, etc.\n"
    },
    {
        "url": "https://api.github.com/repos/LLazarek/sit/issues/comments/256814899",
        "html_url": "https://github.com/LLazarek/sit/issues/1#issuecomment-256814899",
        "issue_url": "https://api.github.com/repos/LLazarek/sit/issues/1",
        "id": 256814899,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjgxNDg5OQ==",
        "user": {
            "login": "LLazarek",
            "id": 13065845,
            "node_id": "MDQ6VXNlcjEzMDY1ODQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13065845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LLazarek",
            "html_url": "https://github.com/LLazarek",
            "followers_url": "https://api.github.com/users/LLazarek/followers",
            "following_url": "https://api.github.com/users/LLazarek/following{/other_user}",
            "gists_url": "https://api.github.com/users/LLazarek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LLazarek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LLazarek/subscriptions",
            "organizations_url": "https://api.github.com/users/LLazarek/orgs",
            "repos_url": "https://api.github.com/users/LLazarek/repos",
            "events_url": "https://api.github.com/users/LLazarek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LLazarek/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-28T01:33:12Z",
        "updated_at": "2016-10-28T01:33:34Z",
        "author_association": "OWNER",
        "body": "I agree; providing the class name seemed redundant at first but would be useful in the case of testing functions defined inline with the class definition.\nI think that this keyword should be nearly identical to test-input; the only difference should be that we add an object instantiation along with the parameter instantiations. We can handle the problem of classes without default constructors by doing the same deferred declarations strategy we used for references.\n\nThe only issue I see with this is that our syntax is becoming rather cumbersome for performing multiple tests: every test has to provide setup code to create an object and manipulate it before the function is run. Perhaps we should provide a feature for providing a single set of setup code to be executed prior to a series of tests?\n"
    }
]