[
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/522098045",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/3#issuecomment-522098045",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/3",
        "id": 522098045,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjA5ODA0NQ==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-16T17:58:38Z",
        "updated_at": "2019-08-16T17:59:12Z",
        "author_association": "MEMBER",
        "body": "Thanks for your input. We a are currently polishing the release and are very glad to receive any feedback. \r\n\r\n> When training MUSDB18 using default unmix model, there are 544 batches\r\n\r\nusing the default values, I get 344 batches per epoch using the original [stems version of the dataset](https://zenodo.org/record/1117372).\r\n\r\n> the iteration time of one bactch is about 21 seconds\r\n\r\non a similar machine I get 14 seconds per batch using the stems. Yes this is very slow, but this is a known issue of decoding mp4 stems. \r\n\r\nThere are two ways to speed up the training\r\n\r\n1. Increase the number of workers\r\n\r\nthe default configuration does not use multiprocessing to yield the batches. You can increase the number of workers using the `--nb-workers k` configuration. Using 4 workers, I get to 3-4 seconds per batch, using 8 i get down to 1 batch per second.\r\n\r\n2. Convert the dataset to wav using the builtin musdb cli tool:\r\n\r\n```musdbconvert path/to/musdb-stems-root path/to/new/musdb-wav-root```\r\n\r\nand train using \r\n\r\n```\r\npython train.py --root path/to/musdb18-wav --is-wav --target vocals\r\n```\r\nthis will get you down to 0.6s per batch on 4 workers, hitting the bandwidth of standard hard-drives. It can be further improved using an SSD, which brings it down to 0.4s per batch. on a GTX1080Ti this would probably lead to 95% gpu utilisation, thus dataloading will not be the bottleneck anymore.\r\n\r\nI hope this helps. I will probably add this to an FAQ document.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/522099014",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/1#issuecomment-522099014",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/1",
        "id": 522099014,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjA5OTAxNA==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-16T18:01:41Z",
        "updated_at": "2019-08-16T18:01:41Z",
        "author_association": "MEMBER",
        "body": "fixed by updating torch to 1.2 in 0f484518d608a1e6b030fbe4c5edacf514e66203"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/522101409",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/2#issuecomment-522101409",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/2",
        "id": 522101409,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjEwMTQwOQ==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-16T18:09:28Z",
        "updated_at": "2019-08-16T18:09:28Z",
        "author_association": "MEMBER",
        "body": "> \"python train.py --root ./musdb18 --target vocals\" yielded the following errors.\r\n1: raise InvalidGitRepositoryError(epath)\r\ngit.exc.InvalidGitRepositoryError:\r\nMy Response: \"git init\" created bunch of files under .git\r\n\r\n> 2: Then two different error messages: raise ValueError(\"Reference at %r does not exist\" % ref_path)\r\nValueError: Reference at 'refs/heads/master' does not exist\r\nMy Response: As suggested, created .git/refs/heads/master and wrote \"ref: refs/heads/master\" in the text there\r\nResult: this stopped the error.\r\n\r\nthis looks like did not clone the repository but instead downloaded a zip of the software. \r\n\r\n> 3: python train.py --root ./musdb18 finally runs without an error message, but nvidia-smi shows no GPU usage and returns none.\r\n\r\nMaybe pytorch wasn't able to find the gpu. I added a debug print in 3ee4430 to let you see if the gpu is supposed to be used or not. \r\n\r\nDid you install the requirements using the `environment-gpu-linux-cuda10.yml` environment?\r\nWas the training running fine (on CPU)?\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/522192065",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/2#issuecomment-522192065",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/2",
        "id": 522192065,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjE5MjA2NQ==",
        "user": {
            "login": "HIN0209",
            "id": 27791041,
            "node_id": "MDQ6VXNlcjI3NzkxMDQx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27791041?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HIN0209",
            "html_url": "https://github.com/HIN0209",
            "followers_url": "https://api.github.com/users/HIN0209/followers",
            "following_url": "https://api.github.com/users/HIN0209/following{/other_user}",
            "gists_url": "https://api.github.com/users/HIN0209/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HIN0209/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HIN0209/subscriptions",
            "organizations_url": "https://api.github.com/users/HIN0209/orgs",
            "repos_url": "https://api.github.com/users/HIN0209/repos",
            "events_url": "https://api.github.com/users/HIN0209/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HIN0209/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-17T01:18:28Z",
        "updated_at": "2019-08-17T01:18:28Z",
        "author_association": "NONE",
        "body": "Hello, thank you for your comments.\r\nYes, I downloaded the zip file instead of git clone. I now git cloned it and worked (tried only the GPU version).\r\n\r\nMinor comment: in Installation document, \"env create -f environment-X.yml where X is either [cpu-linux, gpu-cuda10, cpu-osx], depending on your system.\" \r\ngpu-cuda10 is incorrect. Instead, gpu-linux-cuda10 should be placed.\r\n\r\nSimilar to another post, my training time on musdb18 is slow, such that I will try the suggestions."
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/522386146",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/3#issuecomment-522386146",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/3",
        "id": 522386146,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjM4NjE0Ng==",
        "user": {
            "login": "agangzz",
            "id": 8004760,
            "node_id": "MDQ6VXNlcjgwMDQ3NjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8004760?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agangzz",
            "html_url": "https://github.com/agangzz",
            "followers_url": "https://api.github.com/users/agangzz/followers",
            "following_url": "https://api.github.com/users/agangzz/following{/other_user}",
            "gists_url": "https://api.github.com/users/agangzz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agangzz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agangzz/subscriptions",
            "organizations_url": "https://api.github.com/users/agangzz/orgs",
            "repos_url": "https://api.github.com/users/agangzz/repos",
            "events_url": "https://api.github.com/users/agangzz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agangzz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-19T02:12:27Z",
        "updated_at": "2019-08-19T02:12:27Z",
        "author_association": "NONE",
        "body": "Increase the number of workers\r\n\r\nThis way is very usefully for speeding up training process. Whet I set --nb-workers=8,  I get to 3 seconds per batch (orig is 21 seconds).\r\n\r\nI will try the second way \"Convert the dataset to wav using the builtin musdb cli tool\", which I believe it would be more effective.\r\n\r\nThanks a lot"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/522439042",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/3#issuecomment-522439042",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/3",
        "id": 522439042,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQzOTA0Mg==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-19T06:58:15Z",
        "updated_at": "2019-08-19T06:58:15Z",
        "author_association": "MEMBER",
        "body": "There a third way of downloading our newly released [MUSDB18-HQ](https://zenodo.org/record/3338373) which is already saved in WAV format. However, be aware that this means you can not use this dataset for comparison of BSSeval results (e.g. if you plan to write a paper) with state-of-the-art methods, since the data is slightly different.  "
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/524834810",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/4#issuecomment-524834810",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/4",
        "id": 524834810,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDgzNDgxMA==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-26T12:08:48Z",
        "updated_at": "2019-08-26T12:09:36Z",
        "author_association": "MEMBER",
        "body": "Hi, thanks for your input. We are really keen on people trying the other datasets. So, feel free to comment on the API/documentation on this as well.\r\n\r\nRegarding the issue, I think the  the command line looks good (did you make sure the `--ext` flag is set to `wav`?)\r\n\r\nI just tested with the following folder structure:\r\n![image](https://user-images.githubusercontent.com/72940/63689525-80582800-c80a-11e9-8358-09937be73500.png)\r\n\r\nrunning\r\n\r\n```\r\npython train.py --root ~/data --dataset sourcefolder --interferer-dirs noise --target-dir speech --seq-dur 1.0 --nb-channels 1\r\n```\r\n\r\nThis worked for me. One more thing (when you figures out the problem) is that the files would need to be of the same length due as the `--seq-dur` is ignored for calculating the statistics. You will notice if this is a problem if `torch.stack` fails. If that is the case you might want to comment out [this line](https://github.com/sigsep/open-unmix-pytorch/blob/a41e6a9efda146dc8d3d64def7281a6e3e68cda3/train.py#L63-L64)\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/524842238",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/3#issuecomment-524842238",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/3",
        "id": 524842238,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDg0MjIzOA==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-26T12:33:43Z",
        "updated_at": "2019-08-26T12:33:43Z",
        "author_association": "MEMBER",
        "body": "> I will try the second way \"Convert the dataset to wav using the builtin musdb cli tool\", which I believe it would be more effective.\r\n\r\n@agangzz could you get to sufficient gpu utilization with wav files?"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/524866817",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/4#issuecomment-524866817",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/4",
        "id": 524866817,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDg2NjgxNw==",
        "user": {
            "login": "HIN0209",
            "id": 27791041,
            "node_id": "MDQ6VXNlcjI3NzkxMDQx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27791041?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HIN0209",
            "html_url": "https://github.com/HIN0209",
            "followers_url": "https://api.github.com/users/HIN0209/followers",
            "following_url": "https://api.github.com/users/HIN0209/following{/other_user}",
            "gists_url": "https://api.github.com/users/HIN0209/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HIN0209/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HIN0209/subscriptions",
            "organizations_url": "https://api.github.com/users/HIN0209/orgs",
            "repos_url": "https://api.github.com/users/HIN0209/repos",
            "events_url": "https://api.github.com/users/HIN0209/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HIN0209/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-26T13:46:15Z",
        "updated_at": "2019-08-26T13:46:15Z",
        "author_association": "NONE",
        "body": "@faroit, thanks for the quick reply.\r\nI changed the dataset to DCASE2018 (TUT-urban-acoustic-scenes-2018-development) that has identical length of audio files, instead of DCASE2013 containing variable duration. I added --seq-dur 3 --nb-channels 1 and it works! So the duration of data files appears to be the case.\r\n\r\nBy the way, I commented out the two lines as suggested, but an error came that \"pbar is not defined\" in the next line \"for ind in pbar:\"\r\n\r\nMy comments on documentation are the following:\r\n1. How can I plot the loss curves? Using tensorboard?\r\n2. --nb-train-samples: does it mean the total number of training data AFTER augmentation, right?"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/524869713",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/4#issuecomment-524869713",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/4",
        "id": 524869713,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDg2OTcxMw==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-26T13:53:49Z",
        "updated_at": "2019-08-26T13:53:49Z",
        "author_association": "MEMBER",
        "body": "> By the way, I commented out the two lines as suggested, but an error came that \"pbar is not defined\" in the next line \"for ind in pbar:\"\r\n\r\nSorry I pointed to two lines, I meant just [L63](https://github.com/sigsep/open-unmix-pytorch/blob/a41e6a9efda146dc8d3d64def7281a6e3e68cda3/train.py#L63)\r\n\r\n> How can I plot the loss curves? Using tensorboard?\r\n\r\nthe loss values are written in the json files and can be easily plotted with your own code such as \r\n\r\n```python\r\n        import json\r\n        with open('vocals.json', 'r') as stream:\r\n            r = json.load(stream)\r\n\r\n        plt.plot(r['valid_loss_history'], label='validation loss')\r\n```\r\n\r\nCurrently we don't plan to make tensorboard support to keep the code small and lean.\r\n\r\n> --nb-train-samples: does it mean the total number of training data AFTER augmentation, right?\r\n\r\nAugmentation is always applied to all samples. So yes, this includes augmentation.\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/525047408",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/4#issuecomment-525047408",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/4",
        "id": 525047408,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTA0NzQwOA==",
        "user": {
            "login": "HIN0209",
            "id": 27791041,
            "node_id": "MDQ6VXNlcjI3NzkxMDQx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/27791041?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HIN0209",
            "html_url": "https://github.com/HIN0209",
            "followers_url": "https://api.github.com/users/HIN0209/followers",
            "following_url": "https://api.github.com/users/HIN0209/following{/other_user}",
            "gists_url": "https://api.github.com/users/HIN0209/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HIN0209/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HIN0209/subscriptions",
            "organizations_url": "https://api.github.com/users/HIN0209/orgs",
            "repos_url": "https://api.github.com/users/HIN0209/repos",
            "events_url": "https://api.github.com/users/HIN0209/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HIN0209/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-26T21:50:58Z",
        "updated_at": "2019-08-26T21:50:58Z",
        "author_association": "NONE",
        "body": "Thank you again.!!"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/525624552",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/3#issuecomment-525624552",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/3",
        "id": 525624552,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTYyNDU1Mg==",
        "user": {
            "login": "agangzz",
            "id": 8004760,
            "node_id": "MDQ6VXNlcjgwMDQ3NjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8004760?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agangzz",
            "html_url": "https://github.com/agangzz",
            "followers_url": "https://api.github.com/users/agangzz/followers",
            "following_url": "https://api.github.com/users/agangzz/following{/other_user}",
            "gists_url": "https://api.github.com/users/agangzz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agangzz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agangzz/subscriptions",
            "organizations_url": "https://api.github.com/users/agangzz/orgs",
            "repos_url": "https://api.github.com/users/agangzz/repos",
            "events_url": "https://api.github.com/users/agangzz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agangzz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-28T07:43:23Z",
        "updated_at": "2019-08-28T07:43:23Z",
        "author_association": "NONE",
        "body": "My system: Ubuntu 16.04, one GTX1080Ti, CUDA9, 32 core CPU, pytorch 1.1.0\r\n\r\n@faroit When I set 16 workers, 16 bath-size, and use wav files and FixedSourcesTrackFolderDataset for my datasets (other setting is defaul), then, I get to 2 seconds per batch,  and 50%~60%  gpu utilisation\r\n\r\nIt seems that the dataloading process is still a bottleneck in my training."
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/525628258",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/3#issuecomment-525628258",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/3",
        "id": 525628258,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTYyODI1OA==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-28T07:54:51Z",
        "updated_at": "2019-08-28T07:59:16Z",
        "author_association": "MEMBER",
        "body": "> @faroit When I set 16 workers, 16 bath-size, and use wav files and FixedSourcesTrackFolderDataset for my datasets (other setting is defaul), then, I get to 2 seconds per batch, and 50%~60% gpu utilisation\r\n> It seems that the dataloading process is still a bottleneck in my training.\r\n\r\n* is this without `--random-track-mix`? Because in that case it still be very slow, indeed.\r\n* instead of running `train.py` you can also just run `data.py` with the same parameters to get the raw loading speed without the model.\r\n* then, did you monitor the utilization? is it constant at 50%/60%? in that case, the LSTM might be another bottleneck\r\n* You may want to try less workers as you are probably hitting the SSD read speed already. There is a sweet spot on many systems. \r\n* and lastly you can try using [`torchaudio`](https://github.com/pytorch/audio ) instead of the default soundfile loader. torchaudio is not a dependency (since its not that easy to install) so you have to install it manually, but open-unmix detects when its available. There is another speed-up there.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/525698159",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/3#issuecomment-525698159",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/3",
        "id": 525698159,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTY5ODE1OQ==",
        "user": {
            "login": "agangzz",
            "id": 8004760,
            "node_id": "MDQ6VXNlcjgwMDQ3NjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8004760?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agangzz",
            "html_url": "https://github.com/agangzz",
            "followers_url": "https://api.github.com/users/agangzz/followers",
            "following_url": "https://api.github.com/users/agangzz/following{/other_user}",
            "gists_url": "https://api.github.com/users/agangzz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agangzz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agangzz/subscriptions",
            "organizations_url": "https://api.github.com/users/agangzz/orgs",
            "repos_url": "https://api.github.com/users/agangzz/repos",
            "events_url": "https://api.github.com/users/agangzz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agangzz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-28T11:13:15Z",
        "updated_at": "2019-08-28T11:13:15Z",
        "author_association": "NONE",
        "body": "@faroit Thanks for your kindly reply.\r\n\r\n> * is this without `--random-track-mix`? Because in that case it still be very slow, indeed.\r\n\r\nyes, random-track-mix = False\r\n\r\n> * instead of running `train.py` you can also just run `data.py` with the same parameters to get the raw loading speed without the model.\r\n\r\nI will try it later.\r\n\r\n> * then, did you monitor the utilization? is it constant at 50%/60%? in that case, the LSTM might be another bottleneck\r\n\r\nI haven't monitor the utilization, and it isn't constant at 50%/60%, sometimes is 0%\r\n\r\n> * You may want to try less workers as you are probably hitting the SSD read speed already. There is a sweet spot on many systems.\r\n\r\nit seems 4 workers is faster than 16 workers in my machine.\r\n\r\n> * and lastly you can try using [`torchaudio`](https://github.com/pytorch/audio) instead of the default soundfile loader. torchaudio is not a dependency (since its not that easy to install) so you have to install it manually, but open-unmix detects when its available. There is another speed-up there.\r\n\r\nI have sucessfully install torchaudio, but it cost me more than 4 hours. But I found the load speech of torchaudio is similar like soundfile\r\n\r\nuntil now, it seems that the dataloading process is still a bottleneck in my training\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/525701806",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/3#issuecomment-525701806",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/3",
        "id": 525701806,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTcwMTgwNg==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-28T11:25:05Z",
        "updated_at": "2019-08-28T11:25:42Z",
        "author_association": "MEMBER",
        "body": "> I have sucessfully install torchaudio, but it cost me more than 4 hours. But I found the load speech of torchaudio is similar like soundfile\r\n\r\nyes, its quite a challenge :-/\r\nThey are in the process of building conda packages so things might get better on that front.\r\n\r\n> until now, it seems that the dataloading process is still a bottleneck in my training\r\n\r\nDoing the augmentations on the fly (and therefore loading the original sources) is really tricky to make it faster. \r\n\r\n* you can of course use the `AlignedDataset` which just loads `mixture.wav` and `target.wav`, therefore reducing the number of loads significantly\r\n* another option is to load all tracks into memory (or use a RAM disk)\r\n\r\nOther than that, I don't think there is anything that I could do to improve performance in the current pytorch version. It may be that the upcoming tensorflow version has faster dataloading due to the fact that dataloading is not done in python but in the C lib.\r\n\r\nIf you think there are other optimizations that could be done to the dataset implementations let me know (or create a pull request). "
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/525905091",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/5#issuecomment-525905091",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/5",
        "id": 525905091,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTkwNTA5MQ==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-28T20:16:28Z",
        "updated_at": "2019-08-28T20:16:28Z",
        "author_association": "MEMBER",
        "body": "interesting. I probably misread the paper then. If @f90 confirms this, I am happy to update the plot"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/526186141",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/5#issuecomment-526186141",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/5",
        "id": 526186141,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjE4NjE0MQ==",
        "user": {
            "login": "f90",
            "id": 23065103,
            "node_id": "MDQ6VXNlcjIzMDY1MTAz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/23065103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/f90",
            "html_url": "https://github.com/f90",
            "followers_url": "https://api.github.com/users/f90/followers",
            "following_url": "https://api.github.com/users/f90/following{/other_user}",
            "gists_url": "https://api.github.com/users/f90/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/f90/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/f90/subscriptions",
            "organizations_url": "https://api.github.com/users/f90/orgs",
            "repos_url": "https://api.github.com/users/f90/repos",
            "events_url": "https://api.github.com/users/f90/events{/privacy}",
            "received_events_url": "https://api.github.com/users/f90/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-29T13:31:15Z",
        "updated_at": "2019-08-29T13:31:15Z",
        "author_association": "NONE",
        "body": "Yes I can confirm STL2 (multi-instrument) did not use any additional training data besides MUSDB, since I simply didn't have any haha. STL1 for vocal separation used CCMixter too.\r\n\r\n@matangover Thanks for spotting this"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/526188430",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/5#issuecomment-526188430",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/5",
        "id": 526188430,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjE4ODQzMA==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-29T13:36:43Z",
        "updated_at": "2019-08-29T13:36:43Z",
        "author_association": "MEMBER",
        "body": ":+1: I updated the plot in the readme\r\n\r\n![boxplot_updated](https://user-images.githubusercontent.com/72940/63944652-3f624c80-ca72-11e9-8d33-bed701679fe6.png)\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/526206444",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/5#issuecomment-526206444",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/5",
        "id": 526206444,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjIwNjQ0NA==",
        "user": {
            "login": "matangover",
            "id": 5028956,
            "node_id": "MDQ6VXNlcjUwMjg5NTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5028956?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matangover",
            "html_url": "https://github.com/matangover",
            "followers_url": "https://api.github.com/users/matangover/followers",
            "following_url": "https://api.github.com/users/matangover/following{/other_user}",
            "gists_url": "https://api.github.com/users/matangover/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matangover/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matangover/subscriptions",
            "organizations_url": "https://api.github.com/users/matangover/orgs",
            "repos_url": "https://api.github.com/users/matangover/repos",
            "events_url": "https://api.github.com/users/matangover/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matangover/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-29T14:18:22Z",
        "updated_at": "2019-08-29T14:18:22Z",
        "author_association": "NONE",
        "body": "Thanks for the quick responses. Your work is super impressive."
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527128305",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/pull/6#issuecomment-527128305",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/6",
        "id": 527128305,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzEyODMwNQ==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-02T12:23:35Z",
        "updated_at": "2019-09-02T12:23:35Z",
        "author_association": "MEMBER",
        "body": "Thanks or spotting these \ud83d\udc4d "
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527191002",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/7#issuecomment-527191002",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/7",
        "id": 527191002,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE5MTAwMg==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-02T15:50:13Z",
        "updated_at": "2019-09-02T15:50:39Z",
        "author_association": "MEMBER",
        "body": "Are you sure that it's hitting the memory error on the GPU? To me, it looks like it is Norbert (meaning the wiener filter on CPU). Can you try running the same example with `--niter 0` on the same machine? "
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527192098",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/7#issuecomment-527192098",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/7",
        "id": 527192098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE5MjA5OA==",
        "user": {
            "login": "hagenw",
            "id": 173624,
            "node_id": "MDQ6VXNlcjE3MzYyNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/173624?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hagenw",
            "html_url": "https://github.com/hagenw",
            "followers_url": "https://api.github.com/users/hagenw/followers",
            "following_url": "https://api.github.com/users/hagenw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hagenw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hagenw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hagenw/subscriptions",
            "organizations_url": "https://api.github.com/users/hagenw/orgs",
            "repos_url": "https://api.github.com/users/hagenw/repos",
            "events_url": "https://api.github.com/users/hagenw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hagenw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-02T15:54:23Z",
        "updated_at": "2019-09-02T15:54:23Z",
        "author_association": "NONE",
        "body": "You are right, I get the same error on the CPU:\r\n```python\r\n>>> python test.py ~/data/musdb18/musdb18-wav/test/Al\\ James\\ -\\ Schoolboy\\ Facination/mixture.wav --model umx --no-cuda\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 301, in <module>\r\n    device=device\r\n  File \"test.py\", line 166, in separate\r\n    use_softmask=softmask)\r\n  File \"/home/audeering.local/hwierstorf/.anaconda3/envs/open-unmix-pytorch-linux-cpu/lib/python3.7/site-packages/norbert/__init__.py\", line 260, in wiener\r\n    y = expectation_maximization(y/max_abs, x_scaled, iterations, eps=eps)[0]\r\n  File \"/home/audeering.local/hwierstorf/.anaconda3/envs/open-unmix-pytorch-linux-cpu/lib/python3.7/site-packages/norbert/__init__.py\", line 141, in expectation_maximization\r\n    eps)\r\n  File \"/home/audeering.local/hwierstorf/.anaconda3/envs/open-unmix-pytorch-linux-cpu/lib/python3.7/site-packages/norbert/__init__.py\", line 511, in get_local_gaussian_model\r\n    C_j = _covariance(y_j)\r\n  File \"/home/audeering.local/hwierstorf/.anaconda3/envs/open-unmix-pytorch-linux-cpu/lib/python3.7/site-packages/norbert/__init__.py\", line 468, in _covariance\r\n    y_j.dtype)\r\nMemoryError\r\n```\r\n\r\nI tested with `--niter 0` and it worked, thanks.\r\n\r\nI have 16GB of RAM which seems to be reasonable, so maybe you add the `--niter 0` hint to the first example as well?"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527194213",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/7#issuecomment-527194213",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/7",
        "id": 527194213,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE5NDIxMw==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-02T16:03:35Z",
        "updated_at": "2019-09-02T16:03:35Z",
        "author_association": "MEMBER",
        "body": "> I have 16GB of RAM which seems to be reasonable, \r\n\r\nInterestingly, .I tried to run the same example on my laptop (OSX, 8GB of RAM) and it worked fine (with some swapping). \r\n\r\n> so maybe you add the --niter 0 hint to the first example as well?\r\n\r\nin any case I will add a note in the readme. We also plan to improve the RAM usage of norbert soon, maybe you are interested in helping out?\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527194974",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/7#issuecomment-527194974",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/7",
        "id": 527194974,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE5NDk3NA==",
        "user": {
            "login": "hagenw",
            "id": 173624,
            "node_id": "MDQ6VXNlcjE3MzYyNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/173624?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hagenw",
            "html_url": "https://github.com/hagenw",
            "followers_url": "https://api.github.com/users/hagenw/followers",
            "following_url": "https://api.github.com/users/hagenw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hagenw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hagenw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hagenw/subscriptions",
            "organizations_url": "https://api.github.com/users/hagenw/orgs",
            "repos_url": "https://api.github.com/users/hagenw/repos",
            "events_url": "https://api.github.com/users/hagenw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hagenw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-02T16:06:54Z",
        "updated_at": "2019-09-02T16:06:54Z",
        "author_association": "NONE",
        "body": "I have to admit, I'm using 6GB by other programs, so it's not really 16GB  available here ;)\r\n\r\nI would love to work a little bit more on source separation at the moment, but I'm afraid I will not really have time this year.\r\n\r\nFeel free to close this issue, after adding a comment to the README."
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527281153",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/7#issuecomment-527281153",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/7",
        "id": 527281153,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzI4MTE1Mw==",
        "user": {
            "login": "aadibajpai",
            "id": 27063113,
            "node_id": "MDQ6VXNlcjI3MDYzMTEz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/27063113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aadibajpai",
            "html_url": "https://github.com/aadibajpai",
            "followers_url": "https://api.github.com/users/aadibajpai/followers",
            "following_url": "https://api.github.com/users/aadibajpai/following{/other_user}",
            "gists_url": "https://api.github.com/users/aadibajpai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aadibajpai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aadibajpai/subscriptions",
            "organizations_url": "https://api.github.com/users/aadibajpai/orgs",
            "repos_url": "https://api.github.com/users/aadibajpai/repos",
            "events_url": "https://api.github.com/users/aadibajpai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aadibajpai/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-03T02:34:52Z",
        "updated_at": "2019-09-03T02:34:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "Can confirm, I have a server with 16GB ram out of which 14GB was available when executing.\r\nIt was always getting killed when I executed just `test.py` but worked with `--niter=0`.\r\n\r\nI was wondering if that significantly affects the quality of the output? If not then maybe it could be made the default?\r\n```\r\n(open-unmix-pytorch-linux-cpu) aadibajpai@ubuntu_hydralatest:~/open-unmix-pytorch$ python test.py photograph.wav \r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 4/4 [01:06<00:00, 16.82s/it]\r\nKilled\r\n(open-unmix-pytorch-linux-cpu) aadibajpai@ubuntu_hydralatest:~/open-unmix-pytorch$ python test.py photograph.wav --niter=0\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 4/4 [01:08<00:00, 17.06s/it]\r\n```"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527330044",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/8#issuecomment-527330044",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/8",
        "id": 527330044,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzMzMDA0NA==",
        "user": {
            "login": "aadibajpai",
            "id": 27063113,
            "node_id": "MDQ6VXNlcjI3MDYzMTEz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/27063113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aadibajpai",
            "html_url": "https://github.com/aadibajpai",
            "followers_url": "https://api.github.com/users/aadibajpai/followers",
            "following_url": "https://api.github.com/users/aadibajpai/following{/other_user}",
            "gists_url": "https://api.github.com/users/aadibajpai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aadibajpai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aadibajpai/subscriptions",
            "organizations_url": "https://api.github.com/users/aadibajpai/orgs",
            "repos_url": "https://api.github.com/users/aadibajpai/repos",
            "events_url": "https://api.github.com/users/aadibajpai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aadibajpai/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-03T06:55:32Z",
        "updated_at": "2019-09-03T06:55:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "Since it is saved in the cache:\r\n```bash\r\naadibajpai@ubuntu_hydralatest:~/.cache/torch$ ls checkpoints/\r\nbass-8d85a5bd.pth  drums-9619578f.pth  other-b52fbbf7.pth  vocals-b62c91ce.pth\r\naadibajpai@ubuntu_hydralatest:~/.cache/torch$ ls hub/\r\nsigsep_open-unmix-pytorch_master\r\n```\r\nit might not be reloaded in the same session but it would be nice to have it persist."
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527348002",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/8#issuecomment-527348002",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/8",
        "id": 527348002,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzM0ODAwMg==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-03T07:54:33Z",
        "updated_at": "2019-09-03T07:54:33Z",
        "author_association": "MEMBER",
        "body": "> If the model hasn't been manually downloaded then the default umxhq model from torch hub gets downloaded every time.\r\n\r\nI can't reproduce this. The models always are downloaded to the cache folder and it was always able to load them from there later. I also observed this in the colab notebooks.\r\nAlso the pytorch documentation states \"By default, we don\u2019t clean up files after loading it.\"\r\nIf this doesn't work as expected, I think this should be addressed by pytorch and you might want to submit an issue over there.\r\n\r\nMaybe related: I submitted an issue to the [torchhub repo earlier](https://github.com/pytorch/hub/issues/47) regarding the naming.\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527349113",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/7#issuecomment-527349113",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/7",
        "id": 527349113,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzM0OTExMw==",
        "user": {
            "login": "faroit",
            "id": 72940,
            "node_id": "MDQ6VXNlcjcyOTQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faroit",
            "html_url": "https://github.com/faroit",
            "followers_url": "https://api.github.com/users/faroit/followers",
            "following_url": "https://api.github.com/users/faroit/following{/other_user}",
            "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faroit/subscriptions",
            "organizations_url": "https://api.github.com/users/faroit/orgs",
            "repos_url": "https://api.github.com/users/faroit/repos",
            "events_url": "https://api.github.com/users/faroit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faroit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-03T07:57:52Z",
        "updated_at": "2019-09-03T07:57:52Z",
        "author_association": "MEMBER",
        "body": "> I was wondering if that significantly affects the quality of the output? \r\n\r\nyes. The difference on MUSDB18 is about 0.3 dB SDR (vocals), which is significant, so we want keep the wiener filter in the post-processing by default.\r\n\r\n> If not then maybe it could be made the default?\r\n\r\nI will add a comment in the docs/readme as proposed by @hagenw. Also I think it makes sense to add a `start` and `duration` argument to the separation function, allowing to crop the input, thus saving memory.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527631759",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/7#issuecomment-527631759",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/7",
        "id": 527631759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzYzMTc1OQ==",
        "user": {
            "login": "aadibajpai",
            "id": 27063113,
            "node_id": "MDQ6VXNlcjI3MDYzMTEz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/27063113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aadibajpai",
            "html_url": "https://github.com/aadibajpai",
            "followers_url": "https://api.github.com/users/aadibajpai/followers",
            "following_url": "https://api.github.com/users/aadibajpai/following{/other_user}",
            "gists_url": "https://api.github.com/users/aadibajpai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aadibajpai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aadibajpai/subscriptions",
            "organizations_url": "https://api.github.com/users/aadibajpai/orgs",
            "repos_url": "https://api.github.com/users/aadibajpai/repos",
            "events_url": "https://api.github.com/users/aadibajpai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aadibajpai/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-03T20:43:39Z",
        "updated_at": "2019-09-03T20:43:39Z",
        "author_association": "CONTRIBUTOR",
        "body": "> > I was wondering if that significantly affects the quality of the output?\r\n> \r\n> yes. The difference on MUSDB18 is about 0.3 dB SDR (vocals), which is significant, so we want keep the wiener filter in the post-processing by default.\r\n\r\nThat's a lot, in that case do you know why it fails on decent specs? I'm very impressed by the results with `niter=0` so can only imagine how well it would work with it. Also, when talking of SDR/SAR/SIR values, higher is better, right?\r\n> \r\n> > If not then maybe it could be made the default?\r\n> \r\n> I will add a comment in the docs/readme as proposed by @hagenw. Also I think it makes sense to add a `start` and `duration` argument to the separation function, allowing to crop the input, thus saving memory.\r\n\r\nThat's fair enough but maybe not very useful when you need to work with full length tracks (such as in my case)"
    },
    {
        "url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/comments/527665798",
        "html_url": "https://github.com/sigsep/open-unmix-pytorch/issues/8#issuecomment-527665798",
        "issue_url": "https://api.github.com/repos/sigsep/open-unmix-pytorch/issues/8",
        "id": 527665798,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzY2NTc5OA==",
        "user": {
            "login": "aadibajpai",
            "id": 27063113,
            "node_id": "MDQ6VXNlcjI3MDYzMTEz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/27063113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aadibajpai",
            "html_url": "https://github.com/aadibajpai",
            "followers_url": "https://api.github.com/users/aadibajpai/followers",
            "following_url": "https://api.github.com/users/aadibajpai/following{/other_user}",
            "gists_url": "https://api.github.com/users/aadibajpai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aadibajpai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aadibajpai/subscriptions",
            "organizations_url": "https://api.github.com/users/aadibajpai/orgs",
            "repos_url": "https://api.github.com/users/aadibajpai/repos",
            "events_url": "https://api.github.com/users/aadibajpai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aadibajpai/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-03T22:31:06Z",
        "updated_at": "2019-09-03T22:31:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "Works."
    }
]