[
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/481585979",
        "html_url": "https://github.com/protolambda/zrnt/issues/3#issuecomment-481585979",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/3",
        "id": 481585979,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTU4NTk3OQ==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-10T08:11:38Z",
        "updated_at": "2019-04-10T08:11:38Z",
        "author_association": "OWNER",
        "body": "1) Probably copy paste error. Made a quick update to latest dev last week, but did not have the chance to test and verify\r\n2) Block processing has error propagation, and if an error occurs, the state is thrown away (as undoing changes is simply to error-prone)\r\n3) That's something from the ETH 2.0 spec, will take a look at next code update.\r\n"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/481589529",
        "html_url": "https://github.com/protolambda/zrnt/issues/4#issuecomment-481589529",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/4",
        "id": 481589529,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTU4OTUyOQ==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-10T08:20:58Z",
        "updated_at": "2019-04-10T08:20:58Z",
        "author_association": "OWNER",
        "body": "We need the sender to either have:\r\n- sufficient balance remaining to keep doing work without having to alter state. (`beacon.MIN_DEPOSIT_AMOUNT`)\r\n- exactly zero balance\r\n\r\nNot sure if I understand you correctly, but we have 2 accounts, A and B, and A sends 1 to B, then A will have MIN_DEPOSIT_AMOUNT remaining, or exactly 0. If it's something else, an error is thrown, and the transfer is denied.\r\n\r\nAlso, I know transfers look funky. Especially with the removal of nonces (we use 3 primitives to make nonces unnecessary: dedicated slot + transfer uniqueness in a block + one block per slot).\r\n\r\nIf there are any inconsistencies with the ZRNT logic compared to the spec, I'm happy to continue discussion here. If not, then let's discuss in an issue on the specs repo.\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/481590191",
        "html_url": "https://github.com/protolambda/zrnt/issues/4#issuecomment-481590191",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/4",
        "id": 481590191,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTU5MDE5MQ==",
        "user": {
            "login": "holiman",
            "id": 142290,
            "node_id": "MDQ6VXNlcjE0MjI5MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/142290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holiman",
            "html_url": "https://github.com/holiman",
            "followers_url": "https://api.github.com/users/holiman/followers",
            "following_url": "https://api.github.com/users/holiman/following{/other_user}",
            "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
            "organizations_url": "https://api.github.com/users/holiman/orgs",
            "repos_url": "https://api.github.com/users/holiman/repos",
            "events_url": "https://api.github.com/users/holiman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holiman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-10T08:22:47Z",
        "updated_at": "2019-04-10T08:22:47Z",
        "author_association": "CONTRIBUTOR",
        "body": "So the case is when you send from `A` to `A`. Then it will have `1`, neither `0` nor `MIN_DEPOSIT_AMOUNT`. "
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/481590416",
        "html_url": "https://github.com/protolambda/zrnt/issues/4#issuecomment-481590416",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/4",
        "id": 481590416,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTU5MDQxNg==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-10T08:23:31Z",
        "updated_at": "2019-04-10T08:23:31Z",
        "author_association": "OWNER",
        "body": "@holiman FYI: ZNRT is still in a relatively early phase. Most of my time is spent on spec YAML test generation, and optimized implementations of advanced but isolated features (fork choice, shuffling, ssz implementations). When I do have the time to update ZRNT, it's relatively quick. In ~week we should have state-transition YAML tests from my spec work, and I can start making ZRNT stable and well tested.\r\n"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/481590960",
        "html_url": "https://github.com/protolambda/zrnt/issues/4#issuecomment-481590960",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/4",
        "id": 481590960,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTU5MDk2MA==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-10T08:24:57Z",
        "updated_at": "2019-04-10T08:24:57Z",
        "author_association": "OWNER",
        "body": "@holiman Also, let me know if you want to contribute in any way, or build on top of ZRNT, we can figure something out within EF to align projects."
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/481593434",
        "html_url": "https://github.com/protolambda/zrnt/issues/4#issuecomment-481593434",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/4",
        "id": 481593434,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTU5MzQzNA==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-10T08:31:03Z",
        "updated_at": "2019-04-10T08:31:03Z",
        "author_association": "OWNER",
        "body": "`A` to `A` is a good catch! And I see a possible similar case where `A` is the proposer and receives a fee.\r\nYes, probably needs to be fixed. But I heard that transfers may not make it in phase 0, and removed soon.\r\nI'll ask around with research people here in Sydney what their plan is.\r\n\r\nAre you in Sydney as well, or maybe up for a call about Go ETH 2.0 plans?\r\n"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/481594302",
        "html_url": "https://github.com/protolambda/zrnt/pull/5#issuecomment-481594302",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/5",
        "id": 481594302,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTU5NDMwMg==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-10T08:33:19Z",
        "updated_at": "2019-04-10T08:33:19Z",
        "author_association": "OWNER",
        "body": "Hehe, thanks. Will put go fmt in a git hook or CI script some time :see_no_evil: "
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/481594966",
        "html_url": "https://github.com/protolambda/zrnt/issues/4#issuecomment-481594966",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/4",
        "id": 481594966,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTU5NDk2Ng==",
        "user": {
            "login": "holiman",
            "id": 142290,
            "node_id": "MDQ6VXNlcjE0MjI5MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/142290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holiman",
            "html_url": "https://github.com/holiman",
            "followers_url": "https://api.github.com/users/holiman/followers",
            "following_url": "https://api.github.com/users/holiman/following{/other_user}",
            "gists_url": "https://api.github.com/users/holiman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holiman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holiman/subscriptions",
            "organizations_url": "https://api.github.com/users/holiman/orgs",
            "repos_url": "https://api.github.com/users/holiman/repos",
            "events_url": "https://api.github.com/users/holiman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holiman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-10T08:35:08Z",
        "updated_at": "2019-04-10T08:35:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Are you in Sydney as well, or maybe up for a call about Go ETH 2.0 plans?\r\n\r\nUnfortunately not :( \r\nRegarding future plans, it makes sense to me to base off of zrnt, but at this point I'm still looking/learning. cc @karalabe @fjl @rjl493456442"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/482908564",
        "html_url": "https://github.com/protolambda/zrnt/issues/2#issuecomment-482908564",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/2",
        "id": 482908564,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjkwODU2NA==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-14T00:58:19Z",
        "updated_at": "2019-04-14T00:58:19Z",
        "author_association": "OWNER",
        "body": "1) Folders in Go are a bit more meaningful: they define packages. If we want to keep genesis logic to be separate from the main code, and have a 1-way dependency (beacon code consumed by genesis code), a package like currently works best. If it stays low-weight in the future I may consider merging it into the \"core\" however.\r\n2) I'm afraid encoding helper functions cannot bound to the data types outside of the package. I may move out just the encoding functions however\r\n3) Will wait this one out. Deltas system is quite useful in testing, and I like separation of the default epoch transition (which mutates state) and deltas computation (which is pure)\r\n4) :+1:\r\n5) It could, but after talking with the Sigma Prime guys, I think there are even more efficient ways of doing in/out conditions. (mark a \"status\" for each validator in O(n), for each set, and then iterate status objects. Possibly with an (abstracted) bitfield for even more efficiency) Will try implementing this new technique first.\r\n"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/482935742",
        "html_url": "https://github.com/protolambda/zrnt/issues/2#issuecomment-482935742",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/2",
        "id": 482935742,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjkzNTc0Mg==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-14T08:58:24Z",
        "updated_at": "2019-04-14T08:58:24Z",
        "author_association": "OWNER",
        "body": "1) Fixed\r\n2) Fixed. Not perfect, but better. Moved functionality to util package. But still have to attach it to the type, which needs to be in the same package. That lives in data-types now.\r\n3) Prefer not to, different method type and intentions, good to test separately\r\n4) Fixed\r\n5) Fixed. Using typing for sorted-validator lists now, and with these guarantees it can do a much more efficient join (which lives as a function attached to the sorted index list type)\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/482937245",
        "html_url": "https://github.com/protolambda/zrnt/issues/4#issuecomment-482937245",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/4",
        "id": 482937245,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjkzNzI0NQ==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-14T09:21:26Z",
        "updated_at": "2019-04-14T09:21:50Z",
        "author_association": "OWNER",
        "body": "Reviewed this again after discussing and thinking it was right (there's many other conditions in there), and you're right, there was a bug after all. Thanks for pointing it out! Fixed in specs, and in ZRNT (commit  167aacd )"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/500254595",
        "html_url": "https://github.com/protolambda/zrnt/issues/8#issuecomment-500254595",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/8",
        "id": 500254595,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDI1NDU5NQ==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-09T23:34:22Z",
        "updated_at": "2019-06-09T23:34:22Z",
        "author_association": "OWNER",
        "body": "This was fixed a while ago iirc (fixes checked with poc tests). Will add some tests into the repo after the upcoming CI + test-coverage merge (repo-tooling branch)."
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/500254604",
        "html_url": "https://github.com/protolambda/zrnt/issues/7#issuecomment-500254604",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/7",
        "id": 500254604,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDI1NDYwNA==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-09T23:34:33Z",
        "updated_at": "2019-06-09T23:34:33Z",
        "author_association": "OWNER",
        "body": "This was fixed a while ago iirc (fixes checked with poc tests). Will add some tests into the repo after the upcoming CI + test-coverage merge (repo-tooling branch)."
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/500653897",
        "html_url": "https://github.com/protolambda/zrnt/issues/11#issuecomment-500653897",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/11",
        "id": 500653897,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDY1Mzg5Nw==",
        "user": {
            "login": "guidovranken",
            "id": 6846644,
            "node_id": "MDQ6VXNlcjY4NDY2NDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6846644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guidovranken",
            "html_url": "https://github.com/guidovranken",
            "followers_url": "https://api.github.com/users/guidovranken/followers",
            "following_url": "https://api.github.com/users/guidovranken/following{/other_user}",
            "gists_url": "https://api.github.com/users/guidovranken/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guidovranken/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions",
            "organizations_url": "https://api.github.com/users/guidovranken/orgs",
            "repos_url": "https://api.github.com/users/guidovranken/repos",
            "events_url": "https://api.github.com/users/guidovranken/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guidovranken/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T01:44:49Z",
        "updated_at": "2019-06-11T01:44:49Z",
        "author_association": "NONE",
        "body": "In my case:\r\n\r\n```\r\nlen(state.CurrentCrosslinks): 1024, data.Shard: 1099511627776\r\n```"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/501406522",
        "html_url": "https://github.com/protolambda/zrnt/issues/11#issuecomment-501406522",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/11",
        "id": 501406522,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQwNjUyMg==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-12T18:47:10Z",
        "updated_at": "2019-06-12T18:47:10Z",
        "author_association": "OWNER",
        "body": "See #14"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/501409456",
        "html_url": "https://github.com/protolambda/zrnt/issues/12#issuecomment-501409456",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/12",
        "id": 501409456,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQwOTQ1Ng==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-12T18:54:13Z",
        "updated_at": "2019-06-12T18:54:13Z",
        "author_association": "OWNER",
        "body": ":+1: See https://github.com/protolambda/zrnt/pull/14/commits/35dd6964104ac5bd5b2f7c65b1325ca902b8e308"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/501427912",
        "html_url": "https://github.com/protolambda/zrnt/issues/13#issuecomment-501427912",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/13",
        "id": 501427912,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQyNzkxMg==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-12T19:44:51Z",
        "updated_at": "2019-06-12T19:44:51Z",
        "author_association": "OWNER",
        "body": "See fea0815 "
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/501436646",
        "html_url": "https://github.com/protolambda/zrnt/pull/14#issuecomment-501436646",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/14",
        "id": 501436646,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQzNjY0Ng==",
        "user": {
            "login": "codecov-io",
            "id": 8655789,
            "node_id": "MDQ6VXNlcjg2NTU3ODk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codecov-io",
            "html_url": "https://github.com/codecov-io",
            "followers_url": "https://api.github.com/users/codecov-io/followers",
            "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
            "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
            "organizations_url": "https://api.github.com/users/codecov-io/orgs",
            "repos_url": "https://api.github.com/users/codecov-io/repos",
            "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codecov-io/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-12T20:10:27Z",
        "updated_at": "2019-06-13T00:00:54Z",
        "author_association": "NONE",
        "body": "# [Codecov](https://codecov.io/gh/protolambda/zrnt/pull/14?src=pr&el=h1) Report\n> Merging [#14](https://codecov.io/gh/protolambda/zrnt/pull/14?src=pr&el=desc) into [master](https://codecov.io/gh/protolambda/zrnt/commit/dfccd43792025e65755356ed1ba2ff4c120a60fb?src=pr&el=desc) will **decrease** coverage by `0.14%`.\n> The diff coverage is `40%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/protolambda/zrnt/pull/14/graphs/tree.svg?width=650&token=uvruGsdazd&height=150&src=pr)](https://codecov.io/gh/protolambda/zrnt/pull/14?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master      #14      +/-   ##\n==========================================\n- Coverage   67.47%   67.33%   -0.15%     \n==========================================\n  Files          43       43              \n  Lines        1239     1252      +13     \n==========================================\n+ Hits          836      843       +7     \n  Misses        317      317              \n- Partials       86       92       +6\n```\n\n\n| [Impacted Files](https://codecov.io/gh/protolambda/zrnt/pull/14?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [eth2/util/bitfield/bitfield.go](https://codecov.io/gh/protolambda/zrnt/pull/14/diff?src=pr&el=tree#diff-ZXRoMi91dGlsL2JpdGZpZWxkL2JpdGZpZWxkLmdv) | `100% <100%> (+52.94%)` | :arrow_up: |\n| [eth2/beacon/block\\_processing/block\\_attestation.go](https://codecov.io/gh/protolambda/zrnt/pull/14/diff?src=pr&el=tree#diff-ZXRoMi9iZWFjb24vYmxvY2tfcHJvY2Vzc2luZy9ibG9ja19hdHRlc3RhdGlvbi5nbw==) | `83.67% <33.33%> (-7.03%)` | :arrow_down: |\n| [eth2/beacon/state.go](https://codecov.io/gh/protolambda/zrnt/pull/14/diff?src=pr&el=tree#diff-ZXRoMi9iZWFjb24vc3RhdGUuZ28=) | `76.76% <37.5%> (-3.24%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/protolambda/zrnt/pull/14?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/protolambda/zrnt/pull/14?src=pr&el=footer). Last update [dfccd43...1459d34](https://codecov.io/gh/protolambda/zrnt/pull/14?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/501493640",
        "html_url": "https://github.com/protolambda/zrnt/issues/10#issuecomment-501493640",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/10",
        "id": 501493640,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQ5MzY0MA==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-12T23:41:27Z",
        "updated_at": "2019-06-12T23:41:27Z",
        "author_association": "OWNER",
        "body": "I believe this is fixed by https://github.com/protolambda/zrnt/pull/14/commits/e0ef0fa3d483351c15b3b9beab4453b34463ebdc"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/501510046",
        "html_url": "https://github.com/protolambda/zrnt/pull/14#issuecomment-501510046",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/14",
        "id": 501510046,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTUxMDA0Ng==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-13T01:08:46Z",
        "updated_at": "2019-06-13T01:08:46Z",
        "author_association": "OWNER",
        "body": "merged in the changes. When bugfixes are blocked, and coverage decreases, but increases elsewhere with new tests, I'm inclined to ignore codecov. (also didn't pick up the new setttings, hope it works in future PRs)"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/502483903",
        "html_url": "https://github.com/protolambda/zrnt/issues/15#issuecomment-502483903",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/15",
        "id": 502483903,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQ4MzkwMw==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-16T20:37:09Z",
        "updated_at": "2019-06-16T20:37:09Z",
        "author_association": "OWNER",
        "body": "Fixed in 23e9472c5e0cd226b5664c201067444829bdca25"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/508080741",
        "html_url": "https://github.com/protolambda/zrnt/issues/6#issuecomment-508080741",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/6",
        "id": 508080741,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwODA4MDc0MQ==",
        "user": {
            "login": "protolambda",
            "id": 19571989,
            "node_id": "MDQ6VXNlcjE5NTcxOTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19571989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protolambda",
            "html_url": "https://github.com/protolambda",
            "followers_url": "https://api.github.com/users/protolambda/followers",
            "following_url": "https://api.github.com/users/protolambda/following{/other_user}",
            "gists_url": "https://api.github.com/users/protolambda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protolambda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protolambda/subscriptions",
            "organizations_url": "https://api.github.com/users/protolambda/orgs",
            "repos_url": "https://api.github.com/users/protolambda/repos",
            "events_url": "https://api.github.com/users/protolambda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protolambda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-03T12:54:31Z",
        "updated_at": "2019-07-03T12:54:31Z",
        "author_association": "OWNER",
        "body": "1. removed it a while ago.\r\n2. done a quite a while ago\r\n3. gofumpt is still on the list. But have the report-card badge in the readme, which runs the same linters, incl some from golangci-lint, getting A+. And there are so many other meta-linters. I will look into it after the 0.8 update.\r\n4. see 3\r\n5. removed the encoder. But need the decoder for tests. May move it somewhere else at some point\r\n6. Not as tempted. Go style is generally short small names, and 1 responsibility per file (with 1 testing file next to it). Looking to go more in that direction; split up the state.go file, now that getters/modification/etc. are all nicely categorized in 0.8. Besides, this enables me to use build constraints for part of the functionality, to start supporting phase-1 builds.\r\n"
    },
    {
        "url": "https://api.github.com/repos/protolambda/zrnt/issues/comments/560186033",
        "html_url": "https://github.com/protolambda/zrnt/issues/18#issuecomment-560186033",
        "issue_url": "https://api.github.com/repos/protolambda/zrnt/issues/18",
        "id": 560186033,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE4NjAzMw==",
        "user": {
            "login": "gnattishness",
            "id": 1620192,
            "node_id": "MDQ6VXNlcjE2MjAxOTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1620192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnattishness",
            "html_url": "https://github.com/gnattishness",
            "followers_url": "https://api.github.com/users/gnattishness/followers",
            "following_url": "https://api.github.com/users/gnattishness/following{/other_user}",
            "gists_url": "https://api.github.com/users/gnattishness/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gnattishness/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gnattishness/subscriptions",
            "organizations_url": "https://api.github.com/users/gnattishness/orgs",
            "repos_url": "https://api.github.com/users/gnattishness/repos",
            "events_url": "https://api.github.com/users/gnattishness/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gnattishness/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-12-02T01:10:44Z",
        "updated_at": "2019-12-02T01:10:44Z",
        "author_association": "NONE",
        "body": "This is based on my understanding of the following error behavior/equivalence in the 2 specs:\r\n\r\nerror type | ZRNT | Pyspec\r\n------|----------|-----\r\nexpected error/crash | Go error return | AssertionError or IndexError\r\nserious crash, bug | Go panic | Other python exceptions"
    }
]