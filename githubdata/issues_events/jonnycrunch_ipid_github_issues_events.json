[
    {
        "id": 2974567003,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI5NzQ1NjcwMDM=",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2974567003",
        "actor": {
            "login": "jonnycrunch",
            "id": 8137617,
            "node_id": "MDQ6VXNlcjgxMzc2MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonnycrunch",
            "html_url": "https://github.com/jonnycrunch",
            "followers_url": "https://api.github.com/users/jonnycrunch/followers",
            "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
            "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
            "repos_url": "https://api.github.com/users/jonnycrunch/repos",
            "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-01-23T17:15:03Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/7",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/7/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/7/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/7/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/7",
            "id": 552997413,
            "node_id": "MDU6SXNzdWU1NTI5OTc0MTM=",
            "number": 7,
            "title": "KERI and IPLD",
            "user": {
                "login": "SmithSamuelM",
                "id": 602685,
                "node_id": "MDQ6VXNlcjYwMjY4NQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/602685?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SmithSamuelM",
                "html_url": "https://github.com/SmithSamuelM",
                "followers_url": "https://api.github.com/users/SmithSamuelM/followers",
                "following_url": "https://api.github.com/users/SmithSamuelM/following{/other_user}",
                "gists_url": "https://api.github.com/users/SmithSamuelM/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SmithSamuelM/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SmithSamuelM/subscriptions",
                "organizations_url": "https://api.github.com/users/SmithSamuelM/orgs",
                "repos_url": "https://api.github.com/users/SmithSamuelM/repos",
                "events_url": "https://api.github.com/users/SmithSamuelM/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SmithSamuelM/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 5,
            "created_at": "2020-01-21T16:43:27Z",
            "updated_at": "2020-01-23T17:15:02Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "I want to explore a common incepting (multi-format like) approach to self-certifying identifiers that are based on a hash (signature) of the incepting information that is compatible with IPID.\r\n\r\nWe you be open to a discussion on this.  I couldn't find you email."
        }
    },
    {
        "id": 2974567000,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjk3NDU2NzAwMA==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2974567000",
        "actor": {
            "login": "jonnycrunch",
            "id": 8137617,
            "node_id": "MDQ6VXNlcjgxMzc2MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonnycrunch",
            "html_url": "https://github.com/jonnycrunch",
            "followers_url": "https://api.github.com/users/jonnycrunch/followers",
            "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
            "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
            "repos_url": "https://api.github.com/users/jonnycrunch/repos",
            "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-01-23T17:15:03Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/7",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/7/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/7/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/7/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/7",
            "id": 552997413,
            "node_id": "MDU6SXNzdWU1NTI5OTc0MTM=",
            "number": 7,
            "title": "KERI and IPLD",
            "user": {
                "login": "SmithSamuelM",
                "id": 602685,
                "node_id": "MDQ6VXNlcjYwMjY4NQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/602685?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SmithSamuelM",
                "html_url": "https://github.com/SmithSamuelM",
                "followers_url": "https://api.github.com/users/SmithSamuelM/followers",
                "following_url": "https://api.github.com/users/SmithSamuelM/following{/other_user}",
                "gists_url": "https://api.github.com/users/SmithSamuelM/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SmithSamuelM/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SmithSamuelM/subscriptions",
                "organizations_url": "https://api.github.com/users/SmithSamuelM/orgs",
                "repos_url": "https://api.github.com/users/SmithSamuelM/repos",
                "events_url": "https://api.github.com/users/SmithSamuelM/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SmithSamuelM/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 5,
            "created_at": "2020-01-21T16:43:27Z",
            "updated_at": "2020-01-23T17:15:02Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "I want to explore a common incepting (multi-format like) approach to self-certifying identifiers that are based on a hash (signature) of the incepting information that is compatible with IPID.\r\n\r\nWe you be open to a discussion on this.  I couldn't find you email."
        }
    },
    {
        "id": 2825133259,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI4MjUxMzMyNTk=",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2825133259",
        "actor": {
            "login": "jonnycrunch",
            "id": 8137617,
            "node_id": "MDQ6VXNlcjgxMzc2MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonnycrunch",
            "html_url": "https://github.com/jonnycrunch",
            "followers_url": "https://api.github.com/users/jonnycrunch/followers",
            "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
            "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
            "repos_url": "https://api.github.com/users/jonnycrunch/repos",
            "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-11-23T04:58:49Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/6",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/6/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/6/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/6/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/6",
            "id": 527510806,
            "node_id": "MDU6SXNzdWU1Mjc1MTA4MDY=",
            "number": 6,
            "title": "Did you ever investigate Dat for this?",
            "user": {
                "login": "DougAnderson444",
                "id": 6699901,
                "node_id": "MDQ6VXNlcjY2OTk5MDE=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6699901?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DougAnderson444",
                "html_url": "https://github.com/DougAnderson444",
                "followers_url": "https://api.github.com/users/DougAnderson444/followers",
                "following_url": "https://api.github.com/users/DougAnderson444/following{/other_user}",
                "gists_url": "https://api.github.com/users/DougAnderson444/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DougAnderson444/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DougAnderson444/subscriptions",
                "organizations_url": "https://api.github.com/users/DougAnderson444/orgs",
                "repos_url": "https://api.github.com/users/DougAnderson444/repos",
                "events_url": "https://api.github.com/users/DougAnderson444/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DougAnderson444/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-11-23T04:58:49Z",
            "updated_at": "2019-11-23T04:58:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "Hi! Great work on this @jonnycrunch \r\n\r\nHey I was wondering if you ever considered [Dat](https://dat.foundation/) for DID design? It is actually very close to IPFS, was actually around before IPFS, and [Juan Benet actually worked on it](https://github.com/ipfs/faq/issues/119#issuecomment-218278390) before branching off to IPFS, which was based on Dat.\r\n\r\nI suggest this because the Dat URL is static, even if you change the files (in this case, the DID Doc), so you wouldn't have to update IPNS with every change. Might be a better for for SSI?\r\n\r\nAs a scientist, you might consider looking into [Dat ](https://dat.foundation/) also, it's sponsored by https://codeforscience.org/ and was originally designed for sharing large data sets."
        }
    },
    {
        "id": 2825133257,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjgyNTEzMzI1Nw==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2825133257",
        "actor": {
            "login": "jonnycrunch",
            "id": 8137617,
            "node_id": "MDQ6VXNlcjgxMzc2MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonnycrunch",
            "html_url": "https://github.com/jonnycrunch",
            "followers_url": "https://api.github.com/users/jonnycrunch/followers",
            "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
            "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
            "repos_url": "https://api.github.com/users/jonnycrunch/repos",
            "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-11-23T04:58:49Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/6",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/6/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/6/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/6/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/6",
            "id": 527510806,
            "node_id": "MDU6SXNzdWU1Mjc1MTA4MDY=",
            "number": 6,
            "title": "Did you ever investigate Dat for this?",
            "user": {
                "login": "DougAnderson444",
                "id": 6699901,
                "node_id": "MDQ6VXNlcjY2OTk5MDE=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6699901?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DougAnderson444",
                "html_url": "https://github.com/DougAnderson444",
                "followers_url": "https://api.github.com/users/DougAnderson444/followers",
                "following_url": "https://api.github.com/users/DougAnderson444/following{/other_user}",
                "gists_url": "https://api.github.com/users/DougAnderson444/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DougAnderson444/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DougAnderson444/subscriptions",
                "organizations_url": "https://api.github.com/users/DougAnderson444/orgs",
                "repos_url": "https://api.github.com/users/DougAnderson444/repos",
                "events_url": "https://api.github.com/users/DougAnderson444/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DougAnderson444/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-11-23T04:58:49Z",
            "updated_at": "2019-11-23T04:58:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "Hi! Great work on this @jonnycrunch \r\n\r\nHey I was wondering if you ever considered [Dat](https://dat.foundation/) for DID design? It is actually very close to IPFS, was actually around before IPFS, and [Juan Benet actually worked on it](https://github.com/ipfs/faq/issues/119#issuecomment-218278390) before branching off to IPFS, which was based on Dat.\r\n\r\nI suggest this because the Dat URL is static, even if you change the files (in this case, the DID Doc), so you wouldn't have to update IPNS with every change. Might be a better for for SSI?\r\n\r\nAs a scientist, you might consider looking into [Dat ](https://dat.foundation/) also, it's sponsored by https://codeforscience.org/ and was originally designed for sharing large data sets."
        }
    },
    {
        "id": 2144667791,
        "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjE0NDY2Nzc5MQ==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144667791",
        "actor": {
            "login": "satazor",
            "id": 1017236,
            "node_id": "MDQ6VXNlcjEwMTcyMzY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/satazor",
            "html_url": "https://github.com/satazor",
            "followers_url": "https://api.github.com/users/satazor/followers",
            "following_url": "https://api.github.com/users/satazor/following{/other_user}",
            "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
            "organizations_url": "https://api.github.com/users/satazor/orgs",
            "repos_url": "https://api.github.com/users/satazor/repos",
            "events_url": "https://api.github.com/users/satazor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/satazor/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "renamed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:40:37Z",
        "rename": {
            "from": "How to handle multi-writter scenario?",
            "to": "How to handle multi-writter scenarios?"
        },
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 2144664655,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxNDQ2NjQ2NTU=",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144664655",
        "actor": {
            "login": "jonnycrunch",
            "id": 8137617,
            "node_id": "MDQ6VXNlcjgxMzc2MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonnycrunch",
            "html_url": "https://github.com/jonnycrunch",
            "followers_url": "https://api.github.com/users/jonnycrunch/followers",
            "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
            "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
            "repos_url": "https://api.github.com/users/jonnycrunch/repos",
            "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:32:26Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 2144664654,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjE0NDY2NDY1NA==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144664654",
        "actor": {
            "login": "jonnycrunch",
            "id": 8137617,
            "node_id": "MDQ6VXNlcjgxMzc2MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonnycrunch",
            "html_url": "https://github.com/jonnycrunch",
            "followers_url": "https://api.github.com/users/jonnycrunch/followers",
            "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
            "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
            "repos_url": "https://api.github.com/users/jonnycrunch/repos",
            "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:32:26Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 2144664653,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxNDQ2NjQ2NTM=",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144664653",
        "actor": {
            "login": "aschmahmann",
            "id": 2733228,
            "node_id": "MDQ6VXNlcjI3MzMyMjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2733228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aschmahmann",
            "html_url": "https://github.com/aschmahmann",
            "followers_url": "https://api.github.com/users/aschmahmann/followers",
            "following_url": "https://api.github.com/users/aschmahmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/aschmahmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aschmahmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aschmahmann/subscriptions",
            "organizations_url": "https://api.github.com/users/aschmahmann/orgs",
            "repos_url": "https://api.github.com/users/aschmahmann/repos",
            "events_url": "https://api.github.com/users/aschmahmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aschmahmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:32:26Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 2144664652,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjE0NDY2NDY1Mg==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144664652",
        "actor": {
            "login": "aschmahmann",
            "id": 2733228,
            "node_id": "MDQ6VXNlcjI3MzMyMjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2733228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aschmahmann",
            "html_url": "https://github.com/aschmahmann",
            "followers_url": "https://api.github.com/users/aschmahmann/followers",
            "following_url": "https://api.github.com/users/aschmahmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/aschmahmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aschmahmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aschmahmann/subscriptions",
            "organizations_url": "https://api.github.com/users/aschmahmann/orgs",
            "repos_url": "https://api.github.com/users/aschmahmann/repos",
            "events_url": "https://api.github.com/users/aschmahmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aschmahmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:32:26Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 2144664651,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxNDQ2NjQ2NTE=",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144664651",
        "actor": {
            "login": "dirkmc",
            "id": 169124,
            "node_id": "MDQ6VXNlcjE2OTEyNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/169124?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dirkmc",
            "html_url": "https://github.com/dirkmc",
            "followers_url": "https://api.github.com/users/dirkmc/followers",
            "following_url": "https://api.github.com/users/dirkmc/following{/other_user}",
            "gists_url": "https://api.github.com/users/dirkmc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dirkmc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dirkmc/subscriptions",
            "organizations_url": "https://api.github.com/users/dirkmc/orgs",
            "repos_url": "https://api.github.com/users/dirkmc/repos",
            "events_url": "https://api.github.com/users/dirkmc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dirkmc/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:32:26Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 2144664650,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjE0NDY2NDY1MA==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144664650",
        "actor": {
            "login": "dirkmc",
            "id": 169124,
            "node_id": "MDQ6VXNlcjE2OTEyNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/169124?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dirkmc",
            "html_url": "https://github.com/dirkmc",
            "followers_url": "https://api.github.com/users/dirkmc/followers",
            "following_url": "https://api.github.com/users/dirkmc/following{/other_user}",
            "gists_url": "https://api.github.com/users/dirkmc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dirkmc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dirkmc/subscriptions",
            "organizations_url": "https://api.github.com/users/dirkmc/orgs",
            "repos_url": "https://api.github.com/users/dirkmc/repos",
            "events_url": "https://api.github.com/users/dirkmc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dirkmc/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:32:26Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 2144664649,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxNDQ2NjQ2NDk=",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144664649",
        "actor": {
            "login": "pgte",
            "id": 47910,
            "node_id": "MDQ6VXNlcjQ3OTEw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/47910?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pgte",
            "html_url": "https://github.com/pgte",
            "followers_url": "https://api.github.com/users/pgte/followers",
            "following_url": "https://api.github.com/users/pgte/following{/other_user}",
            "gists_url": "https://api.github.com/users/pgte/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pgte/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pgte/subscriptions",
            "organizations_url": "https://api.github.com/users/pgte/orgs",
            "repos_url": "https://api.github.com/users/pgte/repos",
            "events_url": "https://api.github.com/users/pgte/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pgte/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:32:26Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 2144664647,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjE0NDY2NDY0Nw==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144664647",
        "actor": {
            "login": "pgte",
            "id": 47910,
            "node_id": "MDQ6VXNlcjQ3OTEw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/47910?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pgte",
            "html_url": "https://github.com/pgte",
            "followers_url": "https://api.github.com/users/pgte/followers",
            "following_url": "https://api.github.com/users/pgte/following{/other_user}",
            "gists_url": "https://api.github.com/users/pgte/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pgte/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pgte/subscriptions",
            "organizations_url": "https://api.github.com/users/pgte/orgs",
            "repos_url": "https://api.github.com/users/pgte/repos",
            "events_url": "https://api.github.com/users/pgte/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pgte/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:32:26Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 2144664645,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxNDQ2NjQ2NDU=",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144664645",
        "actor": {
            "login": "jimpick",
            "id": 20886,
            "node_id": "MDQ6VXNlcjIwODg2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/20886?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimpick",
            "html_url": "https://github.com/jimpick",
            "followers_url": "https://api.github.com/users/jimpick/followers",
            "following_url": "https://api.github.com/users/jimpick/following{/other_user}",
            "gists_url": "https://api.github.com/users/jimpick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jimpick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jimpick/subscriptions",
            "organizations_url": "https://api.github.com/users/jimpick/orgs",
            "repos_url": "https://api.github.com/users/jimpick/repos",
            "events_url": "https://api.github.com/users/jimpick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jimpick/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:32:26Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 2144664644,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjE0NDY2NDY0NA==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/2144664644",
        "actor": {
            "login": "jimpick",
            "id": 20886,
            "node_id": "MDQ6VXNlcjIwODg2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/20886?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimpick",
            "html_url": "https://github.com/jimpick",
            "followers_url": "https://api.github.com/users/jimpick/followers",
            "following_url": "https://api.github.com/users/jimpick/following{/other_user}",
            "gists_url": "https://api.github.com/users/jimpick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jimpick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jimpick/subscriptions",
            "organizations_url": "https://api.github.com/users/jimpick/orgs",
            "repos_url": "https://api.github.com/users/jimpick/repos",
            "events_url": "https://api.github.com/users/jimpick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jimpick/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-02-17T12:32:26Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/2/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/2",
            "id": 411182677,
            "node_id": "MDU6SXNzdWU0MTExODI2Nzc=",
            "number": 2,
            "title": "How to handle multi-writter scenarios?",
            "user": {
                "login": "satazor",
                "id": 1017236,
                "node_id": "MDQ6VXNlcjEwMTcyMzY=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1017236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satazor",
                "html_url": "https://github.com/satazor",
                "followers_url": "https://api.github.com/users/satazor/followers",
                "following_url": "https://api.github.com/users/satazor/following{/other_user}",
                "gists_url": "https://api.github.com/users/satazor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satazor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satazor/subscriptions",
                "organizations_url": "https://api.github.com/users/satazor/orgs",
                "repos_url": "https://api.github.com/users/satazor/repos",
                "events_url": "https://api.github.com/users/satazor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satazor/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-02-17T12:32:26Z",
            "updated_at": "2019-02-17T22:18:49Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "A IPNS record can be create and updated as long as you have the associated private key. In case of IPID, that private key should be kept super secure because it's in complete control of the DID-Document. Therefore:\r\n\r\n1. If it needs to live in a device, store it encrypted with a passphrase or similar\r\n2. But even better, store it physically in the form of a Paper Key, cold storage or similar\r\n\r\nWhile rare, what happens if I alter the DID Document in device A and device B concurrently? Note that the \"concurrent\" meaning here can vary. It can mean that both devices were aware of each-other but they published at nearly the same time, or that both devices were in a split-brain scenario and only were aware of each-other's writings the day after.\r\n\r\nCurrently, the IPID spec doesn't define the semantics on how these conflicts should be solved. That being said, should the spec state how these situations should be resolved? Should we look into using CRDTs so that all devices converge to the same DID Document that gets published? While I got some ideas on using a operation-based DAG (state based could also work) + pubsub to propagate the heads could solve the problem, I would like to first hear about your thoughts on this matter.\r\n\r\n//cc @jonnycrunch @pgte @aschmahmann @dirkmc @jimpick \r\n\r\n"
        }
    },
    {
        "id": 1304282853,
        "node_id": "MDExOkNsb3NlZEV2ZW50MTMwNDI4Mjg1Mw==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/1304282853",
        "actor": {
            "login": "jonnycrunch",
            "id": 8137617,
            "node_id": "MDQ6VXNlcjgxMzc2MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonnycrunch",
            "html_url": "https://github.com/jonnycrunch",
            "followers_url": "https://api.github.com/users/jonnycrunch/followers",
            "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
            "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
            "repos_url": "https://api.github.com/users/jonnycrunch/repos",
            "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2017-10-21T19:32:47Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/1",
            "id": 267403328,
            "node_id": "MDU6SXNzdWUyNjc0MDMzMjg=",
            "number": 1,
            "title": "testing ",
            "user": {
                "login": "jonnycrunch",
                "id": 8137617,
                "node_id": "MDQ6VXNlcjgxMzc2MTc=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonnycrunch",
                "html_url": "https://github.com/jonnycrunch",
                "followers_url": "https://api.github.com/users/jonnycrunch/followers",
                "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
                "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
                "repos_url": "https://api.github.com/users/jonnycrunch/repos",
                "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2017-10-21T18:30:29Z",
            "updated_at": "2017-10-21T19:32:47Z",
            "closed_at": "2017-10-21T19:32:47Z",
            "author_association": "OWNER",
            "body": "@johnnycrunch this is an issue"
        }
    },
    {
        "id": 1304282304,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMwNDI4MjMwNA==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/1304282304",
        "actor": {
            "login": "johnnycrunch",
            "id": 32987443,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMyOTg3NDQz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/32987443?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johnnycrunch",
            "html_url": "https://github.com/johnnycrunch",
            "followers_url": "https://api.github.com/users/johnnycrunch/followers",
            "following_url": "https://api.github.com/users/johnnycrunch/following{/other_user}",
            "gists_url": "https://api.github.com/users/johnnycrunch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johnnycrunch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johnnycrunch/subscriptions",
            "organizations_url": "https://api.github.com/users/johnnycrunch/orgs",
            "repos_url": "https://api.github.com/users/johnnycrunch/repos",
            "events_url": "https://api.github.com/users/johnnycrunch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johnnycrunch/received_events",
            "type": "Organization",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2017-10-21T19:30:57Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/1",
            "id": 267403328,
            "node_id": "MDU6SXNzdWUyNjc0MDMzMjg=",
            "number": 1,
            "title": "testing ",
            "user": {
                "login": "jonnycrunch",
                "id": 8137617,
                "node_id": "MDQ6VXNlcjgxMzc2MTc=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonnycrunch",
                "html_url": "https://github.com/jonnycrunch",
                "followers_url": "https://api.github.com/users/jonnycrunch/followers",
                "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
                "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
                "repos_url": "https://api.github.com/users/jonnycrunch/repos",
                "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2017-10-21T18:30:29Z",
            "updated_at": "2017-10-21T19:32:47Z",
            "closed_at": "2017-10-21T19:32:47Z",
            "author_association": "OWNER",
            "body": "@johnnycrunch this is an issue"
        }
    },
    {
        "id": 1304273289,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMwNDI3MzI4OQ==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/1304273289",
        "actor": {
            "login": "johnnycrunch",
            "id": 32987443,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMyOTg3NDQz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/32987443?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johnnycrunch",
            "html_url": "https://github.com/johnnycrunch",
            "followers_url": "https://api.github.com/users/johnnycrunch/followers",
            "following_url": "https://api.github.com/users/johnnycrunch/following{/other_user}",
            "gists_url": "https://api.github.com/users/johnnycrunch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johnnycrunch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johnnycrunch/subscriptions",
            "organizations_url": "https://api.github.com/users/johnnycrunch/orgs",
            "repos_url": "https://api.github.com/users/johnnycrunch/repos",
            "events_url": "https://api.github.com/users/johnnycrunch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johnnycrunch/received_events",
            "type": "Organization",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2017-10-21T19:02:44Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/1",
            "id": 267403328,
            "node_id": "MDU6SXNzdWUyNjc0MDMzMjg=",
            "number": 1,
            "title": "testing ",
            "user": {
                "login": "jonnycrunch",
                "id": 8137617,
                "node_id": "MDQ6VXNlcjgxMzc2MTc=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonnycrunch",
                "html_url": "https://github.com/jonnycrunch",
                "followers_url": "https://api.github.com/users/jonnycrunch/followers",
                "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
                "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
                "repos_url": "https://api.github.com/users/jonnycrunch/repos",
                "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2017-10-21T18:30:29Z",
            "updated_at": "2017-10-21T19:32:47Z",
            "closed_at": "2017-10-21T19:32:47Z",
            "author_association": "OWNER",
            "body": "@johnnycrunch this is an issue"
        }
    },
    {
        "id": 1304263785,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMwNDI2Mzc4NQ==",
        "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/events/1304263785",
        "actor": {
            "login": "johnnycrunch",
            "id": 32987443,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMyOTg3NDQz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/32987443?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johnnycrunch",
            "html_url": "https://github.com/johnnycrunch",
            "followers_url": "https://api.github.com/users/johnnycrunch/followers",
            "following_url": "https://api.github.com/users/johnnycrunch/following{/other_user}",
            "gists_url": "https://api.github.com/users/johnnycrunch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johnnycrunch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johnnycrunch/subscriptions",
            "organizations_url": "https://api.github.com/users/johnnycrunch/orgs",
            "repos_url": "https://api.github.com/users/johnnycrunch/repos",
            "events_url": "https://api.github.com/users/johnnycrunch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johnnycrunch/received_events",
            "type": "Organization",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2017-10-21T18:30:29Z",
        "issue": {
            "url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1",
            "repository_url": "https://api.github.com/repos/jonnycrunch/ipid",
            "labels_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/comments",
            "events_url": "https://api.github.com/repos/jonnycrunch/ipid/issues/1/events",
            "html_url": "https://github.com/jonnycrunch/ipid/issues/1",
            "id": 267403328,
            "node_id": "MDU6SXNzdWUyNjc0MDMzMjg=",
            "number": 1,
            "title": "testing ",
            "user": {
                "login": "jonnycrunch",
                "id": 8137617,
                "node_id": "MDQ6VXNlcjgxMzc2MTc=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/8137617?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonnycrunch",
                "html_url": "https://github.com/jonnycrunch",
                "followers_url": "https://api.github.com/users/jonnycrunch/followers",
                "following_url": "https://api.github.com/users/jonnycrunch/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonnycrunch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonnycrunch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonnycrunch/subscriptions",
                "organizations_url": "https://api.github.com/users/jonnycrunch/orgs",
                "repos_url": "https://api.github.com/users/jonnycrunch/repos",
                "events_url": "https://api.github.com/users/jonnycrunch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonnycrunch/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2017-10-21T18:30:29Z",
            "updated_at": "2017-10-21T19:32:47Z",
            "closed_at": "2017-10-21T19:32:47Z",
            "author_association": "OWNER",
            "body": "@johnnycrunch this is an issue"
        }
    }
]