[
    {
        "id": 1025370875,
        "node_id": "MDExOkNsb3NlZEV2ZW50MTAyNTM3MDg3NQ==",
        "url": "https://api.github.com/repos/diracdeltafunk/LaHacks2017-Exe/issues/events/1025370875",
        "actor": {
            "login": "diracdeltafunk",
            "id": 1844060,
            "node_id": "MDQ6VXNlcjE4NDQwNjA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1844060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diracdeltafunk",
            "html_url": "https://github.com/diracdeltafunk",
            "followers_url": "https://api.github.com/users/diracdeltafunk/followers",
            "following_url": "https://api.github.com/users/diracdeltafunk/following{/other_user}",
            "gists_url": "https://api.github.com/users/diracdeltafunk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diracdeltafunk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diracdeltafunk/subscriptions",
            "organizations_url": "https://api.github.com/users/diracdeltafunk/orgs",
            "repos_url": "https://api.github.com/users/diracdeltafunk/repos",
            "events_url": "https://api.github.com/users/diracdeltafunk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diracdeltafunk/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2017-04-02T01:00:44Z",
        "issue": {
            "url": "https://api.github.com/repos/diracdeltafunk/LaHacks2017-Exe/issues/1",
            "repository_url": "https://api.github.com/repos/diracdeltafunk/LaHacks2017-Exe",
            "labels_url": "https://api.github.com/repos/diracdeltafunk/LaHacks2017-Exe/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/diracdeltafunk/LaHacks2017-Exe/issues/1/comments",
            "events_url": "https://api.github.com/repos/diracdeltafunk/LaHacks2017-Exe/issues/1/events",
            "html_url": "https://github.com/diracdeltafunk/LaHacks2017-Exe/issues/1",
            "id": 218726651,
            "node_id": "MDU6SXNzdWUyMTg3MjY2NTE=",
            "number": 1,
            "title": "for loop bug",
            "user": {
                "login": "exfret",
                "id": 25315014,
                "node_id": "MDQ6VXNlcjI1MzE1MDE0",
                "avatar_url": "https://avatars0.githubusercontent.com/u/25315014?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/exfret",
                "html_url": "https://github.com/exfret",
                "followers_url": "https://api.github.com/users/exfret/followers",
                "following_url": "https://api.github.com/users/exfret/following{/other_user}",
                "gists_url": "https://api.github.com/users/exfret/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/exfret/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/exfret/subscriptions",
                "organizations_url": "https://api.github.com/users/exfret/orgs",
                "repos_url": "https://api.github.com/users/exfret/repos",
                "events_url": "https://api.github.com/users/exfret/events{/privacy}",
                "received_events_url": "https://api.github.com/users/exfret/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 1,
            "created_at": "2017-04-01T22:15:51Z",
            "updated_at": "2017-04-02T01:00:44Z",
            "closed_at": "2017-04-02T01:00:44Z",
            "author_association": "COLLABORATOR",
            "body": "When we write code like \"for (auto x : dynamic_cast<ProductNode*>(g.head)->factors) newFactors.insert(x);\" x is a pointer to a node, no? So we'll be inserting pointers to a node that is already pointed to, which would be problematic. I think we need to do insert(x.clone()) instead."
        }
    }
]