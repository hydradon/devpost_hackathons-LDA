[
    {
        "id": 2987351469,
        "node_id": "MDEyOkxhYmVsZWRFdmVudDI5ODczNTE0Njk=",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2987351469",
        "actor": {
            "login": "dependabot[bot]",
            "id": 49699333,
            "node_id": "MDM6Qm90NDk2OTkzMzM=",
            "avatar_url": "https://avatars0.githubusercontent.com/in/29110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dependabot%5Bbot%5D",
            "html_url": "https://github.com/apps/dependabot",
            "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "event": "labeled",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-01-28T21:41:34Z",
        "label": {
            "name": "dependencies",
            "color": "0366d6"
        },
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/14",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/14/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/14/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/14/events",
            "html_url": "https://github.com/danaugrs/huskarl/pull/14",
            "id": 556486207,
            "node_id": "MDExOlB1bGxSZXF1ZXN0MzY4MjQ0MjI2",
            "number": 14,
            "title": "Bump tensorflow from 2.0.0 to 2.0.1",
            "user": {
                "login": "dependabot[bot]",
                "id": 49699333,
                "node_id": "MDM6Qm90NDk2OTkzMzM=",
                "avatar_url": "https://avatars0.githubusercontent.com/in/29110?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dependabot%5Bbot%5D",
                "html_url": "https://github.com/apps/dependabot",
                "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
                "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
                "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
                "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
                "type": "Bot",
                "site_admin": false
            },
            "labels": [
                {
                    "id": 1814193752,
                    "node_id": "MDU6TGFiZWwxODE0MTkzNzUy",
                    "url": "https://api.github.com/repos/danaugrs/huskarl/labels/dependencies",
                    "name": "dependencies",
                    "color": "0366d6",
                    "default": false,
                    "description": "Pull requests that update a dependency file"
                }
            ],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2020-01-28T21:41:33Z",
            "updated_at": "2020-01-28T21:41:34Z",
            "closed_at": null,
            "author_association": "NONE",
            "pull_request": {
                "url": "https://api.github.com/repos/danaugrs/huskarl/pulls/14",
                "html_url": "https://github.com/danaugrs/huskarl/pull/14",
                "diff_url": "https://github.com/danaugrs/huskarl/pull/14.diff",
                "patch_url": "https://github.com/danaugrs/huskarl/pull/14.patch"
            },
            "body": "Bumps [tensorflow](https://github.com/tensorflow/tensorflow) from 2.0.0 to 2.0.1.\n<details>\n<summary>Release notes</summary>\n\n*Sourced from [tensorflow's releases](https://github.com/tensorflow/tensorflow/releases).*\n\n> ## TensorFlow 2.0.1\n> # Release 2.0.1\r\n> \r\n> ## Bug Fixes and Other Changes\r\n> * Fixes a security vulnerability where converting a Python string to a `tf.float16` value produces a segmentation fault ([CVE-2020-5215](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-5215))\r\n> * Updates `curl` to `7.66.0` to handle [CVE-2019-5482](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5482) and [CVE-2019-5481](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5481)\r\n> * Updates `sqlite3` to `3.30.01` to handle [CVE-2019-19646](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19646), [CVE-2019-19645](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19645) and [CVE-2019-16168](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16168)\n</details>\n<details>\n<summary>Changelog</summary>\n\n*Sourced from [tensorflow's changelog](https://github.com/tensorflow/tensorflow/blob/master/RELEASE.md).*\n\n> # Release 2.0.1\n> \n> ## Bug Fixes and Other Changes\n> * Fixes a security vulnerability where converting a Python string to a `tf.float16` value produces a segmentation fault ([CVE-2020-5215](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-5215))\n> * Updates `curl` to `7.66.0` to handle [CVE-2019-5482](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5482) and [CVE-2019-5481](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5481)\n> * Updates `sqlite3` to `3.30.01` to handle [CVE-2019-19646](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19646), [CVE-2019-19645](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19645) and [CVE-2019-16168](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16168)\n> \n> \n> # Release 1.15.2\n> \n> ## Bug Fixes and Other Changes\n> * Fixes a security vulnerability where converting a Python string to a `tf.float16` value produces a segmentation fault ([CVE-2020-5215](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-5215))\n> * Updates `curl` to `7.66.0` to handle [CVE-2019-5482](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5482) and [CVE-2019-5481](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5481)\n> * Updates `sqlite3` to `3.30.01` to handle [CVE-2019-19646](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19646), [CVE-2019-19645](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19645) and [CVE-2019-16168](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16168)\n> \n> \n> # Release 2.1.0\n> \n> TensorFlow 2.1 will be the last TF release supporting Python 2. Python 2 support [officially ends an January 1, 2020](https://www.python.org/dev/peps/pep-0373/#update). [As announced earlier](https://groups.google.com/a/tensorflow.org/d/msg/announce/gVwS5RC8mds/dCt1ka2XAAAJ), TensorFlow will also stop supporting Python 2 starting January 1, 2020, and no more releases are expected in 2019.\n> \n> ## Major Features and Improvements\n> * The `tensorflow` pip package now includes GPU support by default (same as `tensorflow-gpu`) for both Linux and Windows. This runs on machines with and without NVIDIA GPUs. `tensorflow-gpu` is still available, and CPU-only packages can be downloaded at `tensorflow-cpu` for users who are concerned about package size.\n> * **Windows users:** Officially-released `tensorflow` Pip packages are now built with Visual Studio 2019 version 16.4 in order to take advantage of the new `/d2ReducedOptimizeHugeFunctions` compiler flag. To use these new packages, you must install \"Microsoft Visual C++ Redistributable for Visual Studio 2015, 2017 and 2019\", available from Microsoft's website [here](https://support.microsoft.com/help/2977003/the-latest-supported-visual-c-downloads).\n>   * This does not change the minimum required version for building TensorFlow from source on Windows, but builds enabling `EIGEN_STRONG_INLINE` can take over 48 hours to compile without this flag. Refer to `configure.py` for more information about `EIGEN_STRONG_INLINE` and `/d2ReducedOptimizeHugeFunctions`.\n>   * If either of the required DLLs, `msvcp140.dll` (old) or `msvcp140_1.dll` (new), are missing on your machine, `import tensorflow` will print a warning message.\n> * The `tensorflow` pip package is built with CUDA 10.1 and cuDNN 7.6.\n> * `tf.keras`\n>   * Experimental support for mixed precision is available on GPUs and Cloud TPUs. See [usage guide](https://www.tensorflow.org/guide/keras/mixed_precision).\n>   * Introduced the `TextVectorization` layer, which takes as input raw strings and takes care of text standardization, tokenization, n-gram generation, and vocabulary indexing. See this [end-to-end text classification example](https://colab.research.google.com/drive/1RvCnR7h0_l4Ekn5vINWToI9TNJdpUZB3).\n>   * Keras `.compile` `.fit` `.evaluate` and `.predict` are allowed to be outside of the DistributionStrategy scope, as long as the model was constructed inside of a scope.\n>   * Experimental support for Keras `.compile`, `.fit`, `.evaluate`, and `.predict` is available for Cloud TPUs, Cloud TPU, for all types of Keras models (sequential, functional and subclassing models).\n>   * Automatic outside compilation is now enabled for Cloud TPUs. This allows `tf.summary` to be used more conveniently with Cloud TPUs.\n>   * Dynamic batch sizes with DistributionStrategy and Keras are supported on Cloud TPUs.\n>   * Support for `.fit`, `.evaluate`, `.predict` on TPU using numpy data, in addition to `tf.data.Dataset`.\n>   * Keras reference implementations for many popular models are available in the TensorFlow [Model Garden](https://github.com/tensorflow/models/tree/master/official).\n> * `tf.data`\n>   * Changes rebatching for `tf.data datasets` + DistributionStrategy for better performance. Note that the dataset also behaves slightly differently, in that the rebatched dataset cardinality will always be a multiple of the number of replicas.\n>   * `tf.data.Dataset` now supports automatic data distribution and sharding in distributed environments, including on TPU pods.\n>   * Distribution policies for `tf.data.Dataset` can now be tuned with 1. `tf.data.experimental.AutoShardPolicy(OFF, AUTO, FILE, DATA)` 2. `tf.data.experimental.ExternalStatePolicy(WARN, IGNORE, FAIL)`\n> * `tf.debugging`\n>   * Add `tf.debugging.enable_check_numerics()` and `tf.debugging.disable_check_numerics()` to help debugging the root causes of issues involving infinities and `NaN`s.\n> * `tf.distribute`\n>   * Custom training loop support on TPUs and TPU pods is avaiable through `strategy.experimental_distribute_dataset`, `strategy.experimental_distribute_datasets_from_function`, `strategy.experimental_run_v2`, `strategy.reduce`.\n>   * Support for a global distribution strategy through `tf.distribute.experimental_set_strategy(),` in addition to `strategy.scope()`.\n> * `TensorRT`\n>   * [TensorRT 6.0](https://developer.nvidia.com/tensorrt#tensorrt-whats-new) is now supported and enabled by default. This adds support for more TensorFlow ops including Conv3D, Conv3DBackpropInputV2, AvgPool3D, MaxPool3D, ResizeBilinear, and ResizeNearestNeighbor. In addition, the TensorFlow-TensorRT python conversion API is exported as `tf.experimental.tensorrt.Converter`.\n> * Environment variable `TF_DETERMINISTIC_OPS` has been added. When set to \"true\" or \"1\", this environment variable makes `tf.nn.bias_add` operate deterministically (i.e. reproducibly), but currently only when XLA JIT compilation is *not* enabled. Setting `TF_DETERMINISTIC_OPS` to \"true\" or \"1\" also makes cuDNN convolution and max-pooling operate deterministically. This makes Keras Conv\\*D and MaxPool\\*D layers operate deterministically in both the forward and backward directions when running on a CUDA-enabled GPU.\n> \n> ## Breaking Changes\n> * Deletes `Operation.traceback_with_start_lines` for which we know of no usages.\n></tr></table> ... (truncated)\n</details>\n<details>\n<summary>Commits</summary>\n\n- [`765ac8d`](https://github.com/tensorflow/tensorflow/commit/765ac8d16eff6d6ff997ee73809b402d8b1194ae) Merge pull request [#35913](https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/35913) from tensorflow-jenkins/relnotes-2.0.1-6767\n- [`0bcb99b`](https://github.com/tensorflow/tensorflow/commit/0bcb99b37577332ba7ee3f7dd06a4ac4801d3ec2) Add CVE number for main patch\n- [`a093c7e`](https://github.com/tensorflow/tensorflow/commit/a093c7ebd4377560d8b544cd30449dcceb572091) Merge pull request [#36085](https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/36085) from tensorflow/mm-r2.0-fix-release-builds-pt4\n- [`63aedd7`](https://github.com/tensorflow/tensorflow/commit/63aedd7d84370f31d549d8b508a52a7a79db49b8) Disable test that times out on mac non pip builds\n- [`619c578`](https://github.com/tensorflow/tensorflow/commit/619c5785813d87e785423a9767218e767e1fd516) Disable the gpu on cpu tests as they were added for 2.1\n- [`1a617d6`](https://github.com/tensorflow/tensorflow/commit/1a617d66fe5c55be353a1c99b1458e3ead244efb) Merge pull request [#36047](https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/36047) from tensorflow/mm-r2.0-fix-release-builds-pt3\n- [`32d9138`](https://github.com/tensorflow/tensorflow/commit/32d9138b2ea3f6e4aca070b3933ec03f677eb1ed) Cleanup the windows builds\n- [`dd1ebd7`](https://github.com/tensorflow/tensorflow/commit/dd1ebd75426f3b6f378975e71665892cf68d495b) Cleanup macos builds\n- [`3b93059`](https://github.com/tensorflow/tensorflow/commit/3b9305981c825ce456e7ec1154f5f6724280caca) Remove py2 macos scripts\n- [`606596f`](https://github.com/tensorflow/tensorflow/commit/606596f080495601a16570012449c6467a91f2aa) Remove builds which are not needed for the release\n- Additional commits viewable in [compare view](https://github.com/tensorflow/tensorflow/compare/v2.0.0...v2.0.1)\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tensorflow&package-manager=pip&previous-version=2.0.0&new-version=2.0.1)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/danaugrs/huskarl/network/alerts).\n\n</details>"
        }
    },
    {
        "id": 2714931921,
        "node_id": "MDExOkNsb3NlZEV2ZW50MjcxNDkzMTkyMQ==",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2714931921",
        "actor": {
            "login": "danaugrs",
            "id": 5261448,
            "node_id": "MDQ6VXNlcjUyNjE0NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5261448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danaugrs",
            "html_url": "https://github.com/danaugrs",
            "followers_url": "https://api.github.com/users/danaugrs/followers",
            "following_url": "https://api.github.com/users/danaugrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/danaugrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danaugrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danaugrs/subscriptions",
            "organizations_url": "https://api.github.com/users/danaugrs/orgs",
            "repos_url": "https://api.github.com/users/danaugrs/repos",
            "events_url": "https://api.github.com/users/danaugrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danaugrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-10-15T18:04:24Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/13",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/13/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/13/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/13/events",
            "html_url": "https://github.com/danaugrs/huskarl/pull/13",
            "id": 505360209,
            "node_id": "MDExOlB1bGxSZXF1ZXN0MzI2ODA4OTQ2",
            "number": 13,
            "title": "Update setup.py to use tensorflow==2.0.0 as requirement.",
            "user": {
                "login": "JossWhittle",
                "id": 1933494,
                "node_id": "MDQ6VXNlcjE5MzM0OTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1933494?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/JossWhittle",
                "html_url": "https://github.com/JossWhittle",
                "followers_url": "https://api.github.com/users/JossWhittle/followers",
                "following_url": "https://api.github.com/users/JossWhittle/following{/other_user}",
                "gists_url": "https://api.github.com/users/JossWhittle/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/JossWhittle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JossWhittle/subscriptions",
                "organizations_url": "https://api.github.com/users/JossWhittle/orgs",
                "repos_url": "https://api.github.com/users/JossWhittle/repos",
                "events_url": "https://api.github.com/users/JossWhittle/events{/privacy}",
                "received_events_url": "https://api.github.com/users/JossWhittle/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-10-10T15:50:40Z",
            "updated_at": "2019-10-15T18:04:24Z",
            "closed_at": "2019-10-15T18:04:24Z",
            "author_association": "CONTRIBUTOR",
            "pull_request": {
                "url": "https://api.github.com/repos/danaugrs/huskarl/pulls/13",
                "html_url": "https://github.com/danaugrs/huskarl/pull/13",
                "diff_url": "https://github.com/danaugrs/huskarl/pull/13.diff",
                "patch_url": "https://github.com/danaugrs/huskarl/pull/13.patch"
            },
            "body": "Updates setup.py to use tensorflow==2.0.0 as requirement now that it is officially released."
        }
    },
    {
        "id": 2714931916,
        "node_id": "MDExOk1lcmdlZEV2ZW50MjcxNDkzMTkxNg==",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2714931916",
        "actor": {
            "login": "danaugrs",
            "id": 5261448,
            "node_id": "MDQ6VXNlcjUyNjE0NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5261448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danaugrs",
            "html_url": "https://github.com/danaugrs",
            "followers_url": "https://api.github.com/users/danaugrs/followers",
            "following_url": "https://api.github.com/users/danaugrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/danaugrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danaugrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danaugrs/subscriptions",
            "organizations_url": "https://api.github.com/users/danaugrs/orgs",
            "repos_url": "https://api.github.com/users/danaugrs/repos",
            "events_url": "https://api.github.com/users/danaugrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danaugrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "merged",
        "commit_id": "c63f02f5a78c7790fff5030bbffa2d45d83a9d03",
        "commit_url": "https://api.github.com/repos/danaugrs/huskarl/commits/c63f02f5a78c7790fff5030bbffa2d45d83a9d03",
        "created_at": "2019-10-15T18:04:24Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/13",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/13/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/13/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/13/events",
            "html_url": "https://github.com/danaugrs/huskarl/pull/13",
            "id": 505360209,
            "node_id": "MDExOlB1bGxSZXF1ZXN0MzI2ODA4OTQ2",
            "number": 13,
            "title": "Update setup.py to use tensorflow==2.0.0 as requirement.",
            "user": {
                "login": "JossWhittle",
                "id": 1933494,
                "node_id": "MDQ6VXNlcjE5MzM0OTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1933494?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/JossWhittle",
                "html_url": "https://github.com/JossWhittle",
                "followers_url": "https://api.github.com/users/JossWhittle/followers",
                "following_url": "https://api.github.com/users/JossWhittle/following{/other_user}",
                "gists_url": "https://api.github.com/users/JossWhittle/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/JossWhittle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JossWhittle/subscriptions",
                "organizations_url": "https://api.github.com/users/JossWhittle/orgs",
                "repos_url": "https://api.github.com/users/JossWhittle/repos",
                "events_url": "https://api.github.com/users/JossWhittle/events{/privacy}",
                "received_events_url": "https://api.github.com/users/JossWhittle/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-10-10T15:50:40Z",
            "updated_at": "2019-10-15T18:04:24Z",
            "closed_at": "2019-10-15T18:04:24Z",
            "author_association": "CONTRIBUTOR",
            "pull_request": {
                "url": "https://api.github.com/repos/danaugrs/huskarl/pulls/13",
                "html_url": "https://github.com/danaugrs/huskarl/pull/13",
                "diff_url": "https://github.com/danaugrs/huskarl/pull/13.diff",
                "patch_url": "https://github.com/danaugrs/huskarl/pull/13.patch"
            },
            "body": "Updates setup.py to use tensorflow==2.0.0 as requirement now that it is officially released."
        }
    },
    {
        "id": 2714931915,
        "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI3MTQ5MzE5MTU=",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2714931915",
        "actor": {
            "login": "danaugrs",
            "id": 5261448,
            "node_id": "MDQ6VXNlcjUyNjE0NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5261448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danaugrs",
            "html_url": "https://github.com/danaugrs",
            "followers_url": "https://api.github.com/users/danaugrs/followers",
            "following_url": "https://api.github.com/users/danaugrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/danaugrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danaugrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danaugrs/subscriptions",
            "organizations_url": "https://api.github.com/users/danaugrs/orgs",
            "repos_url": "https://api.github.com/users/danaugrs/repos",
            "events_url": "https://api.github.com/users/danaugrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danaugrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "referenced",
        "commit_id": "c63f02f5a78c7790fff5030bbffa2d45d83a9d03",
        "commit_url": "https://api.github.com/repos/danaugrs/huskarl/commits/c63f02f5a78c7790fff5030bbffa2d45d83a9d03",
        "created_at": "2019-10-15T18:04:24Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/13",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/13/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/13/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/13/events",
            "html_url": "https://github.com/danaugrs/huskarl/pull/13",
            "id": 505360209,
            "node_id": "MDExOlB1bGxSZXF1ZXN0MzI2ODA4OTQ2",
            "number": 13,
            "title": "Update setup.py to use tensorflow==2.0.0 as requirement.",
            "user": {
                "login": "JossWhittle",
                "id": 1933494,
                "node_id": "MDQ6VXNlcjE5MzM0OTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1933494?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/JossWhittle",
                "html_url": "https://github.com/JossWhittle",
                "followers_url": "https://api.github.com/users/JossWhittle/followers",
                "following_url": "https://api.github.com/users/JossWhittle/following{/other_user}",
                "gists_url": "https://api.github.com/users/JossWhittle/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/JossWhittle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JossWhittle/subscriptions",
                "organizations_url": "https://api.github.com/users/JossWhittle/orgs",
                "repos_url": "https://api.github.com/users/JossWhittle/repos",
                "events_url": "https://api.github.com/users/JossWhittle/events{/privacy}",
                "received_events_url": "https://api.github.com/users/JossWhittle/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2019-10-10T15:50:40Z",
            "updated_at": "2019-10-15T18:04:24Z",
            "closed_at": "2019-10-15T18:04:24Z",
            "author_association": "CONTRIBUTOR",
            "pull_request": {
                "url": "https://api.github.com/repos/danaugrs/huskarl/pulls/13",
                "html_url": "https://github.com/danaugrs/huskarl/pull/13",
                "diff_url": "https://github.com/danaugrs/huskarl/pull/13.diff",
                "patch_url": "https://github.com/danaugrs/huskarl/pull/13.patch"
            },
            "body": "Updates setup.py to use tensorflow==2.0.0 as requirement now that it is officially released."
        }
    },
    {
        "id": 2612817764,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI2MTI4MTc3NjQ=",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2612817764",
        "actor": {
            "login": "wau",
            "id": 22864465,
            "node_id": "MDQ6VXNlcjIyODY0NDY1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/22864465?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wau",
            "html_url": "https://github.com/wau",
            "followers_url": "https://api.github.com/users/wau/followers",
            "following_url": "https://api.github.com/users/wau/following{/other_user}",
            "gists_url": "https://api.github.com/users/wau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wau/subscriptions",
            "organizations_url": "https://api.github.com/users/wau/orgs",
            "repos_url": "https://api.github.com/users/wau/repos",
            "events_url": "https://api.github.com/users/wau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wau/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-09-06T00:36:56Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/9",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/9/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/9/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/9/events",
            "html_url": "https://github.com/danaugrs/huskarl/issues/9",
            "id": 476239079,
            "node_id": "MDU6SXNzdWU0NzYyMzkwNzk=",
            "number": 9,
            "title": "DDPG on CartPole-v0",
            "user": {
                "login": "King-Of-Knights",
                "id": 25562792,
                "node_id": "MDQ6VXNlcjI1NTYyNzky",
                "avatar_url": "https://avatars0.githubusercontent.com/u/25562792?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/King-Of-Knights",
                "html_url": "https://github.com/King-Of-Knights",
                "followers_url": "https://api.github.com/users/King-Of-Knights/followers",
                "following_url": "https://api.github.com/users/King-Of-Knights/following{/other_user}",
                "gists_url": "https://api.github.com/users/King-Of-Knights/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/King-Of-Knights/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/King-Of-Knights/subscriptions",
                "organizations_url": "https://api.github.com/users/King-Of-Knights/orgs",
                "repos_url": "https://api.github.com/users/King-Of-Knights/repos",
                "events_url": "https://api.github.com/users/King-Of-Knights/events{/privacy}",
                "received_events_url": "https://api.github.com/users/King-Of-Knights/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 2,
            "created_at": "2019-08-02T15:33:42Z",
            "updated_at": "2019-09-06T00:36:56Z",
            "closed_at": "2019-09-06T00:36:56Z",
            "author_association": "NONE",
            "body": "Hi! Thanks for your great work. I modified `DDPG.py` and want to implement discrete control in \u201cCartPole-v0\u201d environment. But the model learned nothing. I believe the reason behind this is there is no exploration noise in this code. The main changes is to tf.argmax(actor_action) but avoid \"No gradient\" issue. My code is as followed:\r\n\r\n```\r\nfrom tensorflow.keras.optimizers import Adam\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nfrom huskarl.policy import PassThrough\r\nfrom huskarl.core import Agent\r\nfrom huskarl.memory import ExperienceReplay\r\nimport tensorflow.keras.backend as K\r\n\r\nclass DDPG(Agent):\r\n\t\"\"\"Deep Deterministic Policy Gradient\r\n\r\n\t\"Continuous control with deep reinforcement learning\" (Lillicrap et al., 2015)\r\n\t\"\"\"\r\n\tdef __init__(self, actor=None, critic=None, optimizer_critic=None, optimizer_actor=None,\r\n\t\t\t\t policy=None, test_policy=None, memsize=100_000, target_update=1e-3,\r\n\t\t\t\t gamma=0.9, batch_size=32, nsteps=1, discrete=False):\r\n\t\t\"\"\"\r\n\t\tTODO: Describe parameters\r\n\t\t\"\"\"\r\n\t\tself.actor = actor\r\n\t\tself.critic = critic\r\n\r\n\t\tself.optimizer_critic = Adam(lr=5e-3) if optimizer_critic is None else optimizer_critic\r\n\t\tself.optimizer_actor = Adam(lr=5e-3) if optimizer_actor is None else optimizer_actor\r\n\r\n\t\tself.policy = PassThrough() if policy is None else policy\r\n\t\tself.test_policy = PassThrough() if test_policy is None else test_policy\r\n\r\n\t\tself.memsize = memsize\r\n\t\tself.memory = ExperienceReplay(memsize, nsteps)\r\n\r\n\t\tself.target_update = target_update\r\n\t\tself.gamma = gamma\r\n\t\tself.batch_size = batch_size\r\n\t\tself.nsteps = nsteps\r\n\t\tself.training = True\r\n\t\tself.discrete = discrete\r\n\r\n\t\t# Clone models to use for delayed Q targets\r\n\t\tself.target_actor = tf.keras.models.clone_model(self.actor)\r\n\t\tself.target_critic = tf.keras.models.clone_model(self.critic)\r\n\r\n\t\tself.critic.compile(optimizer=self.optimizer_critic, loss='mse')\r\n\r\n\t\t# To train the actor we want to maximize the critic's output (action value) given the predicted action as input\r\n\t\t# Namely we want to change the actor's weights such that it picks the action that has the highest possible value\r\n\t\tstate_input = self.critic.input[1]\r\n\t\tif self.discrete:\r\n                        # K.argmax cannot be used since 'No Gradient Issuse'\r\n\t\t\tcritic_output = self.critic([K.dot(K.softmax(self.actor(state_input) * 1e5), K.variable([[0], [1]])), state_input])\r\n                        # Change K.variable([[0], [1]]) to top discrete action number\r\n\t\telse:\r\n\t\t\tcritic_output = self.critic([self.actor(state_input), state_input])\r\n\t\tmy_loss = -tf.keras.backend.mean(critic_output)\r\n\t\twith my_loss.graph.as_default(): # THIS IS A WORKAROUND, SEE https://github.com/tensorflow/tensorflow/issues/26098\r\n\t\t\tactor_updates = self.optimizer_actor.get_updates(params=self.actor.trainable_weights, loss=my_loss)\r\n\t\tself.actor_train_on_batch = tf.keras.backend.function(inputs=[state_input], outputs=[self.actor(state_input)], updates=actor_updates)\r\n\r\n\tdef save_weights(self, filename, overwrite=False):\r\n\t\t\"\"\"Saves the model parameters to the specified file(s).\"\"\"\r\n\t\tself.actor.save_weights(filename+\"_actor\", overwrite=overwrite)\r\n\t\tself.critic.save_weights(filename+\"_critic\", overwrite=overwrite)\r\n\r\n\tdef act(self, state, instance=0):\r\n\t\t\"\"\"Returns the action to be taken given a state.\"\"\"\r\n\t\taction = self.actor.predict(np.array([state]))[0]\r\n\t\tif self.discrete:\r\n\t\t\taction = np.argmax(action)\r\n\t\telse:\r\n\t\t\taction = action\r\n\t\tif self.training:\r\n\t\t\treturn self.policy[instance].act(action) if isinstance(self.policy, list) else self.policy.act(action)\r\n\t\telse:\r\n\t\t\treturn self.test_policy[instance].act(action) if isinstance(self.test_policy, list) else self.test_policy.act(action)\r\n\r\n\tdef push(self, transition, instance=0):\r\n\t\t\"\"\"Stores the transition in memory.\"\"\"\r\n\t\tself.memory.put(transition, instance)\r\n\r\n\tdef train(self, step):\r\n\t\t\"\"\"Trains the agent for one step.\"\"\"\r\n\t\tif len(self.memory) == 0:\r\n\t\t\treturn\r\n\r\n\t\t# Update target network\r\n\t\tif self.target_update >= 1 and step % self.target_update == 0:\r\n\t\t\t# Perform a hard update\r\n\t\t\tself.target_actor.set_weights(self.actor.get_weights())\r\n\t\t\tself.target_critic.set_weights(self.critic.get_weights())\r\n\t\telif self.target_update < 1:\r\n\t\t\t# Perform a soft update\r\n\t\t\ta_w = np.array(self.actor.get_weights())\r\n\t\t\tta_w = np.array(self.target_actor.get_weights())\r\n\t\t\tself.target_actor.set_weights(self.target_update*a_w + (1-self.target_update)*ta_w)\r\n\t\t\tc_w = np.array(self.critic.get_weights())\r\n\t\t\ttc_w = np.array(self.target_critic.get_weights())\r\n\t\t\tself.target_critic.set_weights(self.target_update*c_w + (1-self.target_update)*tc_w)\r\n\r\n\t\t# Train even when memory has fewer than the specified batch_size\r\n\t\tbatch_size = min(len(self.memory), self.batch_size)\r\n\r\n\t\t# Sample from memory (experience replay)\r\n\t\tstate_batch, action_batch, reward_batches, end_state_batch, not_done_mask = self.memory.get(batch_size)\r\n\r\n\t\t# Compute the value of the last next states\r\n\t\ttarget_qvals = np.zeros(batch_size)\r\n\t\tnon_final_last_next_states = [es for es in end_state_batch if es is not None]\r\n\r\n\r\n\t\tif len(non_final_last_next_states) > 0:\r\n\t\t\tnon_final_mask = list(map(lambda s: s is not None, end_state_batch))\r\n\t\t\ttarget_actions = self.target_actor.predict_on_batch(np.array(non_final_last_next_states))\r\n\t\t\tif self.discrete:\r\n\t\t\t\ttarget_actions = np.argmax(target_actions, 1).astype('float32')\r\n\t\t\telse:\r\n\t\t\t\ttarget_actions = target_actions\r\n\r\n\t\t\ttarget_qvals[non_final_mask] = self.target_critic.predict_on_batch([target_actions, np.array(non_final_last_next_states)]).squeeze()\r\n\r\n\t\t# Compute n-step discounted return\r\n\t\t# If episode ended within any sampled nstep trace - zero out remaining rewards\r\n\t\tfor n in reversed(range(self.nsteps)):\r\n\t\t\trewards = np.array([b[n] for b in reward_batches])\r\n\t\t\ttarget_qvals *= np.array([t[n] for t in not_done_mask])\r\n\t\t\ttarget_qvals = rewards + (self.gamma * target_qvals)\r\n\r\n\t\tself.critic.train_on_batch([np.array(action_batch), np.array(state_batch)], target_qvals)\r\n\t\tself.actor_train_on_batch([np.array(state_batch)])\r\n```\r\nAny idea to improve this? Thanks!"
        }
    },
    {
        "id": 2612817762,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjYxMjgxNzc2Mg==",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2612817762",
        "actor": {
            "login": "wau",
            "id": 22864465,
            "node_id": "MDQ6VXNlcjIyODY0NDY1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/22864465?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wau",
            "html_url": "https://github.com/wau",
            "followers_url": "https://api.github.com/users/wau/followers",
            "following_url": "https://api.github.com/users/wau/following{/other_user}",
            "gists_url": "https://api.github.com/users/wau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wau/subscriptions",
            "organizations_url": "https://api.github.com/users/wau/orgs",
            "repos_url": "https://api.github.com/users/wau/repos",
            "events_url": "https://api.github.com/users/wau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wau/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-09-06T00:36:56Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/9",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/9/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/9/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/9/events",
            "html_url": "https://github.com/danaugrs/huskarl/issues/9",
            "id": 476239079,
            "node_id": "MDU6SXNzdWU0NzYyMzkwNzk=",
            "number": 9,
            "title": "DDPG on CartPole-v0",
            "user": {
                "login": "King-Of-Knights",
                "id": 25562792,
                "node_id": "MDQ6VXNlcjI1NTYyNzky",
                "avatar_url": "https://avatars0.githubusercontent.com/u/25562792?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/King-Of-Knights",
                "html_url": "https://github.com/King-Of-Knights",
                "followers_url": "https://api.github.com/users/King-Of-Knights/followers",
                "following_url": "https://api.github.com/users/King-Of-Knights/following{/other_user}",
                "gists_url": "https://api.github.com/users/King-Of-Knights/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/King-Of-Knights/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/King-Of-Knights/subscriptions",
                "organizations_url": "https://api.github.com/users/King-Of-Knights/orgs",
                "repos_url": "https://api.github.com/users/King-Of-Knights/repos",
                "events_url": "https://api.github.com/users/King-Of-Knights/events{/privacy}",
                "received_events_url": "https://api.github.com/users/King-Of-Knights/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 2,
            "created_at": "2019-08-02T15:33:42Z",
            "updated_at": "2019-09-06T00:36:56Z",
            "closed_at": "2019-09-06T00:36:56Z",
            "author_association": "NONE",
            "body": "Hi! Thanks for your great work. I modified `DDPG.py` and want to implement discrete control in \u201cCartPole-v0\u201d environment. But the model learned nothing. I believe the reason behind this is there is no exploration noise in this code. The main changes is to tf.argmax(actor_action) but avoid \"No gradient\" issue. My code is as followed:\r\n\r\n```\r\nfrom tensorflow.keras.optimizers import Adam\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nfrom huskarl.policy import PassThrough\r\nfrom huskarl.core import Agent\r\nfrom huskarl.memory import ExperienceReplay\r\nimport tensorflow.keras.backend as K\r\n\r\nclass DDPG(Agent):\r\n\t\"\"\"Deep Deterministic Policy Gradient\r\n\r\n\t\"Continuous control with deep reinforcement learning\" (Lillicrap et al., 2015)\r\n\t\"\"\"\r\n\tdef __init__(self, actor=None, critic=None, optimizer_critic=None, optimizer_actor=None,\r\n\t\t\t\t policy=None, test_policy=None, memsize=100_000, target_update=1e-3,\r\n\t\t\t\t gamma=0.9, batch_size=32, nsteps=1, discrete=False):\r\n\t\t\"\"\"\r\n\t\tTODO: Describe parameters\r\n\t\t\"\"\"\r\n\t\tself.actor = actor\r\n\t\tself.critic = critic\r\n\r\n\t\tself.optimizer_critic = Adam(lr=5e-3) if optimizer_critic is None else optimizer_critic\r\n\t\tself.optimizer_actor = Adam(lr=5e-3) if optimizer_actor is None else optimizer_actor\r\n\r\n\t\tself.policy = PassThrough() if policy is None else policy\r\n\t\tself.test_policy = PassThrough() if test_policy is None else test_policy\r\n\r\n\t\tself.memsize = memsize\r\n\t\tself.memory = ExperienceReplay(memsize, nsteps)\r\n\r\n\t\tself.target_update = target_update\r\n\t\tself.gamma = gamma\r\n\t\tself.batch_size = batch_size\r\n\t\tself.nsteps = nsteps\r\n\t\tself.training = True\r\n\t\tself.discrete = discrete\r\n\r\n\t\t# Clone models to use for delayed Q targets\r\n\t\tself.target_actor = tf.keras.models.clone_model(self.actor)\r\n\t\tself.target_critic = tf.keras.models.clone_model(self.critic)\r\n\r\n\t\tself.critic.compile(optimizer=self.optimizer_critic, loss='mse')\r\n\r\n\t\t# To train the actor we want to maximize the critic's output (action value) given the predicted action as input\r\n\t\t# Namely we want to change the actor's weights such that it picks the action that has the highest possible value\r\n\t\tstate_input = self.critic.input[1]\r\n\t\tif self.discrete:\r\n                        # K.argmax cannot be used since 'No Gradient Issuse'\r\n\t\t\tcritic_output = self.critic([K.dot(K.softmax(self.actor(state_input) * 1e5), K.variable([[0], [1]])), state_input])\r\n                        # Change K.variable([[0], [1]]) to top discrete action number\r\n\t\telse:\r\n\t\t\tcritic_output = self.critic([self.actor(state_input), state_input])\r\n\t\tmy_loss = -tf.keras.backend.mean(critic_output)\r\n\t\twith my_loss.graph.as_default(): # THIS IS A WORKAROUND, SEE https://github.com/tensorflow/tensorflow/issues/26098\r\n\t\t\tactor_updates = self.optimizer_actor.get_updates(params=self.actor.trainable_weights, loss=my_loss)\r\n\t\tself.actor_train_on_batch = tf.keras.backend.function(inputs=[state_input], outputs=[self.actor(state_input)], updates=actor_updates)\r\n\r\n\tdef save_weights(self, filename, overwrite=False):\r\n\t\t\"\"\"Saves the model parameters to the specified file(s).\"\"\"\r\n\t\tself.actor.save_weights(filename+\"_actor\", overwrite=overwrite)\r\n\t\tself.critic.save_weights(filename+\"_critic\", overwrite=overwrite)\r\n\r\n\tdef act(self, state, instance=0):\r\n\t\t\"\"\"Returns the action to be taken given a state.\"\"\"\r\n\t\taction = self.actor.predict(np.array([state]))[0]\r\n\t\tif self.discrete:\r\n\t\t\taction = np.argmax(action)\r\n\t\telse:\r\n\t\t\taction = action\r\n\t\tif self.training:\r\n\t\t\treturn self.policy[instance].act(action) if isinstance(self.policy, list) else self.policy.act(action)\r\n\t\telse:\r\n\t\t\treturn self.test_policy[instance].act(action) if isinstance(self.test_policy, list) else self.test_policy.act(action)\r\n\r\n\tdef push(self, transition, instance=0):\r\n\t\t\"\"\"Stores the transition in memory.\"\"\"\r\n\t\tself.memory.put(transition, instance)\r\n\r\n\tdef train(self, step):\r\n\t\t\"\"\"Trains the agent for one step.\"\"\"\r\n\t\tif len(self.memory) == 0:\r\n\t\t\treturn\r\n\r\n\t\t# Update target network\r\n\t\tif self.target_update >= 1 and step % self.target_update == 0:\r\n\t\t\t# Perform a hard update\r\n\t\t\tself.target_actor.set_weights(self.actor.get_weights())\r\n\t\t\tself.target_critic.set_weights(self.critic.get_weights())\r\n\t\telif self.target_update < 1:\r\n\t\t\t# Perform a soft update\r\n\t\t\ta_w = np.array(self.actor.get_weights())\r\n\t\t\tta_w = np.array(self.target_actor.get_weights())\r\n\t\t\tself.target_actor.set_weights(self.target_update*a_w + (1-self.target_update)*ta_w)\r\n\t\t\tc_w = np.array(self.critic.get_weights())\r\n\t\t\ttc_w = np.array(self.target_critic.get_weights())\r\n\t\t\tself.target_critic.set_weights(self.target_update*c_w + (1-self.target_update)*tc_w)\r\n\r\n\t\t# Train even when memory has fewer than the specified batch_size\r\n\t\tbatch_size = min(len(self.memory), self.batch_size)\r\n\r\n\t\t# Sample from memory (experience replay)\r\n\t\tstate_batch, action_batch, reward_batches, end_state_batch, not_done_mask = self.memory.get(batch_size)\r\n\r\n\t\t# Compute the value of the last next states\r\n\t\ttarget_qvals = np.zeros(batch_size)\r\n\t\tnon_final_last_next_states = [es for es in end_state_batch if es is not None]\r\n\r\n\r\n\t\tif len(non_final_last_next_states) > 0:\r\n\t\t\tnon_final_mask = list(map(lambda s: s is not None, end_state_batch))\r\n\t\t\ttarget_actions = self.target_actor.predict_on_batch(np.array(non_final_last_next_states))\r\n\t\t\tif self.discrete:\r\n\t\t\t\ttarget_actions = np.argmax(target_actions, 1).astype('float32')\r\n\t\t\telse:\r\n\t\t\t\ttarget_actions = target_actions\r\n\r\n\t\t\ttarget_qvals[non_final_mask] = self.target_critic.predict_on_batch([target_actions, np.array(non_final_last_next_states)]).squeeze()\r\n\r\n\t\t# Compute n-step discounted return\r\n\t\t# If episode ended within any sampled nstep trace - zero out remaining rewards\r\n\t\tfor n in reversed(range(self.nsteps)):\r\n\t\t\trewards = np.array([b[n] for b in reward_batches])\r\n\t\t\ttarget_qvals *= np.array([t[n] for t in not_done_mask])\r\n\t\t\ttarget_qvals = rewards + (self.gamma * target_qvals)\r\n\r\n\t\tself.critic.train_on_batch([np.array(action_batch), np.array(state_batch)], target_qvals)\r\n\t\tself.actor_train_on_batch([np.array(state_batch)])\r\n```\r\nAny idea to improve this? Thanks!"
        }
    },
    {
        "id": 2612817761,
        "node_id": "MDExOkNsb3NlZEV2ZW50MjYxMjgxNzc2MQ==",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2612817761",
        "actor": {
            "login": "King-Of-Knights",
            "id": 25562792,
            "node_id": "MDQ6VXNlcjI1NTYyNzky",
            "avatar_url": "https://avatars0.githubusercontent.com/u/25562792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/King-Of-Knights",
            "html_url": "https://github.com/King-Of-Knights",
            "followers_url": "https://api.github.com/users/King-Of-Knights/followers",
            "following_url": "https://api.github.com/users/King-Of-Knights/following{/other_user}",
            "gists_url": "https://api.github.com/users/King-Of-Knights/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/King-Of-Knights/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/King-Of-Knights/subscriptions",
            "organizations_url": "https://api.github.com/users/King-Of-Knights/orgs",
            "repos_url": "https://api.github.com/users/King-Of-Knights/repos",
            "events_url": "https://api.github.com/users/King-Of-Knights/events{/privacy}",
            "received_events_url": "https://api.github.com/users/King-Of-Knights/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-09-06T00:36:56Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/9",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/9/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/9/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/9/events",
            "html_url": "https://github.com/danaugrs/huskarl/issues/9",
            "id": 476239079,
            "node_id": "MDU6SXNzdWU0NzYyMzkwNzk=",
            "number": 9,
            "title": "DDPG on CartPole-v0",
            "user": {
                "login": "King-Of-Knights",
                "id": 25562792,
                "node_id": "MDQ6VXNlcjI1NTYyNzky",
                "avatar_url": "https://avatars0.githubusercontent.com/u/25562792?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/King-Of-Knights",
                "html_url": "https://github.com/King-Of-Knights",
                "followers_url": "https://api.github.com/users/King-Of-Knights/followers",
                "following_url": "https://api.github.com/users/King-Of-Knights/following{/other_user}",
                "gists_url": "https://api.github.com/users/King-Of-Knights/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/King-Of-Knights/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/King-Of-Knights/subscriptions",
                "organizations_url": "https://api.github.com/users/King-Of-Knights/orgs",
                "repos_url": "https://api.github.com/users/King-Of-Knights/repos",
                "events_url": "https://api.github.com/users/King-Of-Knights/events{/privacy}",
                "received_events_url": "https://api.github.com/users/King-Of-Knights/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 2,
            "created_at": "2019-08-02T15:33:42Z",
            "updated_at": "2019-09-06T00:36:56Z",
            "closed_at": "2019-09-06T00:36:56Z",
            "author_association": "NONE",
            "body": "Hi! Thanks for your great work. I modified `DDPG.py` and want to implement discrete control in \u201cCartPole-v0\u201d environment. But the model learned nothing. I believe the reason behind this is there is no exploration noise in this code. The main changes is to tf.argmax(actor_action) but avoid \"No gradient\" issue. My code is as followed:\r\n\r\n```\r\nfrom tensorflow.keras.optimizers import Adam\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nfrom huskarl.policy import PassThrough\r\nfrom huskarl.core import Agent\r\nfrom huskarl.memory import ExperienceReplay\r\nimport tensorflow.keras.backend as K\r\n\r\nclass DDPG(Agent):\r\n\t\"\"\"Deep Deterministic Policy Gradient\r\n\r\n\t\"Continuous control with deep reinforcement learning\" (Lillicrap et al., 2015)\r\n\t\"\"\"\r\n\tdef __init__(self, actor=None, critic=None, optimizer_critic=None, optimizer_actor=None,\r\n\t\t\t\t policy=None, test_policy=None, memsize=100_000, target_update=1e-3,\r\n\t\t\t\t gamma=0.9, batch_size=32, nsteps=1, discrete=False):\r\n\t\t\"\"\"\r\n\t\tTODO: Describe parameters\r\n\t\t\"\"\"\r\n\t\tself.actor = actor\r\n\t\tself.critic = critic\r\n\r\n\t\tself.optimizer_critic = Adam(lr=5e-3) if optimizer_critic is None else optimizer_critic\r\n\t\tself.optimizer_actor = Adam(lr=5e-3) if optimizer_actor is None else optimizer_actor\r\n\r\n\t\tself.policy = PassThrough() if policy is None else policy\r\n\t\tself.test_policy = PassThrough() if test_policy is None else test_policy\r\n\r\n\t\tself.memsize = memsize\r\n\t\tself.memory = ExperienceReplay(memsize, nsteps)\r\n\r\n\t\tself.target_update = target_update\r\n\t\tself.gamma = gamma\r\n\t\tself.batch_size = batch_size\r\n\t\tself.nsteps = nsteps\r\n\t\tself.training = True\r\n\t\tself.discrete = discrete\r\n\r\n\t\t# Clone models to use for delayed Q targets\r\n\t\tself.target_actor = tf.keras.models.clone_model(self.actor)\r\n\t\tself.target_critic = tf.keras.models.clone_model(self.critic)\r\n\r\n\t\tself.critic.compile(optimizer=self.optimizer_critic, loss='mse')\r\n\r\n\t\t# To train the actor we want to maximize the critic's output (action value) given the predicted action as input\r\n\t\t# Namely we want to change the actor's weights such that it picks the action that has the highest possible value\r\n\t\tstate_input = self.critic.input[1]\r\n\t\tif self.discrete:\r\n                        # K.argmax cannot be used since 'No Gradient Issuse'\r\n\t\t\tcritic_output = self.critic([K.dot(K.softmax(self.actor(state_input) * 1e5), K.variable([[0], [1]])), state_input])\r\n                        # Change K.variable([[0], [1]]) to top discrete action number\r\n\t\telse:\r\n\t\t\tcritic_output = self.critic([self.actor(state_input), state_input])\r\n\t\tmy_loss = -tf.keras.backend.mean(critic_output)\r\n\t\twith my_loss.graph.as_default(): # THIS IS A WORKAROUND, SEE https://github.com/tensorflow/tensorflow/issues/26098\r\n\t\t\tactor_updates = self.optimizer_actor.get_updates(params=self.actor.trainable_weights, loss=my_loss)\r\n\t\tself.actor_train_on_batch = tf.keras.backend.function(inputs=[state_input], outputs=[self.actor(state_input)], updates=actor_updates)\r\n\r\n\tdef save_weights(self, filename, overwrite=False):\r\n\t\t\"\"\"Saves the model parameters to the specified file(s).\"\"\"\r\n\t\tself.actor.save_weights(filename+\"_actor\", overwrite=overwrite)\r\n\t\tself.critic.save_weights(filename+\"_critic\", overwrite=overwrite)\r\n\r\n\tdef act(self, state, instance=0):\r\n\t\t\"\"\"Returns the action to be taken given a state.\"\"\"\r\n\t\taction = self.actor.predict(np.array([state]))[0]\r\n\t\tif self.discrete:\r\n\t\t\taction = np.argmax(action)\r\n\t\telse:\r\n\t\t\taction = action\r\n\t\tif self.training:\r\n\t\t\treturn self.policy[instance].act(action) if isinstance(self.policy, list) else self.policy.act(action)\r\n\t\telse:\r\n\t\t\treturn self.test_policy[instance].act(action) if isinstance(self.test_policy, list) else self.test_policy.act(action)\r\n\r\n\tdef push(self, transition, instance=0):\r\n\t\t\"\"\"Stores the transition in memory.\"\"\"\r\n\t\tself.memory.put(transition, instance)\r\n\r\n\tdef train(self, step):\r\n\t\t\"\"\"Trains the agent for one step.\"\"\"\r\n\t\tif len(self.memory) == 0:\r\n\t\t\treturn\r\n\r\n\t\t# Update target network\r\n\t\tif self.target_update >= 1 and step % self.target_update == 0:\r\n\t\t\t# Perform a hard update\r\n\t\t\tself.target_actor.set_weights(self.actor.get_weights())\r\n\t\t\tself.target_critic.set_weights(self.critic.get_weights())\r\n\t\telif self.target_update < 1:\r\n\t\t\t# Perform a soft update\r\n\t\t\ta_w = np.array(self.actor.get_weights())\r\n\t\t\tta_w = np.array(self.target_actor.get_weights())\r\n\t\t\tself.target_actor.set_weights(self.target_update*a_w + (1-self.target_update)*ta_w)\r\n\t\t\tc_w = np.array(self.critic.get_weights())\r\n\t\t\ttc_w = np.array(self.target_critic.get_weights())\r\n\t\t\tself.target_critic.set_weights(self.target_update*c_w + (1-self.target_update)*tc_w)\r\n\r\n\t\t# Train even when memory has fewer than the specified batch_size\r\n\t\tbatch_size = min(len(self.memory), self.batch_size)\r\n\r\n\t\t# Sample from memory (experience replay)\r\n\t\tstate_batch, action_batch, reward_batches, end_state_batch, not_done_mask = self.memory.get(batch_size)\r\n\r\n\t\t# Compute the value of the last next states\r\n\t\ttarget_qvals = np.zeros(batch_size)\r\n\t\tnon_final_last_next_states = [es for es in end_state_batch if es is not None]\r\n\r\n\r\n\t\tif len(non_final_last_next_states) > 0:\r\n\t\t\tnon_final_mask = list(map(lambda s: s is not None, end_state_batch))\r\n\t\t\ttarget_actions = self.target_actor.predict_on_batch(np.array(non_final_last_next_states))\r\n\t\t\tif self.discrete:\r\n\t\t\t\ttarget_actions = np.argmax(target_actions, 1).astype('float32')\r\n\t\t\telse:\r\n\t\t\t\ttarget_actions = target_actions\r\n\r\n\t\t\ttarget_qvals[non_final_mask] = self.target_critic.predict_on_batch([target_actions, np.array(non_final_last_next_states)]).squeeze()\r\n\r\n\t\t# Compute n-step discounted return\r\n\t\t# If episode ended within any sampled nstep trace - zero out remaining rewards\r\n\t\tfor n in reversed(range(self.nsteps)):\r\n\t\t\trewards = np.array([b[n] for b in reward_batches])\r\n\t\t\ttarget_qvals *= np.array([t[n] for t in not_done_mask])\r\n\t\t\ttarget_qvals = rewards + (self.gamma * target_qvals)\r\n\r\n\t\tself.critic.train_on_batch([np.array(action_batch), np.array(state_batch)], target_qvals)\r\n\t\tself.actor_train_on_batch([np.array(state_batch)])\r\n```\r\nAny idea to improve this? Thanks!"
        }
    },
    {
        "id": 2592482773,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI1OTI0ODI3NzM=",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2592482773",
        "actor": {
            "login": "danaugrs",
            "id": 5261448,
            "node_id": "MDQ6VXNlcjUyNjE0NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5261448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danaugrs",
            "html_url": "https://github.com/danaugrs",
            "followers_url": "https://api.github.com/users/danaugrs/followers",
            "following_url": "https://api.github.com/users/danaugrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/danaugrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danaugrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danaugrs/subscriptions",
            "organizations_url": "https://api.github.com/users/danaugrs/orgs",
            "repos_url": "https://api.github.com/users/danaugrs/repos",
            "events_url": "https://api.github.com/users/danaugrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danaugrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-08-29T02:43:21Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/7",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/events",
            "html_url": "https://github.com/danaugrs/huskarl/issues/7",
            "id": 470108675,
            "node_id": "MDU6SXNzdWU0NzAxMDg2NzU=",
            "number": 7,
            "title": "Visualization windows remain open",
            "user": {
                "login": "Ryandry1st",
                "id": 20748832,
                "node_id": "MDQ6VXNlcjIwNzQ4ODMy",
                "avatar_url": "https://avatars2.githubusercontent.com/u/20748832?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Ryandry1st",
                "html_url": "https://github.com/Ryandry1st",
                "followers_url": "https://api.github.com/users/Ryandry1st/followers",
                "following_url": "https://api.github.com/users/Ryandry1st/following{/other_user}",
                "gists_url": "https://api.github.com/users/Ryandry1st/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Ryandry1st/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Ryandry1st/subscriptions",
                "organizations_url": "https://api.github.com/users/Ryandry1st/orgs",
                "repos_url": "https://api.github.com/users/Ryandry1st/repos",
                "events_url": "https://api.github.com/users/Ryandry1st/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Ryandry1st/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 3,
            "created_at": "2019-07-19T02:35:09Z",
            "updated_at": "2019-08-30T14:56:10Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "I probably simply do not see the function, but there does not seem to be a way to close the visualized plots once they are open. I attempted using:\r\n`plt.close()`\r\n`plt.close('all')`\r\nbut neither worked. Also simply attempting to close the window by clicking had no effect. The only way I could close the windows was by closing the entire workspace/killing the process.\r\n\r\nLet me know what the proper way is!"
        }
    },
    {
        "id": 2592482772,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjU5MjQ4Mjc3Mg==",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2592482772",
        "actor": {
            "login": "danaugrs",
            "id": 5261448,
            "node_id": "MDQ6VXNlcjUyNjE0NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5261448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danaugrs",
            "html_url": "https://github.com/danaugrs",
            "followers_url": "https://api.github.com/users/danaugrs/followers",
            "following_url": "https://api.github.com/users/danaugrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/danaugrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danaugrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danaugrs/subscriptions",
            "organizations_url": "https://api.github.com/users/danaugrs/orgs",
            "repos_url": "https://api.github.com/users/danaugrs/repos",
            "events_url": "https://api.github.com/users/danaugrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danaugrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-08-29T02:43:21Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/7",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/events",
            "html_url": "https://github.com/danaugrs/huskarl/issues/7",
            "id": 470108675,
            "node_id": "MDU6SXNzdWU0NzAxMDg2NzU=",
            "number": 7,
            "title": "Visualization windows remain open",
            "user": {
                "login": "Ryandry1st",
                "id": 20748832,
                "node_id": "MDQ6VXNlcjIwNzQ4ODMy",
                "avatar_url": "https://avatars2.githubusercontent.com/u/20748832?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Ryandry1st",
                "html_url": "https://github.com/Ryandry1st",
                "followers_url": "https://api.github.com/users/Ryandry1st/followers",
                "following_url": "https://api.github.com/users/Ryandry1st/following{/other_user}",
                "gists_url": "https://api.github.com/users/Ryandry1st/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Ryandry1st/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Ryandry1st/subscriptions",
                "organizations_url": "https://api.github.com/users/Ryandry1st/orgs",
                "repos_url": "https://api.github.com/users/Ryandry1st/repos",
                "events_url": "https://api.github.com/users/Ryandry1st/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Ryandry1st/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 3,
            "created_at": "2019-07-19T02:35:09Z",
            "updated_at": "2019-08-30T14:56:10Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "I probably simply do not see the function, but there does not seem to be a way to close the visualized plots once they are open. I attempted using:\r\n`plt.close()`\r\n`plt.close('all')`\r\nbut neither worked. Also simply attempting to close the window by clicking had no effect. The only way I could close the windows was by closing the entire workspace/killing the process.\r\n\r\nLet me know what the proper way is!"
        }
    },
    {
        "id": 2592480491,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI1OTI0ODA0OTE=",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2592480491",
        "actor": {
            "login": "Ryandry1st",
            "id": 20748832,
            "node_id": "MDQ6VXNlcjIwNzQ4ODMy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/20748832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ryandry1st",
            "html_url": "https://github.com/Ryandry1st",
            "followers_url": "https://api.github.com/users/Ryandry1st/followers",
            "following_url": "https://api.github.com/users/Ryandry1st/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ryandry1st/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ryandry1st/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ryandry1st/subscriptions",
            "organizations_url": "https://api.github.com/users/Ryandry1st/orgs",
            "repos_url": "https://api.github.com/users/Ryandry1st/repos",
            "events_url": "https://api.github.com/users/Ryandry1st/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ryandry1st/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-08-29T02:41:38Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/7",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/events",
            "html_url": "https://github.com/danaugrs/huskarl/issues/7",
            "id": 470108675,
            "node_id": "MDU6SXNzdWU0NzAxMDg2NzU=",
            "number": 7,
            "title": "Visualization windows remain open",
            "user": {
                "login": "Ryandry1st",
                "id": 20748832,
                "node_id": "MDQ6VXNlcjIwNzQ4ODMy",
                "avatar_url": "https://avatars2.githubusercontent.com/u/20748832?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Ryandry1st",
                "html_url": "https://github.com/Ryandry1st",
                "followers_url": "https://api.github.com/users/Ryandry1st/followers",
                "following_url": "https://api.github.com/users/Ryandry1st/following{/other_user}",
                "gists_url": "https://api.github.com/users/Ryandry1st/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Ryandry1st/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Ryandry1st/subscriptions",
                "organizations_url": "https://api.github.com/users/Ryandry1st/orgs",
                "repos_url": "https://api.github.com/users/Ryandry1st/repos",
                "events_url": "https://api.github.com/users/Ryandry1st/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Ryandry1st/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 3,
            "created_at": "2019-07-19T02:35:09Z",
            "updated_at": "2019-08-30T14:56:10Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "I probably simply do not see the function, but there does not seem to be a way to close the visualized plots once they are open. I attempted using:\r\n`plt.close()`\r\n`plt.close('all')`\r\nbut neither worked. Also simply attempting to close the window by clicking had no effect. The only way I could close the windows was by closing the entire workspace/killing the process.\r\n\r\nLet me know what the proper way is!"
        }
    },
    {
        "id": 2592480489,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjU5MjQ4MDQ4OQ==",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2592480489",
        "actor": {
            "login": "Ryandry1st",
            "id": 20748832,
            "node_id": "MDQ6VXNlcjIwNzQ4ODMy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/20748832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ryandry1st",
            "html_url": "https://github.com/Ryandry1st",
            "followers_url": "https://api.github.com/users/Ryandry1st/followers",
            "following_url": "https://api.github.com/users/Ryandry1st/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ryandry1st/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ryandry1st/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ryandry1st/subscriptions",
            "organizations_url": "https://api.github.com/users/Ryandry1st/orgs",
            "repos_url": "https://api.github.com/users/Ryandry1st/repos",
            "events_url": "https://api.github.com/users/Ryandry1st/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ryandry1st/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-08-29T02:41:38Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/7",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/7/events",
            "html_url": "https://github.com/danaugrs/huskarl/issues/7",
            "id": 470108675,
            "node_id": "MDU6SXNzdWU0NzAxMDg2NzU=",
            "number": 7,
            "title": "Visualization windows remain open",
            "user": {
                "login": "Ryandry1st",
                "id": 20748832,
                "node_id": "MDQ6VXNlcjIwNzQ4ODMy",
                "avatar_url": "https://avatars2.githubusercontent.com/u/20748832?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Ryandry1st",
                "html_url": "https://github.com/Ryandry1st",
                "followers_url": "https://api.github.com/users/Ryandry1st/followers",
                "following_url": "https://api.github.com/users/Ryandry1st/following{/other_user}",
                "gists_url": "https://api.github.com/users/Ryandry1st/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Ryandry1st/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Ryandry1st/subscriptions",
                "organizations_url": "https://api.github.com/users/Ryandry1st/orgs",
                "repos_url": "https://api.github.com/users/Ryandry1st/repos",
                "events_url": "https://api.github.com/users/Ryandry1st/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Ryandry1st/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 3,
            "created_at": "2019-07-19T02:35:09Z",
            "updated_at": "2019-08-30T14:56:10Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "I probably simply do not see the function, but there does not seem to be a way to close the visualized plots once they are open. I attempted using:\r\n`plt.close()`\r\n`plt.close('all')`\r\nbut neither worked. Also simply attempting to close the window by clicking had no effect. The only way I could close the windows was by closing the entire workspace/killing the process.\r\n\r\nLet me know what the proper way is!"
        }
    },
    {
        "id": 2411375012,
        "node_id": "MDExOkNsb3NlZEV2ZW50MjQxMTM3NTAxMg==",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2411375012",
        "actor": {
            "login": "danaugrs",
            "id": 5261448,
            "node_id": "MDQ6VXNlcjUyNjE0NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5261448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danaugrs",
            "html_url": "https://github.com/danaugrs",
            "followers_url": "https://api.github.com/users/danaugrs/followers",
            "following_url": "https://api.github.com/users/danaugrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/danaugrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danaugrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danaugrs/subscriptions",
            "organizations_url": "https://api.github.com/users/danaugrs/orgs",
            "repos_url": "https://api.github.com/users/danaugrs/repos",
            "events_url": "https://api.github.com/users/danaugrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danaugrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-13T17:29:45Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/4",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/4/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/4/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/4/events",
            "html_url": "https://github.com/danaugrs/huskarl/pull/4",
            "id": 455853776,
            "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg4MDE3NDQ2",
            "number": 4,
            "title": "update TensorFlow version to the beta",
            "user": {
                "login": "wau",
                "id": 22864465,
                "node_id": "MDQ6VXNlcjIyODY0NDY1",
                "avatar_url": "https://avatars0.githubusercontent.com/u/22864465?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wau",
                "html_url": "https://github.com/wau",
                "followers_url": "https://api.github.com/users/wau/followers",
                "following_url": "https://api.github.com/users/wau/following{/other_user}",
                "gists_url": "https://api.github.com/users/wau/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wau/subscriptions",
                "organizations_url": "https://api.github.com/users/wau/orgs",
                "repos_url": "https://api.github.com/users/wau/repos",
                "events_url": "https://api.github.com/users/wau/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wau/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 1,
            "created_at": "2019-06-13T17:05:11Z",
            "updated_at": "2019-06-13T17:29:51Z",
            "closed_at": "2019-06-13T17:29:45Z",
            "author_association": "CONTRIBUTOR",
            "pull_request": {
                "url": "https://api.github.com/repos/danaugrs/huskarl/pulls/4",
                "html_url": "https://github.com/danaugrs/huskarl/pull/4",
                "diff_url": "https://github.com/danaugrs/huskarl/pull/4.diff",
                "patch_url": "https://github.com/danaugrs/huskarl/pull/4.patch"
            },
            "body": ""
        }
    },
    {
        "id": 2411375005,
        "node_id": "MDExOk1lcmdlZEV2ZW50MjQxMTM3NTAwNQ==",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2411375005",
        "actor": {
            "login": "danaugrs",
            "id": 5261448,
            "node_id": "MDQ6VXNlcjUyNjE0NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5261448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danaugrs",
            "html_url": "https://github.com/danaugrs",
            "followers_url": "https://api.github.com/users/danaugrs/followers",
            "following_url": "https://api.github.com/users/danaugrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/danaugrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danaugrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danaugrs/subscriptions",
            "organizations_url": "https://api.github.com/users/danaugrs/orgs",
            "repos_url": "https://api.github.com/users/danaugrs/repos",
            "events_url": "https://api.github.com/users/danaugrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danaugrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "merged",
        "commit_id": "a3d39dc65b2e3c558a51c729e6b3938e98f040ad",
        "commit_url": "https://api.github.com/repos/danaugrs/huskarl/commits/a3d39dc65b2e3c558a51c729e6b3938e98f040ad",
        "created_at": "2019-06-13T17:29:45Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/4",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/4/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/4/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/4/events",
            "html_url": "https://github.com/danaugrs/huskarl/pull/4",
            "id": 455853776,
            "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg4MDE3NDQ2",
            "number": 4,
            "title": "update TensorFlow version to the beta",
            "user": {
                "login": "wau",
                "id": 22864465,
                "node_id": "MDQ6VXNlcjIyODY0NDY1",
                "avatar_url": "https://avatars0.githubusercontent.com/u/22864465?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wau",
                "html_url": "https://github.com/wau",
                "followers_url": "https://api.github.com/users/wau/followers",
                "following_url": "https://api.github.com/users/wau/following{/other_user}",
                "gists_url": "https://api.github.com/users/wau/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wau/subscriptions",
                "organizations_url": "https://api.github.com/users/wau/orgs",
                "repos_url": "https://api.github.com/users/wau/repos",
                "events_url": "https://api.github.com/users/wau/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wau/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 1,
            "created_at": "2019-06-13T17:05:11Z",
            "updated_at": "2019-06-13T17:29:51Z",
            "closed_at": "2019-06-13T17:29:45Z",
            "author_association": "CONTRIBUTOR",
            "pull_request": {
                "url": "https://api.github.com/repos/danaugrs/huskarl/pulls/4",
                "html_url": "https://github.com/danaugrs/huskarl/pull/4",
                "diff_url": "https://github.com/danaugrs/huskarl/pull/4.diff",
                "patch_url": "https://github.com/danaugrs/huskarl/pull/4.patch"
            },
            "body": ""
        }
    },
    {
        "id": 2411375000,
        "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI0MTEzNzUwMDA=",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2411375000",
        "actor": {
            "login": "danaugrs",
            "id": 5261448,
            "node_id": "MDQ6VXNlcjUyNjE0NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5261448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danaugrs",
            "html_url": "https://github.com/danaugrs",
            "followers_url": "https://api.github.com/users/danaugrs/followers",
            "following_url": "https://api.github.com/users/danaugrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/danaugrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danaugrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danaugrs/subscriptions",
            "organizations_url": "https://api.github.com/users/danaugrs/orgs",
            "repos_url": "https://api.github.com/users/danaugrs/repos",
            "events_url": "https://api.github.com/users/danaugrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danaugrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "referenced",
        "commit_id": "a3d39dc65b2e3c558a51c729e6b3938e98f040ad",
        "commit_url": "https://api.github.com/repos/danaugrs/huskarl/commits/a3d39dc65b2e3c558a51c729e6b3938e98f040ad",
        "created_at": "2019-06-13T17:29:45Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/4",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/4/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/4/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/4/events",
            "html_url": "https://github.com/danaugrs/huskarl/pull/4",
            "id": 455853776,
            "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg4MDE3NDQ2",
            "number": 4,
            "title": "update TensorFlow version to the beta",
            "user": {
                "login": "wau",
                "id": 22864465,
                "node_id": "MDQ6VXNlcjIyODY0NDY1",
                "avatar_url": "https://avatars0.githubusercontent.com/u/22864465?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wau",
                "html_url": "https://github.com/wau",
                "followers_url": "https://api.github.com/users/wau/followers",
                "following_url": "https://api.github.com/users/wau/following{/other_user}",
                "gists_url": "https://api.github.com/users/wau/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wau/subscriptions",
                "organizations_url": "https://api.github.com/users/wau/orgs",
                "repos_url": "https://api.github.com/users/wau/repos",
                "events_url": "https://api.github.com/users/wau/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wau/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 1,
            "created_at": "2019-06-13T17:05:11Z",
            "updated_at": "2019-06-13T17:29:51Z",
            "closed_at": "2019-06-13T17:29:45Z",
            "author_association": "CONTRIBUTOR",
            "pull_request": {
                "url": "https://api.github.com/repos/danaugrs/huskarl/pulls/4",
                "html_url": "https://github.com/danaugrs/huskarl/pull/4",
                "diff_url": "https://github.com/danaugrs/huskarl/pull/4.diff",
                "patch_url": "https://github.com/danaugrs/huskarl/pull/4.patch"
            },
            "body": ""
        }
    },
    {
        "id": 2401449268,
        "node_id": "MDExOkNsb3NlZEV2ZW50MjQwMTQ0OTI2OA==",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2401449268",
        "actor": {
            "login": "danaugrs",
            "id": 5261448,
            "node_id": "MDQ6VXNlcjUyNjE0NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5261448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danaugrs",
            "html_url": "https://github.com/danaugrs",
            "followers_url": "https://api.github.com/users/danaugrs/followers",
            "following_url": "https://api.github.com/users/danaugrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/danaugrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danaugrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danaugrs/subscriptions",
            "organizations_url": "https://api.github.com/users/danaugrs/orgs",
            "repos_url": "https://api.github.com/users/danaugrs/repos",
            "events_url": "https://api.github.com/users/danaugrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danaugrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-10T16:10:53Z",
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/1",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/1/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/1/events",
            "html_url": "https://github.com/danaugrs/huskarl/issues/1",
            "id": 451062232,
            "node_id": "MDU6SXNzdWU0NTEwNjIyMzI=",
            "number": 1,
            "title": "Prioritized Experience Replay ",
            "user": {
                "login": "Oktai15",
                "id": 17337773,
                "node_id": "MDQ6VXNlcjE3MzM3Nzcz",
                "avatar_url": "https://avatars1.githubusercontent.com/u/17337773?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Oktai15",
                "html_url": "https://github.com/Oktai15",
                "followers_url": "https://api.github.com/users/Oktai15/followers",
                "following_url": "https://api.github.com/users/Oktai15/following{/other_user}",
                "gists_url": "https://api.github.com/users/Oktai15/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Oktai15/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Oktai15/subscriptions",
                "organizations_url": "https://api.github.com/users/Oktai15/orgs",
                "repos_url": "https://api.github.com/users/Oktai15/repos",
                "events_url": "https://api.github.com/users/Oktai15/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Oktai15/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 3,
            "created_at": "2019-06-01T08:41:54Z",
            "updated_at": "2019-06-10T16:10:53Z",
            "closed_at": "2019-06-10T16:10:53Z",
            "author_association": "NONE",
            "body": "Hi, great work!\r\n\r\nWill you plan to add prioritized replay in short time? For example, I found great implementation: https://github.com/alexbooth/DDQN-PER/blob/master/replay_memory.py"
        }
    },
    {
        "id": 2392373856,
        "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjM5MjM3Mzg1Ng==",
        "url": "https://api.github.com/repos/danaugrs/huskarl/issues/events/2392373856",
        "actor": {
            "login": "danaugrs",
            "id": 5261448,
            "node_id": "MDQ6VXNlcjUyNjE0NDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5261448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danaugrs",
            "html_url": "https://github.com/danaugrs",
            "followers_url": "https://api.github.com/users/danaugrs/followers",
            "following_url": "https://api.github.com/users/danaugrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/danaugrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danaugrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danaugrs/subscriptions",
            "organizations_url": "https://api.github.com/users/danaugrs/orgs",
            "repos_url": "https://api.github.com/users/danaugrs/repos",
            "events_url": "https://api.github.com/users/danaugrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danaugrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "renamed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-05T20:04:05Z",
        "rename": {
            "from": "Prioritized replay ",
            "to": "Prioritized Experience Replay "
        },
        "issue": {
            "url": "https://api.github.com/repos/danaugrs/huskarl/issues/1",
            "repository_url": "https://api.github.com/repos/danaugrs/huskarl",
            "labels_url": "https://api.github.com/repos/danaugrs/huskarl/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/danaugrs/huskarl/issues/1/comments",
            "events_url": "https://api.github.com/repos/danaugrs/huskarl/issues/1/events",
            "html_url": "https://github.com/danaugrs/huskarl/issues/1",
            "id": 451062232,
            "node_id": "MDU6SXNzdWU0NTEwNjIyMzI=",
            "number": 1,
            "title": "Prioritized Experience Replay ",
            "user": {
                "login": "Oktai15",
                "id": 17337773,
                "node_id": "MDQ6VXNlcjE3MzM3Nzcz",
                "avatar_url": "https://avatars1.githubusercontent.com/u/17337773?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Oktai15",
                "html_url": "https://github.com/Oktai15",
                "followers_url": "https://api.github.com/users/Oktai15/followers",
                "following_url": "https://api.github.com/users/Oktai15/following{/other_user}",
                "gists_url": "https://api.github.com/users/Oktai15/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Oktai15/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Oktai15/subscriptions",
                "organizations_url": "https://api.github.com/users/Oktai15/orgs",
                "repos_url": "https://api.github.com/users/Oktai15/repos",
                "events_url": "https://api.github.com/users/Oktai15/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Oktai15/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 3,
            "created_at": "2019-06-01T08:41:54Z",
            "updated_at": "2019-06-10T16:10:53Z",
            "closed_at": "2019-06-10T16:10:53Z",
            "author_association": "NONE",
            "body": "Hi, great work!\r\n\r\nWill you plan to add prioritized replay in short time? For example, I found great implementation: https://github.com/alexbooth/DDQN-PER/blob/master/replay_memory.py"
        }
    }
]