[
    {
        "id": 1864141659,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NjQxNDE2NTk=",
        "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/events/1864141659",
        "actor": {
            "login": "shamatar",
            "id": 6467575,
            "node_id": "MDQ6VXNlcjY0Njc1NzU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6467575?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shamatar",
            "html_url": "https://github.com/shamatar",
            "followers_url": "https://api.github.com/users/shamatar/followers",
            "following_url": "https://api.github.com/users/shamatar/following{/other_user}",
            "gists_url": "https://api.github.com/users/shamatar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shamatar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shamatar/subscriptions",
            "organizations_url": "https://api.github.com/users/shamatar/orgs",
            "repos_url": "https://api.github.com/users/shamatar/repos",
            "events_url": "https://api.github.com/users/shamatar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shamatar/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2018-09-24T20:43:15Z",
        "issue": {
            "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1",
            "repository_url": "https://api.github.com/repos/shamatar/EllipticSwift",
            "labels_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/comments",
            "events_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/events",
            "html_url": "https://github.com/shamatar/EllipticSwift/issues/1",
            "id": 362960849,
            "node_id": "MDU6SXNzdWUzNjI5NjA4NDk=",
            "number": 1,
            "title": "Hello friend! We both wrote Pure Swift ECC SDKs this summer",
            "user": {
                "login": "Sajjon",
                "id": 864410,
                "node_id": "MDQ6VXNlcjg2NDQxMA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Sajjon",
                "html_url": "https://github.com/Sajjon",
                "followers_url": "https://api.github.com/users/Sajjon/followers",
                "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
                "organizations_url": "https://api.github.com/users/Sajjon/orgs",
                "repos_url": "https://api.github.com/users/Sajjon/repos",
                "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Sajjon/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 6,
            "created_at": "2018-09-23T17:28:41Z",
            "updated_at": "2018-09-29T09:51:19Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "We seem to have been working on the same thing :D \r\n\r\nHave a look at [EllipticCurveKit](github.com/Sajjon/EllipticCurveKit). My goal is to finish my rewrite using [EquationKit](github.com/Sajjon/EquationKit), I have got it working already in the [equations branch](https://github.com/Sajjon/EllipticCurveKit/blob/equations/Source/EllipticCurve/Curve/CurveForms/ShortWeierstra%C3%9FCurve.swift) which allows for pretty cool syntax:\r\n\r\n```swift\r\n///\r\n/// Elliptic Curve on Short Weierstrass form (`\ud835\udc46`)\r\n/// - Covers all elliptic curves char\u2260\ud835\udfda,\ud835\udfdb\r\n/// - Mixed Jacobian coordinates have been the speed leader for a long time.\r\n///\r\n///\r\n/// # Equation\r\n///      \ud835\udc46: \ud835\udc66\u00b2 = \ud835\udc65\u00b3 + \ud835\udc4e\ud835\udc65 + \ud835\udc4f\r\n/// - Requires: `\ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2260 \ud835\udfd8`\r\n///\r\npublic struct ShortWeierstra\u00dfCurve: CurveForm {\r\n\r\n\r\n    private let a: Number\r\n    private let b: Number\r\n    public let galoisField: Field\r\n    public let equation: Polynomial\r\n\r\n    private let \ud835\udc65\uff07: Polynomial\r\n    private let \ud835\udc66\uff07: Polynomial\r\n\r\n    public init?(\r\n        a: Number,\r\n        b: Number,\r\n        galoisField: Field\r\n        ) {\r\n\r\n        let \ud835\udc5d = galoisField.modulus\r\n\r\n        guard \ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2262 \ud835\udfd8 % \ud835\udc5d \u21a4 [ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] else { return nil }\r\n\r\n        self.a = a\r\n        self.b = b\r\n        self.galoisField = galoisField\r\n        self.equation = EllipticCurveForm.Weierstra\u00df.short.substitute() {[ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] }\r\n        self.\ud835\udc65\uff07 = equation.differentiateWithRespectTo(\ud835\udc65)!\r\n        self.\ud835\udc66\uff07 = equation.differentiateWithRespectTo(\ud835\udc66)!\r\n    }\r\n}\r\n```\r\n\r\nI have also begun implemented other curve forms than ShortWeierstra\u00df, such as TwistedEdwards and Montgomery.\r\n\r\nI saw you [PR in CryptoSwift adding support for Scrypt](https://github.com/krzyzanowskim/CryptoSwift/pull/645) which I am also working on currently. \r\n\r\nI'm in need of it in the [Zilliqa Swift SDK](https://github.com/OpenZesame/Zilliqa-Swift-SDK) I am developing, for the export wallet function. "
        }
    },
    {
        "id": 1864141658,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg2NDE0MTY1OA==",
        "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/events/1864141658",
        "actor": {
            "login": "shamatar",
            "id": 6467575,
            "node_id": "MDQ6VXNlcjY0Njc1NzU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6467575?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shamatar",
            "html_url": "https://github.com/shamatar",
            "followers_url": "https://api.github.com/users/shamatar/followers",
            "following_url": "https://api.github.com/users/shamatar/following{/other_user}",
            "gists_url": "https://api.github.com/users/shamatar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shamatar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shamatar/subscriptions",
            "organizations_url": "https://api.github.com/users/shamatar/orgs",
            "repos_url": "https://api.github.com/users/shamatar/repos",
            "events_url": "https://api.github.com/users/shamatar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shamatar/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2018-09-24T20:43:15Z",
        "issue": {
            "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1",
            "repository_url": "https://api.github.com/repos/shamatar/EllipticSwift",
            "labels_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/comments",
            "events_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/events",
            "html_url": "https://github.com/shamatar/EllipticSwift/issues/1",
            "id": 362960849,
            "node_id": "MDU6SXNzdWUzNjI5NjA4NDk=",
            "number": 1,
            "title": "Hello friend! We both wrote Pure Swift ECC SDKs this summer",
            "user": {
                "login": "Sajjon",
                "id": 864410,
                "node_id": "MDQ6VXNlcjg2NDQxMA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Sajjon",
                "html_url": "https://github.com/Sajjon",
                "followers_url": "https://api.github.com/users/Sajjon/followers",
                "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
                "organizations_url": "https://api.github.com/users/Sajjon/orgs",
                "repos_url": "https://api.github.com/users/Sajjon/repos",
                "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Sajjon/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 6,
            "created_at": "2018-09-23T17:28:41Z",
            "updated_at": "2018-09-29T09:51:19Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "We seem to have been working on the same thing :D \r\n\r\nHave a look at [EllipticCurveKit](github.com/Sajjon/EllipticCurveKit). My goal is to finish my rewrite using [EquationKit](github.com/Sajjon/EquationKit), I have got it working already in the [equations branch](https://github.com/Sajjon/EllipticCurveKit/blob/equations/Source/EllipticCurve/Curve/CurveForms/ShortWeierstra%C3%9FCurve.swift) which allows for pretty cool syntax:\r\n\r\n```swift\r\n///\r\n/// Elliptic Curve on Short Weierstrass form (`\ud835\udc46`)\r\n/// - Covers all elliptic curves char\u2260\ud835\udfda,\ud835\udfdb\r\n/// - Mixed Jacobian coordinates have been the speed leader for a long time.\r\n///\r\n///\r\n/// # Equation\r\n///      \ud835\udc46: \ud835\udc66\u00b2 = \ud835\udc65\u00b3 + \ud835\udc4e\ud835\udc65 + \ud835\udc4f\r\n/// - Requires: `\ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2260 \ud835\udfd8`\r\n///\r\npublic struct ShortWeierstra\u00dfCurve: CurveForm {\r\n\r\n\r\n    private let a: Number\r\n    private let b: Number\r\n    public let galoisField: Field\r\n    public let equation: Polynomial\r\n\r\n    private let \ud835\udc65\uff07: Polynomial\r\n    private let \ud835\udc66\uff07: Polynomial\r\n\r\n    public init?(\r\n        a: Number,\r\n        b: Number,\r\n        galoisField: Field\r\n        ) {\r\n\r\n        let \ud835\udc5d = galoisField.modulus\r\n\r\n        guard \ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2262 \ud835\udfd8 % \ud835\udc5d \u21a4 [ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] else { return nil }\r\n\r\n        self.a = a\r\n        self.b = b\r\n        self.galoisField = galoisField\r\n        self.equation = EllipticCurveForm.Weierstra\u00df.short.substitute() {[ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] }\r\n        self.\ud835\udc65\uff07 = equation.differentiateWithRespectTo(\ud835\udc65)!\r\n        self.\ud835\udc66\uff07 = equation.differentiateWithRespectTo(\ud835\udc66)!\r\n    }\r\n}\r\n```\r\n\r\nI have also begun implemented other curve forms than ShortWeierstra\u00df, such as TwistedEdwards and Montgomery.\r\n\r\nI saw you [PR in CryptoSwift adding support for Scrypt](https://github.com/krzyzanowskim/CryptoSwift/pull/645) which I am also working on currently. \r\n\r\nI'm in need of it in the [Zilliqa Swift SDK](https://github.com/OpenZesame/Zilliqa-Swift-SDK) I am developing, for the export wallet function. "
        }
    },
    {
        "id": 1862821687,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NjI4MjE2ODc=",
        "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/events/1862821687",
        "actor": {
            "login": "hyugit",
            "id": 13056774,
            "node_id": "MDQ6VXNlcjEzMDU2Nzc0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13056774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hyugit",
            "html_url": "https://github.com/hyugit",
            "followers_url": "https://api.github.com/users/hyugit/followers",
            "following_url": "https://api.github.com/users/hyugit/following{/other_user}",
            "gists_url": "https://api.github.com/users/hyugit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hyugit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hyugit/subscriptions",
            "organizations_url": "https://api.github.com/users/hyugit/orgs",
            "repos_url": "https://api.github.com/users/hyugit/repos",
            "events_url": "https://api.github.com/users/hyugit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hyugit/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2018-09-24T11:00:11Z",
        "issue": {
            "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1",
            "repository_url": "https://api.github.com/repos/shamatar/EllipticSwift",
            "labels_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/comments",
            "events_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/events",
            "html_url": "https://github.com/shamatar/EllipticSwift/issues/1",
            "id": 362960849,
            "node_id": "MDU6SXNzdWUzNjI5NjA4NDk=",
            "number": 1,
            "title": "Hello friend! We both wrote Pure Swift ECC SDKs this summer",
            "user": {
                "login": "Sajjon",
                "id": 864410,
                "node_id": "MDQ6VXNlcjg2NDQxMA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Sajjon",
                "html_url": "https://github.com/Sajjon",
                "followers_url": "https://api.github.com/users/Sajjon/followers",
                "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
                "organizations_url": "https://api.github.com/users/Sajjon/orgs",
                "repos_url": "https://api.github.com/users/Sajjon/repos",
                "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Sajjon/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 6,
            "created_at": "2018-09-23T17:28:41Z",
            "updated_at": "2018-09-29T09:51:19Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "We seem to have been working on the same thing :D \r\n\r\nHave a look at [EllipticCurveKit](github.com/Sajjon/EllipticCurveKit). My goal is to finish my rewrite using [EquationKit](github.com/Sajjon/EquationKit), I have got it working already in the [equations branch](https://github.com/Sajjon/EllipticCurveKit/blob/equations/Source/EllipticCurve/Curve/CurveForms/ShortWeierstra%C3%9FCurve.swift) which allows for pretty cool syntax:\r\n\r\n```swift\r\n///\r\n/// Elliptic Curve on Short Weierstrass form (`\ud835\udc46`)\r\n/// - Covers all elliptic curves char\u2260\ud835\udfda,\ud835\udfdb\r\n/// - Mixed Jacobian coordinates have been the speed leader for a long time.\r\n///\r\n///\r\n/// # Equation\r\n///      \ud835\udc46: \ud835\udc66\u00b2 = \ud835\udc65\u00b3 + \ud835\udc4e\ud835\udc65 + \ud835\udc4f\r\n/// - Requires: `\ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2260 \ud835\udfd8`\r\n///\r\npublic struct ShortWeierstra\u00dfCurve: CurveForm {\r\n\r\n\r\n    private let a: Number\r\n    private let b: Number\r\n    public let galoisField: Field\r\n    public let equation: Polynomial\r\n\r\n    private let \ud835\udc65\uff07: Polynomial\r\n    private let \ud835\udc66\uff07: Polynomial\r\n\r\n    public init?(\r\n        a: Number,\r\n        b: Number,\r\n        galoisField: Field\r\n        ) {\r\n\r\n        let \ud835\udc5d = galoisField.modulus\r\n\r\n        guard \ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2262 \ud835\udfd8 % \ud835\udc5d \u21a4 [ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] else { return nil }\r\n\r\n        self.a = a\r\n        self.b = b\r\n        self.galoisField = galoisField\r\n        self.equation = EllipticCurveForm.Weierstra\u00df.short.substitute() {[ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] }\r\n        self.\ud835\udc65\uff07 = equation.differentiateWithRespectTo(\ud835\udc65)!\r\n        self.\ud835\udc66\uff07 = equation.differentiateWithRespectTo(\ud835\udc66)!\r\n    }\r\n}\r\n```\r\n\r\nI have also begun implemented other curve forms than ShortWeierstra\u00df, such as TwistedEdwards and Montgomery.\r\n\r\nI saw you [PR in CryptoSwift adding support for Scrypt](https://github.com/krzyzanowskim/CryptoSwift/pull/645) which I am also working on currently. \r\n\r\nI'm in need of it in the [Zilliqa Swift SDK](https://github.com/OpenZesame/Zilliqa-Swift-SDK) I am developing, for the export wallet function. "
        }
    },
    {
        "id": 1862821686,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg2MjgyMTY4Ng==",
        "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/events/1862821686",
        "actor": {
            "login": "hyugit",
            "id": 13056774,
            "node_id": "MDQ6VXNlcjEzMDU2Nzc0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13056774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hyugit",
            "html_url": "https://github.com/hyugit",
            "followers_url": "https://api.github.com/users/hyugit/followers",
            "following_url": "https://api.github.com/users/hyugit/following{/other_user}",
            "gists_url": "https://api.github.com/users/hyugit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hyugit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hyugit/subscriptions",
            "organizations_url": "https://api.github.com/users/hyugit/orgs",
            "repos_url": "https://api.github.com/users/hyugit/repos",
            "events_url": "https://api.github.com/users/hyugit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hyugit/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2018-09-24T11:00:11Z",
        "issue": {
            "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1",
            "repository_url": "https://api.github.com/repos/shamatar/EllipticSwift",
            "labels_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/comments",
            "events_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/events",
            "html_url": "https://github.com/shamatar/EllipticSwift/issues/1",
            "id": 362960849,
            "node_id": "MDU6SXNzdWUzNjI5NjA4NDk=",
            "number": 1,
            "title": "Hello friend! We both wrote Pure Swift ECC SDKs this summer",
            "user": {
                "login": "Sajjon",
                "id": 864410,
                "node_id": "MDQ6VXNlcjg2NDQxMA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Sajjon",
                "html_url": "https://github.com/Sajjon",
                "followers_url": "https://api.github.com/users/Sajjon/followers",
                "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
                "organizations_url": "https://api.github.com/users/Sajjon/orgs",
                "repos_url": "https://api.github.com/users/Sajjon/repos",
                "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Sajjon/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 6,
            "created_at": "2018-09-23T17:28:41Z",
            "updated_at": "2018-09-29T09:51:19Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "We seem to have been working on the same thing :D \r\n\r\nHave a look at [EllipticCurveKit](github.com/Sajjon/EllipticCurveKit). My goal is to finish my rewrite using [EquationKit](github.com/Sajjon/EquationKit), I have got it working already in the [equations branch](https://github.com/Sajjon/EllipticCurveKit/blob/equations/Source/EllipticCurve/Curve/CurveForms/ShortWeierstra%C3%9FCurve.swift) which allows for pretty cool syntax:\r\n\r\n```swift\r\n///\r\n/// Elliptic Curve on Short Weierstrass form (`\ud835\udc46`)\r\n/// - Covers all elliptic curves char\u2260\ud835\udfda,\ud835\udfdb\r\n/// - Mixed Jacobian coordinates have been the speed leader for a long time.\r\n///\r\n///\r\n/// # Equation\r\n///      \ud835\udc46: \ud835\udc66\u00b2 = \ud835\udc65\u00b3 + \ud835\udc4e\ud835\udc65 + \ud835\udc4f\r\n/// - Requires: `\ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2260 \ud835\udfd8`\r\n///\r\npublic struct ShortWeierstra\u00dfCurve: CurveForm {\r\n\r\n\r\n    private let a: Number\r\n    private let b: Number\r\n    public let galoisField: Field\r\n    public let equation: Polynomial\r\n\r\n    private let \ud835\udc65\uff07: Polynomial\r\n    private let \ud835\udc66\uff07: Polynomial\r\n\r\n    public init?(\r\n        a: Number,\r\n        b: Number,\r\n        galoisField: Field\r\n        ) {\r\n\r\n        let \ud835\udc5d = galoisField.modulus\r\n\r\n        guard \ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2262 \ud835\udfd8 % \ud835\udc5d \u21a4 [ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] else { return nil }\r\n\r\n        self.a = a\r\n        self.b = b\r\n        self.galoisField = galoisField\r\n        self.equation = EllipticCurveForm.Weierstra\u00df.short.substitute() {[ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] }\r\n        self.\ud835\udc65\uff07 = equation.differentiateWithRespectTo(\ud835\udc65)!\r\n        self.\ud835\udc66\uff07 = equation.differentiateWithRespectTo(\ud835\udc66)!\r\n    }\r\n}\r\n```\r\n\r\nI have also begun implemented other curve forms than ShortWeierstra\u00df, such as TwistedEdwards and Montgomery.\r\n\r\nI saw you [PR in CryptoSwift adding support for Scrypt](https://github.com/krzyzanowskim/CryptoSwift/pull/645) which I am also working on currently. \r\n\r\nI'm in need of it in the [Zilliqa Swift SDK](https://github.com/OpenZesame/Zilliqa-Swift-SDK) I am developing, for the export wallet function. "
        }
    },
    {
        "id": 1862751194,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NjI3NTExOTQ=",
        "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/events/1862751194",
        "actor": {
            "login": "hyugit",
            "id": 13056774,
            "node_id": "MDQ6VXNlcjEzMDU2Nzc0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13056774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hyugit",
            "html_url": "https://github.com/hyugit",
            "followers_url": "https://api.github.com/users/hyugit/followers",
            "following_url": "https://api.github.com/users/hyugit/following{/other_user}",
            "gists_url": "https://api.github.com/users/hyugit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hyugit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hyugit/subscriptions",
            "organizations_url": "https://api.github.com/users/hyugit/orgs",
            "repos_url": "https://api.github.com/users/hyugit/repos",
            "events_url": "https://api.github.com/users/hyugit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hyugit/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2018-09-24T10:19:14Z",
        "issue": {
            "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1",
            "repository_url": "https://api.github.com/repos/shamatar/EllipticSwift",
            "labels_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/comments",
            "events_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/events",
            "html_url": "https://github.com/shamatar/EllipticSwift/issues/1",
            "id": 362960849,
            "node_id": "MDU6SXNzdWUzNjI5NjA4NDk=",
            "number": 1,
            "title": "Hello friend! We both wrote Pure Swift ECC SDKs this summer",
            "user": {
                "login": "Sajjon",
                "id": 864410,
                "node_id": "MDQ6VXNlcjg2NDQxMA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Sajjon",
                "html_url": "https://github.com/Sajjon",
                "followers_url": "https://api.github.com/users/Sajjon/followers",
                "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
                "organizations_url": "https://api.github.com/users/Sajjon/orgs",
                "repos_url": "https://api.github.com/users/Sajjon/repos",
                "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Sajjon/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 6,
            "created_at": "2018-09-23T17:28:41Z",
            "updated_at": "2018-09-29T09:51:19Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "We seem to have been working on the same thing :D \r\n\r\nHave a look at [EllipticCurveKit](github.com/Sajjon/EllipticCurveKit). My goal is to finish my rewrite using [EquationKit](github.com/Sajjon/EquationKit), I have got it working already in the [equations branch](https://github.com/Sajjon/EllipticCurveKit/blob/equations/Source/EllipticCurve/Curve/CurveForms/ShortWeierstra%C3%9FCurve.swift) which allows for pretty cool syntax:\r\n\r\n```swift\r\n///\r\n/// Elliptic Curve on Short Weierstrass form (`\ud835\udc46`)\r\n/// - Covers all elliptic curves char\u2260\ud835\udfda,\ud835\udfdb\r\n/// - Mixed Jacobian coordinates have been the speed leader for a long time.\r\n///\r\n///\r\n/// # Equation\r\n///      \ud835\udc46: \ud835\udc66\u00b2 = \ud835\udc65\u00b3 + \ud835\udc4e\ud835\udc65 + \ud835\udc4f\r\n/// - Requires: `\ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2260 \ud835\udfd8`\r\n///\r\npublic struct ShortWeierstra\u00dfCurve: CurveForm {\r\n\r\n\r\n    private let a: Number\r\n    private let b: Number\r\n    public let galoisField: Field\r\n    public let equation: Polynomial\r\n\r\n    private let \ud835\udc65\uff07: Polynomial\r\n    private let \ud835\udc66\uff07: Polynomial\r\n\r\n    public init?(\r\n        a: Number,\r\n        b: Number,\r\n        galoisField: Field\r\n        ) {\r\n\r\n        let \ud835\udc5d = galoisField.modulus\r\n\r\n        guard \ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2262 \ud835\udfd8 % \ud835\udc5d \u21a4 [ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] else { return nil }\r\n\r\n        self.a = a\r\n        self.b = b\r\n        self.galoisField = galoisField\r\n        self.equation = EllipticCurveForm.Weierstra\u00df.short.substitute() {[ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] }\r\n        self.\ud835\udc65\uff07 = equation.differentiateWithRespectTo(\ud835\udc65)!\r\n        self.\ud835\udc66\uff07 = equation.differentiateWithRespectTo(\ud835\udc66)!\r\n    }\r\n}\r\n```\r\n\r\nI have also begun implemented other curve forms than ShortWeierstra\u00df, such as TwistedEdwards and Montgomery.\r\n\r\nI saw you [PR in CryptoSwift adding support for Scrypt](https://github.com/krzyzanowskim/CryptoSwift/pull/645) which I am also working on currently. \r\n\r\nI'm in need of it in the [Zilliqa Swift SDK](https://github.com/OpenZesame/Zilliqa-Swift-SDK) I am developing, for the export wallet function. "
        }
    },
    {
        "id": 1862751193,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg2Mjc1MTE5Mw==",
        "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/events/1862751193",
        "actor": {
            "login": "hyugit",
            "id": 13056774,
            "node_id": "MDQ6VXNlcjEzMDU2Nzc0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13056774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hyugit",
            "html_url": "https://github.com/hyugit",
            "followers_url": "https://api.github.com/users/hyugit/followers",
            "following_url": "https://api.github.com/users/hyugit/following{/other_user}",
            "gists_url": "https://api.github.com/users/hyugit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hyugit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hyugit/subscriptions",
            "organizations_url": "https://api.github.com/users/hyugit/orgs",
            "repos_url": "https://api.github.com/users/hyugit/repos",
            "events_url": "https://api.github.com/users/hyugit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hyugit/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2018-09-24T10:19:14Z",
        "issue": {
            "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1",
            "repository_url": "https://api.github.com/repos/shamatar/EllipticSwift",
            "labels_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/comments",
            "events_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/events",
            "html_url": "https://github.com/shamatar/EllipticSwift/issues/1",
            "id": 362960849,
            "node_id": "MDU6SXNzdWUzNjI5NjA4NDk=",
            "number": 1,
            "title": "Hello friend! We both wrote Pure Swift ECC SDKs this summer",
            "user": {
                "login": "Sajjon",
                "id": 864410,
                "node_id": "MDQ6VXNlcjg2NDQxMA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Sajjon",
                "html_url": "https://github.com/Sajjon",
                "followers_url": "https://api.github.com/users/Sajjon/followers",
                "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
                "organizations_url": "https://api.github.com/users/Sajjon/orgs",
                "repos_url": "https://api.github.com/users/Sajjon/repos",
                "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Sajjon/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 6,
            "created_at": "2018-09-23T17:28:41Z",
            "updated_at": "2018-09-29T09:51:19Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "We seem to have been working on the same thing :D \r\n\r\nHave a look at [EllipticCurveKit](github.com/Sajjon/EllipticCurveKit). My goal is to finish my rewrite using [EquationKit](github.com/Sajjon/EquationKit), I have got it working already in the [equations branch](https://github.com/Sajjon/EllipticCurveKit/blob/equations/Source/EllipticCurve/Curve/CurveForms/ShortWeierstra%C3%9FCurve.swift) which allows for pretty cool syntax:\r\n\r\n```swift\r\n///\r\n/// Elliptic Curve on Short Weierstrass form (`\ud835\udc46`)\r\n/// - Covers all elliptic curves char\u2260\ud835\udfda,\ud835\udfdb\r\n/// - Mixed Jacobian coordinates have been the speed leader for a long time.\r\n///\r\n///\r\n/// # Equation\r\n///      \ud835\udc46: \ud835\udc66\u00b2 = \ud835\udc65\u00b3 + \ud835\udc4e\ud835\udc65 + \ud835\udc4f\r\n/// - Requires: `\ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2260 \ud835\udfd8`\r\n///\r\npublic struct ShortWeierstra\u00dfCurve: CurveForm {\r\n\r\n\r\n    private let a: Number\r\n    private let b: Number\r\n    public let galoisField: Field\r\n    public let equation: Polynomial\r\n\r\n    private let \ud835\udc65\uff07: Polynomial\r\n    private let \ud835\udc66\uff07: Polynomial\r\n\r\n    public init?(\r\n        a: Number,\r\n        b: Number,\r\n        galoisField: Field\r\n        ) {\r\n\r\n        let \ud835\udc5d = galoisField.modulus\r\n\r\n        guard \ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2262 \ud835\udfd8 % \ud835\udc5d \u21a4 [ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] else { return nil }\r\n\r\n        self.a = a\r\n        self.b = b\r\n        self.galoisField = galoisField\r\n        self.equation = EllipticCurveForm.Weierstra\u00df.short.substitute() {[ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] }\r\n        self.\ud835\udc65\uff07 = equation.differentiateWithRespectTo(\ud835\udc65)!\r\n        self.\ud835\udc66\uff07 = equation.differentiateWithRespectTo(\ud835\udc66)!\r\n    }\r\n}\r\n```\r\n\r\nI have also begun implemented other curve forms than ShortWeierstra\u00df, such as TwistedEdwards and Montgomery.\r\n\r\nI saw you [PR in CryptoSwift adding support for Scrypt](https://github.com/krzyzanowskim/CryptoSwift/pull/645) which I am also working on currently. \r\n\r\nI'm in need of it in the [Zilliqa Swift SDK](https://github.com/OpenZesame/Zilliqa-Swift-SDK) I am developing, for the export wallet function. "
        }
    },
    {
        "id": 1862716056,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NjI3MTYwNTY=",
        "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/events/1862716056",
        "actor": {
            "login": "Sajjon",
            "id": 864410,
            "node_id": "MDQ6VXNlcjg2NDQxMA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sajjon",
            "html_url": "https://github.com/Sajjon",
            "followers_url": "https://api.github.com/users/Sajjon/followers",
            "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
            "organizations_url": "https://api.github.com/users/Sajjon/orgs",
            "repos_url": "https://api.github.com/users/Sajjon/repos",
            "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sajjon/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2018-09-24T09:59:42Z",
        "issue": {
            "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1",
            "repository_url": "https://api.github.com/repos/shamatar/EllipticSwift",
            "labels_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/comments",
            "events_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/events",
            "html_url": "https://github.com/shamatar/EllipticSwift/issues/1",
            "id": 362960849,
            "node_id": "MDU6SXNzdWUzNjI5NjA4NDk=",
            "number": 1,
            "title": "Hello friend! We both wrote Pure Swift ECC SDKs this summer",
            "user": {
                "login": "Sajjon",
                "id": 864410,
                "node_id": "MDQ6VXNlcjg2NDQxMA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Sajjon",
                "html_url": "https://github.com/Sajjon",
                "followers_url": "https://api.github.com/users/Sajjon/followers",
                "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
                "organizations_url": "https://api.github.com/users/Sajjon/orgs",
                "repos_url": "https://api.github.com/users/Sajjon/repos",
                "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Sajjon/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 6,
            "created_at": "2018-09-23T17:28:41Z",
            "updated_at": "2018-09-29T09:51:19Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "We seem to have been working on the same thing :D \r\n\r\nHave a look at [EllipticCurveKit](github.com/Sajjon/EllipticCurveKit). My goal is to finish my rewrite using [EquationKit](github.com/Sajjon/EquationKit), I have got it working already in the [equations branch](https://github.com/Sajjon/EllipticCurveKit/blob/equations/Source/EllipticCurve/Curve/CurveForms/ShortWeierstra%C3%9FCurve.swift) which allows for pretty cool syntax:\r\n\r\n```swift\r\n///\r\n/// Elliptic Curve on Short Weierstrass form (`\ud835\udc46`)\r\n/// - Covers all elliptic curves char\u2260\ud835\udfda,\ud835\udfdb\r\n/// - Mixed Jacobian coordinates have been the speed leader for a long time.\r\n///\r\n///\r\n/// # Equation\r\n///      \ud835\udc46: \ud835\udc66\u00b2 = \ud835\udc65\u00b3 + \ud835\udc4e\ud835\udc65 + \ud835\udc4f\r\n/// - Requires: `\ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2260 \ud835\udfd8`\r\n///\r\npublic struct ShortWeierstra\u00dfCurve: CurveForm {\r\n\r\n\r\n    private let a: Number\r\n    private let b: Number\r\n    public let galoisField: Field\r\n    public let equation: Polynomial\r\n\r\n    private let \ud835\udc65\uff07: Polynomial\r\n    private let \ud835\udc66\uff07: Polynomial\r\n\r\n    public init?(\r\n        a: Number,\r\n        b: Number,\r\n        galoisField: Field\r\n        ) {\r\n\r\n        let \ud835\udc5d = galoisField.modulus\r\n\r\n        guard \ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2262 \ud835\udfd8 % \ud835\udc5d \u21a4 [ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] else { return nil }\r\n\r\n        self.a = a\r\n        self.b = b\r\n        self.galoisField = galoisField\r\n        self.equation = EllipticCurveForm.Weierstra\u00df.short.substitute() {[ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] }\r\n        self.\ud835\udc65\uff07 = equation.differentiateWithRespectTo(\ud835\udc65)!\r\n        self.\ud835\udc66\uff07 = equation.differentiateWithRespectTo(\ud835\udc66)!\r\n    }\r\n}\r\n```\r\n\r\nI have also begun implemented other curve forms than ShortWeierstra\u00df, such as TwistedEdwards and Montgomery.\r\n\r\nI saw you [PR in CryptoSwift adding support for Scrypt](https://github.com/krzyzanowskim/CryptoSwift/pull/645) which I am also working on currently. \r\n\r\nI'm in need of it in the [Zilliqa Swift SDK](https://github.com/OpenZesame/Zilliqa-Swift-SDK) I am developing, for the export wallet function. "
        }
    },
    {
        "id": 1862716054,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg2MjcxNjA1NA==",
        "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/events/1862716054",
        "actor": {
            "login": "Sajjon",
            "id": 864410,
            "node_id": "MDQ6VXNlcjg2NDQxMA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sajjon",
            "html_url": "https://github.com/Sajjon",
            "followers_url": "https://api.github.com/users/Sajjon/followers",
            "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
            "organizations_url": "https://api.github.com/users/Sajjon/orgs",
            "repos_url": "https://api.github.com/users/Sajjon/repos",
            "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sajjon/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2018-09-24T09:59:42Z",
        "issue": {
            "url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1",
            "repository_url": "https://api.github.com/repos/shamatar/EllipticSwift",
            "labels_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/labels{/name}",
            "comments_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/comments",
            "events_url": "https://api.github.com/repos/shamatar/EllipticSwift/issues/1/events",
            "html_url": "https://github.com/shamatar/EllipticSwift/issues/1",
            "id": 362960849,
            "node_id": "MDU6SXNzdWUzNjI5NjA4NDk=",
            "number": 1,
            "title": "Hello friend! We both wrote Pure Swift ECC SDKs this summer",
            "user": {
                "login": "Sajjon",
                "id": 864410,
                "node_id": "MDQ6VXNlcjg2NDQxMA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/864410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Sajjon",
                "html_url": "https://github.com/Sajjon",
                "followers_url": "https://api.github.com/users/Sajjon/followers",
                "following_url": "https://api.github.com/users/Sajjon/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sajjon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Sajjon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sajjon/subscriptions",
                "organizations_url": "https://api.github.com/users/Sajjon/orgs",
                "repos_url": "https://api.github.com/users/Sajjon/repos",
                "events_url": "https://api.github.com/users/Sajjon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Sajjon/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 6,
            "created_at": "2018-09-23T17:28:41Z",
            "updated_at": "2018-09-29T09:51:19Z",
            "closed_at": null,
            "author_association": "NONE",
            "body": "We seem to have been working on the same thing :D \r\n\r\nHave a look at [EllipticCurveKit](github.com/Sajjon/EllipticCurveKit). My goal is to finish my rewrite using [EquationKit](github.com/Sajjon/EquationKit), I have got it working already in the [equations branch](https://github.com/Sajjon/EllipticCurveKit/blob/equations/Source/EllipticCurve/Curve/CurveForms/ShortWeierstra%C3%9FCurve.swift) which allows for pretty cool syntax:\r\n\r\n```swift\r\n///\r\n/// Elliptic Curve on Short Weierstrass form (`\ud835\udc46`)\r\n/// - Covers all elliptic curves char\u2260\ud835\udfda,\ud835\udfdb\r\n/// - Mixed Jacobian coordinates have been the speed leader for a long time.\r\n///\r\n///\r\n/// # Equation\r\n///      \ud835\udc46: \ud835\udc66\u00b2 = \ud835\udc65\u00b3 + \ud835\udc4e\ud835\udc65 + \ud835\udc4f\r\n/// - Requires: `\ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2260 \ud835\udfd8`\r\n///\r\npublic struct ShortWeierstra\u00dfCurve: CurveForm {\r\n\r\n\r\n    private let a: Number\r\n    private let b: Number\r\n    public let galoisField: Field\r\n    public let equation: Polynomial\r\n\r\n    private let \ud835\udc65\uff07: Polynomial\r\n    private let \ud835\udc66\uff07: Polynomial\r\n\r\n    public init?(\r\n        a: Number,\r\n        b: Number,\r\n        galoisField: Field\r\n        ) {\r\n\r\n        let \ud835\udc5d = galoisField.modulus\r\n\r\n        guard \ud835\udfdc\ud835\udc4e\u00b3 + \ud835\udfda\ud835\udfdf\ud835\udc4f\u00b2 \u2262 \ud835\udfd8 % \ud835\udc5d \u21a4 [ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] else { return nil }\r\n\r\n        self.a = a\r\n        self.b = b\r\n        self.galoisField = galoisField\r\n        self.equation = EllipticCurveForm.Weierstra\u00df.short.substitute() {[ \ud835\udc4e \u2254 a, \ud835\udc4f \u2254 b ] }\r\n        self.\ud835\udc65\uff07 = equation.differentiateWithRespectTo(\ud835\udc65)!\r\n        self.\ud835\udc66\uff07 = equation.differentiateWithRespectTo(\ud835\udc66)!\r\n    }\r\n}\r\n```\r\n\r\nI have also begun implemented other curve forms than ShortWeierstra\u00df, such as TwistedEdwards and Montgomery.\r\n\r\nI saw you [PR in CryptoSwift adding support for Scrypt](https://github.com/krzyzanowskim/CryptoSwift/pull/645) which I am also working on currently. \r\n\r\nI'm in need of it in the [Zilliqa Swift SDK](https://github.com/OpenZesame/Zilliqa-Swift-SDK) I am developing, for the export wallet function. "
        }
    }
]