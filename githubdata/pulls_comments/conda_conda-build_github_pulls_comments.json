[
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9083031",
        "pull_request_review_id": null,
        "id": 9083031,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwODMwMzE=",
        "diff_hunk": "@@ -125,6 +125,31 @@ def check_bad_chrs(s, field):\n         if c in s:\n             sys.exit(\"Error: bad character '%s' in %s: %s\" % (c, field, s))\n \n+def get_contents(meta_path):\n+    '''\n+    Get the contents of the [meta.yaml|conda.yaml] file.\n+    If jinja is installed, then the template.render function is called \n+    before standard conda macro processors \n+    '''\n+    try:\n+        import jinja2\n+    except ImportError:",
        "path": "conda_build/metadata.py",
        "position": 26,
        "original_position": 26,
        "commit_id": "0f26b31e30d092197194393faa9cf4001e897c1c",
        "original_commit_id": "0be4028ade97c8e6ee58e5703d608d648e4aac2e",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should print a warning or something. \n",
        "created_at": "2014-01-22T17:21:29Z",
        "updated_at": "2014-01-22T19:08:48Z",
        "html_url": "https://github.com/conda/conda-build/pull/8#discussion_r9083031",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9083031"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/8#discussion_r9083031"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9083783",
        "pull_request_review_id": null,
        "id": 9083783,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwODM3ODM=",
        "diff_hunk": "@@ -0,0 +1 @@\n+{% extends \"setuptools.yaml\" %}",
        "path": "example_packages/setuptools/conda.yaml",
        "position": 1,
        "original_position": 1,
        "commit_id": "0f26b31e30d092197194393faa9cf4001e897c1c",
        "original_commit_id": "0be4028ade97c8e6ee58e5703d608d648e4aac2e",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How are these found? Does it have to be one of the builtin ones?\n",
        "created_at": "2014-01-22T17:40:22Z",
        "updated_at": "2014-01-22T19:08:48Z",
        "html_url": "https://github.com/conda/conda-build/pull/8#discussion_r9083783",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9083783"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/8#discussion_r9083783"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9083992",
        "pull_request_review_id": null,
        "id": 9083992,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwODM5OTI=",
        "diff_hunk": "@@ -125,6 +125,31 @@ def check_bad_chrs(s, field):\n         if c in s:\n             sys.exit(\"Error: bad character '%s' in %s: %s\" % (c, field, s))\n \n+def get_contents(meta_path):\n+    '''\n+    Get the contents of the [meta.yaml|conda.yaml] file.\n+    If jinja is installed, then the template.render function is called \n+    before standard conda macro processors \n+    '''\n+    try:\n+        import jinja2\n+    except ImportError:",
        "path": "conda_build/metadata.py",
        "position": 26,
        "original_position": 26,
        "commit_id": "0f26b31e30d092197194393faa9cf4001e897c1c",
        "original_commit_id": "0be4028ade97c8e6ee58e5703d608d648e4aac2e",
        "user": {
            "login": "srossross",
            "id": 741611,
            "node_id": "MDQ6VXNlcjc0MTYxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/741611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srossross",
            "html_url": "https://github.com/srossross",
            "followers_url": "https://api.github.com/users/srossross/followers",
            "following_url": "https://api.github.com/users/srossross/following{/other_user}",
            "gists_url": "https://api.github.com/users/srossross/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srossross/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srossross/subscriptions",
            "organizations_url": "https://api.github.com/users/srossross/orgs",
            "repos_url": "https://api.github.com/users/srossross/repos",
            "events_url": "https://api.github.com/users/srossross/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srossross/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Where is an example of logging in conda? or should I just use a print statement?\n",
        "created_at": "2014-01-22T17:45:25Z",
        "updated_at": "2014-01-22T19:08:48Z",
        "html_url": "https://github.com/conda/conda-build/pull/8#discussion_r9083992",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9083992"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/8#discussion_r9083992"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9084059",
        "pull_request_review_id": null,
        "id": 9084059,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwODQwNTk=",
        "diff_hunk": "@@ -0,0 +1 @@\n+{% extends \"setuptools.yaml\" %}",
        "path": "example_packages/setuptools/conda.yaml",
        "position": 1,
        "original_position": 1,
        "commit_id": "0f26b31e30d092197194393faa9cf4001e897c1c",
        "original_commit_id": "0be4028ade97c8e6ee58e5703d608d648e4aac2e",
        "user": {
            "login": "srossross",
            "id": 741611,
            "node_id": "MDQ6VXNlcjc0MTYxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/741611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srossross",
            "html_url": "https://github.com/srossross",
            "followers_url": "https://api.github.com/users/srossross/followers",
            "following_url": "https://api.github.com/users/srossross/following{/other_user}",
            "gists_url": "https://api.github.com/users/srossross/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srossross/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srossross/subscriptions",
            "organizations_url": "https://api.github.com/users/srossross/orgs",
            "repos_url": "https://api.github.com/users/srossross/repos",
            "events_url": "https://api.github.com/users/srossross/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srossross/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, they are the built in ones for now. See the [jinja loaders here](https://github.com/srossross/conda-build/blob/feature/jinja2/conda_build/metadata.py#L143) perhaps in the future we could also add a `$CONDA_TEMPLATES` path variable\n",
        "created_at": "2014-01-22T17:47:15Z",
        "updated_at": "2014-01-22T19:08:48Z",
        "html_url": "https://github.com/conda/conda-build/pull/8#discussion_r9084059",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9084059"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/8#discussion_r9084059"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9086996",
        "pull_request_review_id": null,
        "id": 9086996,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwODY5OTY=",
        "diff_hunk": "@@ -125,6 +125,31 @@ def check_bad_chrs(s, field):\n         if c in s:\n             sys.exit(\"Error: bad character '%s' in %s: %s\" % (c, field, s))\n \n+def get_contents(meta_path):\n+    '''\n+    Get the contents of the [meta.yaml|conda.yaml] file.\n+    If jinja is installed, then the template.render function is called \n+    before standard conda macro processors \n+    '''\n+    try:\n+        import jinja2\n+    except ImportError:",
        "path": "conda_build/metadata.py",
        "position": 26,
        "original_position": 26,
        "commit_id": "0f26b31e30d092197194393faa9cf4001e897c1c",
        "original_commit_id": "0be4028ade97c8e6ee58e5703d608d648e4aac2e",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, we just use print, unless it should die, in which case use `sys.exit` or `raise RuntimeError`.\n",
        "created_at": "2014-01-22T18:58:09Z",
        "updated_at": "2014-01-22T19:08:48Z",
        "html_url": "https://github.com/conda/conda-build/pull/8#discussion_r9086996",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9086996"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/8#discussion_r9086996"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9087476",
        "pull_request_review_id": null,
        "id": 9087476,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwODc0NzY=",
        "diff_hunk": "@@ -125,6 +125,31 @@ def check_bad_chrs(s, field):\n         if c in s:\n             sys.exit(\"Error: bad character '%s' in %s: %s\" % (c, field, s))\n \n+def get_contents(meta_path):\n+    '''\n+    Get the contents of the [meta.yaml|conda.yaml] file.\n+    If jinja is installed, then the template.render function is called \n+    before standard conda macro processors \n+    '''\n+    try:\n+        import jinja2\n+    except ImportError:",
        "path": "conda_build/metadata.py",
        "position": 26,
        "original_position": 26,
        "commit_id": "0f26b31e30d092197194393faa9cf4001e897c1c",
        "original_commit_id": "0be4028ade97c8e6ee58e5703d608d648e4aac2e",
        "user": {
            "login": "srossross",
            "id": 741611,
            "node_id": "MDQ6VXNlcjc0MTYxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/741611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srossross",
            "html_url": "https://github.com/srossross",
            "followers_url": "https://api.github.com/users/srossross/followers",
            "following_url": "https://api.github.com/users/srossross/following{/other_user}",
            "gists_url": "https://api.github.com/users/srossross/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srossross/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srossross/subscriptions",
            "organizations_url": "https://api.github.com/users/srossross/orgs",
            "repos_url": "https://api.github.com/users/srossross/repos",
            "events_url": "https://api.github.com/users/srossross/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srossross/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Added a warning.\n",
        "created_at": "2014-01-22T19:09:11Z",
        "updated_at": "2014-01-22T19:09:11Z",
        "html_url": "https://github.com/conda/conda-build/pull/8#discussion_r9087476",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9087476"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/8#discussion_r9087476"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9125659",
        "pull_request_review_id": null,
        "id": 9125659,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxMjU2NTk=",
        "diff_hunk": "@@ -3,3 +3,5 @@\n   * initial release\n   * includes conda-build, conda-convert, conda-index, conda-skeleton\n   * depends on new conda version 3\n+  * add ability to build packages even if there is a file with the same ",
        "path": "CHANGELOG.txt",
        "position": null,
        "original_position": 4,
        "commit_id": "6b009644a38108bb17a6bb15fda9cfadc0a393f8",
        "original_commit_id": "155bd6a1fa422d3e3d2d0c6e50aa4473845c10e6",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is not really a correct statement of the problem. anaconda/bin has nothing to do with it. The fix makes it fallback to the recipe dir even if there is a non-recipe path with the same name in the current directory. \n",
        "created_at": "2014-01-23T19:26:54Z",
        "updated_at": "2014-01-23T19:36:57Z",
        "html_url": "https://github.com/conda/conda-build/pull/12#discussion_r9125659",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/12",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9125659"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/12#discussion_r9125659"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/12"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/10278366",
        "pull_request_review_id": null,
        "id": 10278366,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMjc4MzY2",
        "diff_hunk": "@@ -346,45 +391,85 @@ def unpack(src_path, tempdir):\n     else:\n         raise Exception(\"not a valid source\")\n \n+\n def get_dir(tempdir):\n     lst = [fn for fn in listdir(tempdir) if not fn.startswith('.') and\n-        isdir(join(tempdir, fn))]\n+           isdir(join(tempdir, fn))]\n     if len(lst) == 1:\n         dir_path = join(tempdir, lst[0])\n         if isdir(dir_path):\n             return dir_path\n     raise Exception(\"could not find unpacked source dir\")\n \n-def patch_distutils(tempdir):\n-    # Note, distribute doesn't actually patch the setup function.\n-    import distutils.core\n-    import yaml\n-\n-    def setup(*args, **kwargs):\n-        data = {}\n-        data['install_requires'] = kwargs.get('install_requires', [])\n-        data['entry_points'] = kwargs.get('entry_points', [])\n-        data['packages'] = kwargs.get('packages', [])\n-        with open(join(tempdir, \"pkginfo.yaml\"), 'w') as fn:\n-            fn.write(yaml.dump(data))\n-\n-    distutils.core.setup = setup\n-\n-def run_setuppy(src_dir):\n-    import sys\n-    sys.argv = ['setup.py', 'install']\n-    sys.path.insert(0, src_dir)\n-    d = {'__file__': 'setup.py', '__name__': '__main__'}\n+\n+def run_setuppy(src_dir, temp_dir):\n+    '''\n+    Modify setup.py to patch distutils and then run it in a subprocess.\n+\n+    :param src_dir: Directory containing the source code\n+    :type src_dir: str\n+    :param temp_dir: Temporary directory for doing for storing pkginfo.yaml\n+    :type temp_dir: str\n+    '''\n+    # Add lines about patching distutils to top of setup.py\n+    setup_content = ''\n+    with open(join(src_dir, 'setup.py'), encoding='utf-8') as setuppy:\n+        setup_content = setuppy.read()\n+    setup_content = DISTUTILS_PATCH.format(temp_dir) + setup_content\n+    with open(join(src_dir, 'setup.py'), 'w', encoding='utf-8') as setuppy:\n+        saw_first_import = False\n+        inserted_patch = False\n+        for line in setup_content.splitlines(True):\n+            stripped_line = line.strip()\n+            # Ignore she-bang lines\n+            if stripped_line.startswith('#!'):\n+                continue\n+            # Check for first regular import or __future__ imports\n+            elif (not stripped_line.startswith('#') and\n+                    (stripped_line.startswith('import') or\n+                     ' import ' in stripped_line)):\n+                saw_first_import = True\n+            # Insert patch after first blank line after imports\n+            elif saw_first_import and not inserted_patch and not stripped_line:\n+                setuppy.write(DISTUTILS_PATCH.format(temp_dir))\n+                inserted_patch = True\n+            setuppy.write(line)\n+    # Save PYTHONPATH for later\n+    python_path = os.getenv('PYTHONPATH', '')\n+    if python_path:\n+        os.environ['PYTHONPATH'] = src_dir + ':' + python_path\n+    else:\n+        os.environ['PYTHONPATH'] = src_dir\n     cwd = getcwd()\n     chdir(src_dir)\n-    with open(join(src_dir, 'setup.py')) as f:\n-        exec(compile(f.read(), 'setup.py', 'exec'), d)\n-    chdir(cwd)\n+    args = [sys.executable, 'setup.py', 'install']\n+    try:\n+        subprocess.check_call(args)",
        "path": "conda_build/pypi.py",
        "position": null,
        "original_position": 398,
        "commit_id": "e9c58b2176b610bf35a461bd39119e7308986535",
        "original_commit_id": "695dfc11f7a84d4c6f497bfa5802157a9e6d678e",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Instead of modifying os.environ (which I think doesn't work like you expect it to), just pass the environment to check_call, like \n\n``` py\nenv=os.environ.copy()\nenv['PYTHONPATH'] = ...\ncheck_call(env=env)\n```\n",
        "created_at": "2014-03-04T22:28:40Z",
        "updated_at": "2014-03-05T21:07:30Z",
        "html_url": "https://github.com/conda/conda-build/pull/59#discussion_r10278366",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/59",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/10278366"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/59#discussion_r10278366"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/59"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/10282300",
        "pull_request_review_id": null,
        "id": 10282300,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMjgyMzAw",
        "diff_hunk": "@@ -346,45 +391,85 @@ def unpack(src_path, tempdir):\n     else:\n         raise Exception(\"not a valid source\")\n \n+\n def get_dir(tempdir):\n     lst = [fn for fn in listdir(tempdir) if not fn.startswith('.') and\n-        isdir(join(tempdir, fn))]\n+           isdir(join(tempdir, fn))]\n     if len(lst) == 1:\n         dir_path = join(tempdir, lst[0])\n         if isdir(dir_path):\n             return dir_path\n     raise Exception(\"could not find unpacked source dir\")\n \n-def patch_distutils(tempdir):\n-    # Note, distribute doesn't actually patch the setup function.\n-    import distutils.core\n-    import yaml\n-\n-    def setup(*args, **kwargs):\n-        data = {}\n-        data['install_requires'] = kwargs.get('install_requires', [])\n-        data['entry_points'] = kwargs.get('entry_points', [])\n-        data['packages'] = kwargs.get('packages', [])\n-        with open(join(tempdir, \"pkginfo.yaml\"), 'w') as fn:\n-            fn.write(yaml.dump(data))\n-\n-    distutils.core.setup = setup\n-\n-def run_setuppy(src_dir):\n-    import sys\n-    sys.argv = ['setup.py', 'install']\n-    sys.path.insert(0, src_dir)\n-    d = {'__file__': 'setup.py', '__name__': '__main__'}\n+\n+def run_setuppy(src_dir, temp_dir):\n+    '''\n+    Modify setup.py to patch distutils and then run it in a subprocess.\n+\n+    :param src_dir: Directory containing the source code\n+    :type src_dir: str\n+    :param temp_dir: Temporary directory for doing for storing pkginfo.yaml\n+    :type temp_dir: str\n+    '''\n+    # Add lines about patching distutils to top of setup.py\n+    setup_content = ''\n+    with open(join(src_dir, 'setup.py'), encoding='utf-8') as setuppy:\n+        setup_content = setuppy.read()\n+    setup_content = DISTUTILS_PATCH.format(temp_dir) + setup_content\n+    with open(join(src_dir, 'setup.py'), 'w', encoding='utf-8') as setuppy:\n+        saw_first_import = False\n+        inserted_patch = False\n+        for line in setup_content.splitlines(True):\n+            stripped_line = line.strip()\n+            # Ignore she-bang lines\n+            if stripped_line.startswith('#!'):\n+                continue\n+            # Check for first regular import or __future__ imports\n+            elif (not stripped_line.startswith('#') and\n+                    (stripped_line.startswith('import') or\n+                     ' import ' in stripped_line)):\n+                saw_first_import = True\n+            # Insert patch after first blank line after imports\n+            elif saw_first_import and not inserted_patch and not stripped_line:\n+                setuppy.write(DISTUTILS_PATCH.format(temp_dir))\n+                inserted_patch = True\n+            setuppy.write(line)\n+    # Save PYTHONPATH for later\n+    python_path = os.getenv('PYTHONPATH', '')\n+    if python_path:\n+        os.environ['PYTHONPATH'] = src_dir + ':' + python_path\n+    else:\n+        os.environ['PYTHONPATH'] = src_dir\n     cwd = getcwd()\n     chdir(src_dir)\n-    with open(join(src_dir, 'setup.py')) as f:\n-        exec(compile(f.read(), 'setup.py', 'exec'), d)\n-    chdir(cwd)\n+    args = [sys.executable, 'setup.py', 'install']\n+    try:\n+        subprocess.check_call(args)",
        "path": "conda_build/pypi.py",
        "position": null,
        "original_position": 398,
        "commit_id": "e9c58b2176b610bf35a461bd39119e7308986535",
        "original_commit_id": "695dfc11f7a84d4c6f497bfa5802157a9e6d678e",
        "user": {
            "login": "dan-blanchard",
            "id": 976345,
            "node_id": "MDQ6VXNlcjk3NjM0NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/976345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dan-blanchard",
            "html_url": "https://github.com/dan-blanchard",
            "followers_url": "https://api.github.com/users/dan-blanchard/followers",
            "following_url": "https://api.github.com/users/dan-blanchard/following{/other_user}",
            "gists_url": "https://api.github.com/users/dan-blanchard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dan-blanchard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dan-blanchard/subscriptions",
            "organizations_url": "https://api.github.com/users/dan-blanchard/orgs",
            "repos_url": "https://api.github.com/users/dan-blanchard/repos",
            "events_url": "https://api.github.com/users/dan-blanchard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dan-blanchard/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good catch. I've fixed that, but it still doesn't fix cobra.\n",
        "created_at": "2014-03-05T00:13:39Z",
        "updated_at": "2014-03-05T21:07:30Z",
        "html_url": "https://github.com/conda/conda-build/pull/59#discussion_r10282300",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/59",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/10282300"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/59#discussion_r10282300"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/59"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9997617",
        "pull_request_review_id": null,
        "id": 9997617,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTc2MTc=",
        "diff_hunk": "@@ -0,0 +1,577 @@\n+\"\"\"\n+Tools for converting CPAN packages to conda recipes.\n+\"\"\"\n+\n+from __future__ import (absolute_import, division, print_function,\n+                        unicode_literals)\n+\n+import collections\n+import functools\n+import json\n+import sys\n+from io import open\n+from os import makedirs\n+from os.path import basename, dirname, join, exists\n+\n+from conda.fetch import download, TmpDownload\n+from conda.utils import human_bytes, hashsum_file, memoized\n+from conda.install import rm_rf\n+from conda_build.utils import tar_xf, unzip\n+from conda_build.source import SRC_CACHE\n+from conda.compat import input, configparser, StringIO\n+\n+\n+# This monstrosity is the set of everything in the Perl core as of 5.18.2\n+# I also added \"perl\" to the list for simplicity of filtering later",
        "path": "conda_build/cpan.py",
        "position": null,
        "original_position": 25,
        "commit_id": "1713037b76b7397c63432b4df2e734f6647c017a",
        "original_commit_id": "634dcc551520e52106684db7e658588e25b27da3",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This can't be downloaded from somewhere?\n",
        "created_at": "2014-02-24T16:26:53Z",
        "updated_at": "2014-03-14T02:44:35Z",
        "html_url": "https://github.com/conda/conda-build/pull/53#discussion_r9997617",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9997617"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/53#discussion_r9997617"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9997652",
        "pull_request_review_id": null,
        "id": 9997652,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTc2NTI=",
        "diff_hunk": "@@ -0,0 +1,577 @@\n+\"\"\"\n+Tools for converting CPAN packages to conda recipes.\n+\"\"\"\n+\n+from __future__ import (absolute_import, division, print_function,\n+                        unicode_literals)\n+\n+import collections\n+import functools\n+import json\n+import sys\n+from io import open\n+from os import makedirs\n+from os.path import basename, dirname, join, exists\n+\n+from conda.fetch import download, TmpDownload\n+from conda.utils import human_bytes, hashsum_file, memoized\n+from conda.install import rm_rf\n+from conda_build.utils import tar_xf, unzip\n+from conda_build.source import SRC_CACHE\n+from conda.compat import input, configparser, StringIO\n+\n+\n+# This monstrosity is the set of everything in the Perl core as of 5.18.2\n+# I also added \"perl\" to the list for simplicity of filtering later\n+PERL_CORE = {'AnyDBM_File', 'App::Cpan', 'App::Prove', 'App::Prove::State',\n+             'App::Prove::State::Result', 'App::Prove::State::Result::Test',\n+             'Archive::Extract', 'Archive::Tar', 'Archive::Tar::Constant',\n+             'Archive::Tar::File', 'Attribute::Handlers', 'AutoLoader',\n+             'AutoSplit', 'B', 'B::Concise', 'B::Debug', 'B::Deparse',\n+             'B::Lint', 'B::Lint::Debug', 'B::Showlex', 'B::Terse', 'B::Xref',\n+             'Benchmark', 'CGI', 'CGI::Apache', 'CGI::Carp', 'CGI::Cookie',\n+             'CGI::Fast', 'CGI::Pretty', 'CGI::Push', 'CGI::Switch',\n+             'CGI::Util', 'CPAN', 'CPAN::Author', 'CPAN::Bundle',\n+             'CPAN::CacheMgr', 'CPAN::Complete', 'CPAN::Debug',\n+             'CPAN::DeferredCode', 'CPAN::Distribution', 'CPAN::Distroprefs',\n+             'CPAN::Distrostatus', 'CPAN::Exception::RecursiveDependency',\n+             'CPAN::Exception::blocked_urllist',\n+             'CPAN::Exception::yaml_not_installed',\n+             'CPAN::Exception::yaml_process_error', 'CPAN::FTP',\n+             'CPAN::FTP::netrc', 'CPAN::FirstTime', 'CPAN::HTTP::Client',\n+             'CPAN::HTTP::Credentials', 'CPAN::HandleConfig', 'CPAN::Index',\n+             'CPAN::InfoObj', 'CPAN::Kwalify', 'CPAN::LWP::UserAgent',\n+             'CPAN::Meta', 'CPAN::Meta::Converter', 'CPAN::Meta::Feature',\n+             'CPAN::Meta::History', 'CPAN::Meta::Prereqs',\n+             'CPAN::Meta::Requirements', 'CPAN::Meta::Spec',\n+             'CPAN::Meta::Validator', 'CPAN::Meta::YAML', 'CPAN::Mirrors',\n+             'CPAN::Module', 'CPAN::Nox', 'CPAN::Prompt', 'CPAN::Queue',\n+             'CPAN::Shell', 'CPAN::Tarzip', 'CPAN::URL', 'CPAN::Version',\n+             'CPANPLUS', 'CPANPLUS::Backend', 'CPANPLUS::Backend::RV',\n+             'CPANPLUS::Config', 'CPANPLUS::Config::HomeEnv',\n+             'CPANPLUS::Configure', 'CPANPLUS::Configure::Setup',\n+             'CPANPLUS::Dist', 'CPANPLUS::Dist::Autobundle',\n+             'CPANPLUS::Dist::Base', 'CPANPLUS::Dist::Build',\n+             'CPANPLUS::Dist::Build::Constants', 'CPANPLUS::Dist::MM',\n+             'CPANPLUS::Dist::Sample', 'CPANPLUS::Error', 'CPANPLUS::Internals',\n+             'CPANPLUS::Internals::Constants',\n+             'CPANPLUS::Internals::Constants::Report',\n+             'CPANPLUS::Internals::Extract', 'CPANPLUS::Internals::Fetch',\n+             'CPANPLUS::Internals::Report', 'CPANPLUS::Internals::Search',\n+             'CPANPLUS::Internals::Source',\n+             'CPANPLUS::Internals::Source::Memory',\n+             'CPANPLUS::Internals::Source::SQLite',\n+             'CPANPLUS::Internals::Source::SQLite::Tie',\n+             'CPANPLUS::Internals::Utils',\n+             'CPANPLUS::Internals::Utils::Autoflush', 'CPANPLUS::Module',\n+             'CPANPLUS::Module::Author', 'CPANPLUS::Module::Author::Fake',\n+             'CPANPLUS::Module::Checksums', 'CPANPLUS::Module::Fake',\n+             'CPANPLUS::Module::Signature', 'CPANPLUS::Selfupdate',\n+             'CPANPLUS::Shell', 'CPANPLUS::Shell::Classic',\n+             'CPANPLUS::Shell::Default',\n+             'CPANPLUS::Shell::Default::Plugins::CustomSource',\n+             'CPANPLUS::Shell::Default::Plugins::Remote',\n+             'CPANPLUS::Shell::Default::Plugins::Source', 'Carp', 'Carp::Heavy',\n+             'Class::Struct', 'Compress::Raw::Bzip2', 'Compress::Raw::Zlib',\n+             'Compress::Zlib', 'Config', 'Config::Extensions',\n+             'Config::Perl::V', 'Cwd', 'DB', 'DBM_Filter',\n+             'DBM_Filter::compress', 'DBM_Filter::encode', 'DBM_Filter::int32',\n+             'DBM_Filter::null', 'DBM_Filter::utf8', 'DB_File', 'Data::Dumper',\n+             'Devel::InnerPackage', 'Devel::PPPort', 'Devel::Peek',\n+             'Devel::SelfStubber', 'Digest', 'Digest::MD5', 'Digest::SHA',\n+             'Digest::base', 'Digest::file', 'DirHandle', 'Dumpvalue',\n+             'DynaLoader', 'Encode', 'Encode::Alias', 'Encode::Byte',\n+             'Encode::CJKConstants', 'Encode::CN', 'Encode::CN::HZ',\n+             'Encode::Config', 'Encode::EBCDIC', 'Encode::Encoder',\n+             'Encode::Encoding', 'Encode::GSM0338', 'Encode::Guess',\n+             'Encode::JP', 'Encode::JP::H2Z', 'Encode::JP::JIS7', 'Encode::KR',\n+             'Encode::KR::2022_KR', 'Encode::MIME::Header',\n+             'Encode::MIME::Header::ISO_2022_JP', 'Encode::MIME::Name',\n+             'Encode::Symbol', 'Encode::TW', 'Encode::Unicode',\n+             'Encode::Unicode::UTF7', 'English', 'Env', 'Errno', 'Exporter',\n+             'Exporter::Heavy', 'ExtUtils::CBuilder',\n+             'ExtUtils::CBuilder::Base', 'ExtUtils::CBuilder::Platform::Unix',\n+             'ExtUtils::CBuilder::Platform::VMS',\n+             'ExtUtils::CBuilder::Platform::Windows',\n+             'ExtUtils::CBuilder::Platform::Windows::BCC',\n+             'ExtUtils::CBuilder::Platform::Windows::GCC',\n+             'ExtUtils::CBuilder::Platform::Windows::MSVC',\n+             'ExtUtils::CBuilder::Platform::aix',\n+             'ExtUtils::CBuilder::Platform::cygwin',\n+             'ExtUtils::CBuilder::Platform::darwin',\n+             'ExtUtils::CBuilder::Platform::dec_osf',\n+             'ExtUtils::CBuilder::Platform::os2', 'ExtUtils::Command',\n+             'ExtUtils::Command::MM', 'ExtUtils::Constant',\n+             'ExtUtils::Constant::Base', 'ExtUtils::Constant::ProxySubs',\n+             'ExtUtils::Constant::Utils', 'ExtUtils::Constant::XS',\n+             'ExtUtils::Embed', 'ExtUtils::Install', 'ExtUtils::Installed',\n+             'ExtUtils::Liblist', 'ExtUtils::Liblist::Kid', 'ExtUtils::MM',\n+             'ExtUtils::MM_AIX', 'ExtUtils::MM_Any', 'ExtUtils::MM_BeOS',\n+             'ExtUtils::MM_Cygwin', 'ExtUtils::MM_DOS', 'ExtUtils::MM_Darwin',\n+             'ExtUtils::MM_MacOS', 'ExtUtils::MM_NW5', 'ExtUtils::MM_OS2',\n+             'ExtUtils::MM_QNX', 'ExtUtils::MM_UWIN', 'ExtUtils::MM_Unix',\n+             'ExtUtils::MM_VMS', 'ExtUtils::MM_VOS', 'ExtUtils::MM_Win32',\n+             'ExtUtils::MM_Win95', 'ExtUtils::MY', 'ExtUtils::MakeMaker',\n+             'ExtUtils::MakeMaker::Config', 'ExtUtils::Manifest',\n+             'ExtUtils::Miniperl', 'ExtUtils::Mkbootstrap',\n+             'ExtUtils::Mksymlists', 'ExtUtils::Packlist', 'ExtUtils::ParseXS',\n+             'ExtUtils::ParseXS::Constants', 'ExtUtils::ParseXS::CountLines',\n+             'ExtUtils::ParseXS::Utilities', 'ExtUtils::Typemaps',\n+             'ExtUtils::Typemaps::Cmd', 'ExtUtils::Typemaps::InputMap',\n+             'ExtUtils::Typemaps::OutputMap', 'ExtUtils::Typemaps::Type',\n+             'ExtUtils::XSSymSet', 'ExtUtils::testlib', 'Fatal', 'Fcntl',\n+             'File::Basename', 'File::CheckTree', 'File::Compare', 'File::Copy',\n+             'File::DosGlob', 'File::Fetch', 'File::Find', 'File::Glob',\n+             'File::GlobMapper', 'File::Path', 'File::Spec',\n+             'File::Spec::Cygwin', 'File::Spec::Epoc', 'File::Spec::Functions',\n+             'File::Spec::Mac', 'File::Spec::OS2', 'File::Spec::Unix',\n+             'File::Spec::VMS', 'File::Spec::Win32', 'File::Temp', 'File::stat',\n+             'FileCache', 'FileHandle', 'Filter::Simple', 'Filter::Util::Call',\n+             'FindBin', 'GDBM_File', 'Getopt::Long', 'Getopt::Std',\n+             'HTTP::Tiny', 'Hash::Util', 'Hash::Util::FieldHash',\n+             'I18N::Collate', 'I18N::LangTags', 'I18N::LangTags::Detect',\n+             'I18N::LangTags::List', 'I18N::Langinfo', 'IO',\n+             'IO::Compress::Adapter::Bzip2', 'IO::Compress::Adapter::Deflate',\n+             'IO::Compress::Adapter::Identity', 'IO::Compress::Base',\n+             'IO::Compress::Base::Common', 'IO::Compress::Bzip2',\n+             'IO::Compress::Deflate', 'IO::Compress::Gzip',\n+             'IO::Compress::Gzip::Constants', 'IO::Compress::RawDeflate',\n+             'IO::Compress::Zip', 'IO::Compress::Zip::Constants',\n+             'IO::Compress::Zlib::Constants', 'IO::Compress::Zlib::Extra',\n+             'IO::Dir', 'IO::File', 'IO::Handle', 'IO::Pipe', 'IO::Poll',\n+             'IO::Seekable', 'IO::Select', 'IO::Socket', 'IO::Socket::INET',\n+             'IO::Socket::UNIX', 'IO::Uncompress::Adapter::Bunzip2',\n+             'IO::Uncompress::Adapter::Identity',\n+             'IO::Uncompress::Adapter::Inflate', 'IO::Uncompress::AnyInflate',\n+             'IO::Uncompress::AnyUncompress', 'IO::Uncompress::Base',\n+             'IO::Uncompress::Bunzip2', 'IO::Uncompress::Gunzip',\n+             'IO::Uncompress::Inflate', 'IO::Uncompress::RawInflate',\n+             'IO::Uncompress::Unzip', 'IO::Zlib', 'IPC::Cmd', 'IPC::Msg',\n+             'IPC::Open2', 'IPC::Open3', 'IPC::Semaphore', 'IPC::SharedMem',\n+             'IPC::SysV', 'JSON::PP', 'JSON::PP::Boolean', 'List::Util',\n+             'List::Util::XS', 'Locale::Codes', 'Locale::Codes::Constants',\n+             'Locale::Codes::Country', 'Locale::Codes::Country_Codes',\n+             'Locale::Codes::Country_Retired', 'Locale::Codes::Currency',\n+             'Locale::Codes::Currency_Codes', 'Locale::Codes::Currency_Retired',\n+             'Locale::Codes::LangExt', 'Locale::Codes::LangExt_Codes',\n+             'Locale::Codes::LangExt_Retired', 'Locale::Codes::LangFam',\n+             'Locale::Codes::LangFam_Codes', 'Locale::Codes::LangFam_Retired',\n+             'Locale::Codes::LangVar', 'Locale::Codes::LangVar_Codes',\n+             'Locale::Codes::LangVar_Retired', 'Locale::Codes::Language',\n+             'Locale::Codes::Language_Codes', 'Locale::Codes::Language_Retired',\n+             'Locale::Codes::Script', 'Locale::Codes::Script_Codes',\n+             'Locale::Codes::Script_Retired', 'Locale::Country',\n+             'Locale::Currency', 'Locale::Language', 'Locale::Maketext',\n+             'Locale::Maketext::Guts', 'Locale::Maketext::GutsLoader',\n+             'Locale::Maketext::Simple', 'Locale::Script', 'Log::Message',\n+             'Log::Message::Config', 'Log::Message::Handlers',\n+             'Log::Message::Item', 'Log::Message::Simple', 'MIME::Base64',\n+             'MIME::QuotedPrint', 'Math::BigFloat', 'Math::BigFloat::Trace',\n+             'Math::BigInt', 'Math::BigInt::Calc', 'Math::BigInt::CalcEmu',\n+             'Math::BigInt::FastCalc', 'Math::BigInt::Trace', 'Math::BigRat',\n+             'Math::Complex', 'Math::Trig', 'Memoize', 'Memoize::AnyDBM_File',\n+             'Memoize::Expire', 'Memoize::ExpireFile', 'Memoize::ExpireTest',\n+             'Memoize::NDBM_File', 'Memoize::SDBM_File', 'Memoize::Storable',\n+             'Module::Build', 'Module::Build::Base', 'Module::Build::Compat',\n+             'Module::Build::Config', 'Module::Build::ConfigData',\n+             'Module::Build::Cookbook', 'Module::Build::Dumper',\n+             'Module::Build::ModuleInfo', 'Module::Build::Notes',\n+             'Module::Build::PPMMaker', 'Module::Build::Platform::Amiga',\n+             'Module::Build::Platform::Default',\n+             'Module::Build::Platform::EBCDIC',\n+             'Module::Build::Platform::MPEiX', 'Module::Build::Platform::MacOS',\n+             'Module::Build::Platform::RiscOS', 'Module::Build::Platform::Unix',\n+             'Module::Build::Platform::VMS', 'Module::Build::Platform::VOS',\n+             'Module::Build::Platform::Windows', 'Module::Build::Platform::aix',\n+             'Module::Build::Platform::cygwin',\n+             'Module::Build::Platform::darwin', 'Module::Build::Platform::os2',\n+             'Module::Build::PodParser', 'Module::Build::Version',\n+             'Module::Build::YAML', 'Module::CoreList',\n+             'Module::CoreList::TieHashDelta', 'Module::CoreList::Utils',\n+             'Module::Load', 'Module::Load::Conditional', 'Module::Loaded',\n+             'Module::Metadata', 'Module::Pluggable',\n+             'Module::Pluggable::Object', 'Moped::Msg', 'NDBM_File', 'NEXT',\n+             'Net::Cmd', 'Net::Config', 'Net::Domain', 'Net::FTP',\n+             'Net::FTP::A', 'Net::FTP::E', 'Net::FTP::I', 'Net::FTP::L',\n+             'Net::FTP::dataconn', 'Net::NNTP', 'Net::Netrc', 'Net::POP3',\n+             'Net::Ping', 'Net::SMTP', 'Net::Time', 'Net::hostent',\n+             'Net::netent', 'Net::protoent', 'Net::servent', 'O', 'ODBM_File',\n+             'Object::Accessor', 'Opcode', 'POSIX', 'Package::Constants',\n+             'Params::Check', 'Parse::CPAN::Meta', 'Perl::OSType', 'PerlIO',\n+             'PerlIO::encoding', 'PerlIO::mmap', 'PerlIO::scalar',\n+             'PerlIO::via', 'PerlIO::via::QuotedPrint', 'Pod::Checker',\n+             'Pod::Escapes', 'Pod::Find', 'Pod::Functions',\n+             'Pod::Functions::Functions', 'Pod::Html', 'Pod::InputObjects',\n+             'Pod::LaTeX', 'Pod::Man', 'Pod::ParseLink', 'Pod::ParseUtils',\n+             'Pod::Parser', 'Pod::Perldoc', 'Pod::Perldoc::BaseTo',\n+             'Pod::Perldoc::GetOptsOO', 'Pod::Perldoc::ToANSI',\n+             'Pod::Perldoc::ToChecker', 'Pod::Perldoc::ToMan',\n+             'Pod::Perldoc::ToNroff', 'Pod::Perldoc::ToPod',\n+             'Pod::Perldoc::ToRtf', 'Pod::Perldoc::ToTerm',\n+             'Pod::Perldoc::ToText', 'Pod::Perldoc::ToTk',\n+             'Pod::Perldoc::ToXml', 'Pod::PlainText', 'Pod::Select',\n+             'Pod::Simple', 'Pod::Simple::BlackBox', 'Pod::Simple::Checker',\n+             'Pod::Simple::Debug', 'Pod::Simple::DumpAsText',\n+             'Pod::Simple::DumpAsXML', 'Pod::Simple::HTML',\n+             'Pod::Simple::HTMLBatch', 'Pod::Simple::HTMLLegacy',\n+             'Pod::Simple::LinkSection', 'Pod::Simple::Methody',\n+             'Pod::Simple::Progress', 'Pod::Simple::PullParser',\n+             'Pod::Simple::PullParserEndToken',\n+             'Pod::Simple::PullParserStartToken',\n+             'Pod::Simple::PullParserTextToken', 'Pod::Simple::PullParserToken',\n+             'Pod::Simple::RTF', 'Pod::Simple::Search',\n+             'Pod::Simple::SimpleTree', 'Pod::Simple::Text',\n+             'Pod::Simple::TextContent', 'Pod::Simple::TiedOutFH',\n+             'Pod::Simple::Transcode', 'Pod::Simple::TranscodeDumb',\n+             'Pod::Simple::TranscodeSmart', 'Pod::Simple::XHTML',\n+             'Pod::Simple::XMLOutStream', 'Pod::Text', 'Pod::Text::Color',\n+             'Pod::Text::Overstrike', 'Pod::Text::Termcap', 'Pod::Usage',\n+             'SDBM_File', 'Safe', 'Scalar::Util', 'Search::Dict', 'SelectSaver',\n+             'SelfLoader', 'Socket', 'Storable', 'Symbol', 'Sys::Hostname',\n+             'Sys::Syslog', 'Sys::Syslog::Win32', 'TAP::Base',\n+             'TAP::Formatter::Base', 'TAP::Formatter::Color',\n+             'TAP::Formatter::Console',\n+             'TAP::Formatter::Console::ParallelSession',\n+             'TAP::Formatter::Console::Session', 'TAP::Formatter::File',\n+             'TAP::Formatter::File::Session', 'TAP::Formatter::Session',\n+             'TAP::Harness', 'TAP::Object', 'TAP::Parser',\n+             'TAP::Parser::Aggregator', 'TAP::Parser::Grammar',\n+             'TAP::Parser::Iterator', 'TAP::Parser::Iterator::Array',\n+             'TAP::Parser::Iterator::Process', 'TAP::Parser::Iterator::Stream',\n+             'TAP::Parser::IteratorFactory', 'TAP::Parser::Multiplexer',\n+             'TAP::Parser::Result', 'TAP::Parser::Result::Bailout',\n+             'TAP::Parser::Result::Comment', 'TAP::Parser::Result::Plan',\n+             'TAP::Parser::Result::Pragma', 'TAP::Parser::Result::Test',\n+             'TAP::Parser::Result::Unknown', 'TAP::Parser::Result::Version',\n+             'TAP::Parser::Result::YAML', 'TAP::Parser::ResultFactory',\n+             'TAP::Parser::Scheduler', 'TAP::Parser::Scheduler::Job',\n+             'TAP::Parser::Scheduler::Spinner', 'TAP::Parser::Source',\n+             'TAP::Parser::SourceHandler',\n+             'TAP::Parser::SourceHandler::Executable',\n+             'TAP::Parser::SourceHandler::File',\n+             'TAP::Parser::SourceHandler::Handle',\n+             'TAP::Parser::SourceHandler::Perl',\n+             'TAP::Parser::SourceHandler::RawTAP', 'TAP::Parser::Utils',\n+             'TAP::Parser::YAMLish::Reader', 'TAP::Parser::YAMLish::Writer',\n+             'Term::ANSIColor', 'Term::Cap', 'Term::Complete', 'Term::ReadLine',\n+             'Term::UI', 'Term::UI::History', 'Test', 'Test::Builder',\n+             'Test::Builder::Module', 'Test::Builder::Tester',\n+             'Test::Builder::Tester::Color', 'Test::Harness', 'Test::More',\n+             'Test::Simple', 'Text::Abbrev', 'Text::Balanced',\n+             'Text::ParseWords', 'Text::Soundex', 'Text::Tabs', 'Text::Wrap',\n+             'Thread', 'Thread::Queue', 'Thread::Semaphore', 'Tie::Array',\n+             'Tie::File', 'Tie::Handle', 'Tie::Hash', 'Tie::Hash::NamedCapture',\n+             'Tie::Memoize', 'Tie::RefHash', 'Tie::Scalar', 'Tie::StdHandle',\n+             'Tie::SubstrHash', 'Time::HiRes', 'Time::Local', 'Time::Piece',\n+             'Time::Seconds', 'Time::gmtime', 'Time::localtime', 'Time::tm',\n+             'UNIVERSAL', 'Unicode', 'Unicode::Collate',\n+             'Unicode::Collate::CJK::Big5', 'Unicode::Collate::CJK::GB2312',\n+             'Unicode::Collate::CJK::JISX0208', 'Unicode::Collate::CJK::Korean',\n+             'Unicode::Collate::CJK::Pinyin', 'Unicode::Collate::CJK::Stroke',\n+             'Unicode::Collate::CJK::Zhuyin', 'Unicode::Collate::Locale',\n+             'Unicode::Normalize', 'Unicode::UCD', 'User::grent', 'User::pwent',\n+             'VMS::DCLsym', 'VMS::Stdio', 'Win32', 'Win32API::File',\n+             'Win32API::File::ExtUtils::Myconst2perl', 'Win32CORE',\n+             'XS::APItest', 'XS::Typemap', 'XSLoader', '_charnames', 'arybase',\n+             'attributes', 'autodie', 'autodie::exception',\n+             'autodie::exception::system', 'autodie::hints', 'autouse', 'base',\n+             'bigint', 'bignum', 'bigrat', 'blib', 'bytes', 'charnames',\n+             'constant', 'deprecate', 'diagnostics', 'encoding',\n+             'encoding::warnings', 'feature', 'fields', 'filetest', 'if',\n+             'inc::latest', 'integer', 'less', 'lib', 'locale', 'mro', 'open',\n+             'ops', 'overload', 'overload::numbers', 'overloading', 'parent',\n+             'perl', 'perlfaq', 're', 'sigtrap', 'sort', 'strict', 'subs',\n+             'threads', 'threads::shared', 'unicore::Name', 'utf8', 'vars',\n+             'version', 'vmsish', 'warnings', 'warnings::register'}\n+\n+CPAN_META = \"\"\"\\\n+package:\n+  name: {packagename}\n+  version: !!str {version}\n+\n+source:\n+  fn: {filename}\n+  url: {cpanurl}\n+  {usemd5}md5: {md5}\n+#  patches:\n+   # List any patch files here\n+   # - fix.patch\n+\n+{build_comment}build:\n+  # If this is a new build for the same version, increment the build\n+  # number. If you do not include this key, it defaults to 0.\n+  # number: 1\n+\n+requirements:\n+  build:\n+    - perl{build_depends}\n+\n+  run:\n+    - perl{run_depends}\n+\n+# test:\n+  # By default CPAN tests will be run while \"building\" (which just uses cpanm",
        "path": "conda_build/cpan.py",
        "position": null,
        "original_position": 313,
        "commit_id": "1713037b76b7397c63432b4df2e734f6647c017a",
        "original_commit_id": "634dcc551520e52106684db7e658588e25b27da3",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is cpanm a typo?\n",
        "created_at": "2014-02-24T16:27:30Z",
        "updated_at": "2014-03-14T02:44:35Z",
        "html_url": "https://github.com/conda/conda-build/pull/53#discussion_r9997652",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9997652"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/53#discussion_r9997652"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9997680",
        "pull_request_review_id": null,
        "id": 9997680,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTc2ODA=",
        "diff_hunk": "@@ -0,0 +1,577 @@\n+\"\"\"\n+Tools for converting CPAN packages to conda recipes.\n+\"\"\"\n+\n+from __future__ import (absolute_import, division, print_function,\n+                        unicode_literals)\n+\n+import collections\n+import functools\n+import json\n+import sys\n+from io import open\n+from os import makedirs\n+from os.path import basename, dirname, join, exists\n+\n+from conda.fetch import download, TmpDownload\n+from conda.utils import human_bytes, hashsum_file, memoized\n+from conda.install import rm_rf\n+from conda_build.utils import tar_xf, unzip\n+from conda_build.source import SRC_CACHE\n+from conda.compat import input, configparser, StringIO\n+\n+\n+# This monstrosity is the set of everything in the Perl core as of 5.18.2\n+# I also added \"perl\" to the list for simplicity of filtering later\n+PERL_CORE = {'AnyDBM_File', 'App::Cpan', 'App::Prove', 'App::Prove::State',\n+             'App::Prove::State::Result', 'App::Prove::State::Result::Test',\n+             'Archive::Extract', 'Archive::Tar', 'Archive::Tar::Constant',\n+             'Archive::Tar::File', 'Attribute::Handlers', 'AutoLoader',\n+             'AutoSplit', 'B', 'B::Concise', 'B::Debug', 'B::Deparse',\n+             'B::Lint', 'B::Lint::Debug', 'B::Showlex', 'B::Terse', 'B::Xref',\n+             'Benchmark', 'CGI', 'CGI::Apache', 'CGI::Carp', 'CGI::Cookie',\n+             'CGI::Fast', 'CGI::Pretty', 'CGI::Push', 'CGI::Switch',\n+             'CGI::Util', 'CPAN', 'CPAN::Author', 'CPAN::Bundle',\n+             'CPAN::CacheMgr', 'CPAN::Complete', 'CPAN::Debug',\n+             'CPAN::DeferredCode', 'CPAN::Distribution', 'CPAN::Distroprefs',\n+             'CPAN::Distrostatus', 'CPAN::Exception::RecursiveDependency',\n+             'CPAN::Exception::blocked_urllist',\n+             'CPAN::Exception::yaml_not_installed',\n+             'CPAN::Exception::yaml_process_error', 'CPAN::FTP',\n+             'CPAN::FTP::netrc', 'CPAN::FirstTime', 'CPAN::HTTP::Client',\n+             'CPAN::HTTP::Credentials', 'CPAN::HandleConfig', 'CPAN::Index',\n+             'CPAN::InfoObj', 'CPAN::Kwalify', 'CPAN::LWP::UserAgent',\n+             'CPAN::Meta', 'CPAN::Meta::Converter', 'CPAN::Meta::Feature',\n+             'CPAN::Meta::History', 'CPAN::Meta::Prereqs',\n+             'CPAN::Meta::Requirements', 'CPAN::Meta::Spec',\n+             'CPAN::Meta::Validator', 'CPAN::Meta::YAML', 'CPAN::Mirrors',\n+             'CPAN::Module', 'CPAN::Nox', 'CPAN::Prompt', 'CPAN::Queue',\n+             'CPAN::Shell', 'CPAN::Tarzip', 'CPAN::URL', 'CPAN::Version',\n+             'CPANPLUS', 'CPANPLUS::Backend', 'CPANPLUS::Backend::RV',\n+             'CPANPLUS::Config', 'CPANPLUS::Config::HomeEnv',\n+             'CPANPLUS::Configure', 'CPANPLUS::Configure::Setup',\n+             'CPANPLUS::Dist', 'CPANPLUS::Dist::Autobundle',\n+             'CPANPLUS::Dist::Base', 'CPANPLUS::Dist::Build',\n+             'CPANPLUS::Dist::Build::Constants', 'CPANPLUS::Dist::MM',\n+             'CPANPLUS::Dist::Sample', 'CPANPLUS::Error', 'CPANPLUS::Internals',\n+             'CPANPLUS::Internals::Constants',\n+             'CPANPLUS::Internals::Constants::Report',\n+             'CPANPLUS::Internals::Extract', 'CPANPLUS::Internals::Fetch',\n+             'CPANPLUS::Internals::Report', 'CPANPLUS::Internals::Search',\n+             'CPANPLUS::Internals::Source',\n+             'CPANPLUS::Internals::Source::Memory',\n+             'CPANPLUS::Internals::Source::SQLite',\n+             'CPANPLUS::Internals::Source::SQLite::Tie',\n+             'CPANPLUS::Internals::Utils',\n+             'CPANPLUS::Internals::Utils::Autoflush', 'CPANPLUS::Module',\n+             'CPANPLUS::Module::Author', 'CPANPLUS::Module::Author::Fake',\n+             'CPANPLUS::Module::Checksums', 'CPANPLUS::Module::Fake',\n+             'CPANPLUS::Module::Signature', 'CPANPLUS::Selfupdate',\n+             'CPANPLUS::Shell', 'CPANPLUS::Shell::Classic',\n+             'CPANPLUS::Shell::Default',\n+             'CPANPLUS::Shell::Default::Plugins::CustomSource',\n+             'CPANPLUS::Shell::Default::Plugins::Remote',\n+             'CPANPLUS::Shell::Default::Plugins::Source', 'Carp', 'Carp::Heavy',\n+             'Class::Struct', 'Compress::Raw::Bzip2', 'Compress::Raw::Zlib',\n+             'Compress::Zlib', 'Config', 'Config::Extensions',\n+             'Config::Perl::V', 'Cwd', 'DB', 'DBM_Filter',\n+             'DBM_Filter::compress', 'DBM_Filter::encode', 'DBM_Filter::int32',\n+             'DBM_Filter::null', 'DBM_Filter::utf8', 'DB_File', 'Data::Dumper',\n+             'Devel::InnerPackage', 'Devel::PPPort', 'Devel::Peek',\n+             'Devel::SelfStubber', 'Digest', 'Digest::MD5', 'Digest::SHA',\n+             'Digest::base', 'Digest::file', 'DirHandle', 'Dumpvalue',\n+             'DynaLoader', 'Encode', 'Encode::Alias', 'Encode::Byte',\n+             'Encode::CJKConstants', 'Encode::CN', 'Encode::CN::HZ',\n+             'Encode::Config', 'Encode::EBCDIC', 'Encode::Encoder',\n+             'Encode::Encoding', 'Encode::GSM0338', 'Encode::Guess',\n+             'Encode::JP', 'Encode::JP::H2Z', 'Encode::JP::JIS7', 'Encode::KR',\n+             'Encode::KR::2022_KR', 'Encode::MIME::Header',\n+             'Encode::MIME::Header::ISO_2022_JP', 'Encode::MIME::Name',\n+             'Encode::Symbol', 'Encode::TW', 'Encode::Unicode',\n+             'Encode::Unicode::UTF7', 'English', 'Env', 'Errno', 'Exporter',\n+             'Exporter::Heavy', 'ExtUtils::CBuilder',\n+             'ExtUtils::CBuilder::Base', 'ExtUtils::CBuilder::Platform::Unix',\n+             'ExtUtils::CBuilder::Platform::VMS',\n+             'ExtUtils::CBuilder::Platform::Windows',\n+             'ExtUtils::CBuilder::Platform::Windows::BCC',\n+             'ExtUtils::CBuilder::Platform::Windows::GCC',\n+             'ExtUtils::CBuilder::Platform::Windows::MSVC',\n+             'ExtUtils::CBuilder::Platform::aix',\n+             'ExtUtils::CBuilder::Platform::cygwin',\n+             'ExtUtils::CBuilder::Platform::darwin',\n+             'ExtUtils::CBuilder::Platform::dec_osf',\n+             'ExtUtils::CBuilder::Platform::os2', 'ExtUtils::Command',\n+             'ExtUtils::Command::MM', 'ExtUtils::Constant',\n+             'ExtUtils::Constant::Base', 'ExtUtils::Constant::ProxySubs',\n+             'ExtUtils::Constant::Utils', 'ExtUtils::Constant::XS',\n+             'ExtUtils::Embed', 'ExtUtils::Install', 'ExtUtils::Installed',\n+             'ExtUtils::Liblist', 'ExtUtils::Liblist::Kid', 'ExtUtils::MM',\n+             'ExtUtils::MM_AIX', 'ExtUtils::MM_Any', 'ExtUtils::MM_BeOS',\n+             'ExtUtils::MM_Cygwin', 'ExtUtils::MM_DOS', 'ExtUtils::MM_Darwin',\n+             'ExtUtils::MM_MacOS', 'ExtUtils::MM_NW5', 'ExtUtils::MM_OS2',\n+             'ExtUtils::MM_QNX', 'ExtUtils::MM_UWIN', 'ExtUtils::MM_Unix',\n+             'ExtUtils::MM_VMS', 'ExtUtils::MM_VOS', 'ExtUtils::MM_Win32',\n+             'ExtUtils::MM_Win95', 'ExtUtils::MY', 'ExtUtils::MakeMaker',\n+             'ExtUtils::MakeMaker::Config', 'ExtUtils::Manifest',\n+             'ExtUtils::Miniperl', 'ExtUtils::Mkbootstrap',\n+             'ExtUtils::Mksymlists', 'ExtUtils::Packlist', 'ExtUtils::ParseXS',\n+             'ExtUtils::ParseXS::Constants', 'ExtUtils::ParseXS::CountLines',\n+             'ExtUtils::ParseXS::Utilities', 'ExtUtils::Typemaps',\n+             'ExtUtils::Typemaps::Cmd', 'ExtUtils::Typemaps::InputMap',\n+             'ExtUtils::Typemaps::OutputMap', 'ExtUtils::Typemaps::Type',\n+             'ExtUtils::XSSymSet', 'ExtUtils::testlib', 'Fatal', 'Fcntl',\n+             'File::Basename', 'File::CheckTree', 'File::Compare', 'File::Copy',\n+             'File::DosGlob', 'File::Fetch', 'File::Find', 'File::Glob',\n+             'File::GlobMapper', 'File::Path', 'File::Spec',\n+             'File::Spec::Cygwin', 'File::Spec::Epoc', 'File::Spec::Functions',\n+             'File::Spec::Mac', 'File::Spec::OS2', 'File::Spec::Unix',\n+             'File::Spec::VMS', 'File::Spec::Win32', 'File::Temp', 'File::stat',\n+             'FileCache', 'FileHandle', 'Filter::Simple', 'Filter::Util::Call',\n+             'FindBin', 'GDBM_File', 'Getopt::Long', 'Getopt::Std',\n+             'HTTP::Tiny', 'Hash::Util', 'Hash::Util::FieldHash',\n+             'I18N::Collate', 'I18N::LangTags', 'I18N::LangTags::Detect',\n+             'I18N::LangTags::List', 'I18N::Langinfo', 'IO',\n+             'IO::Compress::Adapter::Bzip2', 'IO::Compress::Adapter::Deflate',\n+             'IO::Compress::Adapter::Identity', 'IO::Compress::Base',\n+             'IO::Compress::Base::Common', 'IO::Compress::Bzip2',\n+             'IO::Compress::Deflate', 'IO::Compress::Gzip',\n+             'IO::Compress::Gzip::Constants', 'IO::Compress::RawDeflate',\n+             'IO::Compress::Zip', 'IO::Compress::Zip::Constants',\n+             'IO::Compress::Zlib::Constants', 'IO::Compress::Zlib::Extra',\n+             'IO::Dir', 'IO::File', 'IO::Handle', 'IO::Pipe', 'IO::Poll',\n+             'IO::Seekable', 'IO::Select', 'IO::Socket', 'IO::Socket::INET',\n+             'IO::Socket::UNIX', 'IO::Uncompress::Adapter::Bunzip2',\n+             'IO::Uncompress::Adapter::Identity',\n+             'IO::Uncompress::Adapter::Inflate', 'IO::Uncompress::AnyInflate',\n+             'IO::Uncompress::AnyUncompress', 'IO::Uncompress::Base',\n+             'IO::Uncompress::Bunzip2', 'IO::Uncompress::Gunzip',\n+             'IO::Uncompress::Inflate', 'IO::Uncompress::RawInflate',\n+             'IO::Uncompress::Unzip', 'IO::Zlib', 'IPC::Cmd', 'IPC::Msg',\n+             'IPC::Open2', 'IPC::Open3', 'IPC::Semaphore', 'IPC::SharedMem',\n+             'IPC::SysV', 'JSON::PP', 'JSON::PP::Boolean', 'List::Util',\n+             'List::Util::XS', 'Locale::Codes', 'Locale::Codes::Constants',\n+             'Locale::Codes::Country', 'Locale::Codes::Country_Codes',\n+             'Locale::Codes::Country_Retired', 'Locale::Codes::Currency',\n+             'Locale::Codes::Currency_Codes', 'Locale::Codes::Currency_Retired',\n+             'Locale::Codes::LangExt', 'Locale::Codes::LangExt_Codes',\n+             'Locale::Codes::LangExt_Retired', 'Locale::Codes::LangFam',\n+             'Locale::Codes::LangFam_Codes', 'Locale::Codes::LangFam_Retired',\n+             'Locale::Codes::LangVar', 'Locale::Codes::LangVar_Codes',\n+             'Locale::Codes::LangVar_Retired', 'Locale::Codes::Language',\n+             'Locale::Codes::Language_Codes', 'Locale::Codes::Language_Retired',\n+             'Locale::Codes::Script', 'Locale::Codes::Script_Codes',\n+             'Locale::Codes::Script_Retired', 'Locale::Country',\n+             'Locale::Currency', 'Locale::Language', 'Locale::Maketext',\n+             'Locale::Maketext::Guts', 'Locale::Maketext::GutsLoader',\n+             'Locale::Maketext::Simple', 'Locale::Script', 'Log::Message',\n+             'Log::Message::Config', 'Log::Message::Handlers',\n+             'Log::Message::Item', 'Log::Message::Simple', 'MIME::Base64',\n+             'MIME::QuotedPrint', 'Math::BigFloat', 'Math::BigFloat::Trace',\n+             'Math::BigInt', 'Math::BigInt::Calc', 'Math::BigInt::CalcEmu',\n+             'Math::BigInt::FastCalc', 'Math::BigInt::Trace', 'Math::BigRat',\n+             'Math::Complex', 'Math::Trig', 'Memoize', 'Memoize::AnyDBM_File',\n+             'Memoize::Expire', 'Memoize::ExpireFile', 'Memoize::ExpireTest',\n+             'Memoize::NDBM_File', 'Memoize::SDBM_File', 'Memoize::Storable',\n+             'Module::Build', 'Module::Build::Base', 'Module::Build::Compat',\n+             'Module::Build::Config', 'Module::Build::ConfigData',\n+             'Module::Build::Cookbook', 'Module::Build::Dumper',\n+             'Module::Build::ModuleInfo', 'Module::Build::Notes',\n+             'Module::Build::PPMMaker', 'Module::Build::Platform::Amiga',\n+             'Module::Build::Platform::Default',\n+             'Module::Build::Platform::EBCDIC',\n+             'Module::Build::Platform::MPEiX', 'Module::Build::Platform::MacOS',\n+             'Module::Build::Platform::RiscOS', 'Module::Build::Platform::Unix',\n+             'Module::Build::Platform::VMS', 'Module::Build::Platform::VOS',\n+             'Module::Build::Platform::Windows', 'Module::Build::Platform::aix',\n+             'Module::Build::Platform::cygwin',\n+             'Module::Build::Platform::darwin', 'Module::Build::Platform::os2',\n+             'Module::Build::PodParser', 'Module::Build::Version',\n+             'Module::Build::YAML', 'Module::CoreList',\n+             'Module::CoreList::TieHashDelta', 'Module::CoreList::Utils',\n+             'Module::Load', 'Module::Load::Conditional', 'Module::Loaded',\n+             'Module::Metadata', 'Module::Pluggable',\n+             'Module::Pluggable::Object', 'Moped::Msg', 'NDBM_File', 'NEXT',\n+             'Net::Cmd', 'Net::Config', 'Net::Domain', 'Net::FTP',\n+             'Net::FTP::A', 'Net::FTP::E', 'Net::FTP::I', 'Net::FTP::L',\n+             'Net::FTP::dataconn', 'Net::NNTP', 'Net::Netrc', 'Net::POP3',\n+             'Net::Ping', 'Net::SMTP', 'Net::Time', 'Net::hostent',\n+             'Net::netent', 'Net::protoent', 'Net::servent', 'O', 'ODBM_File',\n+             'Object::Accessor', 'Opcode', 'POSIX', 'Package::Constants',\n+             'Params::Check', 'Parse::CPAN::Meta', 'Perl::OSType', 'PerlIO',\n+             'PerlIO::encoding', 'PerlIO::mmap', 'PerlIO::scalar',\n+             'PerlIO::via', 'PerlIO::via::QuotedPrint', 'Pod::Checker',\n+             'Pod::Escapes', 'Pod::Find', 'Pod::Functions',\n+             'Pod::Functions::Functions', 'Pod::Html', 'Pod::InputObjects',\n+             'Pod::LaTeX', 'Pod::Man', 'Pod::ParseLink', 'Pod::ParseUtils',\n+             'Pod::Parser', 'Pod::Perldoc', 'Pod::Perldoc::BaseTo',\n+             'Pod::Perldoc::GetOptsOO', 'Pod::Perldoc::ToANSI',\n+             'Pod::Perldoc::ToChecker', 'Pod::Perldoc::ToMan',\n+             'Pod::Perldoc::ToNroff', 'Pod::Perldoc::ToPod',\n+             'Pod::Perldoc::ToRtf', 'Pod::Perldoc::ToTerm',\n+             'Pod::Perldoc::ToText', 'Pod::Perldoc::ToTk',\n+             'Pod::Perldoc::ToXml', 'Pod::PlainText', 'Pod::Select',\n+             'Pod::Simple', 'Pod::Simple::BlackBox', 'Pod::Simple::Checker',\n+             'Pod::Simple::Debug', 'Pod::Simple::DumpAsText',\n+             'Pod::Simple::DumpAsXML', 'Pod::Simple::HTML',\n+             'Pod::Simple::HTMLBatch', 'Pod::Simple::HTMLLegacy',\n+             'Pod::Simple::LinkSection', 'Pod::Simple::Methody',\n+             'Pod::Simple::Progress', 'Pod::Simple::PullParser',\n+             'Pod::Simple::PullParserEndToken',\n+             'Pod::Simple::PullParserStartToken',\n+             'Pod::Simple::PullParserTextToken', 'Pod::Simple::PullParserToken',\n+             'Pod::Simple::RTF', 'Pod::Simple::Search',\n+             'Pod::Simple::SimpleTree', 'Pod::Simple::Text',\n+             'Pod::Simple::TextContent', 'Pod::Simple::TiedOutFH',\n+             'Pod::Simple::Transcode', 'Pod::Simple::TranscodeDumb',\n+             'Pod::Simple::TranscodeSmart', 'Pod::Simple::XHTML',\n+             'Pod::Simple::XMLOutStream', 'Pod::Text', 'Pod::Text::Color',\n+             'Pod::Text::Overstrike', 'Pod::Text::Termcap', 'Pod::Usage',\n+             'SDBM_File', 'Safe', 'Scalar::Util', 'Search::Dict', 'SelectSaver',\n+             'SelfLoader', 'Socket', 'Storable', 'Symbol', 'Sys::Hostname',\n+             'Sys::Syslog', 'Sys::Syslog::Win32', 'TAP::Base',\n+             'TAP::Formatter::Base', 'TAP::Formatter::Color',\n+             'TAP::Formatter::Console',\n+             'TAP::Formatter::Console::ParallelSession',\n+             'TAP::Formatter::Console::Session', 'TAP::Formatter::File',\n+             'TAP::Formatter::File::Session', 'TAP::Formatter::Session',\n+             'TAP::Harness', 'TAP::Object', 'TAP::Parser',\n+             'TAP::Parser::Aggregator', 'TAP::Parser::Grammar',\n+             'TAP::Parser::Iterator', 'TAP::Parser::Iterator::Array',\n+             'TAP::Parser::Iterator::Process', 'TAP::Parser::Iterator::Stream',\n+             'TAP::Parser::IteratorFactory', 'TAP::Parser::Multiplexer',\n+             'TAP::Parser::Result', 'TAP::Parser::Result::Bailout',\n+             'TAP::Parser::Result::Comment', 'TAP::Parser::Result::Plan',\n+             'TAP::Parser::Result::Pragma', 'TAP::Parser::Result::Test',\n+             'TAP::Parser::Result::Unknown', 'TAP::Parser::Result::Version',\n+             'TAP::Parser::Result::YAML', 'TAP::Parser::ResultFactory',\n+             'TAP::Parser::Scheduler', 'TAP::Parser::Scheduler::Job',\n+             'TAP::Parser::Scheduler::Spinner', 'TAP::Parser::Source',\n+             'TAP::Parser::SourceHandler',\n+             'TAP::Parser::SourceHandler::Executable',\n+             'TAP::Parser::SourceHandler::File',\n+             'TAP::Parser::SourceHandler::Handle',\n+             'TAP::Parser::SourceHandler::Perl',\n+             'TAP::Parser::SourceHandler::RawTAP', 'TAP::Parser::Utils',\n+             'TAP::Parser::YAMLish::Reader', 'TAP::Parser::YAMLish::Writer',\n+             'Term::ANSIColor', 'Term::Cap', 'Term::Complete', 'Term::ReadLine',\n+             'Term::UI', 'Term::UI::History', 'Test', 'Test::Builder',\n+             'Test::Builder::Module', 'Test::Builder::Tester',\n+             'Test::Builder::Tester::Color', 'Test::Harness', 'Test::More',\n+             'Test::Simple', 'Text::Abbrev', 'Text::Balanced',\n+             'Text::ParseWords', 'Text::Soundex', 'Text::Tabs', 'Text::Wrap',\n+             'Thread', 'Thread::Queue', 'Thread::Semaphore', 'Tie::Array',\n+             'Tie::File', 'Tie::Handle', 'Tie::Hash', 'Tie::Hash::NamedCapture',\n+             'Tie::Memoize', 'Tie::RefHash', 'Tie::Scalar', 'Tie::StdHandle',\n+             'Tie::SubstrHash', 'Time::HiRes', 'Time::Local', 'Time::Piece',\n+             'Time::Seconds', 'Time::gmtime', 'Time::localtime', 'Time::tm',\n+             'UNIVERSAL', 'Unicode', 'Unicode::Collate',\n+             'Unicode::Collate::CJK::Big5', 'Unicode::Collate::CJK::GB2312',\n+             'Unicode::Collate::CJK::JISX0208', 'Unicode::Collate::CJK::Korean',\n+             'Unicode::Collate::CJK::Pinyin', 'Unicode::Collate::CJK::Stroke',\n+             'Unicode::Collate::CJK::Zhuyin', 'Unicode::Collate::Locale',\n+             'Unicode::Normalize', 'Unicode::UCD', 'User::grent', 'User::pwent',\n+             'VMS::DCLsym', 'VMS::Stdio', 'Win32', 'Win32API::File',\n+             'Win32API::File::ExtUtils::Myconst2perl', 'Win32CORE',\n+             'XS::APItest', 'XS::Typemap', 'XSLoader', '_charnames', 'arybase',\n+             'attributes', 'autodie', 'autodie::exception',\n+             'autodie::exception::system', 'autodie::hints', 'autouse', 'base',\n+             'bigint', 'bignum', 'bigrat', 'blib', 'bytes', 'charnames',\n+             'constant', 'deprecate', 'diagnostics', 'encoding',\n+             'encoding::warnings', 'feature', 'fields', 'filetest', 'if',\n+             'inc::latest', 'integer', 'less', 'lib', 'locale', 'mro', 'open',\n+             'ops', 'overload', 'overload::numbers', 'overloading', 'parent',\n+             'perl', 'perlfaq', 're', 'sigtrap', 'sort', 'strict', 'subs',\n+             'threads', 'threads::shared', 'unicore::Name', 'utf8', 'vars',\n+             'version', 'vmsish', 'warnings', 'warnings::register'}\n+\n+CPAN_META = \"\"\"\\\n+package:\n+  name: {packagename}\n+  version: !!str {version}\n+\n+source:\n+  fn: {filename}\n+  url: {cpanurl}\n+  {usemd5}md5: {md5}\n+#  patches:\n+   # List any patch files here\n+   # - fix.patch\n+\n+{build_comment}build:\n+  # If this is a new build for the same version, increment the build\n+  # number. If you do not include this key, it defaults to 0.\n+  # number: 1\n+\n+requirements:\n+  build:\n+    - perl{build_depends}\n+\n+  run:\n+    - perl{run_depends}\n+\n+# test:\n+  # By default CPAN tests will be run while \"building\" (which just uses cpanm",
        "path": "conda_build/cpan.py",
        "position": null,
        "original_position": 313,
        "commit_id": "1713037b76b7397c63432b4df2e734f6647c017a",
        "original_commit_id": "634dcc551520e52106684db7e658588e25b27da3",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "But the important thing about testing is that it checks if the package is correctly relocatable. If it's possible to run the tests in the conda build test phase, that would be good.\n",
        "created_at": "2014-02-24T16:28:09Z",
        "updated_at": "2014-03-14T02:44:35Z",
        "html_url": "https://github.com/conda/conda-build/pull/53#discussion_r9997680",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9997680"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/53#discussion_r9997680"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9997754",
        "pull_request_review_id": null,
        "id": 9997754,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTc3NTQ=",
        "diff_hunk": "@@ -0,0 +1,577 @@\n+\"\"\"\n+Tools for converting CPAN packages to conda recipes.\n+\"\"\"\n+\n+from __future__ import (absolute_import, division, print_function,\n+                        unicode_literals)\n+\n+import collections\n+import functools\n+import json\n+import sys\n+from io import open\n+from os import makedirs\n+from os.path import basename, dirname, join, exists\n+\n+from conda.fetch import download, TmpDownload\n+from conda.utils import human_bytes, hashsum_file, memoized\n+from conda.install import rm_rf\n+from conda_build.utils import tar_xf, unzip\n+from conda_build.source import SRC_CACHE\n+from conda.compat import input, configparser, StringIO\n+\n+\n+# This monstrosity is the set of everything in the Perl core as of 5.18.2\n+# I also added \"perl\" to the list for simplicity of filtering later",
        "path": "conda_build/cpan.py",
        "position": null,
        "original_position": 25,
        "commit_id": "1713037b76b7397c63432b4df2e734f6647c017a",
        "original_commit_id": "634dcc551520e52106684db7e658588e25b27da3",
        "user": {
            "login": "dan-blanchard",
            "id": 976345,
            "node_id": "MDQ6VXNlcjk3NjM0NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/976345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dan-blanchard",
            "html_url": "https://github.com/dan-blanchard",
            "followers_url": "https://api.github.com/users/dan-blanchard/followers",
            "following_url": "https://api.github.com/users/dan-blanchard/following{/other_user}",
            "gists_url": "https://api.github.com/users/dan-blanchard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dan-blanchard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dan-blanchard/subscriptions",
            "organizations_url": "https://api.github.com/users/dan-blanchard/orgs",
            "repos_url": "https://api.github.com/users/dan-blanchard/repos",
            "events_url": "https://api.github.com/users/dan-blanchard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dan-blanchard/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not that I could find. There's a tool called [corelist](http://perldoc.perl.org/corelist.html) that I used to generate this list, but it also includes version numbers, which I didn't want. Since Perl isn't necessarily installed when running `conda skeleton cpan`, I couldn't rely on that.\n",
        "created_at": "2014-02-24T16:29:44Z",
        "updated_at": "2014-03-14T02:44:35Z",
        "html_url": "https://github.com/conda/conda-build/pull/53#discussion_r9997754",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9997754"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/53#discussion_r9997754"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9997922",
        "pull_request_review_id": null,
        "id": 9997922,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTc5MjI=",
        "diff_hunk": "@@ -0,0 +1,577 @@\n+\"\"\"\n+Tools for converting CPAN packages to conda recipes.\n+\"\"\"\n+\n+from __future__ import (absolute_import, division, print_function,\n+                        unicode_literals)\n+\n+import collections\n+import functools\n+import json\n+import sys\n+from io import open\n+from os import makedirs\n+from os.path import basename, dirname, join, exists\n+\n+from conda.fetch import download, TmpDownload\n+from conda.utils import human_bytes, hashsum_file, memoized\n+from conda.install import rm_rf\n+from conda_build.utils import tar_xf, unzip\n+from conda_build.source import SRC_CACHE\n+from conda.compat import input, configparser, StringIO\n+\n+\n+# This monstrosity is the set of everything in the Perl core as of 5.18.2\n+# I also added \"perl\" to the list for simplicity of filtering later\n+PERL_CORE = {'AnyDBM_File', 'App::Cpan', 'App::Prove', 'App::Prove::State',\n+             'App::Prove::State::Result', 'App::Prove::State::Result::Test',\n+             'Archive::Extract', 'Archive::Tar', 'Archive::Tar::Constant',\n+             'Archive::Tar::File', 'Attribute::Handlers', 'AutoLoader',\n+             'AutoSplit', 'B', 'B::Concise', 'B::Debug', 'B::Deparse',\n+             'B::Lint', 'B::Lint::Debug', 'B::Showlex', 'B::Terse', 'B::Xref',\n+             'Benchmark', 'CGI', 'CGI::Apache', 'CGI::Carp', 'CGI::Cookie',\n+             'CGI::Fast', 'CGI::Pretty', 'CGI::Push', 'CGI::Switch',\n+             'CGI::Util', 'CPAN', 'CPAN::Author', 'CPAN::Bundle',\n+             'CPAN::CacheMgr', 'CPAN::Complete', 'CPAN::Debug',\n+             'CPAN::DeferredCode', 'CPAN::Distribution', 'CPAN::Distroprefs',\n+             'CPAN::Distrostatus', 'CPAN::Exception::RecursiveDependency',\n+             'CPAN::Exception::blocked_urllist',\n+             'CPAN::Exception::yaml_not_installed',\n+             'CPAN::Exception::yaml_process_error', 'CPAN::FTP',\n+             'CPAN::FTP::netrc', 'CPAN::FirstTime', 'CPAN::HTTP::Client',\n+             'CPAN::HTTP::Credentials', 'CPAN::HandleConfig', 'CPAN::Index',\n+             'CPAN::InfoObj', 'CPAN::Kwalify', 'CPAN::LWP::UserAgent',\n+             'CPAN::Meta', 'CPAN::Meta::Converter', 'CPAN::Meta::Feature',\n+             'CPAN::Meta::History', 'CPAN::Meta::Prereqs',\n+             'CPAN::Meta::Requirements', 'CPAN::Meta::Spec',\n+             'CPAN::Meta::Validator', 'CPAN::Meta::YAML', 'CPAN::Mirrors',\n+             'CPAN::Module', 'CPAN::Nox', 'CPAN::Prompt', 'CPAN::Queue',\n+             'CPAN::Shell', 'CPAN::Tarzip', 'CPAN::URL', 'CPAN::Version',\n+             'CPANPLUS', 'CPANPLUS::Backend', 'CPANPLUS::Backend::RV',\n+             'CPANPLUS::Config', 'CPANPLUS::Config::HomeEnv',\n+             'CPANPLUS::Configure', 'CPANPLUS::Configure::Setup',\n+             'CPANPLUS::Dist', 'CPANPLUS::Dist::Autobundle',\n+             'CPANPLUS::Dist::Base', 'CPANPLUS::Dist::Build',\n+             'CPANPLUS::Dist::Build::Constants', 'CPANPLUS::Dist::MM',\n+             'CPANPLUS::Dist::Sample', 'CPANPLUS::Error', 'CPANPLUS::Internals',\n+             'CPANPLUS::Internals::Constants',\n+             'CPANPLUS::Internals::Constants::Report',\n+             'CPANPLUS::Internals::Extract', 'CPANPLUS::Internals::Fetch',\n+             'CPANPLUS::Internals::Report', 'CPANPLUS::Internals::Search',\n+             'CPANPLUS::Internals::Source',\n+             'CPANPLUS::Internals::Source::Memory',\n+             'CPANPLUS::Internals::Source::SQLite',\n+             'CPANPLUS::Internals::Source::SQLite::Tie',\n+             'CPANPLUS::Internals::Utils',\n+             'CPANPLUS::Internals::Utils::Autoflush', 'CPANPLUS::Module',\n+             'CPANPLUS::Module::Author', 'CPANPLUS::Module::Author::Fake',\n+             'CPANPLUS::Module::Checksums', 'CPANPLUS::Module::Fake',\n+             'CPANPLUS::Module::Signature', 'CPANPLUS::Selfupdate',\n+             'CPANPLUS::Shell', 'CPANPLUS::Shell::Classic',\n+             'CPANPLUS::Shell::Default',\n+             'CPANPLUS::Shell::Default::Plugins::CustomSource',\n+             'CPANPLUS::Shell::Default::Plugins::Remote',\n+             'CPANPLUS::Shell::Default::Plugins::Source', 'Carp', 'Carp::Heavy',\n+             'Class::Struct', 'Compress::Raw::Bzip2', 'Compress::Raw::Zlib',\n+             'Compress::Zlib', 'Config', 'Config::Extensions',\n+             'Config::Perl::V', 'Cwd', 'DB', 'DBM_Filter',\n+             'DBM_Filter::compress', 'DBM_Filter::encode', 'DBM_Filter::int32',\n+             'DBM_Filter::null', 'DBM_Filter::utf8', 'DB_File', 'Data::Dumper',\n+             'Devel::InnerPackage', 'Devel::PPPort', 'Devel::Peek',\n+             'Devel::SelfStubber', 'Digest', 'Digest::MD5', 'Digest::SHA',\n+             'Digest::base', 'Digest::file', 'DirHandle', 'Dumpvalue',\n+             'DynaLoader', 'Encode', 'Encode::Alias', 'Encode::Byte',\n+             'Encode::CJKConstants', 'Encode::CN', 'Encode::CN::HZ',\n+             'Encode::Config', 'Encode::EBCDIC', 'Encode::Encoder',\n+             'Encode::Encoding', 'Encode::GSM0338', 'Encode::Guess',\n+             'Encode::JP', 'Encode::JP::H2Z', 'Encode::JP::JIS7', 'Encode::KR',\n+             'Encode::KR::2022_KR', 'Encode::MIME::Header',\n+             'Encode::MIME::Header::ISO_2022_JP', 'Encode::MIME::Name',\n+             'Encode::Symbol', 'Encode::TW', 'Encode::Unicode',\n+             'Encode::Unicode::UTF7', 'English', 'Env', 'Errno', 'Exporter',\n+             'Exporter::Heavy', 'ExtUtils::CBuilder',\n+             'ExtUtils::CBuilder::Base', 'ExtUtils::CBuilder::Platform::Unix',\n+             'ExtUtils::CBuilder::Platform::VMS',\n+             'ExtUtils::CBuilder::Platform::Windows',\n+             'ExtUtils::CBuilder::Platform::Windows::BCC',\n+             'ExtUtils::CBuilder::Platform::Windows::GCC',\n+             'ExtUtils::CBuilder::Platform::Windows::MSVC',\n+             'ExtUtils::CBuilder::Platform::aix',\n+             'ExtUtils::CBuilder::Platform::cygwin',\n+             'ExtUtils::CBuilder::Platform::darwin',\n+             'ExtUtils::CBuilder::Platform::dec_osf',\n+             'ExtUtils::CBuilder::Platform::os2', 'ExtUtils::Command',\n+             'ExtUtils::Command::MM', 'ExtUtils::Constant',\n+             'ExtUtils::Constant::Base', 'ExtUtils::Constant::ProxySubs',\n+             'ExtUtils::Constant::Utils', 'ExtUtils::Constant::XS',\n+             'ExtUtils::Embed', 'ExtUtils::Install', 'ExtUtils::Installed',\n+             'ExtUtils::Liblist', 'ExtUtils::Liblist::Kid', 'ExtUtils::MM',\n+             'ExtUtils::MM_AIX', 'ExtUtils::MM_Any', 'ExtUtils::MM_BeOS',\n+             'ExtUtils::MM_Cygwin', 'ExtUtils::MM_DOS', 'ExtUtils::MM_Darwin',\n+             'ExtUtils::MM_MacOS', 'ExtUtils::MM_NW5', 'ExtUtils::MM_OS2',\n+             'ExtUtils::MM_QNX', 'ExtUtils::MM_UWIN', 'ExtUtils::MM_Unix',\n+             'ExtUtils::MM_VMS', 'ExtUtils::MM_VOS', 'ExtUtils::MM_Win32',\n+             'ExtUtils::MM_Win95', 'ExtUtils::MY', 'ExtUtils::MakeMaker',\n+             'ExtUtils::MakeMaker::Config', 'ExtUtils::Manifest',\n+             'ExtUtils::Miniperl', 'ExtUtils::Mkbootstrap',\n+             'ExtUtils::Mksymlists', 'ExtUtils::Packlist', 'ExtUtils::ParseXS',\n+             'ExtUtils::ParseXS::Constants', 'ExtUtils::ParseXS::CountLines',\n+             'ExtUtils::ParseXS::Utilities', 'ExtUtils::Typemaps',\n+             'ExtUtils::Typemaps::Cmd', 'ExtUtils::Typemaps::InputMap',\n+             'ExtUtils::Typemaps::OutputMap', 'ExtUtils::Typemaps::Type',\n+             'ExtUtils::XSSymSet', 'ExtUtils::testlib', 'Fatal', 'Fcntl',\n+             'File::Basename', 'File::CheckTree', 'File::Compare', 'File::Copy',\n+             'File::DosGlob', 'File::Fetch', 'File::Find', 'File::Glob',\n+             'File::GlobMapper', 'File::Path', 'File::Spec',\n+             'File::Spec::Cygwin', 'File::Spec::Epoc', 'File::Spec::Functions',\n+             'File::Spec::Mac', 'File::Spec::OS2', 'File::Spec::Unix',\n+             'File::Spec::VMS', 'File::Spec::Win32', 'File::Temp', 'File::stat',\n+             'FileCache', 'FileHandle', 'Filter::Simple', 'Filter::Util::Call',\n+             'FindBin', 'GDBM_File', 'Getopt::Long', 'Getopt::Std',\n+             'HTTP::Tiny', 'Hash::Util', 'Hash::Util::FieldHash',\n+             'I18N::Collate', 'I18N::LangTags', 'I18N::LangTags::Detect',\n+             'I18N::LangTags::List', 'I18N::Langinfo', 'IO',\n+             'IO::Compress::Adapter::Bzip2', 'IO::Compress::Adapter::Deflate',\n+             'IO::Compress::Adapter::Identity', 'IO::Compress::Base',\n+             'IO::Compress::Base::Common', 'IO::Compress::Bzip2',\n+             'IO::Compress::Deflate', 'IO::Compress::Gzip',\n+             'IO::Compress::Gzip::Constants', 'IO::Compress::RawDeflate',\n+             'IO::Compress::Zip', 'IO::Compress::Zip::Constants',\n+             'IO::Compress::Zlib::Constants', 'IO::Compress::Zlib::Extra',\n+             'IO::Dir', 'IO::File', 'IO::Handle', 'IO::Pipe', 'IO::Poll',\n+             'IO::Seekable', 'IO::Select', 'IO::Socket', 'IO::Socket::INET',\n+             'IO::Socket::UNIX', 'IO::Uncompress::Adapter::Bunzip2',\n+             'IO::Uncompress::Adapter::Identity',\n+             'IO::Uncompress::Adapter::Inflate', 'IO::Uncompress::AnyInflate',\n+             'IO::Uncompress::AnyUncompress', 'IO::Uncompress::Base',\n+             'IO::Uncompress::Bunzip2', 'IO::Uncompress::Gunzip',\n+             'IO::Uncompress::Inflate', 'IO::Uncompress::RawInflate',\n+             'IO::Uncompress::Unzip', 'IO::Zlib', 'IPC::Cmd', 'IPC::Msg',\n+             'IPC::Open2', 'IPC::Open3', 'IPC::Semaphore', 'IPC::SharedMem',\n+             'IPC::SysV', 'JSON::PP', 'JSON::PP::Boolean', 'List::Util',\n+             'List::Util::XS', 'Locale::Codes', 'Locale::Codes::Constants',\n+             'Locale::Codes::Country', 'Locale::Codes::Country_Codes',\n+             'Locale::Codes::Country_Retired', 'Locale::Codes::Currency',\n+             'Locale::Codes::Currency_Codes', 'Locale::Codes::Currency_Retired',\n+             'Locale::Codes::LangExt', 'Locale::Codes::LangExt_Codes',\n+             'Locale::Codes::LangExt_Retired', 'Locale::Codes::LangFam',\n+             'Locale::Codes::LangFam_Codes', 'Locale::Codes::LangFam_Retired',\n+             'Locale::Codes::LangVar', 'Locale::Codes::LangVar_Codes',\n+             'Locale::Codes::LangVar_Retired', 'Locale::Codes::Language',\n+             'Locale::Codes::Language_Codes', 'Locale::Codes::Language_Retired',\n+             'Locale::Codes::Script', 'Locale::Codes::Script_Codes',\n+             'Locale::Codes::Script_Retired', 'Locale::Country',\n+             'Locale::Currency', 'Locale::Language', 'Locale::Maketext',\n+             'Locale::Maketext::Guts', 'Locale::Maketext::GutsLoader',\n+             'Locale::Maketext::Simple', 'Locale::Script', 'Log::Message',\n+             'Log::Message::Config', 'Log::Message::Handlers',\n+             'Log::Message::Item', 'Log::Message::Simple', 'MIME::Base64',\n+             'MIME::QuotedPrint', 'Math::BigFloat', 'Math::BigFloat::Trace',\n+             'Math::BigInt', 'Math::BigInt::Calc', 'Math::BigInt::CalcEmu',\n+             'Math::BigInt::FastCalc', 'Math::BigInt::Trace', 'Math::BigRat',\n+             'Math::Complex', 'Math::Trig', 'Memoize', 'Memoize::AnyDBM_File',\n+             'Memoize::Expire', 'Memoize::ExpireFile', 'Memoize::ExpireTest',\n+             'Memoize::NDBM_File', 'Memoize::SDBM_File', 'Memoize::Storable',\n+             'Module::Build', 'Module::Build::Base', 'Module::Build::Compat',\n+             'Module::Build::Config', 'Module::Build::ConfigData',\n+             'Module::Build::Cookbook', 'Module::Build::Dumper',\n+             'Module::Build::ModuleInfo', 'Module::Build::Notes',\n+             'Module::Build::PPMMaker', 'Module::Build::Platform::Amiga',\n+             'Module::Build::Platform::Default',\n+             'Module::Build::Platform::EBCDIC',\n+             'Module::Build::Platform::MPEiX', 'Module::Build::Platform::MacOS',\n+             'Module::Build::Platform::RiscOS', 'Module::Build::Platform::Unix',\n+             'Module::Build::Platform::VMS', 'Module::Build::Platform::VOS',\n+             'Module::Build::Platform::Windows', 'Module::Build::Platform::aix',\n+             'Module::Build::Platform::cygwin',\n+             'Module::Build::Platform::darwin', 'Module::Build::Platform::os2',\n+             'Module::Build::PodParser', 'Module::Build::Version',\n+             'Module::Build::YAML', 'Module::CoreList',\n+             'Module::CoreList::TieHashDelta', 'Module::CoreList::Utils',\n+             'Module::Load', 'Module::Load::Conditional', 'Module::Loaded',\n+             'Module::Metadata', 'Module::Pluggable',\n+             'Module::Pluggable::Object', 'Moped::Msg', 'NDBM_File', 'NEXT',\n+             'Net::Cmd', 'Net::Config', 'Net::Domain', 'Net::FTP',\n+             'Net::FTP::A', 'Net::FTP::E', 'Net::FTP::I', 'Net::FTP::L',\n+             'Net::FTP::dataconn', 'Net::NNTP', 'Net::Netrc', 'Net::POP3',\n+             'Net::Ping', 'Net::SMTP', 'Net::Time', 'Net::hostent',\n+             'Net::netent', 'Net::protoent', 'Net::servent', 'O', 'ODBM_File',\n+             'Object::Accessor', 'Opcode', 'POSIX', 'Package::Constants',\n+             'Params::Check', 'Parse::CPAN::Meta', 'Perl::OSType', 'PerlIO',\n+             'PerlIO::encoding', 'PerlIO::mmap', 'PerlIO::scalar',\n+             'PerlIO::via', 'PerlIO::via::QuotedPrint', 'Pod::Checker',\n+             'Pod::Escapes', 'Pod::Find', 'Pod::Functions',\n+             'Pod::Functions::Functions', 'Pod::Html', 'Pod::InputObjects',\n+             'Pod::LaTeX', 'Pod::Man', 'Pod::ParseLink', 'Pod::ParseUtils',\n+             'Pod::Parser', 'Pod::Perldoc', 'Pod::Perldoc::BaseTo',\n+             'Pod::Perldoc::GetOptsOO', 'Pod::Perldoc::ToANSI',\n+             'Pod::Perldoc::ToChecker', 'Pod::Perldoc::ToMan',\n+             'Pod::Perldoc::ToNroff', 'Pod::Perldoc::ToPod',\n+             'Pod::Perldoc::ToRtf', 'Pod::Perldoc::ToTerm',\n+             'Pod::Perldoc::ToText', 'Pod::Perldoc::ToTk',\n+             'Pod::Perldoc::ToXml', 'Pod::PlainText', 'Pod::Select',\n+             'Pod::Simple', 'Pod::Simple::BlackBox', 'Pod::Simple::Checker',\n+             'Pod::Simple::Debug', 'Pod::Simple::DumpAsText',\n+             'Pod::Simple::DumpAsXML', 'Pod::Simple::HTML',\n+             'Pod::Simple::HTMLBatch', 'Pod::Simple::HTMLLegacy',\n+             'Pod::Simple::LinkSection', 'Pod::Simple::Methody',\n+             'Pod::Simple::Progress', 'Pod::Simple::PullParser',\n+             'Pod::Simple::PullParserEndToken',\n+             'Pod::Simple::PullParserStartToken',\n+             'Pod::Simple::PullParserTextToken', 'Pod::Simple::PullParserToken',\n+             'Pod::Simple::RTF', 'Pod::Simple::Search',\n+             'Pod::Simple::SimpleTree', 'Pod::Simple::Text',\n+             'Pod::Simple::TextContent', 'Pod::Simple::TiedOutFH',\n+             'Pod::Simple::Transcode', 'Pod::Simple::TranscodeDumb',\n+             'Pod::Simple::TranscodeSmart', 'Pod::Simple::XHTML',\n+             'Pod::Simple::XMLOutStream', 'Pod::Text', 'Pod::Text::Color',\n+             'Pod::Text::Overstrike', 'Pod::Text::Termcap', 'Pod::Usage',\n+             'SDBM_File', 'Safe', 'Scalar::Util', 'Search::Dict', 'SelectSaver',\n+             'SelfLoader', 'Socket', 'Storable', 'Symbol', 'Sys::Hostname',\n+             'Sys::Syslog', 'Sys::Syslog::Win32', 'TAP::Base',\n+             'TAP::Formatter::Base', 'TAP::Formatter::Color',\n+             'TAP::Formatter::Console',\n+             'TAP::Formatter::Console::ParallelSession',\n+             'TAP::Formatter::Console::Session', 'TAP::Formatter::File',\n+             'TAP::Formatter::File::Session', 'TAP::Formatter::Session',\n+             'TAP::Harness', 'TAP::Object', 'TAP::Parser',\n+             'TAP::Parser::Aggregator', 'TAP::Parser::Grammar',\n+             'TAP::Parser::Iterator', 'TAP::Parser::Iterator::Array',\n+             'TAP::Parser::Iterator::Process', 'TAP::Parser::Iterator::Stream',\n+             'TAP::Parser::IteratorFactory', 'TAP::Parser::Multiplexer',\n+             'TAP::Parser::Result', 'TAP::Parser::Result::Bailout',\n+             'TAP::Parser::Result::Comment', 'TAP::Parser::Result::Plan',\n+             'TAP::Parser::Result::Pragma', 'TAP::Parser::Result::Test',\n+             'TAP::Parser::Result::Unknown', 'TAP::Parser::Result::Version',\n+             'TAP::Parser::Result::YAML', 'TAP::Parser::ResultFactory',\n+             'TAP::Parser::Scheduler', 'TAP::Parser::Scheduler::Job',\n+             'TAP::Parser::Scheduler::Spinner', 'TAP::Parser::Source',\n+             'TAP::Parser::SourceHandler',\n+             'TAP::Parser::SourceHandler::Executable',\n+             'TAP::Parser::SourceHandler::File',\n+             'TAP::Parser::SourceHandler::Handle',\n+             'TAP::Parser::SourceHandler::Perl',\n+             'TAP::Parser::SourceHandler::RawTAP', 'TAP::Parser::Utils',\n+             'TAP::Parser::YAMLish::Reader', 'TAP::Parser::YAMLish::Writer',\n+             'Term::ANSIColor', 'Term::Cap', 'Term::Complete', 'Term::ReadLine',\n+             'Term::UI', 'Term::UI::History', 'Test', 'Test::Builder',\n+             'Test::Builder::Module', 'Test::Builder::Tester',\n+             'Test::Builder::Tester::Color', 'Test::Harness', 'Test::More',\n+             'Test::Simple', 'Text::Abbrev', 'Text::Balanced',\n+             'Text::ParseWords', 'Text::Soundex', 'Text::Tabs', 'Text::Wrap',\n+             'Thread', 'Thread::Queue', 'Thread::Semaphore', 'Tie::Array',\n+             'Tie::File', 'Tie::Handle', 'Tie::Hash', 'Tie::Hash::NamedCapture',\n+             'Tie::Memoize', 'Tie::RefHash', 'Tie::Scalar', 'Tie::StdHandle',\n+             'Tie::SubstrHash', 'Time::HiRes', 'Time::Local', 'Time::Piece',\n+             'Time::Seconds', 'Time::gmtime', 'Time::localtime', 'Time::tm',\n+             'UNIVERSAL', 'Unicode', 'Unicode::Collate',\n+             'Unicode::Collate::CJK::Big5', 'Unicode::Collate::CJK::GB2312',\n+             'Unicode::Collate::CJK::JISX0208', 'Unicode::Collate::CJK::Korean',\n+             'Unicode::Collate::CJK::Pinyin', 'Unicode::Collate::CJK::Stroke',\n+             'Unicode::Collate::CJK::Zhuyin', 'Unicode::Collate::Locale',\n+             'Unicode::Normalize', 'Unicode::UCD', 'User::grent', 'User::pwent',\n+             'VMS::DCLsym', 'VMS::Stdio', 'Win32', 'Win32API::File',\n+             'Win32API::File::ExtUtils::Myconst2perl', 'Win32CORE',\n+             'XS::APItest', 'XS::Typemap', 'XSLoader', '_charnames', 'arybase',\n+             'attributes', 'autodie', 'autodie::exception',\n+             'autodie::exception::system', 'autodie::hints', 'autouse', 'base',\n+             'bigint', 'bignum', 'bigrat', 'blib', 'bytes', 'charnames',\n+             'constant', 'deprecate', 'diagnostics', 'encoding',\n+             'encoding::warnings', 'feature', 'fields', 'filetest', 'if',\n+             'inc::latest', 'integer', 'less', 'lib', 'locale', 'mro', 'open',\n+             'ops', 'overload', 'overload::numbers', 'overloading', 'parent',\n+             'perl', 'perlfaq', 're', 'sigtrap', 'sort', 'strict', 'subs',\n+             'threads', 'threads::shared', 'unicore::Name', 'utf8', 'vars',\n+             'version', 'vmsish', 'warnings', 'warnings::register'}\n+\n+CPAN_META = \"\"\"\\\n+package:\n+  name: {packagename}\n+  version: !!str {version}\n+\n+source:\n+  fn: {filename}\n+  url: {cpanurl}\n+  {usemd5}md5: {md5}\n+#  patches:\n+   # List any patch files here\n+   # - fix.patch\n+\n+{build_comment}build:\n+  # If this is a new build for the same version, increment the build\n+  # number. If you do not include this key, it defaults to 0.\n+  # number: 1\n+\n+requirements:\n+  build:\n+    - perl{build_depends}\n+\n+  run:\n+    - perl{run_depends}\n+\n+# test:\n+  # By default CPAN tests will be run while \"building\" (which just uses cpanm",
        "path": "conda_build/cpan.py",
        "position": null,
        "original_position": 313,
        "commit_id": "1713037b76b7397c63432b4df2e734f6647c017a",
        "original_commit_id": "634dcc551520e52106684db7e658588e25b27da3",
        "user": {
            "login": "dan-blanchard",
            "id": 976345,
            "node_id": "MDQ6VXNlcjk3NjM0NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/976345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dan-blanchard",
            "html_url": "https://github.com/dan-blanchard",
            "followers_url": "https://api.github.com/users/dan-blanchard/followers",
            "following_url": "https://api.github.com/users/dan-blanchard/following{/other_user}",
            "gists_url": "https://api.github.com/users/dan-blanchard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dan-blanchard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dan-blanchard/subscriptions",
            "organizations_url": "https://api.github.com/users/dan-blanchard/orgs",
            "repos_url": "https://api.github.com/users/dan-blanchard/repos",
            "events_url": "https://api.github.com/users/dan-blanchard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dan-blanchard/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`cpanm` isn't a typo. It's a [much nicer version of CPAN](https://metacpan.org/pod/App::cpanminus) that doesn't require interactive configuration. I bundled it with my Perl package.\n\nAs far as testing if things are relocatable, I did add a part to this PR that generates a `run_test.sh` and `run_test.bat` that does a simple import test.\n",
        "created_at": "2014-02-24T16:32:58Z",
        "updated_at": "2014-03-14T02:44:35Z",
        "html_url": "https://github.com/conda/conda-build/pull/53#discussion_r9997922",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9997922"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/53#discussion_r9997922"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9998189",
        "pull_request_review_id": null,
        "id": 9998189,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTgxODk=",
        "diff_hunk": "@@ -0,0 +1,577 @@\n+\"\"\"\n+Tools for converting CPAN packages to conda recipes.\n+\"\"\"\n+\n+from __future__ import (absolute_import, division, print_function,\n+                        unicode_literals)\n+\n+import collections\n+import functools\n+import json\n+import sys\n+from io import open\n+from os import makedirs\n+from os.path import basename, dirname, join, exists\n+\n+from conda.fetch import download, TmpDownload\n+from conda.utils import human_bytes, hashsum_file, memoized\n+from conda.install import rm_rf\n+from conda_build.utils import tar_xf, unzip\n+from conda_build.source import SRC_CACHE\n+from conda.compat import input, configparser, StringIO\n+\n+\n+# This monstrosity is the set of everything in the Perl core as of 5.18.2\n+# I also added \"perl\" to the list for simplicity of filtering later",
        "path": "conda_build/cpan.py",
        "position": null,
        "original_position": 25,
        "commit_id": "1713037b76b7397c63432b4df2e734f6647c017a",
        "original_commit_id": "634dcc551520e52106684db7e658588e25b27da3",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I suppose it could depend on it. `conda skeleton cpan` isn't going to be very useful without perl anyway.\n",
        "created_at": "2014-02-24T16:38:04Z",
        "updated_at": "2014-03-14T02:44:35Z",
        "html_url": "https://github.com/conda/conda-build/pull/53#discussion_r9998189",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9998189"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/53#discussion_r9998189"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9998267",
        "pull_request_review_id": null,
        "id": 9998267,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTgyNjc=",
        "diff_hunk": "@@ -0,0 +1,577 @@\n+\"\"\"\n+Tools for converting CPAN packages to conda recipes.\n+\"\"\"\n+\n+from __future__ import (absolute_import, division, print_function,\n+                        unicode_literals)\n+\n+import collections\n+import functools\n+import json\n+import sys\n+from io import open\n+from os import makedirs\n+from os.path import basename, dirname, join, exists\n+\n+from conda.fetch import download, TmpDownload\n+from conda.utils import human_bytes, hashsum_file, memoized\n+from conda.install import rm_rf\n+from conda_build.utils import tar_xf, unzip\n+from conda_build.source import SRC_CACHE\n+from conda.compat import input, configparser, StringIO\n+\n+\n+# This monstrosity is the set of everything in the Perl core as of 5.18.2\n+# I also added \"perl\" to the list for simplicity of filtering later",
        "path": "conda_build/cpan.py",
        "position": null,
        "original_position": 25,
        "commit_id": "1713037b76b7397c63432b4df2e734f6647c017a",
        "original_commit_id": "634dcc551520e52106684db7e658588e25b27da3",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "At the very least put a command in the comments that can be used to regenerate the list. \n",
        "created_at": "2014-02-24T16:39:39Z",
        "updated_at": "2014-03-14T02:44:35Z",
        "html_url": "https://github.com/conda/conda-build/pull/53#discussion_r9998267",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9998267"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/53#discussion_r9998267"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/9998298",
        "pull_request_review_id": null,
        "id": 9998298,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5OTgyOTg=",
        "diff_hunk": "@@ -0,0 +1,577 @@\n+\"\"\"\n+Tools for converting CPAN packages to conda recipes.\n+\"\"\"\n+\n+from __future__ import (absolute_import, division, print_function,\n+                        unicode_literals)\n+\n+import collections\n+import functools\n+import json\n+import sys\n+from io import open\n+from os import makedirs\n+from os.path import basename, dirname, join, exists\n+\n+from conda.fetch import download, TmpDownload\n+from conda.utils import human_bytes, hashsum_file, memoized\n+from conda.install import rm_rf\n+from conda_build.utils import tar_xf, unzip\n+from conda_build.source import SRC_CACHE\n+from conda.compat import input, configparser, StringIO\n+\n+\n+# This monstrosity is the set of everything in the Perl core as of 5.18.2\n+# I also added \"perl\" to the list for simplicity of filtering later\n+PERL_CORE = {'AnyDBM_File', 'App::Cpan', 'App::Prove', 'App::Prove::State',\n+             'App::Prove::State::Result', 'App::Prove::State::Result::Test',\n+             'Archive::Extract', 'Archive::Tar', 'Archive::Tar::Constant',\n+             'Archive::Tar::File', 'Attribute::Handlers', 'AutoLoader',\n+             'AutoSplit', 'B', 'B::Concise', 'B::Debug', 'B::Deparse',\n+             'B::Lint', 'B::Lint::Debug', 'B::Showlex', 'B::Terse', 'B::Xref',\n+             'Benchmark', 'CGI', 'CGI::Apache', 'CGI::Carp', 'CGI::Cookie',\n+             'CGI::Fast', 'CGI::Pretty', 'CGI::Push', 'CGI::Switch',\n+             'CGI::Util', 'CPAN', 'CPAN::Author', 'CPAN::Bundle',\n+             'CPAN::CacheMgr', 'CPAN::Complete', 'CPAN::Debug',\n+             'CPAN::DeferredCode', 'CPAN::Distribution', 'CPAN::Distroprefs',\n+             'CPAN::Distrostatus', 'CPAN::Exception::RecursiveDependency',\n+             'CPAN::Exception::blocked_urllist',\n+             'CPAN::Exception::yaml_not_installed',\n+             'CPAN::Exception::yaml_process_error', 'CPAN::FTP',\n+             'CPAN::FTP::netrc', 'CPAN::FirstTime', 'CPAN::HTTP::Client',\n+             'CPAN::HTTP::Credentials', 'CPAN::HandleConfig', 'CPAN::Index',\n+             'CPAN::InfoObj', 'CPAN::Kwalify', 'CPAN::LWP::UserAgent',\n+             'CPAN::Meta', 'CPAN::Meta::Converter', 'CPAN::Meta::Feature',\n+             'CPAN::Meta::History', 'CPAN::Meta::Prereqs',\n+             'CPAN::Meta::Requirements', 'CPAN::Meta::Spec',\n+             'CPAN::Meta::Validator', 'CPAN::Meta::YAML', 'CPAN::Mirrors',\n+             'CPAN::Module', 'CPAN::Nox', 'CPAN::Prompt', 'CPAN::Queue',\n+             'CPAN::Shell', 'CPAN::Tarzip', 'CPAN::URL', 'CPAN::Version',\n+             'CPANPLUS', 'CPANPLUS::Backend', 'CPANPLUS::Backend::RV',\n+             'CPANPLUS::Config', 'CPANPLUS::Config::HomeEnv',\n+             'CPANPLUS::Configure', 'CPANPLUS::Configure::Setup',\n+             'CPANPLUS::Dist', 'CPANPLUS::Dist::Autobundle',\n+             'CPANPLUS::Dist::Base', 'CPANPLUS::Dist::Build',\n+             'CPANPLUS::Dist::Build::Constants', 'CPANPLUS::Dist::MM',\n+             'CPANPLUS::Dist::Sample', 'CPANPLUS::Error', 'CPANPLUS::Internals',\n+             'CPANPLUS::Internals::Constants',\n+             'CPANPLUS::Internals::Constants::Report',\n+             'CPANPLUS::Internals::Extract', 'CPANPLUS::Internals::Fetch',\n+             'CPANPLUS::Internals::Report', 'CPANPLUS::Internals::Search',\n+             'CPANPLUS::Internals::Source',\n+             'CPANPLUS::Internals::Source::Memory',\n+             'CPANPLUS::Internals::Source::SQLite',\n+             'CPANPLUS::Internals::Source::SQLite::Tie',\n+             'CPANPLUS::Internals::Utils',\n+             'CPANPLUS::Internals::Utils::Autoflush', 'CPANPLUS::Module',\n+             'CPANPLUS::Module::Author', 'CPANPLUS::Module::Author::Fake',\n+             'CPANPLUS::Module::Checksums', 'CPANPLUS::Module::Fake',\n+             'CPANPLUS::Module::Signature', 'CPANPLUS::Selfupdate',\n+             'CPANPLUS::Shell', 'CPANPLUS::Shell::Classic',\n+             'CPANPLUS::Shell::Default',\n+             'CPANPLUS::Shell::Default::Plugins::CustomSource',\n+             'CPANPLUS::Shell::Default::Plugins::Remote',\n+             'CPANPLUS::Shell::Default::Plugins::Source', 'Carp', 'Carp::Heavy',\n+             'Class::Struct', 'Compress::Raw::Bzip2', 'Compress::Raw::Zlib',\n+             'Compress::Zlib', 'Config', 'Config::Extensions',\n+             'Config::Perl::V', 'Cwd', 'DB', 'DBM_Filter',\n+             'DBM_Filter::compress', 'DBM_Filter::encode', 'DBM_Filter::int32',\n+             'DBM_Filter::null', 'DBM_Filter::utf8', 'DB_File', 'Data::Dumper',\n+             'Devel::InnerPackage', 'Devel::PPPort', 'Devel::Peek',\n+             'Devel::SelfStubber', 'Digest', 'Digest::MD5', 'Digest::SHA',\n+             'Digest::base', 'Digest::file', 'DirHandle', 'Dumpvalue',\n+             'DynaLoader', 'Encode', 'Encode::Alias', 'Encode::Byte',\n+             'Encode::CJKConstants', 'Encode::CN', 'Encode::CN::HZ',\n+             'Encode::Config', 'Encode::EBCDIC', 'Encode::Encoder',\n+             'Encode::Encoding', 'Encode::GSM0338', 'Encode::Guess',\n+             'Encode::JP', 'Encode::JP::H2Z', 'Encode::JP::JIS7', 'Encode::KR',\n+             'Encode::KR::2022_KR', 'Encode::MIME::Header',\n+             'Encode::MIME::Header::ISO_2022_JP', 'Encode::MIME::Name',\n+             'Encode::Symbol', 'Encode::TW', 'Encode::Unicode',\n+             'Encode::Unicode::UTF7', 'English', 'Env', 'Errno', 'Exporter',\n+             'Exporter::Heavy', 'ExtUtils::CBuilder',\n+             'ExtUtils::CBuilder::Base', 'ExtUtils::CBuilder::Platform::Unix',\n+             'ExtUtils::CBuilder::Platform::VMS',\n+             'ExtUtils::CBuilder::Platform::Windows',\n+             'ExtUtils::CBuilder::Platform::Windows::BCC',\n+             'ExtUtils::CBuilder::Platform::Windows::GCC',\n+             'ExtUtils::CBuilder::Platform::Windows::MSVC',\n+             'ExtUtils::CBuilder::Platform::aix',\n+             'ExtUtils::CBuilder::Platform::cygwin',\n+             'ExtUtils::CBuilder::Platform::darwin',\n+             'ExtUtils::CBuilder::Platform::dec_osf',\n+             'ExtUtils::CBuilder::Platform::os2', 'ExtUtils::Command',\n+             'ExtUtils::Command::MM', 'ExtUtils::Constant',\n+             'ExtUtils::Constant::Base', 'ExtUtils::Constant::ProxySubs',\n+             'ExtUtils::Constant::Utils', 'ExtUtils::Constant::XS',\n+             'ExtUtils::Embed', 'ExtUtils::Install', 'ExtUtils::Installed',\n+             'ExtUtils::Liblist', 'ExtUtils::Liblist::Kid', 'ExtUtils::MM',\n+             'ExtUtils::MM_AIX', 'ExtUtils::MM_Any', 'ExtUtils::MM_BeOS',\n+             'ExtUtils::MM_Cygwin', 'ExtUtils::MM_DOS', 'ExtUtils::MM_Darwin',\n+             'ExtUtils::MM_MacOS', 'ExtUtils::MM_NW5', 'ExtUtils::MM_OS2',\n+             'ExtUtils::MM_QNX', 'ExtUtils::MM_UWIN', 'ExtUtils::MM_Unix',\n+             'ExtUtils::MM_VMS', 'ExtUtils::MM_VOS', 'ExtUtils::MM_Win32',\n+             'ExtUtils::MM_Win95', 'ExtUtils::MY', 'ExtUtils::MakeMaker',\n+             'ExtUtils::MakeMaker::Config', 'ExtUtils::Manifest',\n+             'ExtUtils::Miniperl', 'ExtUtils::Mkbootstrap',\n+             'ExtUtils::Mksymlists', 'ExtUtils::Packlist', 'ExtUtils::ParseXS',\n+             'ExtUtils::ParseXS::Constants', 'ExtUtils::ParseXS::CountLines',\n+             'ExtUtils::ParseXS::Utilities', 'ExtUtils::Typemaps',\n+             'ExtUtils::Typemaps::Cmd', 'ExtUtils::Typemaps::InputMap',\n+             'ExtUtils::Typemaps::OutputMap', 'ExtUtils::Typemaps::Type',\n+             'ExtUtils::XSSymSet', 'ExtUtils::testlib', 'Fatal', 'Fcntl',\n+             'File::Basename', 'File::CheckTree', 'File::Compare', 'File::Copy',\n+             'File::DosGlob', 'File::Fetch', 'File::Find', 'File::Glob',\n+             'File::GlobMapper', 'File::Path', 'File::Spec',\n+             'File::Spec::Cygwin', 'File::Spec::Epoc', 'File::Spec::Functions',\n+             'File::Spec::Mac', 'File::Spec::OS2', 'File::Spec::Unix',\n+             'File::Spec::VMS', 'File::Spec::Win32', 'File::Temp', 'File::stat',\n+             'FileCache', 'FileHandle', 'Filter::Simple', 'Filter::Util::Call',\n+             'FindBin', 'GDBM_File', 'Getopt::Long', 'Getopt::Std',\n+             'HTTP::Tiny', 'Hash::Util', 'Hash::Util::FieldHash',\n+             'I18N::Collate', 'I18N::LangTags', 'I18N::LangTags::Detect',\n+             'I18N::LangTags::List', 'I18N::Langinfo', 'IO',\n+             'IO::Compress::Adapter::Bzip2', 'IO::Compress::Adapter::Deflate',\n+             'IO::Compress::Adapter::Identity', 'IO::Compress::Base',\n+             'IO::Compress::Base::Common', 'IO::Compress::Bzip2',\n+             'IO::Compress::Deflate', 'IO::Compress::Gzip',\n+             'IO::Compress::Gzip::Constants', 'IO::Compress::RawDeflate',\n+             'IO::Compress::Zip', 'IO::Compress::Zip::Constants',\n+             'IO::Compress::Zlib::Constants', 'IO::Compress::Zlib::Extra',\n+             'IO::Dir', 'IO::File', 'IO::Handle', 'IO::Pipe', 'IO::Poll',\n+             'IO::Seekable', 'IO::Select', 'IO::Socket', 'IO::Socket::INET',\n+             'IO::Socket::UNIX', 'IO::Uncompress::Adapter::Bunzip2',\n+             'IO::Uncompress::Adapter::Identity',\n+             'IO::Uncompress::Adapter::Inflate', 'IO::Uncompress::AnyInflate',\n+             'IO::Uncompress::AnyUncompress', 'IO::Uncompress::Base',\n+             'IO::Uncompress::Bunzip2', 'IO::Uncompress::Gunzip',\n+             'IO::Uncompress::Inflate', 'IO::Uncompress::RawInflate',\n+             'IO::Uncompress::Unzip', 'IO::Zlib', 'IPC::Cmd', 'IPC::Msg',\n+             'IPC::Open2', 'IPC::Open3', 'IPC::Semaphore', 'IPC::SharedMem',\n+             'IPC::SysV', 'JSON::PP', 'JSON::PP::Boolean', 'List::Util',\n+             'List::Util::XS', 'Locale::Codes', 'Locale::Codes::Constants',\n+             'Locale::Codes::Country', 'Locale::Codes::Country_Codes',\n+             'Locale::Codes::Country_Retired', 'Locale::Codes::Currency',\n+             'Locale::Codes::Currency_Codes', 'Locale::Codes::Currency_Retired',\n+             'Locale::Codes::LangExt', 'Locale::Codes::LangExt_Codes',\n+             'Locale::Codes::LangExt_Retired', 'Locale::Codes::LangFam',\n+             'Locale::Codes::LangFam_Codes', 'Locale::Codes::LangFam_Retired',\n+             'Locale::Codes::LangVar', 'Locale::Codes::LangVar_Codes',\n+             'Locale::Codes::LangVar_Retired', 'Locale::Codes::Language',\n+             'Locale::Codes::Language_Codes', 'Locale::Codes::Language_Retired',\n+             'Locale::Codes::Script', 'Locale::Codes::Script_Codes',\n+             'Locale::Codes::Script_Retired', 'Locale::Country',\n+             'Locale::Currency', 'Locale::Language', 'Locale::Maketext',\n+             'Locale::Maketext::Guts', 'Locale::Maketext::GutsLoader',\n+             'Locale::Maketext::Simple', 'Locale::Script', 'Log::Message',\n+             'Log::Message::Config', 'Log::Message::Handlers',\n+             'Log::Message::Item', 'Log::Message::Simple', 'MIME::Base64',\n+             'MIME::QuotedPrint', 'Math::BigFloat', 'Math::BigFloat::Trace',\n+             'Math::BigInt', 'Math::BigInt::Calc', 'Math::BigInt::CalcEmu',\n+             'Math::BigInt::FastCalc', 'Math::BigInt::Trace', 'Math::BigRat',\n+             'Math::Complex', 'Math::Trig', 'Memoize', 'Memoize::AnyDBM_File',\n+             'Memoize::Expire', 'Memoize::ExpireFile', 'Memoize::ExpireTest',\n+             'Memoize::NDBM_File', 'Memoize::SDBM_File', 'Memoize::Storable',\n+             'Module::Build', 'Module::Build::Base', 'Module::Build::Compat',\n+             'Module::Build::Config', 'Module::Build::ConfigData',\n+             'Module::Build::Cookbook', 'Module::Build::Dumper',\n+             'Module::Build::ModuleInfo', 'Module::Build::Notes',\n+             'Module::Build::PPMMaker', 'Module::Build::Platform::Amiga',\n+             'Module::Build::Platform::Default',\n+             'Module::Build::Platform::EBCDIC',\n+             'Module::Build::Platform::MPEiX', 'Module::Build::Platform::MacOS',\n+             'Module::Build::Platform::RiscOS', 'Module::Build::Platform::Unix',\n+             'Module::Build::Platform::VMS', 'Module::Build::Platform::VOS',\n+             'Module::Build::Platform::Windows', 'Module::Build::Platform::aix',\n+             'Module::Build::Platform::cygwin',\n+             'Module::Build::Platform::darwin', 'Module::Build::Platform::os2',\n+             'Module::Build::PodParser', 'Module::Build::Version',\n+             'Module::Build::YAML', 'Module::CoreList',\n+             'Module::CoreList::TieHashDelta', 'Module::CoreList::Utils',\n+             'Module::Load', 'Module::Load::Conditional', 'Module::Loaded',\n+             'Module::Metadata', 'Module::Pluggable',\n+             'Module::Pluggable::Object', 'Moped::Msg', 'NDBM_File', 'NEXT',\n+             'Net::Cmd', 'Net::Config', 'Net::Domain', 'Net::FTP',\n+             'Net::FTP::A', 'Net::FTP::E', 'Net::FTP::I', 'Net::FTP::L',\n+             'Net::FTP::dataconn', 'Net::NNTP', 'Net::Netrc', 'Net::POP3',\n+             'Net::Ping', 'Net::SMTP', 'Net::Time', 'Net::hostent',\n+             'Net::netent', 'Net::protoent', 'Net::servent', 'O', 'ODBM_File',\n+             'Object::Accessor', 'Opcode', 'POSIX', 'Package::Constants',\n+             'Params::Check', 'Parse::CPAN::Meta', 'Perl::OSType', 'PerlIO',\n+             'PerlIO::encoding', 'PerlIO::mmap', 'PerlIO::scalar',\n+             'PerlIO::via', 'PerlIO::via::QuotedPrint', 'Pod::Checker',\n+             'Pod::Escapes', 'Pod::Find', 'Pod::Functions',\n+             'Pod::Functions::Functions', 'Pod::Html', 'Pod::InputObjects',\n+             'Pod::LaTeX', 'Pod::Man', 'Pod::ParseLink', 'Pod::ParseUtils',\n+             'Pod::Parser', 'Pod::Perldoc', 'Pod::Perldoc::BaseTo',\n+             'Pod::Perldoc::GetOptsOO', 'Pod::Perldoc::ToANSI',\n+             'Pod::Perldoc::ToChecker', 'Pod::Perldoc::ToMan',\n+             'Pod::Perldoc::ToNroff', 'Pod::Perldoc::ToPod',\n+             'Pod::Perldoc::ToRtf', 'Pod::Perldoc::ToTerm',\n+             'Pod::Perldoc::ToText', 'Pod::Perldoc::ToTk',\n+             'Pod::Perldoc::ToXml', 'Pod::PlainText', 'Pod::Select',\n+             'Pod::Simple', 'Pod::Simple::BlackBox', 'Pod::Simple::Checker',\n+             'Pod::Simple::Debug', 'Pod::Simple::DumpAsText',\n+             'Pod::Simple::DumpAsXML', 'Pod::Simple::HTML',\n+             'Pod::Simple::HTMLBatch', 'Pod::Simple::HTMLLegacy',\n+             'Pod::Simple::LinkSection', 'Pod::Simple::Methody',\n+             'Pod::Simple::Progress', 'Pod::Simple::PullParser',\n+             'Pod::Simple::PullParserEndToken',\n+             'Pod::Simple::PullParserStartToken',\n+             'Pod::Simple::PullParserTextToken', 'Pod::Simple::PullParserToken',\n+             'Pod::Simple::RTF', 'Pod::Simple::Search',\n+             'Pod::Simple::SimpleTree', 'Pod::Simple::Text',\n+             'Pod::Simple::TextContent', 'Pod::Simple::TiedOutFH',\n+             'Pod::Simple::Transcode', 'Pod::Simple::TranscodeDumb',\n+             'Pod::Simple::TranscodeSmart', 'Pod::Simple::XHTML',\n+             'Pod::Simple::XMLOutStream', 'Pod::Text', 'Pod::Text::Color',\n+             'Pod::Text::Overstrike', 'Pod::Text::Termcap', 'Pod::Usage',\n+             'SDBM_File', 'Safe', 'Scalar::Util', 'Search::Dict', 'SelectSaver',\n+             'SelfLoader', 'Socket', 'Storable', 'Symbol', 'Sys::Hostname',\n+             'Sys::Syslog', 'Sys::Syslog::Win32', 'TAP::Base',\n+             'TAP::Formatter::Base', 'TAP::Formatter::Color',\n+             'TAP::Formatter::Console',\n+             'TAP::Formatter::Console::ParallelSession',\n+             'TAP::Formatter::Console::Session', 'TAP::Formatter::File',\n+             'TAP::Formatter::File::Session', 'TAP::Formatter::Session',\n+             'TAP::Harness', 'TAP::Object', 'TAP::Parser',\n+             'TAP::Parser::Aggregator', 'TAP::Parser::Grammar',\n+             'TAP::Parser::Iterator', 'TAP::Parser::Iterator::Array',\n+             'TAP::Parser::Iterator::Process', 'TAP::Parser::Iterator::Stream',\n+             'TAP::Parser::IteratorFactory', 'TAP::Parser::Multiplexer',\n+             'TAP::Parser::Result', 'TAP::Parser::Result::Bailout',\n+             'TAP::Parser::Result::Comment', 'TAP::Parser::Result::Plan',\n+             'TAP::Parser::Result::Pragma', 'TAP::Parser::Result::Test',\n+             'TAP::Parser::Result::Unknown', 'TAP::Parser::Result::Version',\n+             'TAP::Parser::Result::YAML', 'TAP::Parser::ResultFactory',\n+             'TAP::Parser::Scheduler', 'TAP::Parser::Scheduler::Job',\n+             'TAP::Parser::Scheduler::Spinner', 'TAP::Parser::Source',\n+             'TAP::Parser::SourceHandler',\n+             'TAP::Parser::SourceHandler::Executable',\n+             'TAP::Parser::SourceHandler::File',\n+             'TAP::Parser::SourceHandler::Handle',\n+             'TAP::Parser::SourceHandler::Perl',\n+             'TAP::Parser::SourceHandler::RawTAP', 'TAP::Parser::Utils',\n+             'TAP::Parser::YAMLish::Reader', 'TAP::Parser::YAMLish::Writer',\n+             'Term::ANSIColor', 'Term::Cap', 'Term::Complete', 'Term::ReadLine',\n+             'Term::UI', 'Term::UI::History', 'Test', 'Test::Builder',\n+             'Test::Builder::Module', 'Test::Builder::Tester',\n+             'Test::Builder::Tester::Color', 'Test::Harness', 'Test::More',\n+             'Test::Simple', 'Text::Abbrev', 'Text::Balanced',\n+             'Text::ParseWords', 'Text::Soundex', 'Text::Tabs', 'Text::Wrap',\n+             'Thread', 'Thread::Queue', 'Thread::Semaphore', 'Tie::Array',\n+             'Tie::File', 'Tie::Handle', 'Tie::Hash', 'Tie::Hash::NamedCapture',\n+             'Tie::Memoize', 'Tie::RefHash', 'Tie::Scalar', 'Tie::StdHandle',\n+             'Tie::SubstrHash', 'Time::HiRes', 'Time::Local', 'Time::Piece',\n+             'Time::Seconds', 'Time::gmtime', 'Time::localtime', 'Time::tm',\n+             'UNIVERSAL', 'Unicode', 'Unicode::Collate',\n+             'Unicode::Collate::CJK::Big5', 'Unicode::Collate::CJK::GB2312',\n+             'Unicode::Collate::CJK::JISX0208', 'Unicode::Collate::CJK::Korean',\n+             'Unicode::Collate::CJK::Pinyin', 'Unicode::Collate::CJK::Stroke',\n+             'Unicode::Collate::CJK::Zhuyin', 'Unicode::Collate::Locale',\n+             'Unicode::Normalize', 'Unicode::UCD', 'User::grent', 'User::pwent',\n+             'VMS::DCLsym', 'VMS::Stdio', 'Win32', 'Win32API::File',\n+             'Win32API::File::ExtUtils::Myconst2perl', 'Win32CORE',\n+             'XS::APItest', 'XS::Typemap', 'XSLoader', '_charnames', 'arybase',\n+             'attributes', 'autodie', 'autodie::exception',\n+             'autodie::exception::system', 'autodie::hints', 'autouse', 'base',\n+             'bigint', 'bignum', 'bigrat', 'blib', 'bytes', 'charnames',\n+             'constant', 'deprecate', 'diagnostics', 'encoding',\n+             'encoding::warnings', 'feature', 'fields', 'filetest', 'if',\n+             'inc::latest', 'integer', 'less', 'lib', 'locale', 'mro', 'open',\n+             'ops', 'overload', 'overload::numbers', 'overloading', 'parent',\n+             'perl', 'perlfaq', 're', 'sigtrap', 'sort', 'strict', 'subs',\n+             'threads', 'threads::shared', 'unicore::Name', 'utf8', 'vars',\n+             'version', 'vmsish', 'warnings', 'warnings::register'}\n+\n+CPAN_META = \"\"\"\\\n+package:\n+  name: {packagename}\n+  version: !!str {version}\n+\n+source:\n+  fn: {filename}\n+  url: {cpanurl}\n+  {usemd5}md5: {md5}\n+#  patches:\n+   # List any patch files here\n+   # - fix.patch\n+\n+{build_comment}build:\n+  # If this is a new build for the same version, increment the build\n+  # number. If you do not include this key, it defaults to 0.\n+  # number: 1\n+\n+requirements:\n+  build:\n+    - perl{build_depends}\n+\n+  run:\n+    - perl{run_depends}\n+\n+# test:\n+  # By default CPAN tests will be run while \"building\" (which just uses cpanm\n+  # to install)\n+\n+  # You can also put a file called run_test.py in the recipe that will be run\n+  # at test time.\n+\n+  # requires:\n+    # Put any additional test requirements here.  For example\n+    # - nose\n+\n+about:\n+  home: {homeurl}\n+  license: {license}\n+  summary: {summary}\n+\n+# See\n+# http://docs.continuum.io/conda/build.html for\n+# more information about meta.yaml\n+\"\"\"\n+\n+CPAN_BUILD_SH = \"\"\"\\\n+#!/bin/bash\n+\n+cpanm .\n+\n+# Add more build steps here, if they are necessary.\n+\n+# See\n+# http://docs.continuum.io/conda/build.html\n+# for a list of environment variables that are set during the build process.\n+\"\"\"\n+\n+CPAN_BLD_BAT = \"\"\"\\",
        "path": "conda_build/cpan.py",
        "position": 111,
        "original_position": 345,
        "commit_id": "1713037b76b7397c63432b4df2e734f6647c017a",
        "original_commit_id": "9d427bfa125ca35d2c388c8a13efcad36e598d19",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We're not going to be able to test this without a Windows package for Perl.\n",
        "created_at": "2014-02-24T16:40:11Z",
        "updated_at": "2014-03-14T02:44:35Z",
        "html_url": "https://github.com/conda/conda-build/pull/53#discussion_r9998298",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/9998298"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/53#discussion_r9998298"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/10441430",
        "pull_request_review_id": null,
        "id": 10441430,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDQxNDMw",
        "diff_hunk": "@@ -224,7 +226,35 @@ def build(m, get_src=True):\n     :type get_src: bool\n     '''\n     rm_rf(prefix)\n-    create_env(prefix, [ms.spec for ms in m.ms_depends('build')])\n+    try_again = True",
        "path": "conda_build/build.py",
        "position": null,
        "original_position": 26,
        "commit_id": "1713037b76b7397c63432b4df2e734f6647c017a",
        "original_commit_id": "2487b73afb1a5713296de87b983feff150b37eeb",
        "user": {
            "login": "dan-blanchard",
            "id": 976345,
            "node_id": "MDQ6VXNlcjk3NjM0NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/976345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dan-blanchard",
            "html_url": "https://github.com/dan-blanchard",
            "followers_url": "https://api.github.com/users/dan-blanchard/followers",
            "following_url": "https://api.github.com/users/dan-blanchard/following{/other_user}",
            "gists_url": "https://api.github.com/users/dan-blanchard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dan-blanchard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dan-blanchard/subscriptions",
            "organizations_url": "https://api.github.com/users/dan-blanchard/orgs",
            "repos_url": "https://api.github.com/users/dan-blanchard/repos",
            "events_url": "https://api.github.com/users/dan-blanchard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dan-blanchard/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This section recursively builds packages. It works fine for me, so I'm not sure it has any of the same issues as discussed in #49.\n\nThe ugliest part is supporting versioned recipe directories, but this was something I absolutely needed for creating CPAN packages.\n",
        "created_at": "2014-03-10T18:00:04Z",
        "updated_at": "2014-03-14T02:44:35Z",
        "html_url": "https://github.com/conda/conda-build/pull/53#discussion_r10441430",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/10441430"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/53#discussion_r10441430"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/10441516",
        "pull_request_review_id": null,
        "id": 10441516,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDQxNTE2",
        "diff_hunk": "@@ -224,7 +226,35 @@ def build(m, get_src=True):\n     :type get_src: bool\n     '''\n     rm_rf(prefix)\n-    create_env(prefix, [ms.spec for ms in m.ms_depends('build')])\n+    try_again = True",
        "path": "conda_build/build.py",
        "position": null,
        "original_position": 26,
        "commit_id": "1713037b76b7397c63432b4df2e734f6647c017a",
        "original_commit_id": "2487b73afb1a5713296de87b983feff150b37eeb",
        "user": {
            "login": "dan-blanchard",
            "id": 976345,
            "node_id": "MDQ6VXNlcjk3NjM0NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/976345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dan-blanchard",
            "html_url": "https://github.com/dan-blanchard",
            "followers_url": "https://api.github.com/users/dan-blanchard/followers",
            "following_url": "https://api.github.com/users/dan-blanchard/following{/other_user}",
            "gists_url": "https://api.github.com/users/dan-blanchard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dan-blanchard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dan-blanchard/subscriptions",
            "organizations_url": "https://api.github.com/users/dan-blanchard/orgs",
            "repos_url": "https://api.github.com/users/dan-blanchard/repos",
            "events_url": "https://api.github.com/users/dan-blanchard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dan-blanchard/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It will also infinitely loop if there are circular dependencies, which obviously isn't very good.\n",
        "created_at": "2014-03-10T18:01:29Z",
        "updated_at": "2014-03-14T02:44:35Z",
        "html_url": "https://github.com/conda/conda-build/pull/53#discussion_r10441516",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/10441516"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/53#discussion_r10441516"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/15294468",
        "pull_request_review_id": null,
        "id": 15294468,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjk0NDY4",
        "diff_hunk": "@@ -0,0 +1,127 @@\n+#=============================================================================\n+# Imports\n+#=============================================================================\n+import os\n+\n+from continuum.debug import iset_trace",
        "path": "conda_build/link.py",
        "position": null,
        "original_position": 6,
        "commit_id": "387a47baa88f7a27b18e8784bb7b2c6600e9b614",
        "original_commit_id": "d502f59a2e3fb2a42d9a03f732b5d1c0d35b1ec7",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What is this?\n",
        "created_at": "2014-07-23T15:27:51Z",
        "updated_at": "2014-07-24T15:32:31Z",
        "html_url": "https://github.com/conda/conda-build/pull/143#discussion_r15294468",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/143",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/15294468"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/143#discussion_r15294468"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/143"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/15295501",
        "pull_request_review_id": null,
        "id": 15295501,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjk1NTAx",
        "diff_hunk": "@@ -0,0 +1,127 @@\n+#=============================================================================\n+# Imports\n+#=============================================================================\n+import os\n+\n+from continuum.debug import iset_trace",
        "path": "conda_build/link.py",
        "position": null,
        "original_position": 6,
        "commit_id": "387a47baa88f7a27b18e8784bb7b2c6600e9b614",
        "original_commit_id": "d502f59a2e3fb2a42d9a03f732b5d1c0d35b1ec7",
        "user": {
            "login": "dlovell",
            "id": 1074774,
            "node_id": "MDQ6VXNlcjEwNzQ3NzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1074774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dlovell",
            "html_url": "https://github.com/dlovell",
            "followers_url": "https://api.github.com/users/dlovell/followers",
            "following_url": "https://api.github.com/users/dlovell/following{/other_user}",
            "gists_url": "https://api.github.com/users/dlovell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dlovell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dlovell/subscriptions",
            "organizations_url": "https://api.github.com/users/dlovell/orgs",
            "repos_url": "https://api.github.com/users/dlovell/repos",
            "events_url": "https://api.github.com/users/dlovell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dlovell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That is me indiscriminately pulling in code.  Will remove.\n\nThough note that its used below to catch a particular case that needs a little more thought.  I'll replace its usage below with \"import pdb; pdb.set_trace()\".\n",
        "created_at": "2014-07-23T15:42:11Z",
        "updated_at": "2014-07-24T15:32:31Z",
        "html_url": "https://github.com/conda/conda-build/pull/143#discussion_r15295501",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/143",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/15295501"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/143#discussion_r15295501"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/143"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/15368216",
        "pull_request_review_id": null,
        "id": 15368216,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzY4MjE2",
        "diff_hunk": "@@ -31,6 +32,23 @@ def get_stdlib_dir():\n def get_sp_dir():\n     return join(STDLIB_DIR, 'site-packages')\n \n+def get_git_build_info(src_dir):\n+    d = {}\n+    key_name = lambda a: \"GIT_DESCRIBE_{}\".format(a)\n+    keys = [key_name(\"TAG\"), key_name(\"NUMBER\"), key_name(\"HASH\")]\n+    process = subprocess.Popen([\"git\", \"describe\", \"--tags\", \"--long\", \"HEAD\"],\n+                               stdout=subprocess.PIPE)\n+    output = process.communicate()[0].strip()\n+    parts = output.rsplit('-', 2)\n+    parts_length = len(parts)\n+    if parts_length is 3:",
        "path": "conda_build/environ.py",
        "position": null,
        "original_position": 21,
        "commit_id": "3fd7ee6b2f79de90a2e6ba5c683c83a1b9ca52cc",
        "original_commit_id": "55620d6f439e115ba6c00b5227d8ff88a0717e56",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think you need this any more. \n",
        "created_at": "2014-07-24T19:51:12Z",
        "updated_at": "2014-07-24T19:56:24Z",
        "html_url": "https://github.com/conda/conda-build/pull/147#discussion_r15368216",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/147",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/15368216"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/147#discussion_r15368216"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/15368237",
        "pull_request_review_id": null,
        "id": 15368237,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzY4MjM3",
        "diff_hunk": "@@ -31,6 +32,23 @@ def get_stdlib_dir():\n def get_sp_dir():\n     return join(STDLIB_DIR, 'site-packages')\n \n+def get_git_build_info(src_dir):\n+    d = {}\n+    key_name = lambda a: \"GIT_DESCRIBE_{}\".format(a)\n+    keys = [key_name(\"TAG\"), key_name(\"NUMBER\"), key_name(\"HASH\")]\n+    process = subprocess.Popen([\"git\", \"describe\", \"--tags\", \"--long\", \"HEAD\"],\n+                               stdout=subprocess.PIPE)\n+    output = process.communicate()[0].strip()\n+    parts = output.rsplit('-', 2)\n+    parts_length = len(parts)\n+    if parts_length is 3:",
        "path": "conda_build/environ.py",
        "position": null,
        "original_position": 21,
        "commit_id": "3fd7ee6b2f79de90a2e6ba5c683c83a1b9ca52cc",
        "original_commit_id": "55620d6f439e115ba6c00b5227d8ff88a0717e56",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also, you should avoid using `is` to compare integers. \n",
        "created_at": "2014-07-24T19:51:31Z",
        "updated_at": "2014-07-24T19:56:24Z",
        "html_url": "https://github.com/conda/conda-build/pull/147#discussion_r15368237",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/147",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/15368237"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/147#discussion_r15368237"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/15368267",
        "pull_request_review_id": null,
        "id": 15368267,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzY4MjY3",
        "diff_hunk": "@@ -31,6 +32,23 @@ def get_stdlib_dir():\n def get_sp_dir():\n     return join(STDLIB_DIR, 'site-packages')\n \n+def get_git_build_info(src_dir):\n+    d = {}\n+    key_name = lambda a: \"GIT_DESCRIBE_{}\".format(a)\n+    keys = [key_name(\"TAG\"), key_name(\"NUMBER\"), key_name(\"HASH\")]\n+    process = subprocess.Popen([\"git\", \"describe\", \"--tags\", \"--long\", \"HEAD\"],\n+                               stdout=subprocess.PIPE)\n+    output = process.communicate()[0].strip()\n+    parts = output.rsplit('-', 2)\n+    parts_length = len(parts)\n+    if parts_length is 3:",
        "path": "conda_build/environ.py",
        "position": null,
        "original_position": 21,
        "commit_id": "3fd7ee6b2f79de90a2e6ba5c683c83a1b9ca52cc",
        "original_commit_id": "55620d6f439e115ba6c00b5227d8ff88a0717e56",
        "user": {
            "login": "tswicegood",
            "id": 4328,
            "node_id": "MDQ6VXNlcjQzMjg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tswicegood",
            "html_url": "https://github.com/tswicegood",
            "followers_url": "https://api.github.com/users/tswicegood/followers",
            "following_url": "https://api.github.com/users/tswicegood/following{/other_user}",
            "gists_url": "https://api.github.com/users/tswicegood/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tswicegood/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tswicegood/subscriptions",
            "organizations_url": "https://api.github.com/users/tswicegood/orgs",
            "repos_url": "https://api.github.com/users/tswicegood/repos",
            "events_url": "https://api.github.com/users/tswicegood/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tswicegood/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "1) Yes, I do for instances where there are no tags to work with.\n\n2) Why not?\n",
        "created_at": "2014-07-24T19:52:11Z",
        "updated_at": "2014-07-24T19:56:24Z",
        "html_url": "https://github.com/conda/conda-build/pull/147#discussion_r15368267",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/147",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/15368267"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/147#discussion_r15368267"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/15368316",
        "pull_request_review_id": null,
        "id": 15368316,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzY4MzE2",
        "diff_hunk": "@@ -31,6 +32,23 @@ def get_stdlib_dir():\n def get_sp_dir():\n     return join(STDLIB_DIR, 'site-packages')\n \n+def get_git_build_info(src_dir):\n+    d = {}\n+    key_name = lambda a: \"GIT_DESCRIBE_{}\".format(a)\n+    keys = [key_name(\"TAG\"), key_name(\"NUMBER\"), key_name(\"HASH\")]\n+    process = subprocess.Popen([\"git\", \"describe\", \"--tags\", \"--long\", \"HEAD\"],\n+                               stdout=subprocess.PIPE)\n+    output = process.communicate()[0].strip()\n+    parts = output.rsplit('-', 2)\n+    parts_length = len(parts)\n+    if parts_length is 3:",
        "path": "conda_build/environ.py",
        "position": null,
        "original_position": 21,
        "commit_id": "3fd7ee6b2f79de90a2e6ba5c683c83a1b9ca52cc",
        "original_commit_id": "55620d6f439e115ba6c00b5227d8ff88a0717e56",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, is this still used if git describe can't find any tags?\n",
        "created_at": "2014-07-24T19:53:01Z",
        "updated_at": "2014-07-24T19:56:24Z",
        "html_url": "https://github.com/conda/conda-build/pull/147#discussion_r15368316",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/147",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/15368316"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/147#discussion_r15368316"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/15368377",
        "pull_request_review_id": null,
        "id": 15368377,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzY4Mzc3",
        "diff_hunk": "@@ -31,6 +32,23 @@ def get_stdlib_dir():\n def get_sp_dir():\n     return join(STDLIB_DIR, 'site-packages')\n \n+def get_git_build_info(src_dir):\n+    d = {}\n+    key_name = lambda a: \"GIT_DESCRIBE_{}\".format(a)\n+    keys = [key_name(\"TAG\"), key_name(\"NUMBER\"), key_name(\"HASH\")]\n+    process = subprocess.Popen([\"git\", \"describe\", \"--tags\", \"--long\", \"HEAD\"],\n+                               stdout=subprocess.PIPE)\n+    output = process.communicate()[0].strip()\n+    parts = output.rsplit('-', 2)\n+    parts_length = len(parts)\n+    if parts_length is 3:",
        "path": "conda_build/environ.py",
        "position": null,
        "original_position": 21,
        "commit_id": "3fd7ee6b2f79de90a2e6ba5c683c83a1b9ca52cc",
        "original_commit_id": "55620d6f439e115ba6c00b5227d8ff88a0717e56",
        "user": {
            "login": "tswicegood",
            "id": 4328,
            "node_id": "MDQ6VXNlcjQzMjg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tswicegood",
            "html_url": "https://github.com/tswicegood",
            "followers_url": "https://api.github.com/users/tswicegood/followers",
            "following_url": "https://api.github.com/users/tswicegood/following{/other_user}",
            "gists_url": "https://api.github.com/users/tswicegood/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tswicegood/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tswicegood/subscriptions",
            "organizations_url": "https://api.github.com/users/tswicegood/orgs",
            "repos_url": "https://api.github.com/users/tswicegood/repos",
            "events_url": "https://api.github.com/users/tswicegood/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tswicegood/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yup -- otherwise we have to open up two processes, one to see if there are any tags and another to do the actual description.\n",
        "created_at": "2014-07-24T19:54:09Z",
        "updated_at": "2014-07-24T19:56:24Z",
        "html_url": "https://github.com/conda/conda-build/pull/147#discussion_r15368377",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/147",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/15368377"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/147#discussion_r15368377"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/147"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/15589573",
        "pull_request_review_id": null,
        "id": 15589573,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTg5NTcz",
        "diff_hunk": "@@ -320,8 +320,7 @@ def build(m, get_src=True, verbose=True, post=None):\n         assert not exists(info_dir)\n         files2 = prefix_files()\n \n-        post_build(sorted(files2 - files1),\n-              binary_relocation=bool(m.get_value('build/binary_relocation', True)))\n+        post_build(m, sorted(files2 - files1))",
        "path": "conda_build/build.py",
        "position": 6,
        "original_position": 6,
        "commit_id": "dbec52376e2c7928b893ab0ea8a8c1a308d24c23",
        "original_commit_id": "dbec52376e2c7928b893ab0ea8a8c1a308d24c23",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@tpn, this change will affect your branch.\n",
        "created_at": "2014-07-30T15:10:29Z",
        "updated_at": "2014-07-30T15:10:29Z",
        "html_url": "https://github.com/conda/conda-build/pull/153#discussion_r15589573",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/153",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/15589573"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/153#discussion_r15589573"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/153"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/15822999",
        "pull_request_review_id": null,
        "id": 15822999,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODIyOTk5",
        "diff_hunk": "@@ -177,7 +177,7 @@ def mk_relative(f, binary_relocation=True):\n \n     path = join(build_prefix, f)\n     if sys.platform.startswith('linux') and is_obj(path):\n-        rpath = '$ORIGIN/' + utils.rel_lib(f)\n+        rpath = '${ORIGIN}/' + utils.rel_lib(f)",
        "path": "conda_build/post.py",
        "position": null,
        "original_position": 5,
        "commit_id": "c2fb4c1dc632930a5718f638f7984aa9e16684c8",
        "original_commit_id": "2b024728a32b182e67be30e31ba276444701797f",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why this change?\n",
        "created_at": "2014-08-05T16:14:29Z",
        "updated_at": "2014-08-05T17:37:40Z",
        "html_url": "https://github.com/conda/conda-build/pull/163#discussion_r15822999",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/163",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/15822999"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/163#discussion_r15822999"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/163"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/15827908",
        "pull_request_review_id": null,
        "id": 15827908,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODI3OTA4",
        "diff_hunk": "@@ -177,7 +177,7 @@ def mk_relative(f, binary_relocation=True):\n \n     path = join(build_prefix, f)\n     if sys.platform.startswith('linux') and is_obj(path):\n-        rpath = '$ORIGIN/' + utils.rel_lib(f)\n+        rpath = '${ORIGIN}/' + utils.rel_lib(f)",
        "path": "conda_build/post.py",
        "position": null,
        "original_position": 5,
        "commit_id": "c2fb4c1dc632930a5718f638f7984aa9e16684c8",
        "original_commit_id": "2b024728a32b182e67be30e31ba276444701797f",
        "user": {
            "login": "ddale",
            "id": 169586,
            "node_id": "MDQ6VXNlcjE2OTU4Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/169586?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ddale",
            "html_url": "https://github.com/ddale",
            "followers_url": "https://api.github.com/users/ddale/followers",
            "following_url": "https://api.github.com/users/ddale/following{/other_user}",
            "gists_url": "https://api.github.com/users/ddale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ddale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ddale/subscriptions",
            "organizations_url": "https://api.github.com/users/ddale/orgs",
            "repos_url": "https://api.github.com/users/ddale/repos",
            "events_url": "https://api.github.com/users/ddale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ddale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm sorry, that is an insignificant change that I accidentally included in the pull request.\n",
        "created_at": "2014-08-05T17:32:05Z",
        "updated_at": "2014-08-05T17:37:40Z",
        "html_url": "https://github.com/conda/conda-build/pull/163#discussion_r15827908",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/163",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/15827908"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/163#discussion_r15827908"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/163"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/conda/conda-build/pulls/comments/16017966",
        "pull_request_review_id": null,
        "id": 16017966,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDE3OTY2",
        "diff_hunk": "@@ -145,11 +145,16 @@ def mk_relative_osx(path):\n     assert sys.platform == 'darwin' and is_obj(path)\n     macho.install_name_change(path, osx_ch_link)\n \n-    if path.endswith('.dylib'):\n+    if path.endswith(('.dylib', '.so')):\n         # note that not every MachO binaries is a \"dynamically linked shared\n         # library\" which have an identification name, a .so C extensions\n         # extensions is a \"bundle\".  One can verify this using the \"file\"\n         # command.\n+        if path.endswith('.so'):\n+            p = Popen(['file', path], stdout=PIPE)\n+            stdout, stderr = p.communicate()",
        "path": "conda_build/post.py",
        "position": null,
        "original_position": 12,
        "commit_id": "b025f91c3543f321276adefcee2f91e748029bc0",
        "original_commit_id": "caff89f3220d31642e3159146e1d4d884e4d266f",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You will need to encode this to utf-8 for it to work in Python 3 (Popen returns bytes). \n",
        "created_at": "2014-08-08T21:39:35Z",
        "updated_at": "2014-08-11T16:41:01Z",
        "html_url": "https://github.com/conda/conda-build/pull/167#discussion_r16017966",
        "pull_request_url": "https://api.github.com/repos/conda/conda-build/pulls/167",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/comments/16017966"
            },
            "html": {
                "href": "https://github.com/conda/conda-build/pull/167#discussion_r16017966"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/conda/conda-build/pulls/167"
            }
        }
    }
]