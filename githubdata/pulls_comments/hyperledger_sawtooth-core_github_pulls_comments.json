[
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/71528159",
        "pull_request_review_id": null,
        "id": 71528159,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcxNTI4MTU5",
        "diff_hunk": "@@ -145,7 +145,6 @@ def __init__(self, node, **kwargs):\n \n         self.PendingAckMap = {}\n         self.MessageHandledMap = {}\n-        self.MessageHandlerMap = {}",
        "path": "gossip/gossip_core.py",
        "position": 4,
        "original_position": 4,
        "commit_id": "77c7d32de9c84cfcf6f65c8b7328b88ac519a4b3",
        "original_commit_id": "77c7d32de9c84cfcf6f65c8b7328b88ac519a4b3",
        "user": {
            "login": "boydjohnson",
            "id": 4340785,
            "node_id": "MDQ6VXNlcjQzNDA3ODU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4340785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boydjohnson",
            "html_url": "https://github.com/boydjohnson",
            "followers_url": "https://api.github.com/users/boydjohnson/followers",
            "following_url": "https://api.github.com/users/boydjohnson/following{/other_user}",
            "gists_url": "https://api.github.com/users/boydjohnson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boydjohnson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boydjohnson/subscriptions",
            "organizations_url": "https://api.github.com/users/boydjohnson/orgs",
            "repos_url": "https://api.github.com/users/boydjohnson/repos",
            "events_url": "https://api.github.com/users/boydjohnson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boydjohnson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "MessageHandlerMap and MessageHandledMap are two different dicts. The MessageHandlerMap is a map of message types to handler functions and the MessageHandledMap is a map of handled messages where keys are message identifiers and values are message expiration times. Checkout the code comments from lines 85-118 in gossip_core.py. Thanks for looking through the code.\n",
        "created_at": "2016-07-20T13:54:05Z",
        "updated_at": "2016-07-20T13:54:05Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/6#discussion_r71528159",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/71528159"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/6#discussion_r71528159"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74260343",
        "pull_request_review_id": null,
        "id": 74260343,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0MjYwMzQz",
        "diff_hunk": "@@ -325,6 +418,13 @@ def main(prog_name=os.path.basename(sys.argv[0]), args=sys.argv[1:]):\n         do_keygen(args)\n     elif args.command == 'submit':\n         do_submit(args)\n+    elif args.command == 'block':\n+        if args.url is not None:",
        "path": "sawtooth/cli.py",
        "position": null,
        "original_position": 131,
        "commit_id": "988eab29e7a8fbd562f2d7167c9e5c511fc1f9b1",
        "original_commit_id": "0c15369bac27f3c60eedc6c873b65bb2ec8e4134",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's put the implementation in a do_block() function similar to do_keygen/do_submit.  We will have a lot of these, making it uniform will be important.\n",
        "created_at": "2016-08-10T14:54:33Z",
        "updated_at": "2016-08-12T08:28:24Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74260343",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74260343"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74260343"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74261156",
        "pull_request_review_id": null,
        "id": 74261156,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0MjYxMTU2",
        "diff_hunk": "@@ -309,6 +356,52 @@ def do_submit(args):\n         if not client.wait_for_commit():\n             raise CliException(\"transaction was not successfully committed\")\n \n+class SawtoothCtl(_Communication):",
        "path": "sawtooth/cli.py",
        "position": null,
        "original_position": 77,
        "commit_id": "988eab29e7a8fbd562f2d7167c9e5c511fc1f9b1",
        "original_commit_id": "0c15369bac27f3c60eedc6c873b65bb2ec8e4134",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Would prefer we use SawtoothClient directly, similar to do_submit().  Our intent with the underscore in _Communication is that it be private; at some point we will remove _Communication as we further refine the SawtoothClient class over time, so we are considering it an implementation detail.\n",
        "created_at": "2016-08-10T14:57:59Z",
        "updated_at": "2016-08-12T08:28:24Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74261156",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74261156"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74261156"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74412724",
        "pull_request_review_id": null,
        "id": 74412724,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NDEyNzI0",
        "diff_hunk": "@@ -325,6 +418,13 @@ def main(prog_name=os.path.basename(sys.argv[0]), args=sys.argv[1:]):\n         do_keygen(args)\n     elif args.command == 'submit':\n         do_submit(args)\n+    elif args.command == 'block':\n+        if args.url is not None:",
        "path": "sawtooth/cli.py",
        "position": null,
        "original_position": 131,
        "commit_id": "988eab29e7a8fbd562f2d7167c9e5c511fc1f9b1",
        "original_commit_id": "0c15369bac27f3c60eedc6c873b65bb2ec8e4134",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done\n",
        "created_at": "2016-08-11T12:30:07Z",
        "updated_at": "2016-08-12T08:28:24Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74412724",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74412724"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74412724"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74412882",
        "pull_request_review_id": null,
        "id": 74412882,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NDEyODgy",
        "diff_hunk": "@@ -309,6 +356,52 @@ def do_submit(args):\n         if not client.wait_for_commit():\n             raise CliException(\"transaction was not successfully committed\")\n \n+class SawtoothCtl(_Communication):",
        "path": "sawtooth/cli.py",
        "position": null,
        "original_position": 77,
        "commit_id": "988eab29e7a8fbd562f2d7167c9e5c511fc1f9b1",
        "original_commit_id": "0c15369bac27f3c60eedc6c873b65bb2ec8e4134",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Using LedgerWebClient, Done. \n",
        "created_at": "2016-08-11T12:31:29Z",
        "updated_at": "2016-08-12T08:28:24Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74412882",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74412882"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74412882"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74454340",
        "pull_request_review_id": null,
        "id": 74454340,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NDU0MzQw",
        "diff_hunk": "@@ -25,10 +25,12 @@\n \n from colorlog import ColoredFormatter\n \n-from gossip.common import json2dict\n-from sawtooth.client import SawtoothClient\n+from gossip.common import json2dict, pretty_print_dict\n+from sawtooth.client import SawtoothClient, LedgerWebClient\n from sawtooth.exceptions import ClientException\n from sawtooth.exceptions import InvalidTransactionError\n+from ledger.transaction.endpoint_registry import EndpointRegistryTransaction\n+from __builtin__ import int",
        "path": "sawtooth/cli.py",
        "position": null,
        "original_position": 11,
        "commit_id": "988eab29e7a8fbd562f2d7167c9e5c511fc1f9b1",
        "original_commit_id": "ae419a800fb49f6b476a7dc6fc3b10e046e7bdbf",
        "user": {
            "login": "trbs",
            "id": 65552,
            "node_id": "MDQ6VXNlcjY1NTUy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/65552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trbs",
            "html_url": "https://github.com/trbs",
            "followers_url": "https://api.github.com/users/trbs/followers",
            "following_url": "https://api.github.com/users/trbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/trbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trbs/subscriptions",
            "organizations_url": "https://api.github.com/users/trbs/orgs",
            "repos_url": "https://api.github.com/users/trbs/repos",
            "events_url": "https://api.github.com/users/trbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this needed ? \n\n`int` is already available by default. \nnormally **builtin** is only used when wanting to override the default int object.\nIn Python3 **builtin** won't be available as well.\n\nsee https://docs.python.org/2.7/reference/executionmodel.html\n",
        "created_at": "2016-08-11T16:19:17Z",
        "updated_at": "2016-08-12T08:28:24Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74454340",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74454340"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74454340"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74538331",
        "pull_request_review_id": null,
        "id": 74538331,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NTM4MzMx",
        "diff_hunk": "@@ -25,10 +25,12 @@\n \n from colorlog import ColoredFormatter\n \n-from gossip.common import json2dict\n-from sawtooth.client import SawtoothClient\n+from gossip.common import json2dict, pretty_print_dict\n+from sawtooth.client import SawtoothClient, LedgerWebClient\n from sawtooth.exceptions import ClientException\n from sawtooth.exceptions import InvalidTransactionError\n+from ledger.transaction.endpoint_registry import EndpointRegistryTransaction\n+from __builtin__ import int",
        "path": "sawtooth/cli.py",
        "position": null,
        "original_position": 11,
        "commit_id": "988eab29e7a8fbd562f2d7167c9e5c511fc1f9b1",
        "original_commit_id": "ae419a800fb49f6b476a7dc6fc3b10e046e7bdbf",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done, please take a look.\n",
        "created_at": "2016-08-12T03:45:26Z",
        "updated_at": "2016-08-12T08:28:24Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74538331",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/74538331"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/11#discussion_r74538331"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/75306805",
        "pull_request_review_id": null,
        "id": 75306805,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1MzA2ODA1",
        "diff_hunk": "@@ -779,24 +779,34 @@ def get_transaction_status(self, txnid, timeout=30):\n             request.get_method = lambda: 'HEAD'\n             opener = urllib2.build_opener(self.proxy_handler)\n             response = opener.open(request, timeout=timeout)\n-            code = response.getcode()\n-            response.close()\n-            if code == 200:\n-                return transaction.Status.committed\n-            elif code == 302:\n-                return transaction.Status.pending\n-            else:\n-                return transaction.Status.unknown\n \n         except urllib2.HTTPError as err:\n             LOGGER.error('peer operation on url %s failed with response: %d',\n                          url, err.code)\n+            if err.code == 302:\n+                return transaction.Status.pending\n+\n+            raise MessageException('operation failed '\n+                                   'with response: {0}'.format(err.code))\n \n         except urllib2.URLError as err:\n             LOGGER.error('peer operation on url %s failed: %s', url,\n                          err.reason)\n+            raise MessageException('operation failed: {0}'.format(err.reason))\n+\n+        except:",
        "path": "sawtooth/client.py",
        "position": null,
        "original_position": 27,
        "commit_id": "511f3bfa6c8cfeb9eace0003833cf9589eaf5c09",
        "original_commit_id": "39301de4c2ea6f327e3b9c0d08b67bb36bb7b668",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In general, we should avoid bare excepts.  This bare except would catch all exceptions, including coding errors (typos and such), and return \"no response from peer\" which would be incorrect in those cases.\n",
        "created_at": "2016-08-18T13:26:21Z",
        "updated_at": "2016-08-22T09:20:00Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r75306805",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/75306805"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r75306805"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/75307539",
        "pull_request_review_id": null,
        "id": 75307539,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1MzA3NTM5",
        "diff_hunk": "@@ -779,24 +779,34 @@ def get_transaction_status(self, txnid, timeout=30):\n             request.get_method = lambda: 'HEAD'\n             opener = urllib2.build_opener(self.proxy_handler)\n             response = opener.open(request, timeout=timeout)\n-            code = response.getcode()\n-            response.close()\n-            if code == 200:\n-                return transaction.Status.committed\n-            elif code == 302:\n-                return transaction.Status.pending\n-            else:\n-                return transaction.Status.unknown\n \n         except urllib2.HTTPError as err:\n             LOGGER.error('peer operation on url %s failed with response: %d',\n                          url, err.code)\n+            if err.code == 302:",
        "path": "sawtooth/client.py",
        "position": null,
        "original_position": 16,
        "commit_id": "511f3bfa6c8cfeb9eace0003833cf9589eaf5c09",
        "original_commit_id": "39301de4c2ea6f327e3b9c0d08b67bb36bb7b668",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is there an easy way to reproduce this code path?  What's the error string when this happens?  It seems odd that we can get a 302 both with and without an exception being thrown.\n",
        "created_at": "2016-08-18T13:30:53Z",
        "updated_at": "2016-08-22T09:20:00Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r75307539",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/75307539"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r75307539"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/75416347",
        "pull_request_review_id": null,
        "id": 75416347,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1NDE2MzQ3",
        "diff_hunk": "@@ -779,24 +779,34 @@ def get_transaction_status(self, txnid, timeout=30):\n             request.get_method = lambda: 'HEAD'\n             opener = urllib2.build_opener(self.proxy_handler)\n             response = opener.open(request, timeout=timeout)\n-            code = response.getcode()\n-            response.close()\n-            if code == 200:\n-                return transaction.Status.committed\n-            elif code == 302:\n-                return transaction.Status.pending\n-            else:\n-                return transaction.Status.unknown\n \n         except urllib2.HTTPError as err:\n             LOGGER.error('peer operation on url %s failed with response: %d',\n                          url, err.code)\n+            if err.code == 302:\n+                return transaction.Status.pending\n+\n+            raise MessageException('operation failed '\n+                                   'with response: {0}'.format(err.code))\n \n         except urllib2.URLError as err:\n             LOGGER.error('peer operation on url %s failed: %s', url,\n                          err.reason)\n+            raise MessageException('operation failed: {0}'.format(err.reason))\n+\n+        except:",
        "path": "sawtooth/client.py",
        "position": null,
        "original_position": 27,
        "commit_id": "511f3bfa6c8cfeb9eace0003833cf9589eaf5c09",
        "original_commit_id": "39301de4c2ea6f327e3b9c0d08b67bb36bb7b668",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, I know this. But all of other functions catch all exceptions, such as [headrequest](https://github.com/hyperledger/sawtooth-core/blob/master/sawtooth/client.py#L83), [getmsg](https://github.com/hyperledger/sawtooth-core/blob/master/sawtooth/client.py#L113), [postmsg](https://github.com/hyperledger/sawtooth-core/blob/master/sawtooth/client.py#L159), [_geturl](https://github.com/hyperledger/sawtooth-core/blob/master/sawtooth/client.py#L859), [_posturl](https://github.com/hyperledger/sawtooth-core/blob/master/sawtooth/client.py#L919), I'm not sure is there any reason for these functions? or we should avoid bare excepts for these functions either?\n",
        "created_at": "2016-08-19T01:27:45Z",
        "updated_at": "2016-08-22T09:20:00Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r75416347",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/75416347"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r75416347"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/75418226",
        "pull_request_review_id": null,
        "id": 75418226,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1NDE4MjI2",
        "diff_hunk": "@@ -779,24 +779,34 @@ def get_transaction_status(self, txnid, timeout=30):\n             request.get_method = lambda: 'HEAD'\n             opener = urllib2.build_opener(self.proxy_handler)\n             response = opener.open(request, timeout=timeout)\n-            code = response.getcode()\n-            response.close()\n-            if code == 200:\n-                return transaction.Status.committed\n-            elif code == 302:\n-                return transaction.Status.pending\n-            else:\n-                return transaction.Status.unknown\n \n         except urllib2.HTTPError as err:\n             LOGGER.error('peer operation on url %s failed with response: %d',\n                          url, err.code)\n+            if err.code == 302:",
        "path": "sawtooth/client.py",
        "position": null,
        "original_position": 16,
        "commit_id": "511f3bfa6c8cfeb9eace0003833cf9589eaf5c09",
        "original_commit_id": "39301de4c2ea6f327e3b9c0d08b67bb36bb7b668",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "When a transaction submitted but has not been committed, then get the status for this transaction, this could reproduce this code path.  As I know, when transaction exists but has not been committed, server returns error_response 302 for getting the status of the transaction. Maybe we should reconsider this scenario.\n",
        "created_at": "2016-08-19T01:57:00Z",
        "updated_at": "2016-08-22T09:20:00Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r75418226",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/75418226"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r75418226"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76669454",
        "pull_request_review_id": null,
        "id": 76669454,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2NjY5NDU0",
        "diff_hunk": "@@ -779,24 +779,34 @@ def get_transaction_status(self, txnid, timeout=30):\n             request.get_method = lambda: 'HEAD'\n             opener = urllib2.build_opener(self.proxy_handler)\n             response = opener.open(request, timeout=timeout)\n-            code = response.getcode()\n-            response.close()\n-            if code == 200:\n-                return transaction.Status.committed\n-            elif code == 302:\n-                return transaction.Status.pending\n-            else:\n-                return transaction.Status.unknown\n \n         except urllib2.HTTPError as err:\n             LOGGER.error('peer operation on url %s failed with response: %d',\n                          url, err.code)\n+            if err.code == 302:",
        "path": "core/sawtooth/client.py",
        "position": 16,
        "original_position": 16,
        "commit_id": "511f3bfa6c8cfeb9eace0003833cf9589eaf5c09",
        "original_commit_id": "511f3bfa6c8cfeb9eace0003833cf9589eaf5c09",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If the normal flow is that a 302 does not generate a HTTPError exception, I'm still wondering why we need to check for 302 here.  Do they actually both mean pending-with-no-error?\n",
        "created_at": "2016-08-29T19:19:02Z",
        "updated_at": "2016-08-29T19:19:02Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r76669454",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76669454"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r76669454"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76671040",
        "pull_request_review_id": null,
        "id": 76671040,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2NjcxMDQw",
        "diff_hunk": "@@ -779,24 +779,34 @@ def get_transaction_status(self, txnid, timeout=30):\n             request.get_method = lambda: 'HEAD'\n             opener = urllib2.build_opener(self.proxy_handler)\n             response = opener.open(request, timeout=timeout)\n-            code = response.getcode()\n-            response.close()\n-            if code == 200:\n-                return transaction.Status.committed\n-            elif code == 302:\n-                return transaction.Status.pending\n-            else:\n-                return transaction.Status.unknown\n \n         except urllib2.HTTPError as err:\n             LOGGER.error('peer operation on url %s failed with response: %d',\n                          url, err.code)\n+            if err.code == 302:\n+                return transaction.Status.pending\n+\n+            raise MessageException('operation failed '",
        "path": "core/sawtooth/client.py",
        "position": 19,
        "original_position": 19,
        "commit_id": "511f3bfa6c8cfeb9eace0003833cf9589eaf5c09",
        "original_commit_id": "511f3bfa6c8cfeb9eace0003833cf9589eaf5c09",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This changes the behavior of errors from returning unknown to an exception.  From a quick review of clients currently checking for 'unknown', the only place that looks potentially problematic is simulator.py, which removes validators upon MessageException and has different behavior for 'unknown'.\n",
        "created_at": "2016-08-29T19:29:48Z",
        "updated_at": "2016-08-29T19:29:48Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r76671040",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76671040"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r76671040"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76722795",
        "pull_request_review_id": null,
        "id": 76722795,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2NzIyNzk1",
        "diff_hunk": "@@ -779,24 +779,34 @@ def get_transaction_status(self, txnid, timeout=30):\n             request.get_method = lambda: 'HEAD'\n             opener = urllib2.build_opener(self.proxy_handler)\n             response = opener.open(request, timeout=timeout)\n-            code = response.getcode()\n-            response.close()\n-            if code == 200:\n-                return transaction.Status.committed\n-            elif code == 302:\n-                return transaction.Status.pending\n-            else:\n-                return transaction.Status.unknown\n \n         except urllib2.HTTPError as err:\n             LOGGER.error('peer operation on url %s failed with response: %d',\n                          url, err.code)\n+            if err.code == 302:\n+                return transaction.Status.pending\n+\n+            raise MessageException('operation failed '",
        "path": "core/sawtooth/client.py",
        "position": 19,
        "original_position": 19,
        "commit_id": "511f3bfa6c8cfeb9eace0003833cf9589eaf5c09",
        "original_commit_id": "511f3bfa6c8cfeb9eace0003833cf9589eaf5c09",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "When a transaction exists but has not been committed, transaction_page raise Error(http.FOUND(=302), 'transaction not committed {0}'.format(txnid)), then return error_response that code =  302. The urllib2.open will raise urllib2.HTTPError, and err.code = 302. So client couldn't return transaction.Status.pending if we don't add the line 'if err.code == 302:' there.\n",
        "created_at": "2016-08-30T02:41:27Z",
        "updated_at": "2016-08-30T02:41:27Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r76722795",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76722795"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/12#discussion_r76722795"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/12"
            }
        },
        "in_reply_to_id": 76671040
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76677180",
        "pull_request_review_id": null,
        "id": 76677180,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2Njc3MTgw",
        "diff_hunk": "@@ -168,6 +178,9 @@ def _sendtxn(self, update):\n         self.LastTransaction = txnid\n         txn.apply(self.CurrentState.State)\n \n+#         if not self.enable_session:",
        "path": "extensions/mktplace/mktplace/mktplace_client.py",
        "position": null,
        "original_position": 52,
        "commit_id": "07061e7a9d7057eab198c0d91f9a5ae5b6620c22",
        "original_commit_id": "aad1fac178421e2e8a49eab6dafbe415fb9b4bad",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please remove commented out code.\n",
        "created_at": "2016-08-29T20:07:06Z",
        "updated_at": "2016-09-01T02:28:01Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76677180",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76677180"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76677180"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76677209",
        "pull_request_review_id": null,
        "id": 76677209,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2Njc3MjA5",
        "diff_hunk": "@@ -189,6 +202,8 @@ def _register(self, update):\n         # the name map\n         if txnid:\n             fqname = self.CurrentState.i2n(txnid)\n+#             fqname = update.Name",
        "path": "extensions/mktplace/mktplace/mktplace_client.py",
        "position": null,
        "original_position": 62,
        "commit_id": "07061e7a9d7057eab198c0d91f9a5ae5b6620c22",
        "original_commit_id": "aad1fac178421e2e8a49eab6dafbe415fb9b4bad",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please remove commented out code.\n",
        "created_at": "2016-08-29T20:07:15Z",
        "updated_at": "2016-09-01T02:28:01Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76677209",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76677209"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76677209"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76677428",
        "pull_request_review_id": null,
        "id": 76677428,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2Njc3NDI4",
        "diff_hunk": "@@ -135,12 +137,26 @@ def postmsg(self, msgtype, info):\n                                       {'Content-Type': 'application/cbor',\n                                        'Content-Length': datalen})\n             opener = urllib2.build_opener(self.ProxyHandler)\n-            response = opener.open(request, timeout=10)\n+\n+            if path == '/prevalidate':\n+                if self._cookie:\n+                    request.add_header('cookie', self._cookie)\n+                response = opener.open(request, timeout=10)\n+                if not self._cookie:\n+                    self._cookie = response.headers.get('Set-Cookie')\n+                    logger.debug('self._cookie %s', self._cookie)\n+            else:\n+                response = opener.open(request, timeout=10)\n \n         except urllib2.HTTPError as err:\n             logger.warn('operation failed with response: %s', err.code)\n-            raise MessageException(\n-                'operation failed with response: {0}'.format(err.code))\n+            err_content = err.read()\n+            if err_content.find(\"InvalidTransactionError\"):",
        "path": "extensions/mktplace/mktplace/mktplace_communication.py",
        "position": null,
        "original_position": 55,
        "commit_id": "07061e7a9d7057eab198c0d91f9a5ae5b6620c22",
        "original_commit_id": "aad1fac178421e2e8a49eab6dafbe415fb9b4bad",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should potentially check for a status code of BAD_REQUEST here.\n",
        "created_at": "2016-08-29T20:08:42Z",
        "updated_at": "2016-09-01T02:28:01Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76677428",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76677428"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76677428"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76677473",
        "pull_request_review_id": null,
        "id": 76677473,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2Njc3NDcz",
        "diff_hunk": "@@ -495,6 +496,10 @@ def is_valid(self, store):\n \n         return True\n \n+#     def check_valid(self, store):",
        "path": "extensions/mktplace/mktplace/transactions/market_place.py",
        "position": null,
        "original_position": 12,
        "commit_id": "07061e7a9d7057eab198c0d91f9a5ae5b6620c22",
        "original_commit_id": "aad1fac178421e2e8a49eab6dafbe415fb9b4bad",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please remove commented out code.\n",
        "created_at": "2016-08-29T20:08:59Z",
        "updated_at": "2016-09-01T02:28:01Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76677473",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76677473"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76677473"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76677552",
        "pull_request_review_id": null,
        "id": 76677552,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2Njc3NTUy",
        "diff_hunk": "@@ -114,7 +114,7 @@ def version(default):\n     url='http://www.intel.com',\n     packages=find_packages(),\n     install_requires=['sawtooth-core', 'cbor>=0.1.23', 'colorlog',\n-                      'twisted', 'PyYAML', 'psutil', 'numpy'],",
        "path": "validator/setup.py",
        "position": null,
        "original_position": 4,
        "commit_id": "07061e7a9d7057eab198c0d91f9a5ae5b6620c22",
        "original_commit_id": "aad1fac178421e2e8a49eab6dafbe415fb9b4bad",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This was perhaps accidentally added to this PR?\n",
        "created_at": "2016-08-29T20:09:36Z",
        "updated_at": "2016-09-01T02:28:01Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76677552",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76677552"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76677552"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76737388",
        "pull_request_review_id": null,
        "id": 76737388,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2NzM3Mzg4",
        "diff_hunk": "@@ -135,12 +137,26 @@ def postmsg(self, msgtype, info):\n                                       {'Content-Type': 'application/cbor',\n                                        'Content-Length': datalen})\n             opener = urllib2.build_opener(self.ProxyHandler)\n-            response = opener.open(request, timeout=10)\n+\n+            if path == '/prevalidate':\n+                if self._cookie:\n+                    request.add_header('cookie', self._cookie)\n+                response = opener.open(request, timeout=10)\n+                if not self._cookie:\n+                    self._cookie = response.headers.get('Set-Cookie')\n+                    logger.debug('self._cookie %s', self._cookie)\n+            else:\n+                response = opener.open(request, timeout=10)\n \n         except urllib2.HTTPError as err:\n             logger.warn('operation failed with response: %s', err.code)\n-            raise MessageException(\n-                'operation failed with response: {0}'.format(err.code))\n+            err_content = err.read()\n+            if err_content.find(\"InvalidTransactionError\"):",
        "path": "extensions/mktplace/mktplace/mktplace_communication.py",
        "position": null,
        "original_position": 55,
        "commit_id": "07061e7a9d7057eab198c0d91f9a5ae5b6620c22",
        "original_commit_id": "aad1fac178421e2e8a49eab6dafbe415fb9b4bad",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done. Others Done too.\n",
        "created_at": "2016-08-30T06:37:27Z",
        "updated_at": "2016-09-01T02:28:01Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76737388",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/76737388"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r76737388"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18"
            }
        },
        "in_reply_to_id": 76677428
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/77944752",
        "pull_request_review_id": null,
        "id": 77944752,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3OTQ0NzUy",
        "diff_hunk": "@@ -0,0 +1,131 @@\n+# Copyright 2016 Intel Corporation\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ------------------------------------------------------------------------------\n+\n+import copy\n+import logging\n+import traceback\n+\n+from zope.interface import Interface, Attribute, implements",
        "path": "validator/txnserver/web_pages/prevalidation_page.py",
        "position": 20,
        "original_position": 20,
        "commit_id": "07061e7a9d7057eab198c0d91f9a5ae5b6620c22",
        "original_commit_id": "07061e7a9d7057eab198c0d91f9a5ae5b6620c22",
        "user": {
            "login": "vaporos",
            "id": 2374712,
            "node_id": "MDQ6VXNlcjIzNzQ3MTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2374712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaporos",
            "html_url": "https://github.com/vaporos",
            "followers_url": "https://api.github.com/users/vaporos/followers",
            "following_url": "https://api.github.com/users/vaporos/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaporos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaporos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaporos/subscriptions",
            "organizations_url": "https://api.github.com/users/vaporos/orgs",
            "repos_url": "https://api.github.com/users/vaporos/repos",
            "events_url": "https://api.github.com/users/vaporos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaporos/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We don't want to add a zope dependency here.\n",
        "created_at": "2016-09-08T04:34:46Z",
        "updated_at": "2016-09-08T04:34:46Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r77944752",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/77944752"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r77944752"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/77985301",
        "pull_request_review_id": null,
        "id": 77985301,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3OTg1MzAx",
        "diff_hunk": "@@ -0,0 +1,131 @@\n+# Copyright 2016 Intel Corporation\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ------------------------------------------------------------------------------\n+\n+import copy\n+import logging\n+import traceback\n+\n+from zope.interface import Interface, Attribute, implements",
        "path": "validator/txnserver/web_pages/prevalidation_page.py",
        "position": 20,
        "original_position": 20,
        "commit_id": "07061e7a9d7057eab198c0d91f9a5ae5b6620c22",
        "original_commit_id": "07061e7a9d7057eab198c0d91f9a5ae5b6620c22",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why we don't want to add a zope dependency?  And what you suggest?\n",
        "created_at": "2016-09-08T10:58:48Z",
        "updated_at": "2016-09-08T10:58:48Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r77985301",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/77985301"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/18#discussion_r77985301"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/18"
            }
        },
        "in_reply_to_id": 77944752
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88130753",
        "pull_request_review_id": 8713699,
        "id": 88130753,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTMwNzUz",
        "diff_hunk": "@@ -5,5 +5,5 @@ mkdir /home/vagrant/sawtooth/keys\n mkdir /home/vagrant/sawtooth/data\n mkdir /home/vagrant/sawtooth/logs\n ./bin/sawtooth keygen base000 --key-dir /home/vagrant/sawtooth/keys\n-./bin/sawtooth admin poet0-genesis --keyfile /home/vagrant/sawtooth/keys/base000.wif -F mktplace.transactions.market_place -F ledger.transaction.integer_key\n+./bin/sawtooth admin poet1-genesis --keyfile /home/vagrant/sawtooth/keys/base000.wif -F mktplace.transactions.market_place -F sawtooth_validator.consensus.poet1.validator_registry",
        "path": "docs/source/tutorial/genesis.sh",
        "position": null,
        "original_position": 5,
        "commit_id": "cc9a4b227da409341df05ec458558d0bde55cb98",
        "original_commit_id": "f87800200d0fa8ff27e2ecd0937d5b5c8ea38b7b",
        "user": {
            "login": "dcmiddle",
            "id": 4999494,
            "node_id": "MDQ6VXNlcjQ5OTk0OTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4999494?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcmiddle",
            "html_url": "https://github.com/dcmiddle",
            "followers_url": "https://api.github.com/users/dcmiddle/followers",
            "following_url": "https://api.github.com/users/dcmiddle/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcmiddle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcmiddle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcmiddle/subscriptions",
            "organizations_url": "https://api.github.com/users/dcmiddle/orgs",
            "repos_url": "https://api.github.com/users/dcmiddle/repos",
            "events_url": "https://api.github.com/users/dcmiddle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcmiddle/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's hold off on this. We will switch the tutorial to poet1 as a different PR when we deprecate poet0.\n",
        "created_at": "2016-11-15T22:40:19Z",
        "updated_at": "2016-11-23T11:02:31Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88130753",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88130753"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88130753"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88130853",
        "pull_request_review_id": 8713699,
        "id": 88130853,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTMwODUz",
        "diff_hunk": "@@ -241,6 +241,124 @@ def dump(self):\n         return result\n \n \n+class PermissionedValidtaorUpdate(object):",
        "path": "validator/sawtooth_validator/consensus/poet1/validator_registry.py",
        "position": null,
        "original_position": 4,
        "commit_id": "cc9a4b227da409341df05ec458558d0bde55cb98",
        "original_commit_id": "f87800200d0fa8ff27e2ecd0937d5b5c8ea38b7b",
        "user": {
            "login": "dcmiddle",
            "id": 4999494,
            "node_id": "MDQ6VXNlcjQ5OTk0OTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4999494?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcmiddle",
            "html_url": "https://github.com/dcmiddle",
            "followers_url": "https://api.github.com/users/dcmiddle/followers",
            "following_url": "https://api.github.com/users/dcmiddle/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcmiddle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcmiddle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcmiddle/subscriptions",
            "organizations_url": "https://api.github.com/users/dcmiddle/orgs",
            "repos_url": "https://api.github.com/users/dcmiddle/repos",
            "events_url": "https://api.github.com/users/dcmiddle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcmiddle/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "typo Validtaor != Validator\n",
        "created_at": "2016-11-15T22:40:55Z",
        "updated_at": "2016-11-23T11:02:31Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88130853",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88130853"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88130853"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88159083",
        "pull_request_review_id": 8713699,
        "id": 88159083,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTU5MDgz",
        "diff_hunk": "@@ -293,7 +411,11 @@ def __init__(self, minfo=None):\n         self.update = None\n \n         if 'Update' in minfo:\n-            self.update = Update(minfo=minfo['Update'])\n+            if 'signup_info' in minfo['Update']:",
        "path": "validator/sawtooth_validator/consensus/poet1/validator_registry.py",
        "position": null,
        "original_position": 130,
        "commit_id": "cc9a4b227da409341df05ec458558d0bde55cb98",
        "original_commit_id": "f87800200d0fa8ff27e2ecd0937d5b5c8ea38b7b",
        "user": {
            "login": "dcmiddle",
            "id": 4999494,
            "node_id": "MDQ6VXNlcjQ5OTk0OTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4999494?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcmiddle",
            "html_url": "https://github.com/dcmiddle",
            "followers_url": "https://api.github.com/users/dcmiddle/followers",
            "following_url": "https://api.github.com/users/dcmiddle/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcmiddle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcmiddle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcmiddle/subscriptions",
            "organizations_url": "https://api.github.com/users/dcmiddle/orgs",
            "repos_url": "https://api.github.com/users/dcmiddle/repos",
            "events_url": "https://api.github.com/users/dcmiddle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcmiddle/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We need to think about whether its really ok to just switch on the message contents or whether its better to have an exclusive-or on these policies. I think a ledger that allows a mix of white-listed nodes and full poet nodes to intermix might lead to difficulties.\n",
        "created_at": "2016-11-16T02:38:57Z",
        "updated_at": "2016-11-23T11:02:31Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88159083",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88159083"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88159083"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88159258",
        "pull_request_review_id": 8713699,
        "id": 88159258,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTU5MjU4",
        "diff_hunk": "@@ -155,26 +155,12 @@ def print_trans_info(args, web_client, tsctids):\n         \"Identifier\": \"TRANS\",\n         \"InBlock\": \"BLOCK\",\n         \"Status\": \"STATUS\",\n-        \"TransactionType\": \"TXNTYPE\",\n-        \"Update\": {",
        "path": "core/sawtooth/cli/transaction.py",
        "position": null,
        "original_position": 5,
        "commit_id": "cc9a4b227da409341df05ec458558d0bde55cb98",
        "original_commit_id": "f87800200d0fa8ff27e2ecd0937d5b5c8ea38b7b",
        "user": {
            "login": "dcmiddle",
            "id": 4999494,
            "node_id": "MDQ6VXNlcjQ5OTk0OTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4999494?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcmiddle",
            "html_url": "https://github.com/dcmiddle",
            "followers_url": "https://api.github.com/users/dcmiddle/followers",
            "following_url": "https://api.github.com/users/dcmiddle/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcmiddle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcmiddle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcmiddle/subscriptions",
            "organizations_url": "https://api.github.com/users/dcmiddle/orgs",
            "repos_url": "https://api.github.com/users/dcmiddle/repos",
            "events_url": "https://api.github.com/users/dcmiddle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcmiddle/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do these changes relate to the whitelist PR?\n",
        "created_at": "2016-11-16T02:40:59Z",
        "updated_at": "2016-11-23T11:02:31Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88159258",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88159258"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88159258"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88161530",
        "pull_request_review_id": 8743240,
        "id": 88161530,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTYxNTMw",
        "diff_hunk": "@@ -155,26 +155,12 @@ def print_trans_info(args, web_client, tsctids):\n         \"Identifier\": \"TRANS\",\n         \"InBlock\": \"BLOCK\",\n         \"Status\": \"STATUS\",\n-        \"TransactionType\": \"TXNTYPE\",\n-        \"Update\": {",
        "path": "core/sawtooth/cli/transaction.py",
        "position": null,
        "original_position": 5,
        "commit_id": "cc9a4b227da409341df05ec458558d0bde55cb98",
        "original_commit_id": "f87800200d0fa8ff27e2ecd0937d5b5c8ea38b7b",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's just my idea that an administrator has the role to register the permissioned validator. If we don't want to introduce an powerful node like an administrator. I'll change this file, and just get validators information like [an endpoint client](https://github.com/hyperledger/sawtooth-core/blob/master/core/sawtooth/endpoint_client.py). \n",
        "created_at": "2016-11-16T03:07:26Z",
        "updated_at": "2016-11-23T11:02:31Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88161530",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88161530"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88161530"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30"
            }
        },
        "in_reply_to_id": 88159258
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88161595",
        "pull_request_review_id": 8743296,
        "id": 88161595,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTYxNTk1",
        "diff_hunk": "@@ -5,5 +5,5 @@ mkdir /home/vagrant/sawtooth/keys\n mkdir /home/vagrant/sawtooth/data\n mkdir /home/vagrant/sawtooth/logs\n ./bin/sawtooth keygen base000 --key-dir /home/vagrant/sawtooth/keys\n-./bin/sawtooth admin poet0-genesis --keyfile /home/vagrant/sawtooth/keys/base000.wif -F mktplace.transactions.market_place -F ledger.transaction.integer_key\n+./bin/sawtooth admin poet1-genesis --keyfile /home/vagrant/sawtooth/keys/base000.wif -F mktplace.transactions.market_place -F sawtooth_validator.consensus.poet1.validator_registry",
        "path": "docs/source/tutorial/genesis.sh",
        "position": null,
        "original_position": 5,
        "commit_id": "cc9a4b227da409341df05ec458558d0bde55cb98",
        "original_commit_id": "f87800200d0fa8ff27e2ecd0937d5b5c8ea38b7b",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK. I changed it here is just for somebody want to test this PR.\n",
        "created_at": "2016-11-16T03:08:13Z",
        "updated_at": "2016-11-23T11:02:31Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88161595",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88161595"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88161595"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30"
            }
        },
        "in_reply_to_id": 88130753
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88162879",
        "pull_request_review_id": 8744489,
        "id": 88162879,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTYyODc5",
        "diff_hunk": "@@ -155,26 +155,12 @@ def print_trans_info(args, web_client, tsctids):\n         \"Identifier\": \"TRANS\",\n         \"InBlock\": \"BLOCK\",\n         \"Status\": \"STATUS\",\n-        \"TransactionType\": \"TXNTYPE\",\n-        \"Update\": {",
        "path": "core/sawtooth/cli/transaction.py",
        "position": null,
        "original_position": 5,
        "commit_id": "cc9a4b227da409341df05ec458558d0bde55cb98",
        "original_commit_id": "f87800200d0fa8ff27e2ecd0937d5b5c8ea38b7b",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sorry, the above comment doesn't answer your question. Not related, but we need to print different transaction information due to different transaction type, for example,  the update of ValidatorTransaction is different from the update of the other transaction type. \n",
        "created_at": "2016-11-16T03:27:14Z",
        "updated_at": "2016-11-23T11:02:31Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88162879",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88162879"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88162879"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30"
            }
        },
        "in_reply_to_id": 88159258
    },
    {
        "url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88163544",
        "pull_request_review_id": 8745067,
        "id": 88163544,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTYzNTQ0",
        "diff_hunk": "@@ -293,7 +411,11 @@ def __init__(self, minfo=None):\n         self.update = None\n \n         if 'Update' in minfo:\n-            self.update = Update(minfo=minfo['Update'])\n+            if 'signup_info' in minfo['Update']:",
        "path": "validator/sawtooth_validator/consensus/poet1/validator_registry.py",
        "position": null,
        "original_position": 130,
        "commit_id": "cc9a4b227da409341df05ec458558d0bde55cb98",
        "original_commit_id": "f87800200d0fa8ff27e2ecd0937d5b5c8ea38b7b",
        "user": {
            "login": "feihujiang",
            "id": 2322270,
            "node_id": "MDQ6VXNlcjIzMjIyNzA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2322270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feihujiang",
            "html_url": "https://github.com/feihujiang",
            "followers_url": "https://api.github.com/users/feihujiang/followers",
            "following_url": "https://api.github.com/users/feihujiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/feihujiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feihujiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feihujiang/subscriptions",
            "organizations_url": "https://api.github.com/users/feihujiang/orgs",
            "repos_url": "https://api.github.com/users/feihujiang/repos",
            "events_url": "https://api.github.com/users/feihujiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feihujiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK, I'll change it. I'll implement it like updates of MarketPlaceTransaction, do you think so?\n",
        "created_at": "2016-11-16T03:37:36Z",
        "updated_at": "2016-11-23T11:02:31Z",
        "html_url": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88163544",
        "pull_request_url": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/comments/88163544"
            },
            "html": {
                "href": "https://github.com/hyperledger/sawtooth-core/pull/30#discussion_r88163544"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/hyperledger/sawtooth-core/pulls/30"
            }
        },
        "in_reply_to_id": 88159083
    }
]