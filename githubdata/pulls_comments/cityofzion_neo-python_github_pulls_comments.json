[
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/147866831",
        "pull_request_review_id": 73023309,
        "id": 147866831,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Nzg2NjgzMQ==",
        "diff_hunk": "@@ -39,47 +39,79 @@\n ### Get Help or give help\n \n - Open a new [issue](https://github.com/CityOfZion/neo-python/issues/new) if you encounter a problem.\n-- Or ping **@localhuman** on the [NEO Slack](https://join.slack.com/t/neoblockchainteam/shared_invite/MjE3ODMxNDUzMDE1LTE1MDA4OTY3NDQtNTMwM2MyMTc2NA).\n-- Pull requests welcome. You can help with wallet functionality, writing tests or documentation, or on any other feature you deem awesome.  All successful pull requests will be rewarded with one photo of a cat or kitten.\n+- Or ping [@localhuman](https://github.com/localhuman) on the [NEO Slack](https://join.slack.com/t/neoblockchainteam/shared_invite/MjE3ODMxNDUzMDE1LTE1MDA4OTY3NDQtNTMwM2MyMTc2NA).\n+- Pull requests are welcome. You can help with wallet functionality, writing tests or documentation, or on any other feature you deem awesome.  All successful pull requests will be rewarded with one photo of a cat or kitten. \n \n+### License\n+\n+- Open-source [Apache 2.0](https://github.com/CityOfZion/neo-python/blob/master/LICENSE).\n+- Main author is [@localhuman](https://github.com/localhuman).\n+\n+### Project structure\n+\n+```\n+neo-python\n+\u251c\u2500\u2500 compiler.py\n+\u251c\u2500\u2500 prompt.py            <\u2500\u2500\u2500 terminal client\n+\u251c\u2500\u2500 node.py\n+\u2514\u2500\u2500 neo\n+    \u251c\u2500\u2500 Core\n+        \u251c\u2500\u2500 State\n+        \u2514\u2500\u2500 TX\n+    \u251c\u2500\u2500 Cryptography\n+    \u251c\u2500\u2500 Implementations\n+        \u251c\u2500\u2500 Blockchains\n+            \u251c\u2500\u2500 LevelDB\n+            \u2514\u2500\u2500 RPC\n+        \u2514\u2500\u2500 Wallets\n+    \u251c\u2500\u2500 IO\n+    \u251c\u2500\u2500 Network\n+        \u2514\u2500\u2500 Payloads\n+    \u251c\u2500\u2500 SmartContract\n+        \u251c\u2500\u2500 Framework\n+            \u251c\u2500\u2500 Neo\n+            \u2514\u2500\u2500 System\n+    \u251c\u2500\u2500 Utils\n+    \u251c\u2500\u2500 VM\n+    \u2514\u2500\u2500 Wallets\n+```\n ",
        "path": "README.md",
        "position": 69,
        "original_position": 69,
        "commit_id": "da6eefbc2da71e2bf37170edb29c75accf4ec787",
        "original_commit_id": "da6eefbc2da71e2bf37170edb29c75accf4ec787",
        "user": {
            "login": "localhuman",
            "id": 192884,
            "node_id": "MDQ6VXNlcjE5Mjg4NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/192884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/localhuman",
            "html_url": "https://github.com/localhuman",
            "followers_url": "https://api.github.com/users/localhuman/followers",
            "following_url": "https://api.github.com/users/localhuman/following{/other_user}",
            "gists_url": "https://api.github.com/users/localhuman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/localhuman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/localhuman/subscriptions",
            "organizations_url": "https://api.github.com/users/localhuman/orgs",
            "repos_url": "https://api.github.com/users/localhuman/repos",
            "events_url": "https://api.github.com/users/localhuman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/localhuman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would rather have a docs setup similar to neo-boa to put more extended explanations like this.",
        "created_at": "2017-10-30T23:59:41Z",
        "updated_at": "2017-10-30T23:59:41Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/10#discussion_r147866831",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/10",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/147866831"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/10#discussion_r147866831"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/10"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/147866939",
        "pull_request_review_id": 73023426,
        "id": 147866939,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Nzg2NjkzOQ==",
        "diff_hunk": "@@ -120,43 +151,16 @@ installation command\n ```\n \n ## Running\n-After installing requirements and activating your environment, there is an easy\n-to use `prompt.py` file for you to run the node as well as some basic interactivity\n \n-```\n-python prompt.py\n-NEO cli. Type 'help' to get started\n-\n-neo> show state\n-Progress: 1054913 / 1237188\n+After installing requirements and activating your environment, \n+there is an easy to use `prompt.py` file for you to run the node \n+as well as some basic interactivity:\n \n-neo>\n-```\n+![opening prompt.py](http://i.imgur.com/jQklFSB.png)",
        "path": "README.md",
        "position": 149,
        "original_position": 149,
        "commit_id": "da6eefbc2da71e2bf37170edb29c75accf4ec787",
        "original_commit_id": "da6eefbc2da71e2bf37170edb29c75accf4ec787",
        "user": {
            "login": "localhuman",
            "id": 192884,
            "node_id": "MDQ6VXNlcjE5Mjg4NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/192884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/localhuman",
            "html_url": "https://github.com/localhuman",
            "followers_url": "https://api.github.com/users/localhuman/followers",
            "following_url": "https://api.github.com/users/localhuman/following{/other_user}",
            "gists_url": "https://api.github.com/users/localhuman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/localhuman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/localhuman/subscriptions",
            "organizations_url": "https://api.github.com/users/localhuman/orgs",
            "repos_url": "https://api.github.com/users/localhuman/repos",
            "events_url": "https://api.github.com/users/localhuman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/localhuman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Same issue as above, would like to keep the main readme as simple as possible, and put more information in a docs build.",
        "created_at": "2017-10-31T00:00:30Z",
        "updated_at": "2017-10-31T00:00:30Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/10#discussion_r147866939",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/10",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/147866939"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/10#discussion_r147866939"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/10"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/148937926",
        "pull_request_review_id": 74262297,
        "id": 148937926,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODkzNzkyNg==",
        "diff_hunk": "@@ -78,15 +78,10 @@ def setup(self, config_file):\n \n         self.config_file = config_file\n \n-        try:\n-            self.token_style = config['themes'][config['theme']]\n-        except Exception as e:\n-            self.token_style = {\n-                \"Command\": \"#ff0066\",\n-                \"Default\": \"#00ee00\",\n-                \"Neo\": \"#0000ee\",\n-                \"Number\": \"#ffffff\"\n-            }\n+        with open('preferences.json') as data_file:",
        "path": "neo/Settings.py",
        "position": null,
        "original_position": 13,
        "commit_id": "e2df212121399aab9bc2cb2e118c0795c3370c13",
        "original_commit_id": "3772f094d1777f694436db6bd675afd5067e1e39",
        "user": {
            "login": "localhuman",
            "id": 192884,
            "node_id": "MDQ6VXNlcjE5Mjg4NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/192884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/localhuman",
            "html_url": "https://github.com/localhuman",
            "followers_url": "https://api.github.com/users/localhuman/followers",
            "following_url": "https://api.github.com/users/localhuman/following{/other_user}",
            "gists_url": "https://api.github.com/users/localhuman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/localhuman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/localhuman/subscriptions",
            "organizations_url": "https://api.github.com/users/localhuman/orgs",
            "repos_url": "https://api.github.com/users/localhuman/repos",
            "events_url": "https://api.github.com/users/localhuman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/localhuman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "for reverse compatibility, could we add a check in the case that this file isn't located or is named something different?",
        "created_at": "2017-11-04T18:30:36Z",
        "updated_at": "2017-11-05T14:13:23Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/55#discussion_r148937926",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/148937926"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/55#discussion_r148937926"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/148951244",
        "pull_request_review_id": 74275259,
        "id": 148951244,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODk1MTI0NA==",
        "diff_hunk": "@@ -78,15 +78,10 @@ def setup(self, config_file):\n \n         self.config_file = config_file\n \n-        try:\n-            self.token_style = config['themes'][config['theme']]\n-        except Exception as e:\n-            self.token_style = {\n-                \"Command\": \"#ff0066\",\n-                \"Default\": \"#00ee00\",\n-                \"Neo\": \"#0000ee\",\n-                \"Number\": \"#ffffff\"\n-            }\n+        with open('preferences.json') as data_file:",
        "path": "neo/Settings.py",
        "position": null,
        "original_position": 13,
        "commit_id": "e2df212121399aab9bc2cb2e118c0795c3370c13",
        "original_commit_id": "3772f094d1777f694436db6bd675afd5067e1e39",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just `if os.path.isfile(fn):` would do the trick.",
        "created_at": "2017-11-05T09:42:46Z",
        "updated_at": "2017-11-05T14:13:23Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/55#discussion_r148951244",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/148951244"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/55#discussion_r148951244"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/55"
            }
        },
        "in_reply_to_id": 148937926
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/148952874",
        "pull_request_review_id": 74276933,
        "id": 148952874,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODk1Mjg3NA==",
        "diff_hunk": "@@ -78,15 +78,10 @@ def setup(self, config_file):\n \n         self.config_file = config_file\n \n-        try:\n-            self.token_style = config['themes'][config['theme']]\n-        except Exception as e:\n-            self.token_style = {\n-                \"Command\": \"#ff0066\",\n-                \"Default\": \"#00ee00\",\n-                \"Neo\": \"#0000ee\",\n-                \"Number\": \"#ffffff\"\n-            }\n+        with open('preferences.json') as data_file:",
        "path": "neo/Settings.py",
        "position": null,
        "original_position": 13,
        "commit_id": "e2df212121399aab9bc2cb2e118c0795c3370c13",
        "original_commit_id": "3772f094d1777f694436db6bd675afd5067e1e39",
        "user": {
            "login": "ixje",
            "id": 6625537,
            "node_id": "MDQ6VXNlcjY2MjU1Mzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6625537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ixje",
            "html_url": "https://github.com/ixje",
            "followers_url": "https://api.github.com/users/ixje/followers",
            "following_url": "https://api.github.com/users/ixje/following{/other_user}",
            "gists_url": "https://api.github.com/users/ixje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ixje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ixje/subscriptions",
            "organizations_url": "https://api.github.com/users/ixje/orgs",
            "repos_url": "https://api.github.com/users/ixje/repos",
            "events_url": "https://api.github.com/users/ixje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ixje/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I believe there is a little bit more to it than just checking if the file exists. If we're going to question if the file is there, then I think we should also question if the data inside is valid. Note that these checks also do not exist for non-existing protocol loading. Either way I'm looking into it.",
        "created_at": "2017-11-05T09:59:27Z",
        "updated_at": "2017-11-05T14:13:23Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/55#discussion_r148952874",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/55",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/148952874"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/55#discussion_r148952874"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/55"
            }
        },
        "in_reply_to_id": 148937926
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/148955580",
        "pull_request_review_id": 74279681,
        "id": 148955580,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODk1NTU4MA==",
        "diff_hunk": "@@ -78,15 +78,10 @@ def setup(self, config_file):\n \n         self.config_file = config_file\n \n-        try:\n-            self.token_style = config['themes'][config['theme']]\n-        except Exception as e:\n-            self.token_style = {\n-                \"Command\": \"#ff0066\",\n-                \"Default\": \"#00ee00\",\n-                \"Neo\": \"#0000ee\",\n-                \"Number\": \"#ffffff\"\n-            }\n+        with open('preferences.json') as data_file:",
        "path": "neo/Settings.py",
        "position": null,
        "original_position": 13,
        "commit_id": "e2df212121399aab9bc2cb2e118c0795c3370c13",
        "original_commit_id": "3772f094d1777f694436db6bd675afd5067e1e39",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1:\r\n\r\nGood idea to load the JSON and if it fails to give a warning or smth. If the keys are not found it should just use the default imo.\r\n\r\nSince the existing protocol.json files don't change i guess they are safe as they are.",
        "created_at": "2017-11-05T12:11:03Z",
        "updated_at": "2017-11-05T14:13:23Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/55#discussion_r148955580",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/148955580"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/55#discussion_r148955580"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/55"
            }
        },
        "in_reply_to_id": 148937926
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/148957533",
        "pull_request_review_id": 74281566,
        "id": 148957533,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODk1NzUzMw==",
        "diff_hunk": "@@ -78,15 +78,10 @@ def setup(self, config_file):\n \n         self.config_file = config_file\n \n-        try:\n-            self.token_style = config['themes'][config['theme']]\n-        except Exception as e:\n-            self.token_style = {\n-                \"Command\": \"#ff0066\",\n-                \"Default\": \"#00ee00\",\n-                \"Neo\": \"#0000ee\",\n-                \"Number\": \"#ffffff\"\n-            }\n+        with open('preferences.json') as data_file:",
        "path": "neo/Settings.py",
        "position": null,
        "original_position": 13,
        "commit_id": "e2df212121399aab9bc2cb2e118c0795c3370c13",
        "original_commit_id": "3772f094d1777f694436db6bd675afd5067e1e39",
        "user": {
            "login": "ixje",
            "id": 6625537,
            "node_id": "MDQ6VXNlcjY2MjU1Mzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6625537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ixje",
            "html_url": "https://github.com/ixje",
            "followers_url": "https://api.github.com/users/ixje/followers",
            "following_url": "https://api.github.com/users/ixje/following{/other_user}",
            "gists_url": "https://api.github.com/users/ixje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ixje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ixje/subscriptions",
            "organizations_url": "https://api.github.com/users/ixje/orgs",
            "repos_url": "https://api.github.com/users/ixje/repos",
            "events_url": "https://api.github.com/users/ixje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ixje/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "the files itself might be safe yes, but `prompt` will throw up. Just try `python prompt.py -c nope`",
        "created_at": "2017-11-05T13:39:07Z",
        "updated_at": "2017-11-05T14:13:23Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/55#discussion_r148957533",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/55",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/148957533"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/55#discussion_r148957533"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/55"
            }
        },
        "in_reply_to_id": 148937926
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/149905006",
        "pull_request_review_id": 75372152,
        "id": 149905006,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTkwNTAwNg==",
        "diff_hunk": "@@ -250,47 +252,75 @@ def do_close_wallet(self):\n     def do_import(self, arguments):\n         item = get_arg(arguments)\n \n-        if item:",
        "path": "prompt.py",
        "position": 18,
        "original_position": 18,
        "commit_id": "04a0a5150292ac347bad13953368f17c2dd4178d",
        "original_commit_id": "04a0a5150292ac347bad13953368f17c2dd4178d",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It looks like much changes here, but I only put the `if not item` test on top and then could de-indent the section. perhaps easier see by looking at the current code here: https://github.com/metachris/neo-python/blob/nep2-prompt/prompt.py#L255",
        "created_at": "2017-11-09T09:32:02Z",
        "updated_at": "2017-11-09T09:32:02Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/78#discussion_r149905006",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/78",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/149905006"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/78#discussion_r149905006"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/149905362",
        "pull_request_review_id": 75372551,
        "id": 149905362,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTkwNTM2Mg==",
        "diff_hunk": "@@ -302,20 +332,49 @@ def do_export(self, arguments):\n         item = get_arg(arguments)\n \n         if item == 'wif':\n+            if not self.Wallet:",
        "path": "prompt.py",
        "position": 124,
        "original_position": 124,
        "commit_id": "04a0a5150292ac347bad13953368f17c2dd4178d",
        "original_commit_id": "04a0a5150292ac347bad13953368f17c2dd4178d",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Here again might be easier to see whats going on by looking at the new version here: https://github.com/metachris/neo-python/blob/nep2-prompt/prompt.py#L334\r\n\r\nI've also re-added the check for the user-supplied `address` as stated in `help`.",
        "created_at": "2017-11-09T09:33:34Z",
        "updated_at": "2017-11-09T09:33:34Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/78#discussion_r149905362",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/78",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/149905362"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/78#discussion_r149905362"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150051522",
        "pull_request_review_id": 75544726,
        "id": 150051522,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDA1MTUyMg==",
        "diff_hunk": "@@ -122,38 +121,76 @@ def __init__(self, path, passwordKey, create):\n                 print(\"couldnt load height data %s \" % e)\n                 self._current_height = 0\n \n-#            self._current_height = 470000\n-\n             del passwordKey\n \n     def BuildDatabase(self):\n         # abstract\n         pass\n \n     def AddContract(self, contract):\n+        \"\"\"\n+        Add a contract to the wallet\n+\n+        Args:\n+            contract (Contract): a contract of type neo.SmartContract.Contract.\n+\n+        Raises:\n+            Exception: Invalid operation - public key mismatch.\n \n+        \"\"\"\n         if not contract.PublicKeyHash.ToBytes() in self._keys.keys():\n-            raise Exception('Invalid operation- public key mismatch')\n+            raise Exception('Invalid operation - public key mismatch')\n \n         self._contracts[contract.ScriptHash.ToBytes()] = contract\n         if contract.ScriptHash in self._watch_only:\n             self._watch_only.remove(contract.ScriptHash)\n \n     def AddWatchOnly(self, script_hash):\n+        \"\"\"\n+        Add a watch only address to the wallet.\n \n+        Args:\n+            script_hash (UInt160): a bytearray (len 20) representing the public key.\n+\n+        Note:\n+            Prints a warning to the console if the address already exists in the wallet.\n+",
        "path": "neo/Wallets/Wallet.py",
        "position": 48,
        "original_position": 48,
        "commit_id": "2e4586fce746b25878b24b39674716a837a982fc",
        "original_commit_id": "2e4586fce746b25878b24b39674716a837a982fc",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you please remove the empty line at the end of each docstring?",
        "created_at": "2017-11-09T18:46:41Z",
        "updated_at": "2017-11-09T18:46:42Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/74#discussion_r150051522",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/74",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150051522"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/74#discussion_r150051522"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/74"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150051765",
        "pull_request_review_id": 75545001,
        "id": 150051765,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDA1MTc2NQ==",
        "diff_hunk": "@@ -165,42 +202,124 @@ def ChangePassword(self, password_old, password_new):\n         self.SaveStoredData(\"MasterKey\", AES.new(self._master_key, AES.MODE_CBC, self._iv))\n \n     def ContainsKey(self, public_key):\n+        \"\"\"\n+        Test if the wallet contains the supplied public key.\n+\n+        Args:\n+            public_key (edcsa.Curve.point): a public key to test for its existance. i.e. KeyPair.PublicKey\n+\n+        Returns:\n+            bool: True if exists, False otherwise.\n+\n+        \"\"\"\n         return self.ContainsKeyHash(Crypto.ToScriptHash(public_key.encode_point(True), unhex=False))\n \n     def ContainsKeyHash(self, public_key_hash):\n+        \"\"\"\n+        Test if the wallet contains the supplied public key hash in its key list.\n+\n+        Args:\n+            public_key_hash (UInt160): a public key hash to test for its existance.\n+\n+        Returns:\n+            bool: True if exists in wallet key list, False otherwise.\n \n+        \"\"\"\n         return public_key_hash.ToBytes() in self._keys.keys()\n \n     def ContainsAddress(self, script_hash):\n+        \"\"\"\n+        Determine if the wallet contains the address.\n+\n+        Args:\n+            script_hash (UInt160): a bytearray (len 20) representing the public key.\n+\n+        Returns:\n+            bool: True, if the address is present in the wallet. False otherwise.\n+\n+        \"\"\"\n         return self.CheckAddressState(script_hash) >= AddressState.InWallet\n \n     def ContainsAddressStr(self, address):\n+        \"\"\"\n+        Determine if the wallet contains the address.\n+\n+        Args:\n+            address (str): a string representing the public key.\n+\n+        Returns:\n+            bool: True, if the address is present in the wallet. False otherwise.\n+\n+        \"\"\"\n+",
        "path": "neo/Wallets/Wallet.py",
        "position": 141,
        "original_position": 141,
        "commit_id": "2e4586fce746b25878b24b39674716a837a982fc",
        "original_commit_id": "2e4586fce746b25878b24b39674716a837a982fc",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also I'd say don't add empty lines after the docstring, start with the code straight away.",
        "created_at": "2017-11-09T18:47:35Z",
        "updated_at": "2017-11-09T18:47:35Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/74#discussion_r150051765",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/74",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150051765"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/74#discussion_r150051765"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/74"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150052211",
        "pull_request_review_id": 75545516,
        "id": 150052211,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDA1MjIxMQ==",
        "diff_hunk": "@@ -87,21 +84,14 @@ def Create(path, password):\n         return wallet\n \n     def CreateKey(self, prikey=None):\n-        if prikey:\n-            private_key = prikey\n-        else:\n-            private_key = bytes(Random.get_random_bytes(32))\n-\n-        account = WalletKeyPair(priv_key=private_key)\n+        account = super(UserWallet, self).CreateKey(private_key=prikey)",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": 62,
        "original_position": 62,
        "commit_id": "2e4586fce746b25878b24b39674716a837a982fc",
        "original_commit_id": "2e4586fce746b25878b24b39674716a837a982fc",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not 100% sure about this. What if the `Wallet.CreateKey` method changes to do something more? You could just simplify the block on top with `private_key = prikey or bytes(Random.get_random_bytes(32))`",
        "created_at": "2017-11-09T18:49:04Z",
        "updated_at": "2017-11-09T18:49:05Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/74#discussion_r150052211",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/74",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150052211"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/74#discussion_r150052211"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/74"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150053187",
        "pull_request_review_id": 75546600,
        "id": 150053187,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDA1MzE4Nw==",
        "diff_hunk": "@@ -87,21 +84,14 @@ def Create(path, password):\n         return wallet\n \n     def CreateKey(self, prikey=None):\n-        if prikey:\n-            private_key = prikey\n-        else:\n-            private_key = bytes(Random.get_random_bytes(32))\n-\n-        account = WalletKeyPair(priv_key=private_key)\n+        account = super(UserWallet, self).CreateKey(private_key=prikey)",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": 62,
        "original_position": 62,
        "commit_id": "2e4586fce746b25878b24b39674716a837a982fc",
        "original_commit_id": "2e4586fce746b25878b24b39674716a837a982fc",
        "user": {
            "login": "ixje",
            "id": 6625537,
            "node_id": "MDQ6VXNlcjY2MjU1Mzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6625537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ixje",
            "html_url": "https://github.com/ixje",
            "followers_url": "https://api.github.com/users/ixje/followers",
            "following_url": "https://api.github.com/users/ixje/following{/other_user}",
            "gists_url": "https://api.github.com/users/ixje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ixje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ixje/subscriptions",
            "organizations_url": "https://api.github.com/users/ixje/orgs",
            "repos_url": "https://api.github.com/users/ixje/repos",
            "events_url": "https://api.github.com/users/ixje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ixje/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "my changes actually make it match the original `neo-project` more closely\r\nSee: https://github.com/neo-project/neo/blob/1bbebb1db8fa7e5a72f372e933f65f4815a1911b/neo/Implementations/Wallets/EntityFramework/UserWallet.cs#L102",
        "created_at": "2017-11-09T18:52:37Z",
        "updated_at": "2017-11-09T18:52:37Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/74#discussion_r150053187",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/74",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150053187"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/74#discussion_r150053187"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/74"
            }
        },
        "in_reply_to_id": 150052211
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150064145",
        "pull_request_review_id": 75559657,
        "id": 150064145,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDA2NDE0NQ==",
        "diff_hunk": "@@ -87,21 +84,14 @@ def Create(path, password):\n         return wallet\n \n     def CreateKey(self, prikey=None):\n-        if prikey:\n-            private_key = prikey\n-        else:\n-            private_key = bytes(Random.get_random_bytes(32))\n-\n-        account = WalletKeyPair(priv_key=private_key)\n+        account = super(UserWallet, self).CreateKey(private_key=prikey)",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": 62,
        "original_position": 62,
        "commit_id": "2e4586fce746b25878b24b39674716a837a982fc",
        "original_commit_id": "2e4586fce746b25878b24b39674716a837a982fc",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks, good to have this context!",
        "created_at": "2017-11-09T19:33:23Z",
        "updated_at": "2017-11-09T19:33:23Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/74#discussion_r150064145",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/74",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150064145"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/74#discussion_r150064145"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/74"
            }
        },
        "in_reply_to_id": 150052211
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150844515",
        "pull_request_review_id": 76454009,
        "id": 150844515,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDg0NDUxNQ==",
        "diff_hunk": "@@ -31,39 +42,72 @@ class SmartContractEvent:\n     RUNTIME_NOTIFY = \"SmartContract.RuntimeNotify\"  # payload: object[]\n     RUNTIME_LOG = \"SmartContract.RuntimeLog\"        # payload: bytes\n \n-    # EXECUTION_INVOKE = \"SmartContract.ExecutionInvoke\"\n-    # EXECUTION_SUCCESS = \"SmartContract.ExecutionSuccess\"\n-    # EXECUTION_FAIL = \"SmartContract.ExecutionFail\"\n+    EXECUTION_INVOKE = \"SmartContract.ExecutionInvoke\"\n+    EXECUTION_SUCCESS = \"SmartContract.ExecutionSuccess\"\n+    EXECUTION_FAIL = \"SmartContract.ExecutionFail\"\n \n     event_type = None\n     event_payload = None\n     contract_hash = None\n     block_number = None\n     tx_hash = None\n+    execution_success = None\n \n-    def __init__(self, event_type, event_payload, contract_hash, block_number, tx_hash):\n+    def __init__(self, event_type, event_payload, contract_hash, block_number, tx_hash, execution_success=False):\n         self.event_type = event_type\n         self.event_payload = event_payload\n         self.contract_hash = contract_hash\n         self.block_number = block_number\n         self.tx_hash = tx_hash\n+        self.execution_success = execution_success\n \n     def __str__(self):\n-        return \"SmartContractEvent(event_type=%s, event_payload=%s, contract_hash=%s, block_number=%s, tx_hash=%s)\" % (self.event_type, self.event_payload, self.contract_hash, self.block_number, self.tx_hash)\n+        return \"SmartContractEvent(event_type=%s, event_payload=%s, contract_hash=%s, block_number=%s, tx_hash=%s, execution_success=%s)\" \\\n+               % (self.event_type, self.event_payload, self.contract_hash, self.block_number, self.tx_hash, self.execution_success)\n \n \n # Helper for easier dispatching of events from somewhere in the project\n-def dispatch_smart_contract_event(event_type, event_payload, contract_hash, block_number, tx_hash):\n-    sc_event = SmartContractEvent(event_type, event_payload, contract_hash, block_number, tx_hash)\n+def dispatch_smart_contract_event(event_type,\n+                                  event_payload,\n+                                  contract_hash,\n+                                  block_number,\n+                                  tx_hash,\n+                                  execution_success=False):\n+\n+    sc_event = SmartContractEvent(event_type, event_payload, contract_hash, block_number, tx_hash, execution_success)\n     events.emit(event_type, sc_event)\n \n \n #\n # These handlers are only for temporary development and testing\n #\n-@events.on(\"*\")\n-@events.on(\"*.*\")\n-def on_any_event(*args):\n-    print(\"\")\n-    print(\"=EVENT: %s\" % args)\n-    print(\"\")\n+\n+\n+@events.on(SmartContractEvent.RUNTIME_LOG)\n+def on_sc_log(*args):",
        "path": "neo/EventHub.py",
        "position": 77,
        "original_position": 77,
        "commit_id": "b00f779e885bc58ef95561ebc38dc4f68a619cb9",
        "original_commit_id": "b00f779e885bc58ef95561ebc38dc4f68a619cb9",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "if you know these events always include a SmartContractEvent as argument, we could change the method signature from this:\r\n\r\n    def on_sc_log(*args):\r\n        if len(args) > 0 and type(args[0]) is SmartContractEvent:\r\n            sc_event = args[0]\r\n\r\nto\r\n\r\n    def on_sc_log(sc_event):",
        "created_at": "2017-11-14T14:19:00Z",
        "updated_at": "2017-11-14T14:19:00Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/86#discussion_r150844515",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/86",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150844515"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/86#discussion_r150844515"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/86"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150845862",
        "pull_request_review_id": 76455638,
        "id": 150845862,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDg0NTg2Mg==",
        "diff_hunk": "@@ -85,6 +83,42 @@ def CheckStorageContext(self, context):\n \n         return False\n \n+    def ExecutionCompleted(self, engine, success, error=None):\n+\n+        # commit storages right away\n+        if success:\n+            self.Commit()\n+\n+        height = Blockchain.Default().Height\n+        tx_hash = engine.ScriptContainer.Hash\n+\n+        # dispatch all notify events, along with the success of the contract execution\n+        for notify_event_args in self.notifications:\n+\n+            dispatch_smart_contract_event(SmartContractEvent.RUNTIME_NOTIFY, notify_event_args.State, notify_event_args.ScriptHash.ToString(), height, tx_hash.ToString(), success)",
        "path": "neo/SmartContract/StateMachine.py",
        "position": 34,
        "original_position": 34,
        "commit_id": "b00f779e885bc58ef95561ebc38dc4f68a619cb9",
        "original_commit_id": "b00f779e885bc58ef95561ebc38dc4f68a619cb9",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What data type is `notify_event_args.State` here? Would be great for usability if Runtime.Notify events always have a list of python objects as payload.",
        "created_at": "2017-11-14T14:23:43Z",
        "updated_at": "2017-11-14T14:23:43Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/86#discussion_r150845862",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/86",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150845862"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/86#discussion_r150845862"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/86"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150846808",
        "pull_request_review_id": 76456786,
        "id": 150846808,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDg0NjgwOA==",
        "diff_hunk": "@@ -357,5 +355,11 @@ def stack_item_to_py(stack_item):\n     elif isinstance(stack_item, ByteArray):\n         return stack_item.GetBigInteger()\n \n+    elif isinstance(stack_item, InteropInterface):\n+        return stack_item.GetInterface()\n+\n+    elif isinstance(stack_item, Struct):\n+        return stack_item.GetArray()",
        "path": "neo/VM/InteropService.py",
        "position": 28,
        "original_position": 28,
        "commit_id": "b00f779e885bc58ef95561ebc38dc4f68a619cb9",
        "original_commit_id": "b00f779e885bc58ef95561ebc38dc4f68a619cb9",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not sure, but should we convert the array items like for `Array` above?\r\n\r\n    return [stack_item_to_py(item) for item in stack_item.GetArray()]",
        "created_at": "2017-11-14T14:26:56Z",
        "updated_at": "2017-11-14T14:26:56Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/86#discussion_r150846808",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/86",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150846808"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/86#discussion_r150846808"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/86"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150853238",
        "pull_request_review_id": 76464429,
        "id": 150853238,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDg1MzIzOA==",
        "diff_hunk": "@@ -357,5 +355,11 @@ def stack_item_to_py(stack_item):\n     elif isinstance(stack_item, ByteArray):\n         return stack_item.GetBigInteger()\n \n+    elif isinstance(stack_item, InteropInterface):\n+        return stack_item.GetInterface()\n+\n+    elif isinstance(stack_item, Struct):\n+        return stack_item.GetArray()",
        "path": "neo/VM/InteropService.py",
        "position": 28,
        "original_position": 28,
        "commit_id": "b00f779e885bc58ef95561ebc38dc4f68a619cb9",
        "original_commit_id": "b00f779e885bc58ef95561ebc38dc4f68a619cb9",
        "user": {
            "login": "localhuman",
            "id": 192884,
            "node_id": "MDQ6VXNlcjE5Mjg4NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/192884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/localhuman",
            "html_url": "https://github.com/localhuman",
            "followers_url": "https://api.github.com/users/localhuman/followers",
            "following_url": "https://api.github.com/users/localhuman/following{/other_user}",
            "gists_url": "https://api.github.com/users/localhuman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/localhuman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/localhuman/subscriptions",
            "organizations_url": "https://api.github.com/users/localhuman/orgs",
            "repos_url": "https://api.github.com/users/localhuman/repos",
            "events_url": "https://api.github.com/users/localhuman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/localhuman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I haven't done any testing with `Struct` yet, but that should work",
        "created_at": "2017-11-14T14:49:14Z",
        "updated_at": "2017-11-14T14:49:14Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/86#discussion_r150853238",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/86",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/150853238"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/86#discussion_r150853238"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/86"
            }
        },
        "in_reply_to_id": 150846808
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151872689",
        "pull_request_review_id": 77650413,
        "id": 151872689,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3MjY4OQ==",
        "diff_hunk": "@@ -79,19 +79,43 @@ def Open(path, password):\n \n     @staticmethod\n     def Create(path, password):\n+        \"\"\"\n+        Create a new user wallet.\n+\n+        Args:\n+            path (str): A path indicating where to create or open the wallet i.e. \"/Wallets/mywallet\".\n+            password (str): a 10 characters minimum password to secure the wallet with.\n+\n+        Returns:\n+             UserWallet: a UserWallet instance.\n+        \"\"\"\n         wallet = UserWallet(path=path, passwordKey=password, create=True)\n         wallet.CreateKey()\n         return wallet\n \n     def CreateKey(self, prikey=None):\n+        \"\"\"\n+        Create a KeyPair and store it encrypted in the database.\n+\n+        Args:\n+            private_key (iterable_of_ints): (optional) 32 byte private key.\n+\n+        Returns:\n+            KeyPair: a KeyPair instance.\n+        \"\"\"\n         account = super(UserWallet, self).CreateKey(private_key=prikey)\n-        self._keys[account.PublicKeyHash.ToBytes()] = account",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": 29,
        "original_position": 29,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think you can delete this line. `Wallet.py` uses `self._keys`",
        "created_at": "2017-11-19T18:17:26Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151872689",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151872689"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151872689"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151872737",
        "pull_request_review_id": 77650413,
        "id": 151872737,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3MjczNw==",
        "diff_hunk": "@@ -102,18 +126,23 @@ def OnCreateAccount(self, account):\n \n         db_account, created = Account.get_or_create(\n             PrivateKeyEncrypted=encrypted_pk, PublicKeyHash=account.PublicKeyHash.ToBytes())\n-        db_account.PrivateKeyEncrypted = encrypted_pk\n+        if not created:",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": null,
        "original_position": 50,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you please explain the change here? Not quite clear to me what is the advantage now.",
        "created_at": "2017-11-19T18:19:09Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151872737",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151872737"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151872737"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151872771",
        "pull_request_review_id": 77650413,
        "id": 151872771,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3Mjc3MQ==",
        "diff_hunk": "@@ -102,18 +126,23 @@ def OnCreateAccount(self, account):\n \n         db_account, created = Account.get_or_create(\n             PrivateKeyEncrypted=encrypted_pk, PublicKeyHash=account.PublicKeyHash.ToBytes())\n-        db_account.PrivateKeyEncrypted = encrypted_pk\n+        if not created:\n+            db_account.PrivateKeyEncrypted = encrypted_pk\n         db_account.save()\n         self.__dbaccount = db_account\n \n     def AddContract(self, contract):\n+        \"\"\"\n+        Add a contract to the database.\n+\n+        Args:\n+            contract(neo.SmartContract.Contract): a Contract instance.\n+        \"\"\"\n         super(UserWallet, self).AddContract(contract)\n \n         db_contract = None\n         try:\n             db_contract = Contract.get(ScriptHash=contract.ScriptHash.ToBytes())\n-            db_contract.delete_instance()",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": null,
        "original_position": 67,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@localhuman please feedback: has there been a reason to delete the old contract here? Not sure this change is compatible.",
        "created_at": "2017-11-19T18:20:10Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151872771",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151872771"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151872771"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873004",
        "pull_request_review_id": 77650413,
        "id": 151873004,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3MzAwNA==",
        "diff_hunk": "@@ -67,9 +67,9 @@ def __init__(self, path, passwordKey, create):\n         \"\"\"\n \n         Args:\n-            path: (str) A path indicating where to create or open the wallet\n-            passwordKey: (str) A password to use in creating or opening the wallet\n-            create: (bool) Whether to create the wallet or simply open\n+            path: (str) A path indicating where to create or open the wallet.",
        "path": "neo/Wallets/Wallet.py",
        "position": null,
        "original_position": 7,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The data type comes before the colon (so `path (str):`)",
        "created_at": "2017-11-19T18:25:43Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873004",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873004"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873004"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873072",
        "pull_request_review_id": 77650413,
        "id": 151873072,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3MzA3Mg==",
        "diff_hunk": "@@ -222,11 +222,13 @@ def do_create(self, arguments):\n                     print(\"Exception creating wallet: %s \" % e)\n                     return\n \n-                contract = self.Wallet.GetDefaultContract()\n-                key = self.Wallet.GetKey(contract.PublicKeyHash)\n-\n                 print(\"Wallet %s \" % json.dumps(self.Wallet.ToJson(), indent=4))\n-                print(\"pubkey %s \" % key.PublicKey.encode_point(True))\n+\n+                contract = self.Wallet.GetDefaultContract()\n+                if contract is not None:",
        "path": "prompt.py",
        "position": null,
        "original_position": 11,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can this ever be None?",
        "created_at": "2017-11-19T18:26:20Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873072",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873072"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873072"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873350",
        "pull_request_review_id": 77650905,
        "id": 151873350,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3MzM1MA==",
        "diff_hunk": "@@ -79,19 +79,43 @@ def Open(path, password):\n \n     @staticmethod\n     def Create(path, password):\n+        \"\"\"\n+        Create a new user wallet.\n+\n+        Args:\n+            path (str): A path indicating where to create or open the wallet i.e. \"/Wallets/mywallet\".\n+            password (str): a 10 characters minimum password to secure the wallet with.\n+\n+        Returns:\n+             UserWallet: a UserWallet instance.\n+        \"\"\"\n         wallet = UserWallet(path=path, passwordKey=password, create=True)\n         wallet.CreateKey()\n         return wallet\n \n     def CreateKey(self, prikey=None):\n+        \"\"\"\n+        Create a KeyPair and store it encrypted in the database.\n+\n+        Args:\n+            private_key (iterable_of_ints): (optional) 32 byte private key.\n+\n+        Returns:\n+            KeyPair: a KeyPair instance.\n+        \"\"\"\n         account = super(UserWallet, self).CreateKey(private_key=prikey)\n-        self._keys[account.PublicKeyHash.ToBytes()] = account",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": 29,
        "original_position": 29,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "ixje",
            "id": 6625537,
            "node_id": "MDQ6VXNlcjY2MjU1Mzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6625537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ixje",
            "html_url": "https://github.com/ixje",
            "followers_url": "https://api.github.com/users/ixje/followers",
            "following_url": "https://api.github.com/users/ixje/following{/other_user}",
            "gists_url": "https://api.github.com/users/ixje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ixje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ixje/subscriptions",
            "organizations_url": "https://api.github.com/users/ixje/orgs",
            "repos_url": "https://api.github.com/users/ixje/repos",
            "events_url": "https://api.github.com/users/ixje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ixje/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "the super class does the exact same thing from which you can access it:\r\nhttps://github.com/CityOfZion/neo-python/blob/master/neo/Wallets/Wallet.py#L274\r\n\r\nthe `neo` C# actually does the same thing as well\r\nhttps://github.com/neo-project/neo/blob/master/neo/Implementations/Wallets/EntityFramework/UserWallet.cs#L102-L107",
        "created_at": "2017-11-19T18:35:32Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873350",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873350"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873350"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        },
        "in_reply_to_id": 151872689
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873700",
        "pull_request_review_id": 77651247,
        "id": 151873700,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3MzcwMA==",
        "diff_hunk": "@@ -102,18 +126,23 @@ def OnCreateAccount(self, account):\n \n         db_account, created = Account.get_or_create(\n             PrivateKeyEncrypted=encrypted_pk, PublicKeyHash=account.PublicKeyHash.ToBytes())\n-        db_account.PrivateKeyEncrypted = encrypted_pk\n+        if not created:",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": null,
        "original_position": 50,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "ixje",
            "id": 6625537,
            "node_id": "MDQ6VXNlcjY2MjU1Mzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6625537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ixje",
            "html_url": "https://github.com/ixje",
            "followers_url": "https://api.github.com/users/ixje/followers",
            "following_url": "https://api.github.com/users/ixje/following{/other_user}",
            "gists_url": "https://api.github.com/users/ixje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ixje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ixje/subscriptions",
            "organizations_url": "https://api.github.com/users/ixje/orgs",
            "repos_url": "https://api.github.com/users/ixje/repos",
            "events_url": "https://api.github.com/users/ixje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ixje/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "My initial change looked like\r\n```\r\n        db_account, created = Account.get_or_create(\r\n            PrivateKeyEncrypted=encrypted_pk, PublicKeyHash=account.PublicKeyHash.ToBytes())\r\n        if not created:\r\n            db_account.PrivateKeyEncrypted = encrypted_pk\r\n            db_account.save()\r\n```\r\nbut then I realised that `Account.get_or_create` does not automatically save and that I had to change the indentation on `db_account.save()`. \r\n\r\nNow when thinking about it I believe \r\n```\r\n        if not created:\r\n            db_account.PrivateKeyEncrypted = encrypted_pk\r\n```\r\nshould actually be removed completely, because it is always redundant. `PrivateKeyEncrypted` and `PublicKeyHash` are supplied as [filters](http://docs.peewee-orm.com/en/latest/peewee/api.html#Model.get_or_create). If it finds a record that satisfies them, then assigning the `encrypted_pk` is redundant. If no record exist that matches the filters, then it will use the already supplied filter/arguments to create a new record.",
        "created_at": "2017-11-19T18:48:31Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873700",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873700"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873700"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        },
        "in_reply_to_id": 151872737
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873857",
        "pull_request_review_id": 77651398,
        "id": 151873857,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3Mzg1Nw==",
        "diff_hunk": "@@ -102,18 +126,23 @@ def OnCreateAccount(self, account):\n \n         db_account, created = Account.get_or_create(\n             PrivateKeyEncrypted=encrypted_pk, PublicKeyHash=account.PublicKeyHash.ToBytes())\n-        db_account.PrivateKeyEncrypted = encrypted_pk\n+        if not created:\n+            db_account.PrivateKeyEncrypted = encrypted_pk\n         db_account.save()\n         self.__dbaccount = db_account\n \n     def AddContract(self, contract):\n+        \"\"\"\n+        Add a contract to the database.\n+\n+        Args:\n+            contract(neo.SmartContract.Contract): a Contract instance.\n+        \"\"\"\n         super(UserWallet, self).AddContract(contract)\n \n         db_contract = None\n         try:\n             db_contract = Contract.get(ScriptHash=contract.ScriptHash.ToBytes())\n-            db_contract.delete_instance()",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": null,
        "original_position": 67,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "ixje",
            "id": 6625537,
            "node_id": "MDQ6VXNlcjY2MjU1Mzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6625537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ixje",
            "html_url": "https://github.com/ixje",
            "followers_url": "https://api.github.com/users/ixje/followers",
            "following_url": "https://api.github.com/users/ixje/following{/other_user}",
            "gists_url": "https://api.github.com/users/ixje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ixje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ixje/subscriptions",
            "organizations_url": "https://api.github.com/users/ixje/orgs",
            "repos_url": "https://api.github.com/users/ixje/repos",
            "events_url": "https://api.github.com/users/ixje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ixje/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "for what it is worth, the new code matches closer to https://github.com/neo-project/neo/blob/master/neo/Implementations/Wallets/EntityFramework/UserWallet.cs#L37-L41\r\n(also note https://github.com/neo-project/neo/blob/master/neo/Implementations/Wallets/EntityFramework/UserWallet.cs#L59 where they actually save the context regardless if it took the if or else branch, which I'm doing now as well).  Oh and the tests didn't fail! ;)",
        "created_at": "2017-11-19T18:54:00Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873857",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873857"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873857"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        },
        "in_reply_to_id": 151872771
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873882",
        "pull_request_review_id": 77651424,
        "id": 151873882,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3Mzg4Mg==",
        "diff_hunk": "@@ -67,9 +67,9 @@ def __init__(self, path, passwordKey, create):\n         \"\"\"\n \n         Args:\n-            path: (str) A path indicating where to create or open the wallet\n-            passwordKey: (str) A password to use in creating or opening the wallet\n-            create: (bool) Whether to create the wallet or simply open\n+            path: (str) A path indicating where to create or open the wallet.",
        "path": "neo/Wallets/Wallet.py",
        "position": null,
        "original_position": 7,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "ixje",
            "id": 6625537,
            "node_id": "MDQ6VXNlcjY2MjU1Mzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6625537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ixje",
            "html_url": "https://github.com/ixje",
            "followers_url": "https://api.github.com/users/ixje/followers",
            "following_url": "https://api.github.com/users/ixje/following{/other_user}",
            "gists_url": "https://api.github.com/users/ixje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ixje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ixje/subscriptions",
            "organizations_url": "https://api.github.com/users/ixje/orgs",
            "repos_url": "https://api.github.com/users/ixje/repos",
            "events_url": "https://api.github.com/users/ixje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ixje/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "/me looks @localhuman ;)\r\nI didn't write those comments, but I can of course update them",
        "created_at": "2017-11-19T18:55:02Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873882",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873882"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873882"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        },
        "in_reply_to_id": 151873004
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873962",
        "pull_request_review_id": 77651505,
        "id": 151873962,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3Mzk2Mg==",
        "diff_hunk": "@@ -222,11 +222,13 @@ def do_create(self, arguments):\n                     print(\"Exception creating wallet: %s \" % e)\n                     return\n \n-                contract = self.Wallet.GetDefaultContract()\n-                key = self.Wallet.GetKey(contract.PublicKeyHash)\n-\n                 print(\"Wallet %s \" % json.dumps(self.Wallet.ToJson(), indent=4))\n-                print(\"pubkey %s \" % key.PublicKey.encode_point(True))\n+\n+                contract = self.Wallet.GetDefaultContract()\n+                if contract is not None:",
        "path": "prompt.py",
        "position": null,
        "original_position": 11,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "ixje",
            "id": 6625537,
            "node_id": "MDQ6VXNlcjY2MjU1Mzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6625537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ixje",
            "html_url": "https://github.com/ixje",
            "followers_url": "https://api.github.com/users/ixje/followers",
            "following_url": "https://api.github.com/users/ixje/following{/other_user}",
            "gists_url": "https://api.github.com/users/ixje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ixje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ixje/subscriptions",
            "organizations_url": "https://api.github.com/users/ixje/orgs",
            "repos_url": "https://api.github.com/users/ixje/repos",
            "events_url": "https://api.github.com/users/ixje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ixje/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Apparently so: https://github.com/CityOfZion/neo-python/blob/master/neo/Wallets/Wallet.py#L892\r\n",
        "created_at": "2017-11-19T18:57:43Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873962",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151873962"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151873962"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        },
        "in_reply_to_id": 151873072
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151874535",
        "pull_request_review_id": 77652063,
        "id": 151874535,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3NDUzNQ==",
        "diff_hunk": "@@ -79,19 +79,43 @@ def Open(path, password):\n \n     @staticmethod\n     def Create(path, password):\n+        \"\"\"\n+        Create a new user wallet.\n+\n+        Args:\n+            path (str): A path indicating where to create or open the wallet i.e. \"/Wallets/mywallet\".\n+            password (str): a 10 characters minimum password to secure the wallet with.\n+\n+        Returns:\n+             UserWallet: a UserWallet instance.\n+        \"\"\"\n         wallet = UserWallet(path=path, passwordKey=password, create=True)\n         wallet.CreateKey()\n         return wallet\n \n     def CreateKey(self, prikey=None):\n+        \"\"\"\n+        Create a KeyPair and store it encrypted in the database.\n+\n+        Args:\n+            private_key (iterable_of_ints): (optional) 32 byte private key.\n+\n+        Returns:\n+            KeyPair: a KeyPair instance.\n+        \"\"\"\n         account = super(UserWallet, self).CreateKey(private_key=prikey)\n-        self._keys[account.PublicKeyHash.ToBytes()] = account",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": 29,
        "original_position": 29,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right, this works \ud83d\udc4d ",
        "created_at": "2017-11-19T19:18:13Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151874535",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151874535"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151874535"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        },
        "in_reply_to_id": 151872689
    },
    {
        "url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151874577",
        "pull_request_review_id": 77652117,
        "id": 151874577,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTg3NDU3Nw==",
        "diff_hunk": "@@ -102,18 +126,23 @@ def OnCreateAccount(self, account):\n \n         db_account, created = Account.get_or_create(\n             PrivateKeyEncrypted=encrypted_pk, PublicKeyHash=account.PublicKeyHash.ToBytes())\n-        db_account.PrivateKeyEncrypted = encrypted_pk\n+        if not created:",
        "path": "neo/Implementations/Wallets/peewee/UserWallet.py",
        "position": null,
        "original_position": 50,
        "commit_id": "f062cfe1667dee00aebdd06267672d21119f2c3b",
        "original_commit_id": "2dd7892024d56f35a873445330afc67e246a54b6",
        "user": {
            "login": "metachris",
            "id": 116939,
            "node_id": "MDQ6VXNlcjExNjkzOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/116939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/metachris",
            "html_url": "https://github.com/metachris",
            "followers_url": "https://api.github.com/users/metachris/followers",
            "following_url": "https://api.github.com/users/metachris/following{/other_user}",
            "gists_url": "https://api.github.com/users/metachris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/metachris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metachris/subscriptions",
            "organizations_url": "https://api.github.com/users/metachris/orgs",
            "repos_url": "https://api.github.com/users/metachris/repos",
            "events_url": "https://api.github.com/users/metachris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/metachris/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks, great explanation. Yeah, this line should probably just be removed.",
        "created_at": "2017-11-19T19:20:07Z",
        "updated_at": "2017-11-22T13:45:57Z",
        "html_url": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151874577",
        "pull_request_url": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/comments/151874577"
            },
            "html": {
                "href": "https://github.com/CityOfZion/neo-python/pull/92#discussion_r151874577"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/CityOfZion/neo-python/pulls/92"
            }
        },
        "in_reply_to_id": 151872737
    }
]