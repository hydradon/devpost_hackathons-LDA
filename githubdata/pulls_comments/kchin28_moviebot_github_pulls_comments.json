[
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249264489",
        "pull_request_review_id": 194378182,
        "id": 249264489,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI2NDQ4OQ==",
        "diff_hunk": "@@ -1,14 +1,64 @@\n \ufeffusing System;\n+using System.Threading.Tasks;\n+using System.Reflection;\n+using Discord;\n+using Discord.Commands;\n+using Discord.WebSocket;\n+using Microsoft.Extensions.DependencyInjection;\n \n namespace dbot\n {\n     class Program\n     {\n-        static void Main(string[] args)\n+        private CommandService commands;\n+        private DiscordSocketClient client;\n+        private IServiceProvider services;\n+\n+        static void Main(string[] args) => new Program().MainAsync().GetAwaiter().GetResult();\n+\n+\n+        public async Task MainAsync()\n         {\n             var discordToken = TokenManager.getToken(TokenKey.DiscordToken);\n             var omdbToken = TokenManager.getToken(TokenKey.OMDBToken);\n             Console.WriteLine($\"Hello World! {omdbToken} {discordToken}\");\n+\n+            client = new DiscordSocketClient();\n+            commands = new CommandService();\n+            services = new ServiceCollection()\n+                .BuildServiceProvider();\n+\n+            await InstallCommands();\n+\n+            //  client.Log += Log;",
        "path": "dbot/dbot/Program.cs",
        "position": 34,
        "original_position": 34,
        "commit_id": "0812ecf5c5384f113a28c122dba451dd8b2114ec",
        "original_commit_id": "f680569bec6be7a362b4bff98192a07cee9e7271",
        "user": {
            "login": "Loonman",
            "id": 6627963,
            "node_id": "MDQ6VXNlcjY2Mjc5NjM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6627963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Loonman",
            "html_url": "https://github.com/Loonman",
            "followers_url": "https://api.github.com/users/Loonman/followers",
            "following_url": "https://api.github.com/users/Loonman/following{/other_user}",
            "gists_url": "https://api.github.com/users/Loonman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Loonman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Loonman/subscriptions",
            "organizations_url": "https://api.github.com/users/Loonman/orgs",
            "repos_url": "https://api.github.com/users/Loonman/repos",
            "events_url": "https://api.github.com/users/Loonman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Loonman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "por que",
        "created_at": "2019-01-20T04:15:24Z",
        "updated_at": "2019-01-20T04:18:42Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/2#discussion_r249264489",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249264489"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/2#discussion_r249264489"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249264498",
        "pull_request_review_id": 194378192,
        "id": 249264498,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI2NDQ5OA==",
        "diff_hunk": "@@ -1,14 +1,64 @@\n \ufeffusing System;\n+using System.Threading.Tasks;\n+using System.Reflection;\n+using Discord;\n+using Discord.Commands;\n+using Discord.WebSocket;\n+using Microsoft.Extensions.DependencyInjection;\n \n namespace dbot\n {\n     class Program\n     {\n-        static void Main(string[] args)\n+        private CommandService commands;\n+        private DiscordSocketClient client;\n+        private IServiceProvider services;\n+\n+        static void Main(string[] args) => new Program().MainAsync().GetAwaiter().GetResult();\n+\n+\n+        public async Task MainAsync()\n         {\n             var discordToken = TokenManager.getToken(TokenKey.DiscordToken);\n             var omdbToken = TokenManager.getToken(TokenKey.OMDBToken);\n             Console.WriteLine($\"Hello World! {omdbToken} {discordToken}\");\n+\n+            client = new DiscordSocketClient();\n+            commands = new CommandService();\n+            services = new ServiceCollection()\n+                .BuildServiceProvider();\n+\n+            await InstallCommands();\n+\n+            //  client.Log += Log;\n+            await client.LoginAsync(Discord.TokenType.Bot, discordToken);\n+            await client.StartAsync();\n+            await Task.Delay(-1); \n+        }\n+\n+        public async Task InstallCommands() {\n+            client.MessageReceived += HandleCommand;\n+            await commands.AddModulesAsync(Assembly.GetEntryAssembly(),services);\n+        }\n+\n+        public async Task HandleCommand(SocketMessage messageParam)\n+        {\n+            var message = messageParam as SocketUserMessage;\n+\n+            //check the message for null etc \n+           // if (message == null) return;\n+            int argPos = 0;\n+\n+            //  if (!(message.HasCharPrefix('!', ref argPos) || message.HasMentionPrefix(client.CurrentUser, ref argPos))) return;",
        "path": "dbot/dbot/Program.cs",
        "position": null,
        "original_position": 53,
        "commit_id": "0812ecf5c5384f113a28c122dba451dd8b2114ec",
        "original_commit_id": "f680569bec6be7a362b4bff98192a07cee9e7271",
        "user": {
            "login": "Loonman",
            "id": 6627963,
            "node_id": "MDQ6VXNlcjY2Mjc5NjM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6627963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Loonman",
            "html_url": "https://github.com/Loonman",
            "followers_url": "https://api.github.com/users/Loonman/followers",
            "following_url": "https://api.github.com/users/Loonman/following{/other_user}",
            "gists_url": "https://api.github.com/users/Loonman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Loonman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Loonman/subscriptions",
            "organizations_url": "https://api.github.com/users/Loonman/orgs",
            "repos_url": "https://api.github.com/users/Loonman/repos",
            "events_url": "https://api.github.com/users/Loonman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Loonman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think we need that",
        "created_at": "2019-01-20T04:15:45Z",
        "updated_at": "2019-01-20T04:18:42Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/2#discussion_r249264498",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249264498"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/2#discussion_r249264498"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249265685",
        "pull_request_review_id": 194379471,
        "id": 249265685,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI2NTY4NQ==",
        "diff_hunk": "@@ -25,9 +26,11 @@ public async Task MainAsync()\n \n             client = new DiscordSocketClient();\n             commands = new CommandService();\n-            services = new ServiceCollection()",
        "path": "dbot/dbot/Program.cs",
        "position": 12,
        "original_position": 12,
        "commit_id": "c3297d44f39865291ce87146f39172103ed6cd28",
        "original_commit_id": "c3297d44f39865291ce87146f39172103ed6cd28",
        "user": {
            "login": "kchin28",
            "id": 22039906,
            "node_id": "MDQ6VXNlcjIyMDM5OTA2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22039906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchin28",
            "html_url": "https://github.com/kchin28",
            "followers_url": "https://api.github.com/users/kchin28/followers",
            "following_url": "https://api.github.com/users/kchin28/following{/other_user}",
            "gists_url": "https://api.github.com/users/kchin28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kchin28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kchin28/subscriptions",
            "organizations_url": "https://api.github.com/users/kchin28/orgs",
            "repos_url": "https://api.github.com/users/kchin28/repos",
            "events_url": "https://api.github.com/users/kchin28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kchin28/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "there is now a private variable named serviceCollection = new ServiceCollection() that replaces this part",
        "created_at": "2019-01-20T05:49:01Z",
        "updated_at": "2019-01-20T05:49:01Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/3#discussion_r249265685",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/3",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249265685"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/3#discussion_r249265685"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/3"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249265731",
        "pull_request_review_id": 194379519,
        "id": 249265731,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI2NTczMQ==",
        "diff_hunk": "@@ -38,6 +39,9 @@ public async Task MainAsync()\n \n         public async Task InstallCommands() {\n             client.MessageReceived += HandleCommand;\n+\n+            serviceCollection.AddSingleton(new NominationsService());",
        "path": "dbot/dbot/Program.cs",
        "position": null,
        "original_position": 33,
        "commit_id": "a60abee2f8957fbd7909e6614a2b60ec37cf83ec",
        "original_commit_id": "365691bd00ef55acec0c08e9c6d46a45d147bf10",
        "user": {
            "login": "Loonman",
            "id": 6627963,
            "node_id": "MDQ6VXNlcjY2Mjc5NjM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6627963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Loonman",
            "html_url": "https://github.com/Loonman",
            "followers_url": "https://api.github.com/users/Loonman/followers",
            "following_url": "https://api.github.com/users/Loonman/following{/other_user}",
            "gists_url": "https://api.github.com/users/Loonman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Loonman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Loonman/subscriptions",
            "organizations_url": "https://api.github.com/users/Loonman/orgs",
            "repos_url": "https://api.github.com/users/Loonman/repos",
            "events_url": "https://api.github.com/users/Loonman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Loonman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think this needs to be above before calling buildserviceprovider",
        "created_at": "2019-01-20T05:52:25Z",
        "updated_at": "2019-01-20T05:55:46Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/4#discussion_r249265731",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/4",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249265731"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/4#discussion_r249265731"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249265733",
        "pull_request_review_id": 194379521,
        "id": 249265733,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI2NTczMw==",
        "diff_hunk": "@@ -1,5 +1,11 @@\n \n namespace dbot.Services\n {\n-    \n+    public class NominationsService\n+    {\n+\n+        public bool addNom() {\n+            return false;",
        "path": "dbot/dbot/Services/NominationsService.cs",
        "position": 9,
        "original_position": 9,
        "commit_id": "a60abee2f8957fbd7909e6614a2b60ec37cf83ec",
        "original_commit_id": "365691bd00ef55acec0c08e9c6d46a45d147bf10",
        "user": {
            "login": "Loonman",
            "id": 6627963,
            "node_id": "MDQ6VXNlcjY2Mjc5NjM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6627963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Loonman",
            "html_url": "https://github.com/Loonman",
            "followers_url": "https://api.github.com/users/Loonman/followers",
            "following_url": "https://api.github.com/users/Loonman/following{/other_user}",
            "gists_url": "https://api.github.com/users/Loonman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Loonman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Loonman/subscriptions",
            "organizations_url": "https://api.github.com/users/Loonman/orgs",
            "repos_url": "https://api.github.com/users/Loonman/repos",
            "events_url": "https://api.github.com/users/Loonman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Loonman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no nominations for you",
        "created_at": "2019-01-20T05:52:36Z",
        "updated_at": "2019-01-20T05:55:46Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/4#discussion_r249265733",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/4",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249265733"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/4#discussion_r249265733"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249265789",
        "pull_request_review_id": 194379573,
        "id": 249265789,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI2NTc4OQ==",
        "diff_hunk": "@@ -38,6 +39,9 @@ public async Task MainAsync()\n \n         public async Task InstallCommands() {\n             client.MessageReceived += HandleCommand;\n+\n+            serviceCollection.AddSingleton(new NominationsService());",
        "path": "dbot/dbot/Program.cs",
        "position": null,
        "original_position": 33,
        "commit_id": "a60abee2f8957fbd7909e6614a2b60ec37cf83ec",
        "original_commit_id": "365691bd00ef55acec0c08e9c6d46a45d147bf10",
        "user": {
            "login": "kchin28",
            "id": 22039906,
            "node_id": "MDQ6VXNlcjIyMDM5OTA2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22039906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchin28",
            "html_url": "https://github.com/kchin28",
            "followers_url": "https://api.github.com/users/kchin28/followers",
            "following_url": "https://api.github.com/users/kchin28/following{/other_user}",
            "gists_url": "https://api.github.com/users/kchin28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kchin28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kchin28/subscriptions",
            "organizations_url": "https://api.github.com/users/kchin28/orgs",
            "repos_url": "https://api.github.com/users/kchin28/repos",
            "events_url": "https://api.github.com/users/kchin28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kchin28/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "aite",
        "created_at": "2019-01-20T05:55:57Z",
        "updated_at": "2019-01-20T05:55:57Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/4#discussion_r249265789",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/4",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249265789"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/4#discussion_r249265789"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/4"
            }
        },
        "in_reply_to_id": 249265731
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249265792",
        "pull_request_review_id": 194379577,
        "id": 249265792,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI2NTc5Mg==",
        "diff_hunk": "@@ -1,5 +1,11 @@\n \n namespace dbot.Services\n {\n-    \n+    public class NominationsService\n+    {\n+\n+        public bool addNom() {\n+            return false;",
        "path": "dbot/dbot/Services/NominationsService.cs",
        "position": 9,
        "original_position": 9,
        "commit_id": "a60abee2f8957fbd7909e6614a2b60ec37cf83ec",
        "original_commit_id": "365691bd00ef55acec0c08e9c6d46a45d147bf10",
        "user": {
            "login": "kchin28",
            "id": 22039906,
            "node_id": "MDQ6VXNlcjIyMDM5OTA2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22039906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchin28",
            "html_url": "https://github.com/kchin28",
            "followers_url": "https://api.github.com/users/kchin28/followers",
            "following_url": "https://api.github.com/users/kchin28/following{/other_user}",
            "gists_url": "https://api.github.com/users/kchin28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kchin28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kchin28/subscriptions",
            "organizations_url": "https://api.github.com/users/kchin28/orgs",
            "repos_url": "https://api.github.com/users/kchin28/repos",
            "events_url": "https://api.github.com/users/kchin28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kchin28/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "v sad",
        "created_at": "2019-01-20T05:56:04Z",
        "updated_at": "2019-01-20T05:56:04Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/4#discussion_r249265792",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/4",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/249265792"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/4#discussion_r249265792"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/4"
            }
        },
        "in_reply_to_id": 249265733
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/258771023",
        "pull_request_review_id": 206112854,
        "id": 258771023,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODc3MTAyMw==",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Text;\n+using Discord;\n+using Discord.Commands;\n+using Discord.WebSocket;\n+using dbot.Services;\n+using System.Threading.Tasks;\n+\n+namespace dbot.CommandModules\n+{\n+    [Group(\"view\")]\n+    public class ViewModule : ModuleBase\n+    {\n+        private readonly NominationsService _nominationsService;\n+        private readonly OmdbService _omdbService;\n+        private readonly VotingService _votingService;\n+\n+        public ViewModule(NominationsService ns, OmdbService os, VotingService vs)\n+        {\n+            _nominationsService = ns;\n+            _omdbService = os;\n+            _votingService = vs;\n+        }\n+\n+        [Command(\"nominations\")]\n+        public async Task viewNom() {\n+            var noms = _nominationsService.getNominations();\n+            if (noms.Equals(null)) { return; }",
        "path": "dbot/dbot/CommandModules/ViewModule.cs",
        "position": null,
        "original_position": 29,
        "commit_id": "2bfc74f80989a10aba31f13b9a828e118f988b89",
        "original_commit_id": "712c6b08b5bd0cd74caf2ffce7c028ac5bcd4ab1",
        "user": {
            "login": "Loonman",
            "id": 6627963,
            "node_id": "MDQ6VXNlcjY2Mjc5NjM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6627963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Loonman",
            "html_url": "https://github.com/Loonman",
            "followers_url": "https://api.github.com/users/Loonman/followers",
            "following_url": "https://api.github.com/users/Loonman/following{/other_user}",
            "gists_url": "https://api.github.com/users/Loonman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Loonman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Loonman/subscriptions",
            "organizations_url": "https://api.github.com/users/Loonman/orgs",
            "repos_url": "https://api.github.com/users/Loonman/repos",
            "events_url": "https://api.github.com/users/Loonman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Loonman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "if(!noms.Any()) would be better, if nominations service can return null I think it should just return an IEnumerable<NomObj>.Empty instead",
        "created_at": "2019-02-21T03:48:27Z",
        "updated_at": "2019-02-21T05:18:32Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/15#discussion_r258771023",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/15",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/258771023"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/15#discussion_r258771023"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/15"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/258771179",
        "pull_request_review_id": 206113048,
        "id": 258771179,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODc3MTE3OQ==",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Text;\n+using Discord;\n+using Discord.Commands;\n+using Discord.WebSocket;\n+using dbot.Services;\n+using System.Threading.Tasks;\n+\n+namespace dbot.CommandModules\n+{\n+    [Group(\"view\")]\n+    public class ViewModule : ModuleBase\n+    {\n+        private readonly NominationsService _nominationsService;\n+        private readonly OmdbService _omdbService;\n+        private readonly VotingService _votingService;\n+\n+        public ViewModule(NominationsService ns, OmdbService os, VotingService vs)\n+        {\n+            _nominationsService = ns;\n+            _omdbService = os;\n+            _votingService = vs;\n+        }\n+\n+        [Command(\"nominations\")]\n+        public async Task viewNom() {\n+            var noms = _nominationsService.getNominations();\n+            if (noms.Equals(null)) { return; }",
        "path": "dbot/dbot/CommandModules/ViewModule.cs",
        "position": null,
        "original_position": 29,
        "commit_id": "2bfc74f80989a10aba31f13b9a828e118f988b89",
        "original_commit_id": "712c6b08b5bd0cd74caf2ffce7c028ac5bcd4ab1",
        "user": {
            "login": "Loonman",
            "id": 6627963,
            "node_id": "MDQ6VXNlcjY2Mjc5NjM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6627963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Loonman",
            "html_url": "https://github.com/Loonman",
            "followers_url": "https://api.github.com/users/Loonman/followers",
            "following_url": "https://api.github.com/users/Loonman/following{/other_user}",
            "gists_url": "https://api.github.com/users/Loonman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Loonman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Loonman/subscriptions",
            "organizations_url": "https://api.github.com/users/Loonman/orgs",
            "repos_url": "https://api.github.com/users/Loonman/repos",
            "events_url": "https://api.github.com/users/Loonman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Loonman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Generally linq methods with no results will return empties to enable method chaining so it probably already is doing that",
        "created_at": "2019-02-21T03:49:27Z",
        "updated_at": "2019-02-21T05:18:32Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/15#discussion_r258771179",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/15",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/258771179"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/15#discussion_r258771179"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/15"
            }
        },
        "in_reply_to_id": 258771023
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/258772619",
        "pull_request_review_id": 206114772,
        "id": 258772619,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODc3MjYxOQ==",
        "diff_hunk": "@@ -94,6 +96,27 @@ public async Task Default(int movId)\n             }\n         }\n \n+        [Command]\n+        [Priority(1)]\n+        public async Task Default(string mov)\n+        {\n+            if (_votingService.votingOpen())\n+            {\n+                var noms = _nominationsService.getNominations();\n+                var myNomObj = noms.FirstOrDefault(x => x.movName.Equals(mov));",
        "path": "dbot/dbot/CommandModules/votingmodule.cs",
        "position": null,
        "original_position": 27,
        "commit_id": "2bfc74f80989a10aba31f13b9a828e118f988b89",
        "original_commit_id": "dafe059d177dc0a535a0cadc3c5080519ffbccf9",
        "user": {
            "login": "Loonman",
            "id": 6627963,
            "node_id": "MDQ6VXNlcjY2Mjc5NjM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6627963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Loonman",
            "html_url": "https://github.com/Loonman",
            "followers_url": "https://api.github.com/users/Loonman/followers",
            "following_url": "https://api.github.com/users/Loonman/following{/other_user}",
            "gists_url": "https://api.github.com/users/Loonman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Loonman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Loonman/subscriptions",
            "organizations_url": "https://api.github.com/users/Loonman/orgs",
            "repos_url": "https://api.github.com/users/Loonman/repos",
            "events_url": "https://api.github.com/users/Loonman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Loonman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Instead of FirstOrDefault when you expect 1 result you can do .Single() and it will throw if there is none",
        "created_at": "2019-02-21T04:00:11Z",
        "updated_at": "2019-02-21T05:18:32Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/15#discussion_r258772619",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/15",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/258772619"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/15#discussion_r258772619"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/15"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/258773207",
        "pull_request_review_id": 206115498,
        "id": 258773207,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODc3MzIwNw==",
        "diff_hunk": "@@ -94,6 +96,27 @@ public async Task Default(int movId)\n             }\n         }\n \n+        [Command]\n+        [Priority(1)]\n+        public async Task Default(string mov)\n+        {\n+            if (_votingService.votingOpen())\n+            {\n+                var noms = _nominationsService.getNominations();\n+                var myNomObj = noms.FirstOrDefault(x => x.movName.Equals(mov));",
        "path": "dbot/dbot/CommandModules/votingmodule.cs",
        "position": null,
        "original_position": 27,
        "commit_id": "2bfc74f80989a10aba31f13b9a828e118f988b89",
        "original_commit_id": "dafe059d177dc0a535a0cadc3c5080519ffbccf9",
        "user": {
            "login": "kchin28",
            "id": 22039906,
            "node_id": "MDQ6VXNlcjIyMDM5OTA2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22039906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchin28",
            "html_url": "https://github.com/kchin28",
            "followers_url": "https://api.github.com/users/kchin28/followers",
            "following_url": "https://api.github.com/users/kchin28/following{/other_user}",
            "gists_url": "https://api.github.com/users/kchin28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kchin28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kchin28/subscriptions",
            "organizations_url": "https://api.github.com/users/kchin28/orgs",
            "repos_url": "https://api.github.com/users/kchin28/repos",
            "events_url": "https://api.github.com/users/kchin28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kchin28/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "that would be better \r\n",
        "created_at": "2019-02-21T04:04:41Z",
        "updated_at": "2019-02-21T05:18:32Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/15#discussion_r258773207",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/15",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/258773207"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/15#discussion_r258773207"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/15"
            }
        },
        "in_reply_to_id": 258772619
    },
    {
        "url": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/258773211",
        "pull_request_review_id": 206115502,
        "id": 258773211,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODc3MzIxMQ==",
        "diff_hunk": "@@ -94,6 +96,27 @@ public async Task Default(int movId)\n             }\n         }\n \n+        [Command]\n+        [Priority(1)]\n+        public async Task Default(string mov)\n+        {\n+            if (_votingService.votingOpen())\n+            {\n+                var noms = _nominationsService.getNominations();\n+                var myNomObj = noms.FirstOrDefault(x => x.movName.Equals(mov));",
        "path": "dbot/dbot/CommandModules/votingmodule.cs",
        "position": null,
        "original_position": 27,
        "commit_id": "2bfc74f80989a10aba31f13b9a828e118f988b89",
        "original_commit_id": "dafe059d177dc0a535a0cadc3c5080519ffbccf9",
        "user": {
            "login": "Loonman",
            "id": 6627963,
            "node_id": "MDQ6VXNlcjY2Mjc5NjM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6627963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Loonman",
            "html_url": "https://github.com/Loonman",
            "followers_url": "https://api.github.com/users/Loonman/followers",
            "following_url": "https://api.github.com/users/Loonman/following{/other_user}",
            "gists_url": "https://api.github.com/users/Loonman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Loonman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Loonman/subscriptions",
            "organizations_url": "https://api.github.com/users/Loonman/orgs",
            "repos_url": "https://api.github.com/users/Loonman/repos",
            "events_url": "https://api.github.com/users/Loonman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Loonman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If you want to change it i think it would be\r\nvar myNomObj = noms.Where(x => x.movName.Equals(mov)).Single();",
        "created_at": "2019-02-21T04:04:44Z",
        "updated_at": "2019-02-21T05:18:32Z",
        "html_url": "https://github.com/kchin28/movieBot/pull/15#discussion_r258773211",
        "pull_request_url": "https://api.github.com/repos/kchin28/movieBot/pulls/15",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/comments/258773211"
            },
            "html": {
                "href": "https://github.com/kchin28/movieBot/pull/15#discussion_r258773211"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/kchin28/movieBot/pulls/15"
            }
        },
        "in_reply_to_id": 258772619
    }
]