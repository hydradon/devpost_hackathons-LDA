[
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351383272",
        "pull_request_review_id": 323798842,
        "id": 351383272,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTM4MzI3Mg==",
        "diff_hunk": "@@ -5,19 +5,19 @@ on:\n     types: [published]\n \n jobs:\n-#  publish-gpr:\n-#    runs-on: ubuntu-latest\n-#    name: GPR\n-#    steps:\n-#      - uses: actions/checkout@master\n-#      - uses: actions/setup-node@v1\n-#        with:\n-#          node-version: 13\n-#          registry-url: https://npm.pkg.github.com/\n-#          scope: '@jonhue'\n-#      - run: npm publish\n-#        env:\n-#          NODE_AUTH_TOKEN: ${{ secrets.GPR_AUTH_TOKEN }}\n+  # publish-gpr:\n+  #   runs-on: ubuntu-latest\n+  #   name: GPR\n+  #   steps:\n+  #     - uses: actions/checkout@master\n+  #     - uses: actions/setup-node@v1\n+  #       with:\n+  #         node-version: 13\n+  #         registry-url: https://npm.pkg.github.com/\n+  #         scope: '@jonhue'\n+  #     - run: npm publish\n+  #       env:\n+  #         NODE_AUTH_TOKEN: ${{ secrets.GPR_AUTH_TOKEN }}",
        "path": ".github/workflows/release.yml",
        "position": 29,
        "original_position": 29,
        "commit_id": "6e0e7f52b393bcb96445e60b26730468df2800be",
        "original_commit_id": "c7e1b00cf4617f00371d74d813ebd786aac377a3",
        "user": {
            "login": "antonbaumann",
            "id": 30725692,
            "node_id": "MDQ6VXNlcjMwNzI1Njky",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30725692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antonbaumann",
            "html_url": "https://github.com/antonbaumann",
            "followers_url": "https://api.github.com/users/antonbaumann/followers",
            "following_url": "https://api.github.com/users/antonbaumann/following{/other_user}",
            "gists_url": "https://api.github.com/users/antonbaumann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antonbaumann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antonbaumann/subscriptions",
            "organizations_url": "https://api.github.com/users/antonbaumann/orgs",
            "repos_url": "https://api.github.com/users/antonbaumann/repos",
            "events_url": "https://api.github.com/users/antonbaumann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antonbaumann/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do we need this later?",
        "created_at": "2019-11-27T16:22:49Z",
        "updated_at": "2019-11-28T09:07:30Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351383272",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/61",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351383272"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351383272"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/61"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351383987",
        "pull_request_review_id": 323798842,
        "id": 351383987,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTM4Mzk4Nw==",
        "diff_hunk": "@@ -1 +1 @@\n-declare module 'tree-sitter-go';\n\\ No newline at end of file\n+declare module 'tree-sitter-go'",
        "path": "src/@types/tree-sitter-go/index.d.ts",
        "position": null,
        "original_position": 3,
        "commit_id": "6e0e7f52b393bcb96445e60b26730468df2800be",
        "original_commit_id": "c7e1b00cf4617f00371d74d813ebd786aac377a3",
        "user": {
            "login": "antonbaumann",
            "id": 30725692,
            "node_id": "MDQ6VXNlcjMwNzI1Njky",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30725692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antonbaumann",
            "html_url": "https://github.com/antonbaumann",
            "followers_url": "https://api.github.com/users/antonbaumann/followers",
            "following_url": "https://api.github.com/users/antonbaumann/following{/other_user}",
            "gists_url": "https://api.github.com/users/antonbaumann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antonbaumann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antonbaumann/subscriptions",
            "organizations_url": "https://api.github.com/users/antonbaumann/orgs",
            "repos_url": "https://api.github.com/users/antonbaumann/repos",
            "events_url": "https://api.github.com/users/antonbaumann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antonbaumann/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "missing semicolon\r\nor did we change linter preferences?",
        "created_at": "2019-11-27T16:24:06Z",
        "updated_at": "2019-11-28T09:07:30Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351383987",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/61",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351383987"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351383987"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/61"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351541327",
        "pull_request_review_id": 323798842,
        "id": 351541327,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTU0MTMyNw==",
        "diff_hunk": "@@ -0,0 +1,152 @@\n+import { CodeOwners, Declaration, Owner, Strategy } from './types';\n+import { readFile, round } from './util';\n+import Git from './Git';\n+import { getLanguage } from './languages';\n+import Parser from './Parser';\n+\n+export default class WhoWroteThat {\n+    filePath: string;\n+    depth: number;\n+    strategy: Strategy;\n+    parser: Parser;\n+\n+    constructor(\n+        filePath: string,\n+        depth: number,\n+        strategy: Strategy,\n+        fail: (error: string) => void\n+    ) {\n+        this.filePath = filePath;\n+        this.depth = depth;\n+        this.strategy = strategy;\n+\n+        const fileExtension = this.filePath.split('.').pop();\n+        const lang = getLanguage(fileExtension);\n+        if (lang)\n+            this.parser = new Parser(lang);\n+        else\n+            fail(`No language support for .${fileExtension} files`);\n+    }\n+\n+    decl(name: string): Promise<CodeOwners> {\n+        return Git.commitsAffectingFile(this.filePath).then(commits => {\n+            return readFile(this.filePath).then(sourceCode => {\n+                const rootNode = this.parser.parse(sourceCode);\n+                const declaration =\n+                    this.parser.findDeclarationByName(rootNode, name);\n+                return this.rec(declaration, commits, 0)\n+                    .then(owners => ({ declaration, owners }));\n+            }).then(transformResult);\n+        });\n+    }\n+\n+    line(line: number): Promise<CodeOwners> {\n+        return Git.commitsAffectingFile(this.filePath).then(commits => {\n+            return readFile(this.filePath).then(sourceCode => {\n+                const rootNode = this.parser.parse(sourceCode);\n+                const declaration =\n+                    this.parser.findDeclarationByLine(rootNode, line);\n+                return this.rec(declaration, commits, 0)\n+                    .then(owners => ({ declaration, owners }));\n+            }).then(transformResult);\n+        });\n+    }\n+\n+    private rec(\n+        decl: Declaration,\n+        commits: string[],\n+        commitIndex: number\n+    ): Promise<Owner[]> {\n+        if (\n+            this.depth && commitIndex >= this.depth ||\n+            commitIndex >= commits.length\n+        ) return new Promise(resolve => resolve([]));\n+\n+        return Git.readFileAtCommit(this.filePath, commits[commitIndex])\n+            .then(sourceCodeAtCommit => {\n+                const node = this.parser.parse(sourceCodeAtCommit);\n+                const spans = this.parser.findSpans(node, decl);\n+\n+                // if current commit does not contain declaration\n+                // assume no earlier commit contains declaration\n+                if (spans.length == 0) return [];\n+\n+                return Promise.all(\n+                    spans.map(span => Git.getOwnerOfCommit(\n+                        this.filePath,\n+                        commits[commitIndex],\n+                        span\n+                    ))\n+                )\n+                    .then(mergeDuplicateOwners)\n+                    .then(owners => {\n+                        return this.rec(decl, commits, commitIndex + 1)\n+                            .then(newOwners => mergeDuplicateOwners([\n+                                ...owners,\n+                                ...scale(\n+                                    this.strategy,\n+                                    newOwners,\n+                                    weight(this.strategy, owners)\n+                                )\n+                            ]));\n+                    });\n+            }).catch(() => {\n+                // file could not be read at HEAD~commitIndex\n+                return [];\n+            });\n+    }\n+}",
        "path": "src/WhoWroteThat.ts",
        "position": 98,
        "original_position": 98,
        "commit_id": "6e0e7f52b393bcb96445e60b26730468df2800be",
        "original_commit_id": "c7e1b00cf4617f00371d74d813ebd786aac377a3",
        "user": {
            "login": "antonbaumann",
            "id": 30725692,
            "node_id": "MDQ6VXNlcjMwNzI1Njky",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30725692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antonbaumann",
            "html_url": "https://github.com/antonbaumann",
            "followers_url": "https://api.github.com/users/antonbaumann/followers",
            "following_url": "https://api.github.com/users/antonbaumann/following{/other_user}",
            "gists_url": "https://api.github.com/users/antonbaumann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antonbaumann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antonbaumann/subscriptions",
            "organizations_url": "https://api.github.com/users/antonbaumann/orgs",
            "repos_url": "https://api.github.com/users/antonbaumann/repos",
            "events_url": "https://api.github.com/users/antonbaumann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antonbaumann/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\ud83d\udc4d \ud83d\udc4d ",
        "created_at": "2019-11-27T23:59:36Z",
        "updated_at": "2019-11-28T09:07:30Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351541327",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/61",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351541327"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351541327"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/61"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351541904",
        "pull_request_review_id": 323798842,
        "id": 351541904,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTU0MTkwNA==",
        "diff_hunk": "@@ -0,0 +1,152 @@\n+import { CodeOwners, Declaration, Owner, Strategy } from './types';\n+import { readFile, round } from './util';\n+import Git from './Git';\n+import { getLanguage } from './languages';\n+import Parser from './Parser';\n+\n+export default class WhoWroteThat {\n+    filePath: string;\n+    depth: number;\n+    strategy: Strategy;\n+    parser: Parser;\n+\n+    constructor(\n+        filePath: string,\n+        depth: number,\n+        strategy: Strategy,\n+        fail: (error: string) => void\n+    ) {\n+        this.filePath = filePath;\n+        this.depth = depth;\n+        this.strategy = strategy;\n+\n+        const fileExtension = this.filePath.split('.').pop();\n+        const lang = getLanguage(fileExtension);\n+        if (lang)\n+            this.parser = new Parser(lang);\n+        else\n+            fail(`No language support for .${fileExtension} files`);\n+    }\n+\n+    decl(name: string): Promise<CodeOwners> {\n+        return Git.commitsAffectingFile(this.filePath).then(commits => {\n+            return readFile(this.filePath).then(sourceCode => {\n+                const rootNode = this.parser.parse(sourceCode);\n+                const declaration =\n+                    this.parser.findDeclarationByName(rootNode, name);\n+                return this.rec(declaration, commits, 0)\n+                    .then(owners => ({ declaration, owners }));\n+            }).then(transformResult);\n+        });\n+    }\n+\n+    line(line: number): Promise<CodeOwners> {\n+        return Git.commitsAffectingFile(this.filePath).then(commits => {\n+            return readFile(this.filePath).then(sourceCode => {\n+                const rootNode = this.parser.parse(sourceCode);\n+                const declaration =\n+                    this.parser.findDeclarationByLine(rootNode, line);\n+                return this.rec(declaration, commits, 0)\n+                    .then(owners => ({ declaration, owners }));\n+            }).then(transformResult);\n+        });\n+    }\n+\n+    private rec(\n+        decl: Declaration,\n+        commits: string[],\n+        commitIndex: number\n+    ): Promise<Owner[]> {\n+        if (\n+            this.depth && commitIndex >= this.depth ||\n+            commitIndex >= commits.length\n+        ) return new Promise(resolve => resolve([]));\n+\n+        return Git.readFileAtCommit(this.filePath, commits[commitIndex])\n+            .then(sourceCodeAtCommit => {\n+                const node = this.parser.parse(sourceCodeAtCommit);\n+                const spans = this.parser.findSpans(node, decl);\n+\n+                // if current commit does not contain declaration\n+                // assume no earlier commit contains declaration\n+                if (spans.length == 0) return [];\n+\n+                return Promise.all(\n+                    spans.map(span => Git.getOwnerOfCommit(\n+                        this.filePath,\n+                        commits[commitIndex],\n+                        span\n+                    ))\n+                )\n+                    .then(mergeDuplicateOwners)\n+                    .then(owners => {\n+                        return this.rec(decl, commits, commitIndex + 1)\n+                            .then(newOwners => mergeDuplicateOwners([\n+                                ...owners,\n+                                ...scale(\n+                                    this.strategy,\n+                                    newOwners,\n+                                    weight(this.strategy, owners)\n+                                )\n+                            ]));\n+                    });\n+            }).catch(() => {\n+                // file could not be read at HEAD~commitIndex\n+                return [];\n+            });\n+    }\n+}\n+\n+const transformResult = (result: CodeOwners): CodeOwners => ({\n+    ...result,\n+    owners: squish(\n+        result.owners\n+            .sort((a, b) => a.score < b.score ? 1 : -1)\n+    ).filter(owner => owner.score > 0)\n+});\n+\n+const scale = (\n+    strategy: Strategy,\n+    owners: Owner[],\n+    weight: number\n+): Owner[] => {\n+    if (strategy === Strategy.WEIGHTED_LINES)\n+        return owners.map(owner => ({\n+            ...owner,\n+            score: owner.score * (weight - weight / 4) / weight",
        "path": "src/WhoWroteThat.ts",
        "position": 116,
        "original_position": 116,
        "commit_id": "6e0e7f52b393bcb96445e60b26730468df2800be",
        "original_commit_id": "c7e1b00cf4617f00371d74d813ebd786aac377a3",
        "user": {
            "login": "antonbaumann",
            "id": 30725692,
            "node_id": "MDQ6VXNlcjMwNzI1Njky",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30725692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antonbaumann",
            "html_url": "https://github.com/antonbaumann",
            "followers_url": "https://api.github.com/users/antonbaumann/followers",
            "following_url": "https://api.github.com/users/antonbaumann/following{/other_user}",
            "gists_url": "https://api.github.com/users/antonbaumann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antonbaumann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antonbaumann/subscriptions",
            "organizations_url": "https://api.github.com/users/antonbaumann/orgs",
            "repos_url": "https://api.github.com/users/antonbaumann/repos",
            "events_url": "https://api.github.com/users/antonbaumann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antonbaumann/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why especially 4?",
        "created_at": "2019-11-28T00:03:10Z",
        "updated_at": "2019-11-28T09:07:30Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351541904",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/61",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351541904"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351541904"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/61"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351543010",
        "pull_request_review_id": 323798842,
        "id": 351543010,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTU0MzAxMA==",
        "diff_hunk": "@@ -0,0 +1,31 @@\n+import Parser from 'tree-sitter';\n+import TreeSitterGo from 'tree-sitter-go';\n+import { Declaration } from '../types';\n+\n+const extractTypeDeclarationName = (node: Parser.SyntaxNode): string => {\n+    return node.text.replace('type ', '').split(' ')[0];\n+};\n+\n+const extractFunctionDeclarationName = (node: Parser.SyntaxNode): string => {\n+    return node.text.replace('func ', '').split(' ')[0];\n+};",
        "path": "src/languages/Go.ts",
        "position": 11,
        "original_position": 11,
        "commit_id": "6e0e7f52b393bcb96445e60b26730468df2800be",
        "original_commit_id": "c7e1b00cf4617f00371d74d813ebd786aac377a3",
        "user": {
            "login": "antonbaumann",
            "id": 30725692,
            "node_id": "MDQ6VXNlcjMwNzI1Njky",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30725692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antonbaumann",
            "html_url": "https://github.com/antonbaumann",
            "followers_url": "https://api.github.com/users/antonbaumann/followers",
            "following_url": "https://api.github.com/users/antonbaumann/following{/other_user}",
            "gists_url": "https://api.github.com/users/antonbaumann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antonbaumann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antonbaumann/subscriptions",
            "organizations_url": "https://api.github.com/users/antonbaumann/orgs",
            "repos_url": "https://api.github.com/users/antonbaumann/repos",
            "events_url": "https://api.github.com/users/antonbaumann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antonbaumann/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`func (h *handler) getExapmpleByID(id int)`\r\nwould return `(h`\r\n\r\nbut we can fix that in another PR",
        "created_at": "2019-11-28T00:10:03Z",
        "updated_at": "2019-11-28T09:07:30Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351543010",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/61",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351543010"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351543010"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/61"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351543189",
        "pull_request_review_id": 323798842,
        "id": 351543189,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTU0MzE4OQ==",
        "diff_hunk": "@@ -0,0 +1,37 @@\n+import Parser from 'tree-sitter';\n+import TreeSitterJava from 'tree-sitter-java';\n+import { Declaration } from '../types';\n+\n+const extractClassDeclarationName = (node: Parser.SyntaxNode): string => {\n+    const indexClassToken = node.text.indexOf('class');\n+    const elements = node.text.substring(indexClassToken + 6).split(' ');",
        "path": "src/languages/Java.ts",
        "position": 8,
        "original_position": 7,
        "commit_id": "6e0e7f52b393bcb96445e60b26730468df2800be",
        "original_commit_id": "c7e1b00cf4617f00371d74d813ebd786aac377a3",
        "user": {
            "login": "antonbaumann",
            "id": 30725692,
            "node_id": "MDQ6VXNlcjMwNzI1Njky",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30725692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antonbaumann",
            "html_url": "https://github.com/antonbaumann",
            "followers_url": "https://api.github.com/users/antonbaumann/followers",
            "following_url": "https://api.github.com/users/antonbaumann/following{/other_user}",
            "gists_url": "https://api.github.com/users/antonbaumann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antonbaumann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antonbaumann/subscriptions",
            "organizations_url": "https://api.github.com/users/antonbaumann/orgs",
            "repos_url": "https://api.github.com/users/antonbaumann/repos",
            "events_url": "https://api.github.com/users/antonbaumann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antonbaumann/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we should at least write a comment why we use `+ 6`",
        "created_at": "2019-11-28T00:11:07Z",
        "updated_at": "2019-11-28T09:07:30Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351543189",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/61",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351543189"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351543189"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/61"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351654448",
        "pull_request_review_id": 324132562,
        "id": 351654448,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTY1NDQ0OA==",
        "diff_hunk": "@@ -5,19 +5,19 @@ on:\n     types: [published]\n \n jobs:\n-#  publish-gpr:\n-#    runs-on: ubuntu-latest\n-#    name: GPR\n-#    steps:\n-#      - uses: actions/checkout@master\n-#      - uses: actions/setup-node@v1\n-#        with:\n-#          node-version: 13\n-#          registry-url: https://npm.pkg.github.com/\n-#          scope: '@jonhue'\n-#      - run: npm publish\n-#        env:\n-#          NODE_AUTH_TOKEN: ${{ secrets.GPR_AUTH_TOKEN }}\n+  # publish-gpr:\n+  #   runs-on: ubuntu-latest\n+  #   name: GPR\n+  #   steps:\n+  #     - uses: actions/checkout@master\n+  #     - uses: actions/setup-node@v1\n+  #       with:\n+  #         node-version: 13\n+  #         registry-url: https://npm.pkg.github.com/\n+  #         scope: '@jonhue'\n+  #     - run: npm publish\n+  #       env:\n+  #         NODE_AUTH_TOKEN: ${{ secrets.GPR_AUTH_TOKEN }}",
        "path": ".github/workflows/release.yml",
        "position": 29,
        "original_position": 29,
        "commit_id": "6e0e7f52b393bcb96445e60b26730468df2800be",
        "original_commit_id": "c7e1b00cf4617f00371d74d813ebd786aac377a3",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "At some point we may want to publish this package to the GitHub Package Registry. So I'd just keep it for now.",
        "created_at": "2019-11-28T08:55:35Z",
        "updated_at": "2019-11-28T09:07:30Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351654448",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/61",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351654448"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351654448"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/61"
            }
        },
        "in_reply_to_id": 351383272
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351654658",
        "pull_request_review_id": 324132835,
        "id": 351654658,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTY1NDY1OA==",
        "diff_hunk": "@@ -0,0 +1,31 @@\n+import Parser from 'tree-sitter';\n+import TreeSitterGo from 'tree-sitter-go';\n+import { Declaration } from '../types';\n+\n+const extractTypeDeclarationName = (node: Parser.SyntaxNode): string => {\n+    return node.text.replace('type ', '').split(' ')[0];\n+};\n+\n+const extractFunctionDeclarationName = (node: Parser.SyntaxNode): string => {\n+    return node.text.replace('func ', '').split(' ')[0];\n+};",
        "path": "src/languages/Go.ts",
        "position": 11,
        "original_position": 11,
        "commit_id": "6e0e7f52b393bcb96445e60b26730468df2800be",
        "original_commit_id": "c7e1b00cf4617f00371d74d813ebd786aac377a3",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That should be fixed once we move to tree-sitter fields.",
        "created_at": "2019-11-28T08:56:03Z",
        "updated_at": "2019-11-28T09:07:30Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351654658",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/61",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351654658"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351654658"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/61"
            }
        },
        "in_reply_to_id": 351543010
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351655141",
        "pull_request_review_id": 324133427,
        "id": 351655141,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTY1NTE0MQ==",
        "diff_hunk": "@@ -0,0 +1,152 @@\n+import { CodeOwners, Declaration, Owner, Strategy } from './types';\n+import { readFile, round } from './util';\n+import Git from './Git';\n+import { getLanguage } from './languages';\n+import Parser from './Parser';\n+\n+export default class WhoWroteThat {\n+    filePath: string;\n+    depth: number;\n+    strategy: Strategy;\n+    parser: Parser;\n+\n+    constructor(\n+        filePath: string,\n+        depth: number,\n+        strategy: Strategy,\n+        fail: (error: string) => void\n+    ) {\n+        this.filePath = filePath;\n+        this.depth = depth;\n+        this.strategy = strategy;\n+\n+        const fileExtension = this.filePath.split('.').pop();\n+        const lang = getLanguage(fileExtension);\n+        if (lang)\n+            this.parser = new Parser(lang);\n+        else\n+            fail(`No language support for .${fileExtension} files`);\n+    }\n+\n+    decl(name: string): Promise<CodeOwners> {\n+        return Git.commitsAffectingFile(this.filePath).then(commits => {\n+            return readFile(this.filePath).then(sourceCode => {\n+                const rootNode = this.parser.parse(sourceCode);\n+                const declaration =\n+                    this.parser.findDeclarationByName(rootNode, name);\n+                return this.rec(declaration, commits, 0)\n+                    .then(owners => ({ declaration, owners }));\n+            }).then(transformResult);\n+        });\n+    }\n+\n+    line(line: number): Promise<CodeOwners> {\n+        return Git.commitsAffectingFile(this.filePath).then(commits => {\n+            return readFile(this.filePath).then(sourceCode => {\n+                const rootNode = this.parser.parse(sourceCode);\n+                const declaration =\n+                    this.parser.findDeclarationByLine(rootNode, line);\n+                return this.rec(declaration, commits, 0)\n+                    .then(owners => ({ declaration, owners }));\n+            }).then(transformResult);\n+        });\n+    }\n+\n+    private rec(\n+        decl: Declaration,\n+        commits: string[],\n+        commitIndex: number\n+    ): Promise<Owner[]> {\n+        if (\n+            this.depth && commitIndex >= this.depth ||\n+            commitIndex >= commits.length\n+        ) return new Promise(resolve => resolve([]));\n+\n+        return Git.readFileAtCommit(this.filePath, commits[commitIndex])\n+            .then(sourceCodeAtCommit => {\n+                const node = this.parser.parse(sourceCodeAtCommit);\n+                const spans = this.parser.findSpans(node, decl);\n+\n+                // if current commit does not contain declaration\n+                // assume no earlier commit contains declaration\n+                if (spans.length == 0) return [];\n+\n+                return Promise.all(\n+                    spans.map(span => Git.getOwnerOfCommit(\n+                        this.filePath,\n+                        commits[commitIndex],\n+                        span\n+                    ))\n+                )\n+                    .then(mergeDuplicateOwners)\n+                    .then(owners => {\n+                        return this.rec(decl, commits, commitIndex + 1)\n+                            .then(newOwners => mergeDuplicateOwners([\n+                                ...owners,\n+                                ...scale(\n+                                    this.strategy,\n+                                    newOwners,\n+                                    weight(this.strategy, owners)\n+                                )\n+                            ]));\n+                    });\n+            }).catch(() => {\n+                // file could not be read at HEAD~commitIndex\n+                return [];\n+            });\n+    }\n+}\n+\n+const transformResult = (result: CodeOwners): CodeOwners => ({\n+    ...result,\n+    owners: squish(\n+        result.owners\n+            .sort((a, b) => a.score < b.score ? 1 : -1)\n+    ).filter(owner => owner.score > 0)\n+});\n+\n+const scale = (\n+    strategy: Strategy,\n+    owners: Owner[],\n+    weight: number\n+): Owner[] => {\n+    if (strategy === Strategy.WEIGHTED_LINES)\n+        return owners.map(owner => ({\n+            ...owner,\n+            score: owner.score * (weight - weight / 4) / weight",
        "path": "src/WhoWroteThat.ts",
        "position": 116,
        "original_position": 116,
        "commit_id": "6e0e7f52b393bcb96445e60b26730468df2800be",
        "original_commit_id": "c7e1b00cf4617f00371d74d813ebd786aac377a3",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is just how I defined this strategy \ud83d\ude04. I'm going to document it with #57 ",
        "created_at": "2019-11-28T08:57:02Z",
        "updated_at": "2019-11-28T09:07:30Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351655141",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/61",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/351655141"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/61#discussion_r351655141"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/61"
            }
        },
        "in_reply_to_id": 351541904
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/353030943",
        "pull_request_review_id": 325952382,
        "id": 353030943,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MzAzMDk0Mw==",
        "diff_hunk": "@@ -26,12 +26,15 @@ const handleResult = (result: CodeOwners): void => {\n     } else if (Program.format === Format.JSON) {\n         console.log(JSON.stringify(result));\n     } else if (Program.format === Format.PRETTY) {\n-        if (result.declaration)\n+        if (result.declaration) {\n+            const range =\n+                `[${result.declaration.from}-${result.declaration.to}] `;",
        "path": "src/index.ts",
        "position": null,
        "original_position": 7,
        "commit_id": "f6852527088c25e85d3205669927c891f586c578",
        "original_commit_id": "cce0d0559d2406f354faeb3af5c333ba656ed768",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Very nit-picky, but imo it makes more sense to move the space at the end of the string to the line where `range` is used.",
        "created_at": "2019-12-03T08:08:46Z",
        "updated_at": "2019-12-03T08:23:30Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/86#discussion_r353030943",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/86",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/353030943"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/86#discussion_r353030943"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/86"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363033587",
        "pull_request_review_id": 338351929,
        "id": 363033587,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAzMzU4Nw==",
        "diff_hunk": "@@ -0,0 +1,21 @@\n+import TreeSitterTypeScript from 'tree-sitter-typescript/typescript';\n+import { findDeclaration } from './util';\n+\n+const NODE_TYPES = Object.freeze([\n+    'class',\n+    'class_declaration',\n+    'function',\n+    'function_declaration',\n+    'generator_function',\n+    'generator_function_declaration',\n+    'method_definition',",
        "path": "src/languages/TypeScript.ts",
        "position": 11,
        "original_position": 11,
        "commit_id": "95f9d68bdb90d7e792774b11278ba67d6ae5aa35",
        "original_commit_id": "536d34e7fdc92d112f9e6c7cd7825cedd145e1d5",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should add `abstract_class_declaration`, `interface_declaration`, `enum_declaration`, `type_alias_declaration`, `property_signature` (what do you think about this one?), `module` to both language files.",
        "created_at": "2020-01-04T12:45:12Z",
        "updated_at": "2020-01-04T12:53:48Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/123#discussion_r363033587",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/123",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363033587"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/123#discussion_r363033587"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/123"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363033649",
        "pull_request_review_id": 338351929,
        "id": 363033649,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAzMzY0OQ==",
        "diff_hunk": "@@ -25,7 +25,8 @@\n     \"tree-sitter-go\": \"^0.16.0\",\n     \"tree-sitter-java\": \"^0.16.0\",\n     \"tree-sitter-javascript\": \"^0.16.0\",\n-    \"tree-sitter-python\": \"^0.16.0\"\n+    \"tree-sitter-python\": \"^0.16.0\",\n+    \"tree-sitter-typescript\": \"latest\"",
        "path": "package.json",
        "position": null,
        "original_position": 6,
        "commit_id": "95f9d68bdb90d7e792774b11278ba67d6ae5aa35",
        "original_commit_id": "536d34e7fdc92d112f9e6c7cd7825cedd145e1d5",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What do you think about using the same version specification as for our other dependencies? \ud83d\ude42 ",
        "created_at": "2020-01-04T12:46:24Z",
        "updated_at": "2020-01-04T12:53:48Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/123#discussion_r363033649",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/123",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363033649"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/123#discussion_r363033649"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/123"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363033739",
        "pull_request_review_id": 338352044,
        "id": 363033739,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAzMzczOQ==",
        "diff_hunk": "@@ -1,4 +1,4 @@\n-import TreeSitter from 'tree-sitter';\n+import TreeSitter, {SyntaxNode} from 'tree-sitter';",
        "path": "src/Parser.ts",
        "position": null,
        "original_position": 2,
        "commit_id": "bf96dfb89bdfff42c2c7f2de33df057cd71cda2f",
        "original_commit_id": "cc29c1c945108d031b992896087036bac93d31d0",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do we need this change? \ud83d\ude42 ",
        "created_at": "2020-01-04T12:48:15Z",
        "updated_at": "2020-01-04T12:55:15Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/122#discussion_r363033739",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/122",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363033739"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/122#discussion_r363033739"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/122"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363126356",
        "pull_request_review_id": 338430026,
        "id": 363126356,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyNjM1Ng==",
        "diff_hunk": "@@ -46,13 +46,13 @@ export default class WhoWroteThat {\n                 const rootNode = this.parser.parse(sourceCode);\n                 const declaration =\n                     this.parser.findDeclarationByLine(rootNode, line);\n-                return this.rec(declaration, commits, 0)\n+                return this.getDclarationOwners(declaration, commits, 0)\n                     .then(owners => ({ declaration, owners }));\n             }).then(transformResult);\n         });\n     }\n \n-    private rec(\n+    private getDclarationOwners(",
        "path": "src/WhoWroteThat.ts",
        "position": 21,
        "original_position": 21,
        "commit_id": "29dc3f23c60b6c5fd2dcb932074c34116f75147f",
        "original_commit_id": "29dc3f23c60b6c5fd2dcb932074c34116f75147f",
        "user": {
            "login": "antonbaumann",
            "id": 30725692,
            "node_id": "MDQ6VXNlcjMwNzI1Njky",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30725692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antonbaumann",
            "html_url": "https://github.com/antonbaumann",
            "followers_url": "https://api.github.com/users/antonbaumann/followers",
            "following_url": "https://api.github.com/users/antonbaumann/following{/other_user}",
            "gists_url": "https://api.github.com/users/antonbaumann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antonbaumann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antonbaumann/subscriptions",
            "organizations_url": "https://api.github.com/users/antonbaumann/orgs",
            "repos_url": "https://api.github.com/users/antonbaumann/repos",
            "events_url": "https://api.github.com/users/antonbaumann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antonbaumann/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\ud83d\udcaf ",
        "created_at": "2020-01-05T23:51:24Z",
        "updated_at": "2020-01-05T23:52:08Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/132#discussion_r363126356",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/132",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363126356"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/132#discussion_r363126356"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/132"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363124790",
        "pull_request_review_id": 338428412,
        "id": 363124790,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyNDc5MA==",
        "diff_hunk": "@@ -45,11 +45,23 @@ export default class Parser {\n             .shift() || this.lang.findDeclaration(node);\n     }\n \n+    findSourceFileDeclaration(",
        "path": "src/Parser.ts",
        "position": null,
        "original_position": 13,
        "commit_id": "32cc8566c2aa6ad4067043874572500b7af6fbfa",
        "original_commit_id": "3d446205b630d2d2d5eef687f1a5efde784e8609",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think we could probably rename this to `fileDeclaration` as we're not \"finding\" anything \ud83d\ude42 ",
        "created_at": "2020-01-05T23:24:10Z",
        "updated_at": "2020-01-06T10:29:43Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363124790",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/125",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363124790"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363124790"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/125"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363124966",
        "pull_request_review_id": 338428412,
        "id": 363124966,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyNDk2Ng==",
        "diff_hunk": "@@ -47,11 +47,49 @@ export default class WhoWroteThat {\n                 const declaration =\n                     this.parser.findDeclarationByLine(rootNode, line);\n                 return this.rec(declaration, commits, 0)\n-                    .then(owners => ({ declaration, owners }));\n+                    .then(owners => ({declaration, owners}));\n             }).then(transformResult);\n         });\n     }\n \n+    file(): Promise<CodeOwners> {\n+        return Git.commitsAffectingFile(this.filePath).then(commits => {\n+            return readFile(this.filePath).then(sourceCode => {\n+                const rootNode = this.parser.parse(sourceCode);\n+                const declaration =\n+                    this.parser.findSourceFileDeclaration(rootNode);\n+                declaration.name = this.filePath.split('/').pop();",
        "path": "src/WhoWroteThat.ts",
        "position": null,
        "original_position": 36,
        "commit_id": "32cc8566c2aa6ad4067043874572500b7af6fbfa",
        "original_commit_id": "3d446205b630d2d2d5eef687f1a5efde784e8609",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "IMHO it would be nicer to pass this value as an argument to `findSourceFileDeclaration` and set the `name` member there :)",
        "created_at": "2020-01-05T23:26:30Z",
        "updated_at": "2020-01-06T10:29:43Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363124966",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/125",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363124966"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363124966"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/125"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363125532",
        "pull_request_review_id": 338428412,
        "id": 363125532,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyNTUzMg==",
        "diff_hunk": "@@ -15,6 +15,7 @@ const NODE_TYPES = Object.freeze([\n     'type_alias_declaration',\n     'property_signature',\n     'module',\n+    'program'",
        "path": "src/languages/TypeScript.ts",
        "position": null,
        "original_position": 4,
        "commit_id": "32cc8566c2aa6ad4067043874572500b7af6fbfa",
        "original_commit_id": "3d446205b630d2d2d5eef687f1a5efde784e8609",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why did we add this line?",
        "created_at": "2020-01-05T23:36:47Z",
        "updated_at": "2020-01-06T10:29:43Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363125532",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/125",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363125532"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363125532"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/125"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363125583",
        "pull_request_review_id": 338428412,
        "id": 363125583,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyNTU4Mw==",
        "diff_hunk": "@@ -70,7 +107,6 @@ export default class WhoWroteThat {\n                 // if current commit does not contain declaration\n                 // assume no earlier commit contains declaration\n                 if (spans.length == 0) return [];\n-",
        "path": "src/WhoWroteThat.ts",
        "position": null,
        "original_position": 83,
        "commit_id": "32cc8566c2aa6ad4067043874572500b7af6fbfa",
        "original_commit_id": "3d446205b630d2d2d5eef687f1a5efde784e8609",
        "user": {
            "login": "jonhue",
            "id": 13420273,
            "node_id": "MDQ6VXNlcjEzNDIwMjcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13420273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonhue",
            "html_url": "https://github.com/jonhue",
            "followers_url": "https://api.github.com/users/jonhue/followers",
            "following_url": "https://api.github.com/users/jonhue/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonhue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonhue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonhue/subscriptions",
            "organizations_url": "https://api.github.com/users/jonhue/orgs",
            "repos_url": "https://api.github.com/users/jonhue/repos",
            "events_url": "https://api.github.com/users/jonhue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonhue/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why did we remove these two lines? \ud83d\ude42 ",
        "created_at": "2020-01-05T23:37:43Z",
        "updated_at": "2020-01-06T10:29:43Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363125583",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/125",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363125583"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363125583"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/125"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363125979",
        "pull_request_review_id": 338429599,
        "id": 363125979,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyNTk3OQ==",
        "diff_hunk": "@@ -15,6 +15,7 @@ const NODE_TYPES = Object.freeze([\n     'type_alias_declaration',\n     'property_signature',\n     'module',\n+    'program'",
        "path": "src/languages/TypeScript.ts",
        "position": null,
        "original_position": 4,
        "commit_id": "32cc8566c2aa6ad4067043874572500b7af6fbfa",
        "original_commit_id": "3d446205b630d2d2d5eef687f1a5efde784e8609",
        "user": {
            "login": "antonbaumann",
            "id": 30725692,
            "node_id": "MDQ6VXNlcjMwNzI1Njky",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30725692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antonbaumann",
            "html_url": "https://github.com/antonbaumann",
            "followers_url": "https://api.github.com/users/antonbaumann/followers",
            "following_url": "https://api.github.com/users/antonbaumann/following{/other_user}",
            "gists_url": "https://api.github.com/users/antonbaumann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antonbaumann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antonbaumann/subscriptions",
            "organizations_url": "https://api.github.com/users/antonbaumann/orgs",
            "repos_url": "https://api.github.com/users/antonbaumann/repos",
            "events_url": "https://api.github.com/users/antonbaumann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antonbaumann/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "i added it for testing sth and forgot to remove it ",
        "created_at": "2020-01-05T23:44:25Z",
        "updated_at": "2020-01-06T10:29:43Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363125979",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/125",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363125979"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363125979"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/125"
            }
        },
        "in_reply_to_id": 363125532
    },
    {
        "url": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363126253",
        "pull_request_review_id": 338429924,
        "id": 363126253,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyNjI1Mw==",
        "diff_hunk": "@@ -47,11 +47,49 @@ export default class WhoWroteThat {\n                 const declaration =\n                     this.parser.findDeclarationByLine(rootNode, line);\n                 return this.rec(declaration, commits, 0)\n-                    .then(owners => ({ declaration, owners }));\n+                    .then(owners => ({declaration, owners}));\n             }).then(transformResult);\n         });\n     }\n \n+    file(): Promise<CodeOwners> {\n+        return Git.commitsAffectingFile(this.filePath).then(commits => {\n+            return readFile(this.filePath).then(sourceCode => {\n+                const rootNode = this.parser.parse(sourceCode);\n+                const declaration =\n+                    this.parser.findSourceFileDeclaration(rootNode);\n+                declaration.name = this.filePath.split('/').pop();",
        "path": "src/WhoWroteThat.ts",
        "position": null,
        "original_position": 36,
        "commit_id": "32cc8566c2aa6ad4067043874572500b7af6fbfa",
        "original_commit_id": "3d446205b630d2d2d5eef687f1a5efde784e8609",
        "user": {
            "login": "antonbaumann",
            "id": 30725692,
            "node_id": "MDQ6VXNlcjMwNzI1Njky",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30725692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antonbaumann",
            "html_url": "https://github.com/antonbaumann",
            "followers_url": "https://api.github.com/users/antonbaumann/followers",
            "following_url": "https://api.github.com/users/antonbaumann/following{/other_user}",
            "gists_url": "https://api.github.com/users/antonbaumann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antonbaumann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antonbaumann/subscriptions",
            "organizations_url": "https://api.github.com/users/antonbaumann/orgs",
            "repos_url": "https://api.github.com/users/antonbaumann/repos",
            "events_url": "https://api.github.com/users/antonbaumann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antonbaumann/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "i was thinking about that too - but i think `Parser` has nothing to do with filepaths.\r\nmaybe its a good idea to move the whole function to `WhoWroteThat.ts`",
        "created_at": "2020-01-05T23:49:39Z",
        "updated_at": "2020-01-06T10:29:43Z",
        "html_url": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363126253",
        "pull_request_url": "https://api.github.com/repos/who-wrote-that/cli/pulls/125",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/comments/363126253"
            },
            "html": {
                "href": "https://github.com/who-wrote-that/cli/pull/125#discussion_r363126253"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/who-wrote-that/cli/pulls/125"
            }
        },
        "in_reply_to_id": 363124966
    }
]