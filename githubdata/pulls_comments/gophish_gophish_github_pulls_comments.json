[
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/50362097",
        "pull_request_review_id": null,
        "id": 50362097,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYyMDk3",
        "diff_hunk": "@@ -30,6 +30,9 @@\n             <h1 class=\"page-header\" id=\"page-title\">Results for campaign.name</h1>\n         </div>\n         <div class=\"row\">\n+            <button type=\"button\" id=\"backButton\" class=\"btn btn-default\" onclick=\"window.location='/campaigns'\">",
        "path": "templates/campaign_results.html",
        "position": null,
        "original_position": 4,
        "commit_id": "a2aa884c8e69e6413ef5d8e5ce10cd912e2b6022",
        "original_commit_id": "0b803ac6d7bc521d0270ab003194f696663a88ac",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you just use an `a href=\"/campaigns\" class=\"btn btn-default\"`? Might be more of what we're looking for than a button?\n",
        "created_at": "2016-01-21T05:33:00Z",
        "updated_at": "2016-01-21T05:37:54Z",
        "html_url": "https://github.com/gophish/gophish/pull/91#discussion_r50362097",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/91",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/50362097"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/91#discussion_r50362097"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/91"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/53585122",
        "pull_request_review_id": null,
        "id": 53585122,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1MTIy",
        "diff_hunk": "@@ -13,8 +13,13 @@\n                 </li>\n                 <li><a href=\"/landing_pages\">Landing Pages</a>\n                 </li>\n+                <li><a href=\"/sending_profiles\">Sending Profiles</a>\n+                </li>\n                 <li><a href=\"/settings\">Settings</a>\n                 </li>\n+                <li><hr></li>\n+                <li><a href=\"/gophish_user_guide.pdf\">User Guide</a>",
        "path": "templates/campaign_results.html",
        "position": 9,
        "original_position": 9,
        "commit_id": "6b61b24f68bb5acdaffdbb8f4f827cc61622ebc4",
        "original_commit_id": "553ead7d68d58ea5688a77b834999e7212a79516",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Eventually, I'm probably going to move these to a generic \"Documentation\" option with all the docs as links.\n",
        "created_at": "2016-02-22T04:21:15Z",
        "updated_at": "2016-02-29T04:07:50Z",
        "html_url": "https://github.com/gophish/gophish/pull/169#discussion_r53585122",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/169",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/53585122"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/169#discussion_r53585122"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/53585146",
        "pull_request_review_id": null,
        "id": 53585146,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1MTQ2",
        "diff_hunk": "@@ -0,0 +1,143 @@\n+{{define \"body\"}}\n+<div class=\"container-fluid\">\n+    <div class=\"row\">\n+        <div class=\"col-sm-3 col-md-2 sidebar\">\n+            <ul class=\"nav nav-sidebar\">\n+                <li><a href=\"/\">Dashboard</a>\n+                </li>\n+                <li><a href=\"/campaigns\">Campaigns</a>\n+                </li>\n+                <li><a href=\"/users\">Users &amp; Groups</a>\n+                </li>\n+                <li><a href=\"/templates\">Email Templates</a>\n+                </li>\n+                <li><a href=\"/landing_pages\">Landing Pages</a>\n+                </li>\n+                <li class=\"active\"><a href=\"/sending_profiles\">Sending Profiles</a>\n+                </li>\n+                <li><a href=\"/settings\">Settings</a>\n+                </li>\n+                <li><hr></li>\n+                <li><a href=\"/gophish_user_guide.pdf\">User Guide</a>\n+                </li>\n+                <li><a href=\"/api/\">API Documentation</a>\n+                </li>\n+            </ul>\n+        </div>\n+    </div>\n+</div>\n+<div class=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n+    <h1 class=\"page-header\">\n+        Sending Profiles\n+    </h1>\n+    <div id=\"flashes\" class=\"row\"></div>\n+    <div class=\"row\">\n+        <button type=\"button\" class=\"btn btn-primary\" onclick=\"edit(-1)\" data-toggle=\"modal\" data-target=\"#modal\"><i class=\"fa fa-plus\"></i> New Profile</button>\n+    </div>\n+    &nbsp;\n+    <div id=\"loading\">\n+        <i class=\"fa fa-spinner fa-spin fa-4x\"></i>\n+    </div>\n+    <div id=\"emptyMessage\" class=\"row\" style=\"display:none;\">\n+        <div class=\"alert alert-info\">\n+            No profiles created yet. Let's create one!\n+        </div>\n+    </div>\n+    <div class=\"row\">\n+        <table id=\"profileTable\" class=\"table\" style=\"display:none;\">\n+            <thead>\n+                <tr>\n+                    <th>Name</th>\n+\t\t    <th>Interface Type</th>\n+                    <th>Last Modified Date</th>\n+                    <th class=\"col-md-2 no-sort\"></th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+<!-- Modal -->\n+<div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\">\n+  <div class=\"modal-dialog\" role=\"document\">\n+    <div class=\"modal-content\">\n+        <!-- New Template Modal -->\n+        <div class=\"modal-header\">\n+          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onclick=\"dismiss()\"><span aria-hidden=\"true\">&times;</span></button>\n+          <h4 class=\"modal-title\" id=\"profileModalLabel\">New Sending Profile</h4>\n+        </div>\n+        <div class=\"modal-body\">\n+            <div class=\"row\" id=\"modal.flashes\"></div>\n+            <div class=\"form-group\">\n+\t\t<label class=\"control-label\" for=\"name\">Name:</label>\n+                <input type=\"text\" class=\"form-control\" placeholder=\"Profile name\" id=\"name\" autofocus/>\n+\t\t<label class=\"control-label\" for=\"interface_type\">Interface Type:</label>\n+                <input type=\"text\" class=\"form-control\" value=\"SMTP\" id=\"interface_type\" disabled/>\n+\t\t<label class=\"control-label\" for=\"from\">From:</label>\n+                <input type=\"text\" class=\"form-control\" placeholder=\"First Last <test@example.com>\" id=\"from\" required/>\n+\t\t<label class=\"control-label\" for=\"host\">Host:</label>\n+                <input type=\"text\" class=\"form-control\" placeholder=\"smtp.example.com:25\" id=\"host\" required/>\n+\t\t<label class=\"control-label\" for=\"username\">Username:</label>\n+                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" id=\"username\"/>\n+\t\t<label class=\"control-label\" for=\"password\">Password:</label>\n+                <input type=\"text\" class=\"form-control\" placeholder=\"Password\" id=\"password\"/>\n+\t\t<div class=\"checkbox checkbox-primary\">\n+\t\t\t<input id=\"ignore_cert_errors\" type=\"checkbox\" checked>\n+\t\t\t<label for=\"ignore_cert_errors\">Ignore Certificate Errors <i class=\"fa fa-question-circle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Ignore common certificate errors such as self-signed certs (exposes you to MiTM attacks - use carefully!)\"></i></label>\n+\t\t</div>\n+\t\t<!-- <button type=\"button\" data-toggle=\"modal\" data-target=\"#sendTestEmailModal\" class=\"btn btn-primary\"><i class=\"fa fa-envelope\"></i> Send Test Email</button> -->\n+\t\t<!-- disable sendTestEmail functionality on sending profile page until update handling of /util/send_test_email -->\n+\t    </div>\n+        </div>\n+        <div class=\"modal-footer\">\n+            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-default\" onclick=\"dismiss()\">Cancel</button>\n+            <button type=\"button\" class=\"btn btn-primary\" id=\"modalSubmit\">Save Profile</button>\n+        </div>\n+    </div>\n+  </div>\n+</div>\n+<!-- Send Test Email Modal -->\n+<!-- <div class=\"modal\" id=\"sendTestEmailModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\">\n+  <div class=\"modal-dialog\" role=\"document\">\n+    <div class=\"modal-content\"> -->\n+        <!-- New Email Modal -->\n+        <!-- <div class=\"modal-header\">\n+          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n+          <h4 class=\"modal-title\" id=\"sendTestEmailModalTitle\">Send Test Email</h4>\n+        </div>\n+        <div class=\"modal-body\">\n+            <div class=\"row\" id=\"sendTestEmailModal.flashes\"></div>\n+            <div class=\"row\">\n+                <div class=\"col-sm-12\">\n+                    <label class=\"control-label\" for=\"to\">Send Test Email to:</label>\n+                </div>\n+                <br>\n+                <div class=\"col-sm-2\">\n+                    <input type=\"text\" class=\"form-control\" placeholder=\"First Name\" name=\"to_first_name\">\n+                </div>\n+                <div class=\"col-sm-2\">\n+                    <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\" name=\"to_last_name\">\n+                </div>\n+                <div class=\"col-sm-4\">\n+                    <input type=\"email\" class=\"form-control\" placeholder=\"Email\" name=\"to_email\" required>\n+                </div>\n+                <div class=\"col-sm-4\">\n+                    <input type=\"text\" class=\"form-control\" placeholder=\"Position\" name=\"to_position\">\n+                </div>\n+            </div>\n+        </div>\n+        <div class=\"modal-footer\">\n+            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-default\">Cancel</button>\n+            <button type=\"button\" class=\"btn btn-primary\" id=\"sendTestModalSubmit\" onclick=\"sendTestEmail()\"><i class=\"fa fa-envelope\"></i> Send</button>\n+        </div>\n+    </div>\n+  </div>\n+</div> -->\n+<!-- disable sendTestEmail functionality on sending profile page until update handling of /util/send_test_email -->",
        "path": "templates/sending_profiles.html",
        "position": null,
        "original_position": 137,
        "commit_id": "6b61b24f68bb5acdaffdbb8f4f827cc61622ebc4",
        "original_commit_id": "553ead7d68d58ea5688a77b834999e7212a79516",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do we need to do this before merging?\n",
        "created_at": "2016-02-22T04:22:11Z",
        "updated_at": "2016-02-29T04:07:50Z",
        "html_url": "https://github.com/gophish/gophish/pull/169#discussion_r53585146",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/169",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/53585146"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/169#discussion_r53585146"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/53717830",
        "pull_request_review_id": null,
        "id": 53717830,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE3ODMw",
        "diff_hunk": "@@ -0,0 +1,41 @@\n+\n+-- +goose Up\n+-- SQL in section 'Up' is executed when this migration is applied\n+ALTER TABLE campaigns ADD COLUMN smtp_id bigint;\n+UPDATE campaigns \n+\tSET smtp_id = (SELECT smtp.smtp_id FROM smtp) \n+\tWHERE campaigns.id = (\n+\t\tSELECT smtp.smtp_id ",
        "path": "db/migrations/20160221001538_0.1.2_store-smtp-settings.sql",
        "position": null,
        "original_position": 8,
        "commit_id": "6b61b24f68bb5acdaffdbb8f4f827cc61622ebc4",
        "original_commit_id": "a2ee229848f430a1f9f41e2a28bf17cbf5c6bb07",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Any reason this isn't `SELECT campaigns.id`?\n",
        "created_at": "2016-02-23T00:22:54Z",
        "updated_at": "2016-02-29T04:07:50Z",
        "html_url": "https://github.com/gophish/gophish/pull/169#discussion_r53717830",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/169",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/53717830"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/169#discussion_r53717830"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/53721191",
        "pull_request_review_id": null,
        "id": 53721191,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMTkx",
        "diff_hunk": "@@ -0,0 +1,143 @@\n+{{define \"body\"}}\n+<div class=\"container-fluid\">\n+    <div class=\"row\">\n+        <div class=\"col-sm-3 col-md-2 sidebar\">\n+            <ul class=\"nav nav-sidebar\">\n+                <li><a href=\"/\">Dashboard</a>\n+                </li>\n+                <li><a href=\"/campaigns\">Campaigns</a>\n+                </li>\n+                <li><a href=\"/users\">Users &amp; Groups</a>\n+                </li>\n+                <li><a href=\"/templates\">Email Templates</a>\n+                </li>\n+                <li><a href=\"/landing_pages\">Landing Pages</a>\n+                </li>\n+                <li class=\"active\"><a href=\"/sending_profiles\">Sending Profiles</a>\n+                </li>\n+                <li><a href=\"/settings\">Settings</a>\n+                </li>\n+                <li><hr></li>\n+                <li><a href=\"/gophish_user_guide.pdf\">User Guide</a>\n+                </li>\n+                <li><a href=\"/api/\">API Documentation</a>\n+                </li>\n+            </ul>\n+        </div>\n+    </div>\n+</div>\n+<div class=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n+    <h1 class=\"page-header\">\n+        Sending Profiles\n+    </h1>\n+    <div id=\"flashes\" class=\"row\"></div>\n+    <div class=\"row\">\n+        <button type=\"button\" class=\"btn btn-primary\" onclick=\"edit(-1)\" data-toggle=\"modal\" data-target=\"#modal\"><i class=\"fa fa-plus\"></i> New Profile</button>\n+    </div>\n+    &nbsp;\n+    <div id=\"loading\">\n+        <i class=\"fa fa-spinner fa-spin fa-4x\"></i>\n+    </div>\n+    <div id=\"emptyMessage\" class=\"row\" style=\"display:none;\">\n+        <div class=\"alert alert-info\">\n+            No profiles created yet. Let's create one!\n+        </div>\n+    </div>\n+    <div class=\"row\">\n+        <table id=\"profileTable\" class=\"table\" style=\"display:none;\">\n+            <thead>\n+                <tr>\n+                    <th>Name</th>\n+\t\t    <th>Interface Type</th>\n+                    <th>Last Modified Date</th>\n+                    <th class=\"col-md-2 no-sort\"></th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+<!-- Modal -->\n+<div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\">\n+  <div class=\"modal-dialog\" role=\"document\">\n+    <div class=\"modal-content\">\n+        <!-- New Template Modal -->\n+        <div class=\"modal-header\">\n+          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onclick=\"dismiss()\"><span aria-hidden=\"true\">&times;</span></button>\n+          <h4 class=\"modal-title\" id=\"profileModalLabel\">New Sending Profile</h4>\n+        </div>\n+        <div class=\"modal-body\">\n+            <div class=\"row\" id=\"modal.flashes\"></div>\n+            <div class=\"form-group\">\n+\t\t<label class=\"control-label\" for=\"name\">Name:</label>\n+                <input type=\"text\" class=\"form-control\" placeholder=\"Profile name\" id=\"name\" autofocus/>\n+\t\t<label class=\"control-label\" for=\"interface_type\">Interface Type:</label>\n+                <input type=\"text\" class=\"form-control\" value=\"SMTP\" id=\"interface_type\" disabled/>\n+\t\t<label class=\"control-label\" for=\"from\">From:</label>\n+                <input type=\"text\" class=\"form-control\" placeholder=\"First Last <test@example.com>\" id=\"from\" required/>\n+\t\t<label class=\"control-label\" for=\"host\">Host:</label>\n+                <input type=\"text\" class=\"form-control\" placeholder=\"smtp.example.com:25\" id=\"host\" required/>\n+\t\t<label class=\"control-label\" for=\"username\">Username:</label>\n+                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" id=\"username\"/>\n+\t\t<label class=\"control-label\" for=\"password\">Password:</label>\n+                <input type=\"text\" class=\"form-control\" placeholder=\"Password\" id=\"password\"/>\n+\t\t<div class=\"checkbox checkbox-primary\">\n+\t\t\t<input id=\"ignore_cert_errors\" type=\"checkbox\" checked>\n+\t\t\t<label for=\"ignore_cert_errors\">Ignore Certificate Errors <i class=\"fa fa-question-circle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Ignore common certificate errors such as self-signed certs (exposes you to MiTM attacks - use carefully!)\"></i></label>\n+\t\t</div>\n+\t\t<!-- <button type=\"button\" data-toggle=\"modal\" data-target=\"#sendTestEmailModal\" class=\"btn btn-primary\"><i class=\"fa fa-envelope\"></i> Send Test Email</button> -->\n+\t\t<!-- disable sendTestEmail functionality on sending profile page until update handling of /util/send_test_email -->\n+\t    </div>\n+        </div>\n+        <div class=\"modal-footer\">\n+            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-default\" onclick=\"dismiss()\">Cancel</button>\n+            <button type=\"button\" class=\"btn btn-primary\" id=\"modalSubmit\">Save Profile</button>\n+        </div>\n+    </div>\n+  </div>\n+</div>\n+<!-- Send Test Email Modal -->\n+<!-- <div class=\"modal\" id=\"sendTestEmailModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\">\n+  <div class=\"modal-dialog\" role=\"document\">\n+    <div class=\"modal-content\"> -->\n+        <!-- New Email Modal -->\n+        <!-- <div class=\"modal-header\">\n+          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n+          <h4 class=\"modal-title\" id=\"sendTestEmailModalTitle\">Send Test Email</h4>\n+        </div>\n+        <div class=\"modal-body\">\n+            <div class=\"row\" id=\"sendTestEmailModal.flashes\"></div>\n+            <div class=\"row\">\n+                <div class=\"col-sm-12\">\n+                    <label class=\"control-label\" for=\"to\">Send Test Email to:</label>\n+                </div>\n+                <br>\n+                <div class=\"col-sm-2\">\n+                    <input type=\"text\" class=\"form-control\" placeholder=\"First Name\" name=\"to_first_name\">\n+                </div>\n+                <div class=\"col-sm-2\">\n+                    <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\" name=\"to_last_name\">\n+                </div>\n+                <div class=\"col-sm-4\">\n+                    <input type=\"email\" class=\"form-control\" placeholder=\"Email\" name=\"to_email\" required>\n+                </div>\n+                <div class=\"col-sm-4\">\n+                    <input type=\"text\" class=\"form-control\" placeholder=\"Position\" name=\"to_position\">\n+                </div>\n+            </div>\n+        </div>\n+        <div class=\"modal-footer\">\n+            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-default\">Cancel</button>\n+            <button type=\"button\" class=\"btn btn-primary\" id=\"sendTestModalSubmit\" onclick=\"sendTestEmail()\"><i class=\"fa fa-envelope\"></i> Send</button>\n+        </div>\n+    </div>\n+  </div>\n+</div> -->\n+<!-- disable sendTestEmail functionality on sending profile page until update handling of /util/send_test_email -->",
        "path": "templates/sending_profiles.html",
        "position": null,
        "original_position": 137,
        "commit_id": "6b61b24f68bb5acdaffdbb8f4f827cc61622ebc4",
        "original_commit_id": "553ead7d68d58ea5688a77b834999e7212a79516",
        "user": {
            "login": "wjwoodson",
            "id": 7348076,
            "node_id": "MDQ6VXNlcjczNDgwNzY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7348076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wjwoodson",
            "html_url": "https://github.com/wjwoodson",
            "followers_url": "https://api.github.com/users/wjwoodson/followers",
            "following_url": "https://api.github.com/users/wjwoodson/following{/other_user}",
            "gists_url": "https://api.github.com/users/wjwoodson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wjwoodson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wjwoodson/subscriptions",
            "organizations_url": "https://api.github.com/users/wjwoodson/orgs",
            "repos_url": "https://api.github.com/users/wjwoodson/repos",
            "events_url": "https://api.github.com/users/wjwoodson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wjwoodson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This will require changes to `func API_Send_Test_Email` in api controller for default handling of empty template & landing page. Your call, can be worked as another issue before 0.1.2 release.\n",
        "created_at": "2016-02-23T00:56:49Z",
        "updated_at": "2016-02-29T04:07:50Z",
        "html_url": "https://github.com/gophish/gophish/pull/169#discussion_r53721191",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/169",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/53721191"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/169#discussion_r53721191"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/53721764",
        "pull_request_review_id": null,
        "id": 53721764,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxNzY0",
        "diff_hunk": "@@ -0,0 +1,41 @@\n+\n+-- +goose Up\n+-- SQL in section 'Up' is executed when this migration is applied\n+ALTER TABLE campaigns ADD COLUMN smtp_id bigint;\n+UPDATE campaigns \n+\tSET smtp_id = (SELECT smtp.smtp_id FROM smtp) \n+\tWHERE campaigns.id = (\n+\t\tSELECT smtp.smtp_id ",
        "path": "db/migrations/20160221001538_0.1.2_store-smtp-settings.sql",
        "position": null,
        "original_position": 8,
        "commit_id": "6b61b24f68bb5acdaffdbb8f4f827cc61622ebc4",
        "original_commit_id": "a2ee229848f430a1f9f41e2a28bf17cbf5c6bb07",
        "user": {
            "login": "wjwoodson",
            "id": 7348076,
            "node_id": "MDQ6VXNlcjczNDgwNzY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7348076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wjwoodson",
            "html_url": "https://github.com/wjwoodson",
            "followers_url": "https://api.github.com/users/wjwoodson/followers",
            "following_url": "https://api.github.com/users/wjwoodson/following{/other_user}",
            "gists_url": "https://api.github.com/users/wjwoodson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wjwoodson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wjwoodson/subscriptions",
            "organizations_url": "https://api.github.com/users/wjwoodson/orgs",
            "repos_url": "https://api.github.com/users/wjwoodson/repos",
            "events_url": "https://api.github.com/users/wjwoodson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wjwoodson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "From what I saw in testing the migrated ids are 1:1 as long as they were created through `/campaigns POST`\n",
        "created_at": "2016-02-23T01:02:49Z",
        "updated_at": "2016-02-29T04:07:50Z",
        "html_url": "https://github.com/gophish/gophish/pull/169#discussion_r53721764",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/169",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/53721764"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/169#discussion_r53721764"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/58613958",
        "pull_request_review_id": null,
        "id": 58613958,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjEzOTU4",
        "diff_hunk": "@@ -78,7 +78,7 @@ func processCampaign(c *models.Campaign) {\n \t\t\tt,\n \t\t\tc.URL + \"?rid=\" + t.RId,\n \t\t\tc.URL + \"/track?rid=\" + t.RId,\n-\t\t\t\"<img src='\" + c.URL + \"/track?rid=\" + t.RId + \"'/>\",\n+\t\t\t\"<img style=\"display: none\" src='\" + c.URL + \"/track?rid=\" + t.RId + \"'/>\",",
        "path": "worker/worker.go",
        "position": null,
        "original_position": 5,
        "commit_id": "7f1aeb02d5e070fff020439deda6f6ce96a9b999",
        "original_commit_id": "c83ce80d13eb36e53be3f47909c5f6300e3a0b54",
        "user": {
            "login": "rcutmore",
            "id": 873661,
            "node_id": "MDQ6VXNlcjg3MzY2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/873661?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rcutmore",
            "html_url": "https://github.com/rcutmore",
            "followers_url": "https://api.github.com/users/rcutmore/followers",
            "following_url": "https://api.github.com/users/rcutmore/following{/other_user}",
            "gists_url": "https://api.github.com/users/rcutmore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rcutmore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rcutmore/subscriptions",
            "organizations_url": "https://api.github.com/users/rcutmore/orgs",
            "repos_url": "https://api.github.com/users/rcutmore/repos",
            "events_url": "https://api.github.com/users/rcutmore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rcutmore/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think single quotes are needed for the style attribute instead of double quotes: `\"<img style='display: none' src='\" + c.URL + \"/track?rid=\" + t.RId + \"'/>\",`\n",
        "created_at": "2016-04-05T20:58:35Z",
        "updated_at": "2016-04-06T05:32:20Z",
        "html_url": "https://github.com/gophish/gophish/pull/229#discussion_r58613958",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/229",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/58613958"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/229#discussion_r58613958"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/229"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/58632031",
        "pull_request_review_id": null,
        "id": 58632031,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjMyMDMx",
        "diff_hunk": "@@ -78,7 +78,7 @@ func processCampaign(c *models.Campaign) {\n \t\t\tt,\n \t\t\tc.URL + \"?rid=\" + t.RId,\n \t\t\tc.URL + \"/track?rid=\" + t.RId,\n-\t\t\t\"<img src='\" + c.URL + \"/track?rid=\" + t.RId + \"'/>\",\n+\t\t\t\"<img style=\"display: none\" src='\" + c.URL + \"/track?rid=\" + t.RId + \"'/>\",",
        "path": "worker/worker.go",
        "position": null,
        "original_position": 5,
        "commit_id": "7f1aeb02d5e070fff020439deda6f6ce96a9b999",
        "original_commit_id": "c83ce80d13eb36e53be3f47909c5f6300e3a0b54",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Definitely. You'll see the [travis ci build](https://travis-ci.org/gophish/gophish/jobs/120921672) fails with a syntax error when using double quotes. You'll need to use single quotes or escape them with a backslash \"\\\".\n",
        "created_at": "2016-04-05T23:37:29Z",
        "updated_at": "2016-04-06T05:32:20Z",
        "html_url": "https://github.com/gophish/gophish/pull/229#discussion_r58632031",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/229",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/58632031"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/229#discussion_r58632031"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/229"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/69407053",
        "pull_request_review_id": null,
        "id": 69407053,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDA3MDUz",
        "diff_hunk": "@@ -222,6 +223,20 @@ func insertTargetIntoGroup(t Target, gid int64) error {\n \treturn nil\n }\n \n+// UpdateTarget updates the given target information in the database.\n+func UpdateTarget(target Target) error {\n+\ttargetInfo := map[string]interface{}{",
        "path": "models/group.go",
        "position": 53,
        "original_position": 53,
        "commit_id": "92f4ca6a90197dda9c1289a68656c7b41ace57fc",
        "original_commit_id": "731c6210951d7f40ade43bf943e2be52805ef870",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Does this need to be a `map[string]interface`? can it just be a `models.Target` instance?\n",
        "created_at": "2016-07-04T04:15:16Z",
        "updated_at": "2016-07-04T10:43:46Z",
        "html_url": "https://github.com/gophish/gophish/pull/315#discussion_r69407053",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/315",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/69407053"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/315#discussion_r69407053"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/315"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/69407060",
        "pull_request_review_id": null,
        "id": 69407060,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDA3MDYw",
        "diff_hunk": "@@ -63,6 +63,31 @@ func (s *ModelsSuite) TestPostGroupNoTargets(c *check.C) {\n \tc.Assert(err, check.Equals, ErrNoTargetsSpecified)\n }\n \n+func (s *ModelsSuite) TestPutGroup(c *check.C) {",
        "path": "models/models_test.go",
        "position": 4,
        "original_position": 4,
        "commit_id": "92f4ca6a90197dda9c1289a68656c7b41ace57fc",
        "original_commit_id": "731c6210951d7f40ade43bf943e2be52805ef870",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks for adding tests! You're the hero we need, not the one we deserve \ud83d\ude04 \n",
        "created_at": "2016-07-04T04:15:37Z",
        "updated_at": "2016-07-04T10:43:46Z",
        "html_url": "https://github.com/gophish/gophish/pull/315#discussion_r69407060",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/315",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/69407060"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/315#discussion_r69407060"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/315"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/69440724",
        "pull_request_review_id": null,
        "id": 69440724,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDQwNzI0",
        "diff_hunk": "@@ -222,6 +223,20 @@ func insertTargetIntoGroup(t Target, gid int64) error {\n \treturn nil\n }\n \n+// UpdateTarget updates the given target information in the database.\n+func UpdateTarget(target Target) error {\n+\ttargetInfo := map[string]interface{}{",
        "path": "models/group.go",
        "position": 53,
        "original_position": 53,
        "commit_id": "92f4ca6a90197dda9c1289a68656c7b41ace57fc",
        "original_commit_id": "731c6210951d7f40ade43bf943e2be52805ef870",
        "user": {
            "login": "rcutmore",
            "id": 873661,
            "node_id": "MDQ6VXNlcjg3MzY2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/873661?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rcutmore",
            "html_url": "https://github.com/rcutmore",
            "followers_url": "https://api.github.com/users/rcutmore/followers",
            "following_url": "https://api.github.com/users/rcutmore/following{/other_user}",
            "gists_url": "https://api.github.com/users/rcutmore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rcutmore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rcutmore/subscriptions",
            "organizations_url": "https://api.github.com/users/rcutmore/orgs",
            "repos_url": "https://api.github.com/users/rcutmore/repos",
            "events_url": "https://api.github.com/users/rcutmore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rcutmore/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The docs show [here](http://jinzhu.me/gorm/curd.html#update) that a `map[string]interface` must be used to update all changed attributes, even empty ones. I tested it out using a `models.Target` instance and that seems to be the case.\n\nI just added another test for this situation. If you update [this line](https://github.com/rcutmore/gophish/blob/92f4ca6a90197dda9c1289a68656c7b41ace57fc/models/group.go#L233) to `err := db.Model(&target).Where(\"id = ?\", target.Id).Updates(target).Error` the new test will fail.\n",
        "created_at": "2016-07-04T10:49:08Z",
        "updated_at": "2016-07-04T10:49:08Z",
        "html_url": "https://github.com/gophish/gophish/pull/315#discussion_r69440724",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/315",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/69440724"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/315#discussion_r69440724"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/315"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/71067069",
        "pull_request_review_id": null,
        "id": 71067069,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcxMDY3MDY5",
        "diff_hunk": "@@ -63,9 +86,84 @@ func (s *ModelsSuite) TestPostGroupNoTargets(c *check.C) {\n \tc.Assert(err, check.Equals, ErrNoTargetsSpecified)\n }\n \n+func (s *ModelsSuite) TestGetGroups(c *check.C) {\n+\t// Add groups.\n+\tPostGroup(&Group{\n+\t\tName:    \"Test Group 1\",\n+\t\tTargets: []Target{Target{Email: \"test1@example.com\"}},\n+\t\tUserId:  1,\n+\t})\n+\tPostGroup(&Group{\n+\t\tName:    \"Test Group 2\",\n+\t\tTargets: []Target{Target{Email: \"test2@example.com\"}},\n+\t\tUserId:  1,\n+\t})\n+\n+\t// Get groups and test result.\n+\tgroups, err := GetGroups(1)\n+\tc.Assert(err, check.Equals, nil)\n+\tc.Assert(len(groups), check.Equals, 2)\n+\tc.Assert(len(groups[0].Targets), check.Equals, 1)\n+\tc.Assert(len(groups[1].Targets), check.Equals, 1)\n+\tc.Assert(groups[0].Name, check.Equals, \"Test Group 1\")\n+\tc.Assert(groups[1].Name, check.Equals, \"Test Group 2\")\n+\tc.Assert(groups[0].Targets[0].Email, check.Equals, \"test1@example.com\")\n+\tc.Assert(groups[1].Targets[0].Email, check.Equals, \"test2@example.com\")\n+}\n+\n+func (s *ModelsSuite) TestGetGroupsNoGroups(c *check.C) {\n+\tgroups, err := GetGroups(1)\n+\tc.Assert(err, check.Equals, nil)\n+\tc.Assert(len(groups), check.Equals, 0)\n+}\n+\n+func (s *ModelsSuite) TestGetGroup(c *check.C) {\n+\t// Add group.\n+\tPostGroup(&Group{\n+\t\tName:    \"Test Group\",\n+\t\tTargets: []Target{Target{Email: \"test@example.com\"}},\n+\t\tUserId:  1,\n+\t})\n+\n+\t// Get group and test result.\n+\tgroup, err := GetGroup(1, 1)\n+\tc.Assert(err, check.Equals, nil)\n+\tc.Assert(len(group.Targets), check.Equals, 1)\n+\tc.Assert(group.Name, check.Equals, \"Test Group\")\n+\tc.Assert(group.Targets[0].Email, check.Equals, \"test@example.com\")\n+}\n+\n+func (s *ModelsSuite) TestGetGroupNoGroups(c *check.C) {\n+\tgroup, err := GetGroup(1, 1)\n+\tc.Assert(err, check.Not(check.Equals), nil)\n+\tc.Assert(group.Name, check.Not(check.Equals), \"Test Group\")\n+}\n+\n+func (s *ModelsSuite) TestGetGroupByName(c *check.C) {\n+\t// Add group.\n+\tPostGroup(&Group{\n+\t\tName:    \"Test Group\",\n+\t\tTargets: []Target{Target{Email: \"test@example.com\"}},\n+\t\tUserId:  1,\n+\t})\n+\n+\t// Get group and test result.\n+\tgroup, err := GetGroupByName(\"Test Group\", 1)\n+\tc.Assert(err, check.Equals, nil)\n+\tc.Assert(len(group.Targets), check.Equals, 1)\n+\tc.Assert(group.Name, check.Equals, \"Test Group\")\n+\tc.Assert(group.Targets[0].Email, check.Equals, \"test@example.com\")\n+}\n+\n+func (s *ModelsSuite) TestGetGroupByNameNoGroups(c *check.C) {\n+\tgroup, err := GetGroupByName(\"Test Group\", 1)\n+\tc.Assert(err, check.Not(check.Equals), nil)",
        "path": "models/models_test.go",
        "position": null,
        "original_position": 111,
        "commit_id": "2d4a755c2c4e23f21dc689bdd2c18b71fb9182a6",
        "original_commit_id": "f9a15cfe3d77e3dff37da6b94a5b2eb1c5929e3e",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For tests like these, we don't need to do anything after `err != nil`, since Go provides no assurances for the data (like the \"group\" variable). I would recommend doing a check for something like err = models.WhateverErrorIsReturned to make sure we are getting the correct error.\n",
        "created_at": "2016-07-16T14:55:14Z",
        "updated_at": "2016-07-18T22:48:01Z",
        "html_url": "https://github.com/gophish/gophish/pull/324#discussion_r71067069",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/324",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/71067069"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/324#discussion_r71067069"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/324"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/71068320",
        "pull_request_review_id": null,
        "id": 71068320,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcxMDY4MzIw",
        "diff_hunk": "@@ -63,9 +86,84 @@ func (s *ModelsSuite) TestPostGroupNoTargets(c *check.C) {\n \tc.Assert(err, check.Equals, ErrNoTargetsSpecified)\n }\n \n+func (s *ModelsSuite) TestGetGroups(c *check.C) {\n+\t// Add groups.\n+\tPostGroup(&Group{\n+\t\tName:    \"Test Group 1\",\n+\t\tTargets: []Target{Target{Email: \"test1@example.com\"}},\n+\t\tUserId:  1,\n+\t})\n+\tPostGroup(&Group{\n+\t\tName:    \"Test Group 2\",\n+\t\tTargets: []Target{Target{Email: \"test2@example.com\"}},\n+\t\tUserId:  1,\n+\t})\n+\n+\t// Get groups and test result.\n+\tgroups, err := GetGroups(1)\n+\tc.Assert(err, check.Equals, nil)\n+\tc.Assert(len(groups), check.Equals, 2)\n+\tc.Assert(len(groups[0].Targets), check.Equals, 1)\n+\tc.Assert(len(groups[1].Targets), check.Equals, 1)\n+\tc.Assert(groups[0].Name, check.Equals, \"Test Group 1\")\n+\tc.Assert(groups[1].Name, check.Equals, \"Test Group 2\")\n+\tc.Assert(groups[0].Targets[0].Email, check.Equals, \"test1@example.com\")\n+\tc.Assert(groups[1].Targets[0].Email, check.Equals, \"test2@example.com\")\n+}\n+\n+func (s *ModelsSuite) TestGetGroupsNoGroups(c *check.C) {\n+\tgroups, err := GetGroups(1)\n+\tc.Assert(err, check.Equals, nil)\n+\tc.Assert(len(groups), check.Equals, 0)\n+}\n+\n+func (s *ModelsSuite) TestGetGroup(c *check.C) {\n+\t// Add group.\n+\tPostGroup(&Group{\n+\t\tName:    \"Test Group\",\n+\t\tTargets: []Target{Target{Email: \"test@example.com\"}},\n+\t\tUserId:  1,\n+\t})\n+\n+\t// Get group and test result.\n+\tgroup, err := GetGroup(1, 1)\n+\tc.Assert(err, check.Equals, nil)\n+\tc.Assert(len(group.Targets), check.Equals, 1)\n+\tc.Assert(group.Name, check.Equals, \"Test Group\")\n+\tc.Assert(group.Targets[0].Email, check.Equals, \"test@example.com\")\n+}\n+\n+func (s *ModelsSuite) TestGetGroupNoGroups(c *check.C) {\n+\tgroup, err := GetGroup(1, 1)\n+\tc.Assert(err, check.Not(check.Equals), nil)\n+\tc.Assert(group.Name, check.Not(check.Equals), \"Test Group\")\n+}\n+\n+func (s *ModelsSuite) TestGetGroupByName(c *check.C) {\n+\t// Add group.\n+\tPostGroup(&Group{\n+\t\tName:    \"Test Group\",\n+\t\tTargets: []Target{Target{Email: \"test@example.com\"}},\n+\t\tUserId:  1,\n+\t})\n+\n+\t// Get group and test result.\n+\tgroup, err := GetGroupByName(\"Test Group\", 1)\n+\tc.Assert(err, check.Equals, nil)\n+\tc.Assert(len(group.Targets), check.Equals, 1)\n+\tc.Assert(group.Name, check.Equals, \"Test Group\")\n+\tc.Assert(group.Targets[0].Email, check.Equals, \"test@example.com\")\n+}\n+\n+func (s *ModelsSuite) TestGetGroupByNameNoGroups(c *check.C) {\n+\tgroup, err := GetGroupByName(\"Test Group\", 1)\n+\tc.Assert(err, check.Not(check.Equals), nil)",
        "path": "models/models_test.go",
        "position": null,
        "original_position": 111,
        "commit_id": "2d4a755c2c4e23f21dc689bdd2c18b71fb9182a6",
        "original_commit_id": "f9a15cfe3d77e3dff37da6b94a5b2eb1c5929e3e",
        "user": {
            "login": "rcutmore",
            "id": 873661,
            "node_id": "MDQ6VXNlcjg3MzY2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/873661?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rcutmore",
            "html_url": "https://github.com/rcutmore",
            "followers_url": "https://api.github.com/users/rcutmore/followers",
            "following_url": "https://api.github.com/users/rcutmore/following{/other_user}",
            "gists_url": "https://api.github.com/users/rcutmore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rcutmore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rcutmore/subscriptions",
            "organizations_url": "https://api.github.com/users/rcutmore/orgs",
            "repos_url": "https://api.github.com/users/rcutmore/repos",
            "events_url": "https://api.github.com/users/rcutmore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rcutmore/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks, that makes sense.\n\nIt looks like `gorm.ErrRecordNotFound` is returned when the group doesn't exist. Do you think we should make a gophish-specific error for this case to return, something like `ErrGroupDoesNotExist`? If not, I'll update these tests to check for `gorm.ErrRecordNotFound`.\n",
        "created_at": "2016-07-16T16:23:41Z",
        "updated_at": "2016-07-18T22:48:01Z",
        "html_url": "https://github.com/gophish/gophish/pull/324#discussion_r71068320",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/324",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/71068320"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/324#discussion_r71068320"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/324"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/64691631",
        "pull_request_review_id": null,
        "id": 64691631,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjkxNjMx",
        "diff_hunk": "@@ -9,7 +9,7 @@ import (\n \n \t\"crypto/rand\"\n \n-\t\"github.com/gophish/gophish/models\"\n+\t\"github.com/jli53/gophish/models\"",
        "path": "auth/auth.go",
        "position": null,
        "original_position": 5,
        "commit_id": "c3e50bcd521d88fc142803f980cdd1cd84141261",
        "original_commit_id": "0ff365dd86c6dcf731b825a0027b3cc4fc3c6fb9",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "All these dependencies will need to be reverted to gophish/gophish - I know it's a pain to work with when forking.\n",
        "created_at": "2016-05-26T04:56:59Z",
        "updated_at": "2016-08-15T03:44:57Z",
        "html_url": "https://github.com/gophish/gophish/pull/260#discussion_r64691631",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/260",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/64691631"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/260#discussion_r64691631"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/260"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/64691655",
        "pull_request_review_id": null,
        "id": 64691655,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjkxNjU1",
        "diff_hunk": "@@ -1,6 +1,6 @@\n {\n \t\"admin_server\" : {\n-\t\t\"listen_url\" : \"127.0.0.1:3333\",\n+\t\t\"listen_url\" : \"0.0.0.0:3333\",",
        "path": "config.json",
        "position": null,
        "original_position": 4,
        "commit_id": "c3e50bcd521d88fc142803f980cdd1cd84141261",
        "original_commit_id": "0ff365dd86c6dcf731b825a0027b3cc4fc3c6fb9",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This should not be changed in this pull request - the default admin will need to stay at 127.0.0.1\n",
        "created_at": "2016-05-26T04:57:21Z",
        "updated_at": "2016-08-15T03:44:57Z",
        "html_url": "https://github.com/gophish/gophish/pull/260#discussion_r64691655",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/260",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/64691655"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/260#discussion_r64691655"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/260"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/64691724",
        "pull_request_review_id": null,
        "id": 64691724,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjkxNzI0",
        "diff_hunk": "@@ -34,6 +34,8 @@ const (\n \tEVENT_OPENED         string = \"Email Opened\"\n \tEVENT_CLICKED        string = \"Clicked Link\"\n \tEVENT_DATA_SUBMIT    string = \"Submitted Data\"\n+\tEVENT_HTML_OPENED\t string = \"HTML Opened\"",
        "path": "models/models.go",
        "position": null,
        "original_position": 13,
        "commit_id": "c3e50bcd521d88fc142803f980cdd1cd84141261",
        "original_commit_id": "0ff365dd86c6dcf731b825a0027b3cc4fc3c6fb9",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You'll need to run `gofmt` on the code to ensure proper formatting.\n",
        "created_at": "2016-05-26T04:58:22Z",
        "updated_at": "2016-08-15T03:44:57Z",
        "html_url": "https://github.com/gophish/gophish/pull/260#discussion_r64691724",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/260",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/64691724"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/260#discussion_r64691724"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/260"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/64691746",
        "pull_request_review_id": null,
        "id": 64691746,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjkxNzQ2",
        "diff_hunk": "@@ -2,6 +2,20 @@ var map = null\n \n // statuses is a helper map to point result statuses to ui classes\n var statuses = {\n+    \"HTML Opened\": {\n+        slice: \"ct-slice-donut-opened\",\n+        legend: \"ct-legend-opened\",\n+        label: \"label-danger\",\n+        icon: \"fa-file\",\n+        point: \"ct-point-opened\"\n+    },\n+    \"Doc Opened\": {",
        "path": "static/js/app/campaign_results.js",
        "position": null,
        "original_position": 11,
        "commit_id": "c3e50bcd521d88fc142803f980cdd1cd84141261",
        "original_commit_id": "0ff365dd86c6dcf731b825a0027b3cc4fc3c6fb9",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"Doc\" is pretty informal - we'll want to change this to \"attachment\" or something more official sounding.\n",
        "created_at": "2016-05-26T04:58:54Z",
        "updated_at": "2016-08-15T03:44:57Z",
        "html_url": "https://github.com/gophish/gophish/pull/260#discussion_r64691746",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/260",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/64691746"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/260#discussion_r64691746"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/260"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/64691781",
        "pull_request_review_id": null,
        "id": 64691781,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjkxNzgx",
        "diff_hunk": "@@ -96,3 +96,11 @@ func ParseCSV(r *http.Request) ([]models.Target, error) {\n \t}\n \treturn ts, nil\n }\n+\n+func GetDoc(rid string) []byte{",
        "path": "util/util.go",
        "position": null,
        "original_position": 14,
        "commit_id": "c3e50bcd521d88fc142803f980cdd1cd84141261",
        "original_commit_id": "0ff365dd86c6dcf731b825a0027b3cc4fc3c6fb9",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Again - you'll need to `go fmt`.\n",
        "created_at": "2016-05-26T04:59:26Z",
        "updated_at": "2016-08-15T03:44:57Z",
        "html_url": "https://github.com/gophish/gophish/pull/260#discussion_r64691781",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/260",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/64691781"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/260#discussion_r64691781"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/260"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/64945020",
        "pull_request_review_id": null,
        "id": 64945020,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTQ1MDIw",
        "diff_hunk": "@@ -2,6 +2,20 @@ var map = null\n \n // statuses is a helper map to point result statuses to ui classes\n var statuses = {\n+    \"HTML Opened\": {\n+        slice: \"ct-slice-donut-opened\",\n+        legend: \"ct-legend-opened\",\n+        label: \"label-danger\",\n+        icon: \"fa-file\",\n+        point: \"ct-point-opened\"\n+    },\n+    \"Doc Opened\": {",
        "path": "static/js/app/campaign_results.js",
        "position": null,
        "original_position": 11,
        "commit_id": "c3e50bcd521d88fc142803f980cdd1cd84141261",
        "original_commit_id": "0ff365dd86c6dcf731b825a0027b3cc4fc3c6fb9",
        "user": {
            "login": "jli53",
            "id": 11246075,
            "node_id": "MDQ6VXNlcjExMjQ2MDc1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11246075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jli53",
            "html_url": "https://github.com/jli53",
            "followers_url": "https://api.github.com/users/jli53/followers",
            "following_url": "https://api.github.com/users/jli53/following{/other_user}",
            "gists_url": "https://api.github.com/users/jli53/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jli53/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jli53/subscriptions",
            "organizations_url": "https://api.github.com/users/jli53/orgs",
            "repos_url": "https://api.github.com/users/jli53/repos",
            "events_url": "https://api.github.com/users/jli53/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jli53/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There are two kinds of attachments in the program, which are html and ms word. One of them is called \"HTML Opened\". Do you think it is OK if I changed \"Doc Opened\" to \"WORD Opened\"?\n",
        "created_at": "2016-05-27T18:05:52Z",
        "updated_at": "2016-08-15T03:44:57Z",
        "html_url": "https://github.com/gophish/gophish/pull/260#discussion_r64945020",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/260",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/64945020"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/260#discussion_r64945020"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/260"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/65103162",
        "pull_request_review_id": null,
        "id": 65103162,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTAzMTYy",
        "diff_hunk": "@@ -32,10 +32,10 @@ import (\n \t\"os\"\n \t\"sync\"\n \n-\t\"github.com/gophish/gophish/config\"\n-\t\"github.com/gophish/gophish/controllers\"\n-\t\"github.com/gophish/gophish/models\"\n \t\"github.com/gorilla/handlers\"\n+\t\"github.com/jli53/gophish/config\"",
        "path": "gophish.go",
        "position": null,
        "original_position": 8,
        "commit_id": "c3e50bcd521d88fc142803f980cdd1cd84141261",
        "original_commit_id": "56d406f7e8d7cdd3225b48f65e9efbc49d5c9ace",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "These dependencies are still pointing to the wrong place - should be `github.com/gophish/gophish`.\n",
        "created_at": "2016-05-30T20:06:23Z",
        "updated_at": "2016-08-15T03:44:57Z",
        "html_url": "https://github.com/gophish/gophish/pull/260#discussion_r65103162",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/260",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/65103162"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/260#discussion_r65103162"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/260"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/74348009",
        "pull_request_review_id": null,
        "id": 74348009,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0MzQ4MDA5",
        "diff_hunk": "@@ -0,0 +1,28 @@\n+\n+-- +goose Up\n+-- SQL in section 'Up' is executed when this migration is applied\n+CREATE TABLE IF NOT EXISTS users (id integer primary key auto_increment,username varchar(255) NOT NULL UNIQUE,hash varchar(255),api_key varchar(255) NOT NULL UNIQUE );\n+CREATE TABLE IF NOT EXISTS templates (id integer primary key auto_increment,user_id bigint,name varchar(255),subject varchar(255),text varchar(255),html varchar(255),modified_date datetime );\n+CREATE TABLE IF NOT EXISTS targets (id integer primary key auto_increment,first_name varchar(255),last_name varchar(255),email varchar(255),position varchar(255) );\n+CREATE TABLE IF NOT EXISTS smtp (smtp_id integer primary key auto_increment,campaign_id bigint,host varchar(255),username varchar(255),from_address varchar(255) );\n+CREATE TABLE IF NOT EXISTS results (id integer primary key auto_increment,campaign_id bigint,user_id bigint,r_id varchar(255),email varchar(255),first_name varchar(255),last_name varchar(255),status varchar(255) NOT NULL ,ip varchar(255),latitude real,longitude real );\n+CREATE TABLE IF NOT EXISTS pages (id integer primary key auto_increment,user_id bigint,name varchar(255),html varchar(255),modified_date datetime );\n+CREATE TABLE IF NOT EXISTS groups (id integer primary key auto_increment,user_id bigint,name varchar(255),modified_date datetime );\n+CREATE TABLE IF NOT EXISTS group_targets (group_id bigint,target_id bigint );\n+CREATE TABLE IF NOT EXISTS events (id integer primary key auto_increment,campaign_id bigint,email varchar(255),time datetime,message varchar(255) );\n+CREATE TABLE IF NOT EXISTS campaigns (id integer primary key auto_increment,user_id bigint,name varchar(255) NOT NULL ,created_date datetime,completed_date datetime,template_id bigint,page_id bigint,status varchar(255),url varchar(255) );\n+CREATE TABLE IF NOT EXISTS attachments (id integer primary key auto_increment,template_id bigint,content varchar(255),type varchar(255),name varchar(255) );",
        "path": "db/db_mysql/migrations/20160118194630_init.sql",
        "position": null,
        "original_position": 14,
        "commit_id": "9dc2bfe6729265cc4ee765dae80589785e8a5e41",
        "original_commit_id": "73401318878d4daa5d52943a13b9f9e0adf20a3d",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The \"content\" field should probably be a `BLOB` or `TEXT` - varchar is limiting in Mysql.\n",
        "created_at": "2016-08-10T23:10:39Z",
        "updated_at": "2016-09-10T08:56:22Z",
        "html_url": "https://github.com/gophish/gophish/pull/336#discussion_r74348009",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/336",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/74348009"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/336#discussion_r74348009"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/336"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/74348100",
        "pull_request_review_id": null,
        "id": 74348100,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0MzQ4MTAw",
        "diff_hunk": "@@ -0,0 +1,28 @@\n+\n+-- +goose Up\n+-- SQL in section 'Up' is executed when this migration is applied\n+CREATE TABLE IF NOT EXISTS users (id integer primary key auto_increment,username varchar(255) NOT NULL UNIQUE,hash varchar(255),api_key varchar(255) NOT NULL UNIQUE );\n+CREATE TABLE IF NOT EXISTS templates (id integer primary key auto_increment,user_id bigint,name varchar(255),subject varchar(255),text varchar(255),html varchar(255),modified_date datetime );\n+CREATE TABLE IF NOT EXISTS targets (id integer primary key auto_increment,first_name varchar(255),last_name varchar(255),email varchar(255),position varchar(255) );\n+CREATE TABLE IF NOT EXISTS smtp (smtp_id integer primary key auto_increment,campaign_id bigint,host varchar(255),username varchar(255),from_address varchar(255) );\n+CREATE TABLE IF NOT EXISTS results (id integer primary key auto_increment,campaign_id bigint,user_id bigint,r_id varchar(255),email varchar(255),first_name varchar(255),last_name varchar(255),status varchar(255) NOT NULL ,ip varchar(255),latitude real,longitude real );\n+CREATE TABLE IF NOT EXISTS pages (id integer primary key auto_increment,user_id bigint,name varchar(255),html varchar(255),modified_date datetime );",
        "path": "db/db_mysql/migrations/20160118194630_init.sql",
        "position": null,
        "original_position": 9,
        "commit_id": "9dc2bfe6729265cc4ee765dae80589785e8a5e41",
        "original_commit_id": "73401318878d4daa5d52943a13b9f9e0adf20a3d",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The \"html\" field should probably be a `BLOB` or `TEXT` - varchar is limiting in Mysql.\n",
        "created_at": "2016-08-10T23:11:29Z",
        "updated_at": "2016-09-10T08:56:22Z",
        "html_url": "https://github.com/gophish/gophish/pull/336#discussion_r74348100",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/336",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/74348100"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/336#discussion_r74348100"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/336"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/74348134",
        "pull_request_review_id": null,
        "id": 74348134,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0MzQ4MTM0",
        "diff_hunk": "@@ -0,0 +1,28 @@\n+\n+-- +goose Up\n+-- SQL in section 'Up' is executed when this migration is applied\n+CREATE TABLE IF NOT EXISTS users (id integer primary key auto_increment,username varchar(255) NOT NULL UNIQUE,hash varchar(255),api_key varchar(255) NOT NULL UNIQUE );\n+CREATE TABLE IF NOT EXISTS templates (id integer primary key auto_increment,user_id bigint,name varchar(255),subject varchar(255),text varchar(255),html varchar(255),modified_date datetime );",
        "path": "db/db_mysql/migrations/20160118194630_init.sql",
        "position": null,
        "original_position": 5,
        "commit_id": "9dc2bfe6729265cc4ee765dae80589785e8a5e41",
        "original_commit_id": "73401318878d4daa5d52943a13b9f9e0adf20a3d",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The \"html\" and \"text\" fields should probably be a `BLOB` or `TEXT` - varchar is limiting in Mysql.\n",
        "created_at": "2016-08-10T23:11:46Z",
        "updated_at": "2016-09-10T08:56:22Z",
        "html_url": "https://github.com/gophish/gophish/pull/336#discussion_r74348134",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/336",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/74348134"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/336#discussion_r74348134"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/336"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/82511837",
        "pull_request_review_id": 3416454,
        "id": 82511837,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyNTExODM3",
        "diff_hunk": "@@ -2,8 +2,12 @@\n -- +goose Up\n -- SQL in section 'Up' is executed when this migration is applied\n ALTER TABLE \"campaigns\" ADD COLUMN \"launch_date\" DATETIME;\n+ALTER TABLE \"campaigns\" ADD COLUMN \"smtp_min_delay\" VARCHAR(255);",
        "path": "db/migrations/20160605210903_0.2_campaign_scheduling.sql",
        "position": null,
        "original_position": 4,
        "commit_id": "94510746783ee8ce4b735890516b4b32dde28f10",
        "original_commit_id": "ff45caa94ef6860d690732d4b9b473e73f20ce51",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You'll definitely want to make a new migration file instead of using the existing one, since existing ones don't get applied more than once.\n",
        "created_at": "2016-10-08T23:55:00Z",
        "updated_at": "2016-10-09T04:18:03Z",
        "html_url": "https://github.com/gophish/gophish/pull/391#discussion_r82511837",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/391",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/82511837"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/391#discussion_r82511837"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/391"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/82511929",
        "pull_request_review_id": 3416454,
        "id": 82511929,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyNTExOTI5",
        "diff_hunk": "@@ -217,6 +222,24 @@ func processCampaign(c *models.Campaign) {\n \t}\n }\n \n+// Creates a simple constant delay between sending each email message.  Later",
        "path": "worker/worker.go",
        "position": null,
        "original_position": 30,
        "commit_id": "94510746783ee8ce4b735890516b4b32dde28f10",
        "original_commit_id": "ff45caa94ef6860d690732d4b9b473e73f20ce51",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Golang code style suggests to use the function name to start the code documentation. So something like:\n\"SendingDelay creates a simple...\". Also, go ahead and trim out the \"Later...\" since we don't want this in the official docs that are rendered. You can add this to the commit message.\n",
        "created_at": "2016-10-09T00:06:50Z",
        "updated_at": "2016-10-09T04:18:03Z",
        "html_url": "https://github.com/gophish/gophish/pull/391#discussion_r82511929",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/391",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/82511929"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/391#discussion_r82511929"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/391"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/82511962",
        "pull_request_review_id": 3416454,
        "id": 82511962,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyNTExOTYy",
        "diff_hunk": "@@ -83,6 +83,10 @@ <h4 class=\"modal-title\" id=\"campaignModalLabel\">New Campaign</h4>\n               <input type=\"text\" class=\"form-control\" placeholder=\"http://192.168.1.1\" id=\"url\"/>\n \t      <label class=\"control-label\" for=\"url\">Schedule: </label>\n               <input type=\"text\" class=\"form-control\" id=\"launch_date\"/>\n+          <label class=\"control-label\" for=\"senddelay\">Min delay time: <i class=\"fa fa-question-circle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Minimum randomized delay time between sending of each campaign email\"></i></label>",
        "path": "templates/campaigns.html",
        "position": 4,
        "original_position": 4,
        "commit_id": "94510746783ee8ce4b735890516b4b32dde28f10",
        "original_commit_id": "ff45caa94ef6860d690732d4b9b473e73f20ce51",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd like the delay to be optional. We can have a checkbox that says something like \"Randomize Sending Delay\" or something that sounds better, heh.\n\nThere is code elsewhere (on mobile or I'd link it) that shows how to handle showing options only after a checkbox is shown.\n",
        "created_at": "2016-10-09T00:10:59Z",
        "updated_at": "2016-10-09T04:18:03Z",
        "html_url": "https://github.com/gophish/gophish/pull/391#discussion_r82511962",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/391",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/82511962"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/391#discussion_r82511962"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/391"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/82511974",
        "pull_request_review_id": 3416454,
        "id": 82511974,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyNTExOTc0",
        "diff_hunk": "@@ -83,6 +83,10 @@ <h4 class=\"modal-title\" id=\"campaignModalLabel\">New Campaign</h4>\n               <input type=\"text\" class=\"form-control\" placeholder=\"http://192.168.1.1\" id=\"url\"/>\n \t      <label class=\"control-label\" for=\"url\">Schedule: </label>\n               <input type=\"text\" class=\"form-control\" id=\"launch_date\"/>\n+          <label class=\"control-label\" for=\"senddelay\">Min delay time: <i class=\"fa fa-question-circle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Minimum randomized delay time between sending of each campaign email\"></i></label>",
        "path": "templates/campaigns.html",
        "position": 4,
        "original_position": 4,
        "commit_id": "94510746783ee8ce4b735890516b4b32dde28f10",
        "original_commit_id": "ff45caa94ef6860d690732d4b9b473e73f20ce51",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also, I don't see you actually sending these - you'll need to modify campaigns.js to include grabbing these and sending them to the server.\n",
        "created_at": "2016-10-09T00:11:55Z",
        "updated_at": "2016-10-09T04:18:03Z",
        "html_url": "https://github.com/gophish/gophish/pull/391#discussion_r82511974",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/391",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/82511974"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/391#discussion_r82511974"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/391"
            }
        },
        "in_reply_to_id": 82511962
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/82511980",
        "pull_request_review_id": 3416454,
        "id": 82511980,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyNTExOTgw",
        "diff_hunk": "@@ -255,6 +257,12 @@ func PostCampaign(c *Campaign, uid int64) error {\n \tif c.LaunchDate.IsZero() {\n \t\tc.LaunchDate = time.Now()\n \t}\n+\tif c.SMTPMinDelay == 0 {\n+\t\tc.SMTPMinDelay = 1 // default to 1 second\n+\t}\n+\tif c.SMTPMaxDelay == 0 {\n+\t\tc.SMTPMaxDelay = 10 // default to 10 seconds (most wont want the delay feature anyway)",
        "path": "models/campaign.go",
        "position": null,
        "original_position": 17,
        "commit_id": "94510746783ee8ce4b735890516b4b32dde28f10",
        "original_commit_id": "ff45caa94ef6860d690732d4b9b473e73f20ce51",
        "user": {
            "login": "jordan-wright",
            "id": 1317288,
            "node_id": "MDQ6VXNlcjEzMTcyODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1317288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordan-wright",
            "html_url": "https://github.com/jordan-wright",
            "followers_url": "https://api.github.com/users/jordan-wright/followers",
            "following_url": "https://api.github.com/users/jordan-wright/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordan-wright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordan-wright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordan-wright/subscriptions",
            "organizations_url": "https://api.github.com/users/jordan-wright/orgs",
            "repos_url": "https://api.github.com/users/jordan-wright/repos",
            "events_url": "https://api.github.com/users/jordan-wright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordan-wright/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We shouldnt introduce a default delay (see my other comments). Most people will want to have the emails streamed asap.\n",
        "created_at": "2016-10-09T00:12:42Z",
        "updated_at": "2016-10-09T04:18:03Z",
        "html_url": "https://github.com/gophish/gophish/pull/391#discussion_r82511980",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/391",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/82511980"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/391#discussion_r82511980"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/391"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/82514427",
        "pull_request_review_id": 3418868,
        "id": 82514427,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyNTE0NDI3",
        "diff_hunk": "@@ -2,8 +2,12 @@\n -- +goose Up\n -- SQL in section 'Up' is executed when this migration is applied\n ALTER TABLE \"campaigns\" ADD COLUMN \"launch_date\" DATETIME;\n+ALTER TABLE \"campaigns\" ADD COLUMN \"smtp_min_delay\" VARCHAR(255);",
        "path": "db/migrations/20160605210903_0.2_campaign_scheduling.sql",
        "position": null,
        "original_position": 4,
        "commit_id": "94510746783ee8ce4b735890516b4b32dde28f10",
        "original_commit_id": "ff45caa94ef6860d690732d4b9b473e73f20ce51",
        "user": {
            "login": "nrm21",
            "id": 15898046,
            "node_id": "MDQ6VXNlcjE1ODk4MDQ2",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15898046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nrm21",
            "html_url": "https://github.com/nrm21",
            "followers_url": "https://api.github.com/users/nrm21/followers",
            "following_url": "https://api.github.com/users/nrm21/following{/other_user}",
            "gists_url": "https://api.github.com/users/nrm21/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nrm21/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nrm21/subscriptions",
            "organizations_url": "https://api.github.com/users/nrm21/orgs",
            "repos_url": "https://api.github.com/users/nrm21/repos",
            "events_url": "https://api.github.com/users/nrm21/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nrm21/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.\n",
        "created_at": "2016-10-09T04:20:12Z",
        "updated_at": "2016-10-09T04:20:12Z",
        "html_url": "https://github.com/gophish/gophish/pull/391#discussion_r82514427",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/391",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/82514427"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/391#discussion_r82514427"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/391"
            }
        },
        "in_reply_to_id": 82511837
    },
    {
        "url": "https://api.github.com/repos/gophish/gophish/pulls/comments/82514428",
        "pull_request_review_id": 3418869,
        "id": 82514428,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyNTE0NDI4",
        "diff_hunk": "@@ -217,6 +222,24 @@ func processCampaign(c *models.Campaign) {\n \t}\n }\n \n+// Creates a simple constant delay between sending each email message.  Later",
        "path": "worker/worker.go",
        "position": null,
        "original_position": 30,
        "commit_id": "94510746783ee8ce4b735890516b4b32dde28f10",
        "original_commit_id": "ff45caa94ef6860d690732d4b9b473e73f20ce51",
        "user": {
            "login": "nrm21",
            "id": 15898046,
            "node_id": "MDQ6VXNlcjE1ODk4MDQ2",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15898046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nrm21",
            "html_url": "https://github.com/nrm21",
            "followers_url": "https://api.github.com/users/nrm21/followers",
            "following_url": "https://api.github.com/users/nrm21/following{/other_user}",
            "gists_url": "https://api.github.com/users/nrm21/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nrm21/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nrm21/subscriptions",
            "organizations_url": "https://api.github.com/users/nrm21/orgs",
            "repos_url": "https://api.github.com/users/nrm21/repos",
            "events_url": "https://api.github.com/users/nrm21/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nrm21/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.\n",
        "created_at": "2016-10-09T04:20:27Z",
        "updated_at": "2016-10-09T04:20:27Z",
        "html_url": "https://github.com/gophish/gophish/pull/391#discussion_r82514428",
        "pull_request_url": "https://api.github.com/repos/gophish/gophish/pulls/391",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/comments/82514428"
            },
            "html": {
                "href": "https://github.com/gophish/gophish/pull/391#discussion_r82514428"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gophish/gophish/pulls/391"
            }
        },
        "in_reply_to_id": 82511929
    }
]