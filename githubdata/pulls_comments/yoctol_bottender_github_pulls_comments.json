[
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/150169695",
        "pull_request_review_id": 75680621,
        "id": 150169695,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDE2OTY5NQ==",
        "diff_hunk": "@@ -45,17 +44,17 @@ const buildResponse = R.cond([\n   [equals('Whatchyu doing?'), always('nothing much, how about you?')],\n   [\n     T,\n-    temp => 'So what are you really saying?'\n-  ] /* this last array contains the default response for your bot */\n-])\n+    () => 'So what are you really saying?',\n+  ] /* this last array contains the default response for your bot */,",
        "path": "examples/with-ramda/index.js",
        "position": null,
        "original_position": 43,
        "commit_id": "2cf6d6e1c90bbe18d4cedd6ae9c4c289b8a21319",
        "original_commit_id": "9eb6d671b6d7f751fb764a1efaf0d434c8f1c796",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should we move the comma `,` right after closing bracket `]` like `], /* xxx */`?",
        "created_at": "2017-11-10T07:39:46Z",
        "updated_at": "2017-11-10T07:45:48Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/14#discussion_r150169695",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/14",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/150169695"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/14#discussion_r150169695"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/14"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/150386418",
        "pull_request_review_id": 75934822,
        "id": 150386418,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDM4NjQxOA==",
        "diff_hunk": "@@ -69,6 +69,15 @@ class MessengerContext extends Context implements PlatformContext {\n     });\n   }\n \n+  /**\n+   * Sender Actions\n+   *\n+   * https://egghead.io/courses/professor-frisby-introduces-composable-functional-javascript",
        "path": "src/context/MessengerContext.js",
        "position": null,
        "original_position": 7,
        "commit_id": "6a0cf0e0fd064fd98277973710097de3b90f1e17",
        "original_commit_id": "1cfa4da7b9f073fe98cdab3b25365f5ba2031fff",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "wrong link here",
        "created_at": "2017-11-11T15:47:41Z",
        "updated_at": "2017-11-11T16:05:53Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/18#discussion_r150386418",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/18",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/150386418"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/18#discussion_r150386418"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/150455135",
        "pull_request_review_id": 76005435,
        "id": 150455135,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDQ1NTEzNQ==",
        "diff_hunk": "@@ -87,28 +87,28 @@\n     \"figures\": \"^2.0.0\",\n     \"fs-extra\": \"^4.0.2\",\n     \"import-fresh\": \"^2.0.0\",\n-    \"inquirer\": \"^3.3.0\",\n+    \"inquirer\": \"^4.0.0\",\n     \"invariant\": \"^2.2.2\",\n     \"ioredis\": \"^3.2.1\",\n-    \"jfs\": \"^0.2.6\",\n-    \"joi\": \"11.3.4\",\n-    \"koa\": \"^2.3.0\",\n+    \"jfs\": \"^0.3.0\",\n+    \"joi\": \"^13.0.2\",",
        "path": "package.json",
        "position": 50,
        "original_position": 50,
        "commit_id": "92314160ba2580b5ef055385b0fbdb6faf79a2ab",
        "original_commit_id": "61729254ea2f2094e80a29a5bb5a2b06896945bb",
        "user": {
            "login": "chentsulin",
            "id": 3382565,
            "node_id": "MDQ6VXNlcjMzODI1NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3382565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chentsulin",
            "html_url": "https://github.com/chentsulin",
            "followers_url": "https://api.github.com/users/chentsulin/followers",
            "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
            "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
            "organizations_url": "https://api.github.com/users/chentsulin/orgs",
            "repos_url": "https://api.github.com/users/chentsulin/repos",
            "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chentsulin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@kpman please check this one",
        "created_at": "2017-11-13T06:23:11Z",
        "updated_at": "2017-11-13T07:29:52Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/20#discussion_r150455135",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/20",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/150455135"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/20#discussion_r150455135"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/20"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/150732911",
        "pull_request_review_id": 76325661,
        "id": 150732911,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDczMjkxMQ==",
        "diff_hunk": "@@ -0,0 +1,20 @@\n+# With Typing\n+\n+## Install and Run\n+\n+Download this example or clone [bottender](https://github.com/Yoctol/bottender).\n+\n+```\n+curl https://codeload.github.com/Yoctol/bottender/tar.gz/master | tar -xz --strip=2 bottender-master/examples/with-typing",
        "path": "examples/content-management/README.md",
        "position": 8,
        "original_position": 8,
        "commit_id": "4d0ca91c0489deee6685413e895a7ebe7c9689d5",
        "original_commit_id": "4d0ca91c0489deee6685413e895a7ebe7c9689d5",
        "user": {
            "login": "xxhomey19",
            "id": 12113222,
            "node_id": "MDQ6VXNlcjEyMTEzMjIy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12113222?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xxhomey19",
            "html_url": "https://github.com/xxhomey19",
            "followers_url": "https://api.github.com/users/xxhomey19/followers",
            "following_url": "https://api.github.com/users/xxhomey19/following{/other_user}",
            "gists_url": "https://api.github.com/users/xxhomey19/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xxhomey19/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xxhomey19/subscriptions",
            "organizations_url": "https://api.github.com/users/xxhomey19/orgs",
            "repos_url": "https://api.github.com/users/xxhomey19/repos",
            "events_url": "https://api.github.com/users/xxhomey19/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xxhomey19/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "with-typing -> content-management",
        "created_at": "2017-11-14T04:03:21Z",
        "updated_at": "2017-11-14T04:03:21Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/21#discussion_r150732911",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/21",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/150732911"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/21#discussion_r150732911"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/21"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/150732924",
        "pull_request_review_id": 76325676,
        "id": 150732924,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDczMjkyNA==",
        "diff_hunk": "@@ -0,0 +1,20 @@\n+# With Typing\n+\n+## Install and Run\n+\n+Download this example or clone [bottender](https://github.com/Yoctol/bottender).\n+\n+```\n+curl https://codeload.github.com/Yoctol/bottender/tar.gz/master | tar -xz --strip=2 bottender-master/examples/with-typing\n+cd with-typing",
        "path": "examples/content-management/README.md",
        "position": 9,
        "original_position": 9,
        "commit_id": "4d0ca91c0489deee6685413e895a7ebe7c9689d5",
        "original_commit_id": "4d0ca91c0489deee6685413e895a7ebe7c9689d5",
        "user": {
            "login": "xxhomey19",
            "id": 12113222,
            "node_id": "MDQ6VXNlcjEyMTEzMjIy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12113222?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xxhomey19",
            "html_url": "https://github.com/xxhomey19",
            "followers_url": "https://api.github.com/users/xxhomey19/followers",
            "following_url": "https://api.github.com/users/xxhomey19/following{/other_user}",
            "gists_url": "https://api.github.com/users/xxhomey19/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xxhomey19/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xxhomey19/subscriptions",
            "organizations_url": "https://api.github.com/users/xxhomey19/orgs",
            "repos_url": "https://api.github.com/users/xxhomey19/repos",
            "events_url": "https://api.github.com/users/xxhomey19/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xxhomey19/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "with-typing -> content-management",
        "created_at": "2017-11-14T04:03:29Z",
        "updated_at": "2017-11-14T04:03:29Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/21#discussion_r150732924",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/21",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/150732924"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/21#discussion_r150732924"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/21"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/151947467",
        "pull_request_review_id": 77732334,
        "id": 151947467,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTk0NzQ2Nw==",
        "diff_hunk": "@@ -0,0 +1,41 @@\n+# With Chatbase\n+\n+## Install and Run\n+\n+Download this example or clone [Bottender](https://github.com/Yoctol/bottender).\n+\n+```\n+curl https://codeload.github.com/Yoctol/bottender/tar.gz/master | tar -xz --strip=2 bottender-master/examples/with-chatbase\n+cd with-chatbase\n+npm install\n+npm run dev\n+```\n+\n+## Idea of this example\n+\n+This example shows how to combine your bot with **bot analytics tool**. In this\n+case, we take [Chatbase](https://chatbase.com/welcome) which is built by Google\n+as an example.\n+\n+The following code is the main part of this example which demonstrates the way\n+to connect your bot with [Chatbase](https://chatbase.com/welcome). Furthermore,\n+You have better check\n+[middleware guide](https://bottender.js.org/docs/Guides-Middleware) if you don't\n+understand what is middleware.\n+\n+```js\n+const server = createServer(bot, {\n+  verifyToken: '__FILL_YOUR_VERIFY_TOKEN_HERE__',\n+  webhookMiddleware: botimizeMiddleware(bot, {",
        "path": "examples/with-chatbase/README.md",
        "position": null,
        "original_position": 29,
        "commit_id": "41fb94d9f013abb1bcbac2791e338b4a8c68e4de",
        "original_commit_id": "8d22901c9e76d2fe48cf7b878ff94789029a1868",
        "user": {
            "login": "kpman",
            "id": 2382594,
            "node_id": "MDQ6VXNlcjIzODI1OTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2382594?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kpman",
            "html_url": "https://github.com/kpman",
            "followers_url": "https://api.github.com/users/kpman/followers",
            "following_url": "https://api.github.com/users/kpman/following{/other_user}",
            "gists_url": "https://api.github.com/users/kpman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kpman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kpman/subscriptions",
            "organizations_url": "https://api.github.com/users/kpman/orgs",
            "repos_url": "https://api.github.com/users/kpman/repos",
            "events_url": "https://api.github.com/users/kpman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kpman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "chatbaseMiddleware",
        "created_at": "2017-11-20T10:05:21Z",
        "updated_at": "2017-11-21T03:52:49Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/26#discussion_r151947467",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/26",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/151947467"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/26#discussion_r151947467"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/26"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/151947667",
        "pull_request_review_id": 77732555,
        "id": 151947667,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTk0NzY2Nw==",
        "diff_hunk": "@@ -0,0 +1,46 @@\n+const _chatbase = require('@google/chatbase');\n+\n+module.exports = function botimizeMiddleware(bot, { apiKey, platform }) {",
        "path": "examples/with-chatbase/chatbaseMiddleware.js",
        "position": null,
        "original_position": 3,
        "commit_id": "41fb94d9f013abb1bcbac2791e338b4a8c68e4de",
        "original_commit_id": "8d22901c9e76d2fe48cf7b878ff94789029a1868",
        "user": {
            "login": "kpman",
            "id": 2382594,
            "node_id": "MDQ6VXNlcjIzODI1OTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2382594?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kpman",
            "html_url": "https://github.com/kpman",
            "followers_url": "https://api.github.com/users/kpman/followers",
            "following_url": "https://api.github.com/users/kpman/following{/other_user}",
            "gists_url": "https://api.github.com/users/kpman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kpman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kpman/subscriptions",
            "organizations_url": "https://api.github.com/users/kpman/orgs",
            "repos_url": "https://api.github.com/users/kpman/repos",
            "events_url": "https://api.github.com/users/kpman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kpman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "chatbaseMiddleware",
        "created_at": "2017-11-20T10:06:10Z",
        "updated_at": "2017-11-21T03:52:49Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/26#discussion_r151947667",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/26",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/151947667"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/26#discussion_r151947667"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/26"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/151957415",
        "pull_request_review_id": 77743972,
        "id": 151957415,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTk1NzQxNQ==",
        "diff_hunk": "@@ -0,0 +1,41 @@\n+# With Chatbase\n+\n+## Install and Run\n+\n+Download this example or clone [Bottender](https://github.com/Yoctol/bottender).\n+\n+```\n+curl https://codeload.github.com/Yoctol/bottender/tar.gz/master | tar -xz --strip=2 bottender-master/examples/with-chatbase\n+cd with-chatbase\n+npm install\n+npm run dev\n+```\n+\n+## Idea of this example\n+\n+This example shows how to combine your bot with **bot analytics tool**. In this\n+case, we take [Chatbase](https://chatbase.com/welcome) which is built by Google\n+as an example.\n+\n+The following code is the main part of this example which demonstrates the way\n+to connect your bot with [Chatbase](https://chatbase.com/welcome). Furthermore,\n+You have better check\n+[middleware guide](https://bottender.js.org/docs/Guides-Middleware) if you don't",
        "path": "examples/with-chatbase/README.md",
        "position": null,
        "original_position": 23,
        "commit_id": "41fb94d9f013abb1bcbac2791e338b4a8c68e4de",
        "original_commit_id": "312f8ebe968634da1a885738442ecedf7c702f35",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`You have better ...` sounds not so polite.\r\nThis sentence can be rewrite as\r\n> You can check middleware guide for more information",
        "created_at": "2017-11-20T10:48:50Z",
        "updated_at": "2017-11-21T03:52:49Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/26#discussion_r151957415",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/26",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/151957415"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/26#discussion_r151957415"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/26"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/151976098",
        "pull_request_review_id": 77765911,
        "id": 151976098,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTk3NjA5OA==",
        "diff_hunk": "@@ -0,0 +1,41 @@\n+# With Chatbase\n+\n+## Install and Run\n+\n+Download this example or clone [Bottender](https://github.com/Yoctol/bottender).\n+\n+```\n+curl https://codeload.github.com/Yoctol/bottender/tar.gz/master | tar -xz --strip=2 bottender-master/examples/with-chatbase\n+cd with-chatbase\n+npm install\n+npm run dev\n+```\n+\n+## Idea of this example\n+\n+This example shows how to combine your bot with **bot analytics tool**. In this\n+case, we take [Chatbase](https://chatbase.com/welcome) which is built by Google\n+as an example.\n+\n+The following code is the main part of this example which demonstrates the way\n+to connect your bot with [Chatbase](https://chatbase.com/welcome). Furthermore,\n+You have better check\n+[middleware guide](https://bottender.js.org/docs/Guides-Middleware) if you don't",
        "path": "examples/with-chatbase/README.md",
        "position": null,
        "original_position": 23,
        "commit_id": "41fb94d9f013abb1bcbac2791e338b4a8c68e4de",
        "original_commit_id": "312f8ebe968634da1a885738442ecedf7c702f35",
        "user": {
            "login": "chentsulin",
            "id": 3382565,
            "node_id": "MDQ6VXNlcjMzODI1NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3382565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chentsulin",
            "html_url": "https://github.com/chentsulin",
            "followers_url": "https://api.github.com/users/chentsulin/followers",
            "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
            "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
            "organizations_url": "https://api.github.com/users/chentsulin/orgs",
            "repos_url": "https://api.github.com/users/chentsulin/repos",
            "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chentsulin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should talk about express middleware here, not our middleware guide.",
        "created_at": "2017-11-20T12:20:47Z",
        "updated_at": "2017-11-21T03:52:49Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/26#discussion_r151976098",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/26",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/151976098"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/26#discussion_r151976098"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/26"
            }
        },
        "in_reply_to_id": 151957415
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152197259",
        "pull_request_review_id": 78020549,
        "id": 152197259,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjE5NzI1OQ==",
        "diff_hunk": "@@ -0,0 +1,25 @@\n+const _botanalytics = require('botanalytics');\n+\n+module.exports = function botanalyticsMiddleware(bot, { apiToken }) {\n+  const Botanalytics = _botanalytics.FacebookMessenger(apiToken);",
        "path": "examples/with-botanalytics/botanalyticsMiddleware.js",
        "position": null,
        "original_position": 4,
        "commit_id": "abeeb13733232e706dca161e8665f60195c715ac",
        "original_commit_id": "949ce807ab4d39b8290fe994da0955008202b75c",
        "user": {
            "login": "chentsulin",
            "id": 3382565,
            "node_id": "MDQ6VXNlcjMzODI1NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3382565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chentsulin",
            "html_url": "https://github.com/chentsulin",
            "followers_url": "https://api.github.com/users/chentsulin/followers",
            "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
            "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
            "organizations_url": "https://api.github.com/users/chentsulin/orgs",
            "repos_url": "https://api.github.com/users/chentsulin/repos",
            "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chentsulin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`Botanalytics` is a object instance, os should be camelCase.",
        "created_at": "2017-11-21T07:44:51Z",
        "updated_at": "2017-11-21T07:59:53Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/28#discussion_r152197259",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/28",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152197259"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/28#discussion_r152197259"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/28"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152241896",
        "pull_request_review_id": 78071882,
        "id": 152241896,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjI0MTg5Ng==",
        "diff_hunk": "@@ -0,0 +1,37 @@\n+const _dashbot = require('dashbot');\n+\n+module.exports = function dashbotMiddleware(bot, { apiKey, platform }) {\n+  const dashbot = _dashbot(apiKey)[platform];\n+\n+  const { client } = bot.connector;\n+  const accessToken = client._accessToken;\n+  const axios = client.axios;\n+\n+  // Add a response interceptor\n+  axios.interceptors.response.use(response => {\n+    const { config } = response;\n+    if (/graph\\.facebook\\.com.*\\/me\\/messages/.test(config.url)) {\n+      const { recipient: { id }, message: { text } } = JSON.parse(config.data);\n+      const requestData = {\n+        url: 'https://graph.facebook.com/v2.6/me/messages',",
        "path": "examples/with-dashbot/dashbotMiddleware.js",
        "position": null,
        "original_position": 16,
        "commit_id": "66bfdea761af80768b20ef76377ee92e896ebba0",
        "original_commit_id": "e2e38815d1275553f6b4091e2c4abf97b0dea296",
        "user": {
            "login": "chentsulin",
            "id": 3382565,
            "node_id": "MDQ6VXNlcjMzODI1NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3382565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chentsulin",
            "html_url": "https://github.com/chentsulin",
            "followers_url": "https://api.github.com/users/chentsulin/followers",
            "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
            "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
            "organizations_url": "https://api.github.com/users/chentsulin/orgs",
            "repos_url": "https://api.github.com/users/chentsulin/repos",
            "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chentsulin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```js\r\n`https://graph.facebook.com/v${client.version}/me/messages`\r\n```",
        "created_at": "2017-11-21T11:02:05Z",
        "updated_at": "2017-11-22T02:18:08Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/32#discussion_r152241896",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/32",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152241896"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/32#discussion_r152241896"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152461821",
        "pull_request_review_id": 78327150,
        "id": 152461821,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjQ2MTgyMQ==",
        "diff_hunk": "@@ -1,12 +1,12 @@\n-# With botanalytics\n+# Analysis botanalytics",
        "path": "examples/analysis-botanalytics/README.md",
        "position": null,
        "original_position": 2,
        "commit_id": "da679ca190565c7f150eb4a15a9872efdf9adf8d",
        "original_commit_id": "89d25f4f10e2eb0c91f0fdb4d32f9c3b9e5e2939",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Would it be better use title like: \r\n# Analysis: Botanalytics\r\n?",
        "created_at": "2017-11-22T03:30:30Z",
        "updated_at": "2017-11-22T04:18:11Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/34#discussion_r152461821",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/34",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152461821"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/34#discussion_r152461821"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/34"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152462355",
        "pull_request_review_id": 78327736,
        "id": 152462355,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjQ2MjM1NQ==",
        "diff_hunk": "@@ -1,12 +1,12 @@\n-# With botanalytics\n+# Analysis botanalytics",
        "path": "examples/analysis-botanalytics/README.md",
        "position": null,
        "original_position": 2,
        "commit_id": "da679ca190565c7f150eb4a15a9872efdf9adf8d",
        "original_commit_id": "89d25f4f10e2eb0c91f0fdb4d32f9c3b9e5e2939",
        "user": {
            "login": "xxhomey19",
            "id": 12113222,
            "node_id": "MDQ6VXNlcjEyMTEzMjIy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12113222?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xxhomey19",
            "html_url": "https://github.com/xxhomey19",
            "followers_url": "https://api.github.com/users/xxhomey19/followers",
            "following_url": "https://api.github.com/users/xxhomey19/following{/other_user}",
            "gists_url": "https://api.github.com/users/xxhomey19/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xxhomey19/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xxhomey19/subscriptions",
            "organizations_url": "https://api.github.com/users/xxhomey19/orgs",
            "repos_url": "https://api.github.com/users/xxhomey19/repos",
            "events_url": "https://api.github.com/users/xxhomey19/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xxhomey19/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sure",
        "created_at": "2017-11-22T03:35:50Z",
        "updated_at": "2017-11-22T04:18:11Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/34#discussion_r152462355",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/34",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152462355"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/34#discussion_r152462355"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/34"
            }
        },
        "in_reply_to_id": 152461821
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152910443",
        "pull_request_review_id": 78844842,
        "id": 152910443,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjkxMDQ0Mw==",
        "diff_hunk": "@@ -0,0 +1,178 @@\n+import fs from 'fs';\n+import path from 'path';\n+\n+import invariant from 'invariant';\n+import { MessengerClient } from 'messaging-api-messenger';\n+import readdir from 'recursive-readdir';\n+import fileType from 'file-type';\n+import readChunk from 'read-chunk';\n+import inquirer from 'inquirer';\n+import jsonfile from 'jsonfile';\n+import hasha from 'hasha';\n+\n+import getConfig from '../../shared/getConfig';\n+import { error, warn, print, bold, log } from '../../shared/log';\n+\n+import help from './help';\n+\n+const getFileType = file => {\n+  const imageType = ['jpg', 'png', 'jpeg', 'gif'];\n+  const videoType = ['avi', 'mp4', 'm4v'];\n+  const audioType = ['mp3', 'mid', 'm4a', 'wav'];\n+\n+  let type = 'file';\n+\n+  const buffer = readChunk.sync(file, 0, 4100);\n+\n+  const typeResult = fileType(buffer);\n+  if (typeResult) {\n+    const { ext } = typeResult;\n+    if (imageType.includes(ext)) {\n+      type = 'image';\n+    } else if (videoType.includes(ext)) {\n+      type = 'video';\n+    } else if (audioType.includes(ext)) {\n+      type = 'audio';\n+    }\n+  }\n+\n+  return type;\n+};\n+\n+const ignoreFunc = file => {\n+  const ignoreRegex = /\\/\\./;\n+  return ignoreRegex.test(file);\n+};\n+\n+const logUploadInfo = uploadInfo => {\n+  log('==================== Upload status ===================');\n+  log(\n+    `Total successfully uploaded ${uploadInfo.success.length} ${\n+      uploadInfo.success.length <= 1 ? 'file' : 'files'\n+    }, failed ${uploadInfo.error.length} ${\n+      uploadInfo.error.length <= 1 ? 'file' : 'files'\n+    }, unchanged ${uploadInfo.unchanged.length} ${\n+      uploadInfo.unchanged.length <= 1 ? 'file' : 'files'\n+    }.`\n+  );\n+  for (let i = 0; i < uploadInfo.error.length; i += 1) {\n+    error(`Failed file: ${uploadInfo.error[i]}`);\n+  }\n+};\n+\n+export async function uploadAttachment() {\n+  try {\n+    warn(\n+      `${bold(\n+        'Attachments upload'\n+      )} is under heavy development. API may change between any versions.`\n+    );\n+\n+    const config = getConfig('bottender.config.js', 'messenger');\n+\n+    invariant(config.accessToken, 'accessToken is not found in config file');\n+\n+    const client = MessengerClient.connect(config.accessToken);\n+\n+    const files = await readdir('assets', [ignoreFunc]);",
        "path": "src/cli/providers/messenger/attachment.js",
        "position": null,
        "original_position": 77,
        "commit_id": "9718ee71155ffc6733fd0cc6ba954f197b63c594",
        "original_commit_id": "2440dfca493884dba51a96422f3cd535c63f0c4c",
        "user": {
            "login": "chentsulin",
            "id": 3382565,
            "node_id": "MDQ6VXNlcjMzODI1NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3382565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chentsulin",
            "html_url": "https://github.com/chentsulin",
            "followers_url": "https://api.github.com/users/chentsulin/followers",
            "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
            "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
            "organizations_url": "https://api.github.com/users/chentsulin/orgs",
            "repos_url": "https://api.github.com/users/chentsulin/repos",
            "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chentsulin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```js\r\nconst files = await readdir('assets', ['.*']);\r\n```",
        "created_at": "2017-11-24T07:45:16Z",
        "updated_at": "2017-11-27T07:22:50Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/40#discussion_r152910443",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/40",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152910443"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/40#discussion_r152910443"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/40"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153094883",
        "pull_request_review_id": 79051388,
        "id": 153094883,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzA5NDg4Mw==",
        "diff_hunk": "@@ -0,0 +1,173 @@\n+import fs from 'fs';\n+import path from 'path';\n+\n+import invariant from 'invariant';\n+import { MessengerClient } from 'messaging-api-messenger';\n+import readdir from 'recursive-readdir';\n+import fileType from 'file-type';\n+import readChunk from 'read-chunk';\n+import inquirer from 'inquirer';\n+import jsonfile from 'jsonfile';\n+import hasha from 'hasha';\n+\n+import getConfig from '../../shared/getConfig';\n+import { error, warn, print, bold, log } from '../../shared/log';\n+\n+import help from './help';\n+\n+const getFileType = file => {\n+  const imageType = ['jpg', 'png', 'jpeg', 'gif'];\n+  const videoType = ['avi', 'mp4', 'm4v'];\n+  const audioType = ['mp3', 'mid', 'm4a', 'wav'];\n+\n+  let type = 'file';\n+\n+  const buffer = readChunk.sync(file, 0, 4100);",
        "path": "src/cli/providers/messenger/attachment.js",
        "position": null,
        "original_position": 25,
        "commit_id": "9718ee71155ffc6733fd0cc6ba954f197b63c594",
        "original_commit_id": "1a732ee605f19308bea578c87d429567b7539507",
        "user": {
            "login": "chentsulin",
            "id": 3382565,
            "node_id": "MDQ6VXNlcjMzODI1NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3382565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chentsulin",
            "html_url": "https://github.com/chentsulin",
            "followers_url": "https://api.github.com/users/chentsulin/followers",
            "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
            "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
            "organizations_url": "https://api.github.com/users/chentsulin/orgs",
            "repos_url": "https://api.github.com/users/chentsulin/repos",
            "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chentsulin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we can name 0, 4100 magic numbers here to improve readability.",
        "created_at": "2017-11-27T02:21:48Z",
        "updated_at": "2017-11-27T07:22:50Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/40#discussion_r153094883",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/40",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153094883"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/40#discussion_r153094883"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/40"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153095003",
        "pull_request_review_id": 79051523,
        "id": 153095003,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzA5NTAwMw==",
        "diff_hunk": "@@ -0,0 +1,173 @@\n+import fs from 'fs';\n+import path from 'path';\n+\n+import invariant from 'invariant';\n+import { MessengerClient } from 'messaging-api-messenger';\n+import readdir from 'recursive-readdir';\n+import fileType from 'file-type';\n+import readChunk from 'read-chunk';\n+import inquirer from 'inquirer';\n+import jsonfile from 'jsonfile';\n+import hasha from 'hasha';\n+\n+import getConfig from '../../shared/getConfig';\n+import { error, warn, print, bold, log } from '../../shared/log';\n+\n+import help from './help';\n+\n+const getFileType = file => {\n+  const imageType = ['jpg', 'png', 'jpeg', 'gif'];\n+  const videoType = ['avi', 'mp4', 'm4v'];\n+  const audioType = ['mp3', 'mid', 'm4a', 'wav'];\n+\n+  let type = 'file';\n+\n+  const buffer = readChunk.sync(file, 0, 4100);\n+\n+  const typeResult = fileType(buffer);\n+  if (typeResult) {\n+    const { ext } = typeResult;\n+    if (imageType.includes(ext)) {\n+      type = 'image';\n+    } else if (videoType.includes(ext)) {\n+      type = 'video';\n+    } else if (audioType.includes(ext)) {\n+      type = 'audio';\n+    }",
        "path": "src/cli/providers/messenger/attachment.js",
        "position": 53,
        "original_position": 36,
        "commit_id": "9718ee71155ffc6733fd0cc6ba954f197b63c594",
        "original_commit_id": "1a732ee605f19308bea578c87d429567b7539507",
        "user": {
            "login": "chentsulin",
            "id": 3382565,
            "node_id": "MDQ6VXNlcjMzODI1NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3382565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chentsulin",
            "html_url": "https://github.com/chentsulin",
            "followers_url": "https://api.github.com/users/chentsulin/followers",
            "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
            "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
            "organizations_url": "https://api.github.com/users/chentsulin/orgs",
            "repos_url": "https://api.github.com/users/chentsulin/repos",
            "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chentsulin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should return file type in else branch?",
        "created_at": "2017-11-27T02:23:35Z",
        "updated_at": "2017-11-27T07:22:50Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/40#discussion_r153095003",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/40",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153095003"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/40#discussion_r153095003"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/40"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153095285",
        "pull_request_review_id": 79051848,
        "id": 153095285,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzA5NTI4NQ==",
        "diff_hunk": "@@ -0,0 +1,173 @@\n+import fs from 'fs';\n+import path from 'path';\n+\n+import invariant from 'invariant';\n+import { MessengerClient } from 'messaging-api-messenger';\n+import readdir from 'recursive-readdir';\n+import fileType from 'file-type';\n+import readChunk from 'read-chunk';\n+import inquirer from 'inquirer';\n+import jsonfile from 'jsonfile';\n+import hasha from 'hasha';\n+\n+import getConfig from '../../shared/getConfig';\n+import { error, warn, print, bold, log } from '../../shared/log';\n+\n+import help from './help';\n+\n+const getFileType = file => {\n+  const imageType = ['jpg', 'png', 'jpeg', 'gif'];\n+  const videoType = ['avi', 'mp4', 'm4v'];\n+  const audioType = ['mp3', 'mid', 'm4a', 'wav'];\n+\n+  let type = 'file';\n+\n+  const buffer = readChunk.sync(file, 0, 4100);\n+\n+  const typeResult = fileType(buffer);\n+  if (typeResult) {\n+    const { ext } = typeResult;\n+    if (imageType.includes(ext)) {\n+      type = 'image';\n+    } else if (videoType.includes(ext)) {\n+      type = 'video';\n+    } else if (audioType.includes(ext)) {\n+      type = 'audio';\n+    }\n+  }\n+\n+  return type;\n+};\n+\n+const logUploadInfo = uploadInfo => {\n+  log('==================== Upload status ===================');\n+  log(\n+    `Total successfully uploaded ${uploadInfo.success.length} ${\n+      uploadInfo.success.length <= 1 ? 'file' : 'files'\n+    }, failed ${uploadInfo.error.length} ${\n+      uploadInfo.error.length <= 1 ? 'file' : 'files'\n+    }, unchanged ${uploadInfo.unchanged.length} ${\n+      uploadInfo.unchanged.length <= 1 ? 'file' : 'files'\n+    }.`\n+  );\n+  for (let i = 0; i < uploadInfo.error.length; i += 1) {\n+    error(`Failed file: ${uploadInfo.error[i]}`);\n+  }\n+};\n+\n+export async function uploadAttachment() {\n+  try {\n+    warn(\n+      `${bold(\n+        'Attachments upload'\n+      )} is under heavy development. API may change between any versions.`\n+    );\n+\n+    const config = getConfig('bottender.config.js', 'messenger');\n+\n+    invariant(config.accessToken, 'accessToken is not found in config file');\n+\n+    const client = MessengerClient.connect(config.accessToken);\n+\n+    const files = await readdir('assets', ['.*']);\n+\n+    files.forEach(print);\n+\n+    const promptResult = await inquirer.prompt([\n+      {\n+        type: 'confirm',\n+        message: 'Is it correct for uploading?',\n+        name: 'confirm',\n+      },\n+    ]);\n+\n+    if (!promptResult.confirm) {\n+      print('bye');\n+      process.exit(0);\n+    }\n+\n+    const pathOfMappingFile = path.resolve('bottender-lock.json'); // TODO: output path?\n+\n+    if (!fs.existsSync(pathOfMappingFile)) {\n+      jsonfile.writeFileSync(pathOfMappingFile, {});\n+\n+      print(`Initialize ${bold('bottender-lock.json')} for you`);\n+    }\n+\n+    const uploadInfo = {\n+      success: [],\n+      error: [],\n+      unchanged: [],\n+    };\n+\n+    print(`Trying to upload ${files.length} files...`);\n+\n+    for (let i = 0; i < files.length; i++) {\n+      const _uploadedFiles = jsonfile.readFileSync(pathOfMappingFile);\n+      const uploadedFiles = _uploadedFiles.messenger || {};\n+\n+      const name = files[i];\n+      const basename = path.basename(name);\n+\n+      const fileMeta = uploadedFiles[basename];\n+      const checksum = hasha.fromFileSync(name);\n+\n+      let pageId;\n+\n+      if (!fileMeta || checksum !== fileMeta.checksum) {\n+        try {\n+          if (!pageId) {\n+            // eslint-disable-next-line no-await-in-loop\n+            const pageInfo = await client.getPageInfo();\n+            pageId = pageInfo.id;\n+          }\n+          // eslint-disable-next-line no-await-in-loop\n+          const data = await client.uploadAttachment(\n+            getFileType(name),\n+            fs.createReadStream(name)\n+          );\n+          jsonfile.writeFileSync(\n+            pathOfMappingFile,\n+            {\n+              ..._uploadedFiles,\n+              messenger: {\n+                ...uploadedFiles,\n+                [basename]: {\n+                  ...data,\n+                  pageId,\n+                  uploaded_at: Date.now(),\n+                  checksum,\n+                },\n+              },\n+            },\n+            { spaces: 2 }\n+          );\n+          print(`Successfully uploaded: ${name}`);\n+          uploadInfo.success.push(name);\n+        } catch (e) {\n+          error(e);\n+          uploadInfo.error.push(name);\n+        }\n+      } else {\n+        uploadInfo.unchanged.push(name);\n+      }\n+    }\n+\n+    logUploadInfo(uploadInfo);\n+  } catch (err) {\n+    error(err.message);\n+    return process.exit(1);\n+  }\n+}\n+\n+export default async function main(ctx) {\n+  const subcommand = ctx.argv._[2];\n+  switch (subcommand) {\n+    case 'upload':\n+      await uploadAttachment();\n+      break;",
        "path": "src/cli/providers/messenger/attachment.js",
        "position": 185,
        "original_position": 168,
        "commit_id": "9718ee71155ffc6733fd0cc6ba954f197b63c594",
        "original_commit_id": "1a732ee605f19308bea578c87d429567b7539507",
        "user": {
            "login": "chentsulin",
            "id": 3382565,
            "node_id": "MDQ6VXNlcjMzODI1NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3382565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chentsulin",
            "html_url": "https://github.com/chentsulin",
            "followers_url": "https://api.github.com/users/chentsulin/followers",
            "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
            "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
            "organizations_url": "https://api.github.com/users/chentsulin/orgs",
            "repos_url": "https://api.github.com/users/chentsulin/repos",
            "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chentsulin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should help subcommand work here?",
        "created_at": "2017-11-27T02:27:23Z",
        "updated_at": "2017-11-27T07:22:50Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/40#discussion_r153095285",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/40",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153095285"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/40#discussion_r153095285"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/40"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153098095",
        "pull_request_review_id": 79054874,
        "id": 153098095,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzA5ODA5NQ==",
        "diff_hunk": "@@ -0,0 +1,173 @@\n+import fs from 'fs';\n+import path from 'path';\n+\n+import invariant from 'invariant';\n+import { MessengerClient } from 'messaging-api-messenger';\n+import readdir from 'recursive-readdir';\n+import fileType from 'file-type';\n+import readChunk from 'read-chunk';\n+import inquirer from 'inquirer';\n+import jsonfile from 'jsonfile';\n+import hasha from 'hasha';\n+\n+import getConfig from '../../shared/getConfig';\n+import { error, warn, print, bold, log } from '../../shared/log';\n+\n+import help from './help';\n+\n+const getFileType = file => {\n+  const imageType = ['jpg', 'png', 'jpeg', 'gif'];\n+  const videoType = ['avi', 'mp4', 'm4v'];\n+  const audioType = ['mp3', 'mid', 'm4a', 'wav'];\n+\n+  let type = 'file';\n+\n+  const buffer = readChunk.sync(file, 0, 4100);\n+\n+  const typeResult = fileType(buffer);\n+  if (typeResult) {\n+    const { ext } = typeResult;\n+    if (imageType.includes(ext)) {\n+      type = 'image';\n+    } else if (videoType.includes(ext)) {\n+      type = 'video';\n+    } else if (audioType.includes(ext)) {\n+      type = 'audio';\n+    }",
        "path": "src/cli/providers/messenger/attachment.js",
        "position": 53,
        "original_position": 36,
        "commit_id": "9718ee71155ffc6733fd0cc6ba954f197b63c594",
        "original_commit_id": "1a732ee605f19308bea578c87d429567b7539507",
        "user": {
            "login": "kpman",
            "id": 2382594,
            "node_id": "MDQ6VXNlcjIzODI1OTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2382594?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kpman",
            "html_url": "https://github.com/kpman",
            "followers_url": "https://api.github.com/users/kpman/followers",
            "following_url": "https://api.github.com/users/kpman/following{/other_user}",
            "gists_url": "https://api.github.com/users/kpman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kpman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kpman/subscriptions",
            "organizations_url": "https://api.github.com/users/kpman/orgs",
            "repos_url": "https://api.github.com/users/kpman/repos",
            "events_url": "https://api.github.com/users/kpman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kpman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "the `type` is defined as 'file' at the beginning.\r\nI've adjusted the order for readability.",
        "created_at": "2017-11-27T03:00:27Z",
        "updated_at": "2017-11-27T07:22:50Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/40#discussion_r153098095",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/40",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153098095"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/40#discussion_r153098095"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/40"
            }
        },
        "in_reply_to_id": 153095003
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153098141",
        "pull_request_review_id": 79054921,
        "id": 153098141,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzA5ODE0MQ==",
        "diff_hunk": "@@ -0,0 +1,173 @@\n+import fs from 'fs';\n+import path from 'path';\n+\n+import invariant from 'invariant';\n+import { MessengerClient } from 'messaging-api-messenger';\n+import readdir from 'recursive-readdir';\n+import fileType from 'file-type';\n+import readChunk from 'read-chunk';\n+import inquirer from 'inquirer';\n+import jsonfile from 'jsonfile';\n+import hasha from 'hasha';\n+\n+import getConfig from '../../shared/getConfig';\n+import { error, warn, print, bold, log } from '../../shared/log';\n+\n+import help from './help';\n+\n+const getFileType = file => {\n+  const imageType = ['jpg', 'png', 'jpeg', 'gif'];\n+  const videoType = ['avi', 'mp4', 'm4v'];\n+  const audioType = ['mp3', 'mid', 'm4a', 'wav'];\n+\n+  let type = 'file';\n+\n+  const buffer = readChunk.sync(file, 0, 4100);\n+\n+  const typeResult = fileType(buffer);\n+  if (typeResult) {\n+    const { ext } = typeResult;\n+    if (imageType.includes(ext)) {\n+      type = 'image';\n+    } else if (videoType.includes(ext)) {\n+      type = 'video';\n+    } else if (audioType.includes(ext)) {\n+      type = 'audio';\n+    }\n+  }\n+\n+  return type;\n+};\n+\n+const logUploadInfo = uploadInfo => {\n+  log('==================== Upload status ===================');\n+  log(\n+    `Total successfully uploaded ${uploadInfo.success.length} ${\n+      uploadInfo.success.length <= 1 ? 'file' : 'files'\n+    }, failed ${uploadInfo.error.length} ${\n+      uploadInfo.error.length <= 1 ? 'file' : 'files'\n+    }, unchanged ${uploadInfo.unchanged.length} ${\n+      uploadInfo.unchanged.length <= 1 ? 'file' : 'files'\n+    }.`\n+  );\n+  for (let i = 0; i < uploadInfo.error.length; i += 1) {\n+    error(`Failed file: ${uploadInfo.error[i]}`);\n+  }\n+};\n+\n+export async function uploadAttachment() {\n+  try {\n+    warn(\n+      `${bold(\n+        'Attachments upload'\n+      )} is under heavy development. API may change between any versions.`\n+    );\n+\n+    const config = getConfig('bottender.config.js', 'messenger');\n+\n+    invariant(config.accessToken, 'accessToken is not found in config file');\n+\n+    const client = MessengerClient.connect(config.accessToken);\n+\n+    const files = await readdir('assets', ['.*']);\n+\n+    files.forEach(print);\n+\n+    const promptResult = await inquirer.prompt([\n+      {\n+        type: 'confirm',\n+        message: 'Is it correct for uploading?',\n+        name: 'confirm',\n+      },\n+    ]);\n+\n+    if (!promptResult.confirm) {\n+      print('bye');\n+      process.exit(0);\n+    }\n+\n+    const pathOfMappingFile = path.resolve('bottender-lock.json'); // TODO: output path?\n+\n+    if (!fs.existsSync(pathOfMappingFile)) {\n+      jsonfile.writeFileSync(pathOfMappingFile, {});\n+\n+      print(`Initialize ${bold('bottender-lock.json')} for you`);\n+    }\n+\n+    const uploadInfo = {\n+      success: [],\n+      error: [],\n+      unchanged: [],\n+    };\n+\n+    print(`Trying to upload ${files.length} files...`);\n+\n+    for (let i = 0; i < files.length; i++) {\n+      const _uploadedFiles = jsonfile.readFileSync(pathOfMappingFile);\n+      const uploadedFiles = _uploadedFiles.messenger || {};\n+\n+      const name = files[i];\n+      const basename = path.basename(name);\n+\n+      const fileMeta = uploadedFiles[basename];\n+      const checksum = hasha.fromFileSync(name);\n+\n+      let pageId;\n+\n+      if (!fileMeta || checksum !== fileMeta.checksum) {\n+        try {\n+          if (!pageId) {\n+            // eslint-disable-next-line no-await-in-loop\n+            const pageInfo = await client.getPageInfo();\n+            pageId = pageInfo.id;\n+          }\n+          // eslint-disable-next-line no-await-in-loop\n+          const data = await client.uploadAttachment(\n+            getFileType(name),\n+            fs.createReadStream(name)\n+          );\n+          jsonfile.writeFileSync(\n+            pathOfMappingFile,\n+            {\n+              ..._uploadedFiles,\n+              messenger: {\n+                ...uploadedFiles,\n+                [basename]: {\n+                  ...data,\n+                  pageId,\n+                  uploaded_at: Date.now(),\n+                  checksum,\n+                },\n+              },\n+            },\n+            { spaces: 2 }\n+          );\n+          print(`Successfully uploaded: ${name}`);\n+          uploadInfo.success.push(name);\n+        } catch (e) {\n+          error(e);\n+          uploadInfo.error.push(name);\n+        }\n+      } else {\n+        uploadInfo.unchanged.push(name);\n+      }\n+    }\n+\n+    logUploadInfo(uploadInfo);\n+  } catch (err) {\n+    error(err.message);\n+    return process.exit(1);\n+  }\n+}\n+\n+export default async function main(ctx) {\n+  const subcommand = ctx.argv._[2];\n+  switch (subcommand) {\n+    case 'upload':\n+      await uploadAttachment();\n+      break;",
        "path": "src/cli/providers/messenger/attachment.js",
        "position": 185,
        "original_position": 168,
        "commit_id": "9718ee71155ffc6733fd0cc6ba954f197b63c594",
        "original_commit_id": "1a732ee605f19308bea578c87d429567b7539507",
        "user": {
            "login": "kpman",
            "id": 2382594,
            "node_id": "MDQ6VXNlcjIzODI1OTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2382594?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kpman",
            "html_url": "https://github.com/kpman",
            "followers_url": "https://api.github.com/users/kpman/followers",
            "following_url": "https://api.github.com/users/kpman/following{/other_user}",
            "gists_url": "https://api.github.com/users/kpman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kpman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kpman/subscriptions",
            "organizations_url": "https://api.github.com/users/kpman/orgs",
            "repos_url": "https://api.github.com/users/kpman/repos",
            "events_url": "https://api.github.com/users/kpman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kpman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "sure",
        "created_at": "2017-11-27T03:01:02Z",
        "updated_at": "2017-11-27T07:22:50Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/40#discussion_r153098141",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/40",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153098141"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/40#discussion_r153098141"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/40"
            }
        },
        "in_reply_to_id": 153095285
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152820791",
        "pull_request_review_id": 78741557,
        "id": 152820791,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjgyMDc5MQ==",
        "diff_hunk": "@@ -0,0 +1,109 @@\n+const { SlackBot } = require('bottender');\n+const { createServer } = require('bottender/express');\n+\n+const bot = new SlackBot({\n+  accessToken: '__FILL_YOUR_TOKEN_HERE__',\n+});\n+\n+bot.onEvent(async context => {\n+  if (context.event.isText && context.event.text === 'heyo') {\n+    // send a message with buttons and menu\n+    await context.postMessage(undefined, {\n+      attachments: JSON.stringify([",
        "path": "examples/slack-interactive-messge/index.js",
        "position": null,
        "original_position": 12,
        "commit_id": "dd0448a6996f5a37e08654fd54bf8d778384d35a",
        "original_commit_id": "591d8a87f537242b5be49c5f8637d89945d6d670",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`stringify` isn't needed here, underlying client did will do the trick",
        "created_at": "2017-11-23T14:58:52Z",
        "updated_at": "2017-11-28T06:39:10Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/41#discussion_r152820791",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/41",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152820791"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/41#discussion_r152820791"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/41"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152821057",
        "pull_request_review_id": 78741890,
        "id": 152821057,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjgyMTA1Nw==",
        "diff_hunk": "@@ -15,17 +20,24 @@ export type SlackUser = {\n   id: string,\n };\n \n-export type SlackRequestBody = {\n+type EventsAPIBody = {\n   token: string,\n   team_id: string,\n   api_app_id: string,\n-  type: string,\n-  event: SlackRawEvent,\n+  type: EventAPITypes,\n+  event: Message,\n   authed_users: Array<string>,\n   event_id: string,\n   event_time: number,\n };\n \n+export type SlackRequestBody = EventsAPIBody | { payload: string };\n+\n+export type SlackEventSource =",
        "path": "src/bot/SlackConnector.js",
        "position": null,
        "original_position": 34,
        "commit_id": "dd0448a6996f5a37e08654fd54bf8d778384d35a",
        "original_commit_id": "591d8a87f537242b5be49c5f8637d89945d6d670",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this is not needed",
        "created_at": "2017-11-23T15:00:02Z",
        "updated_at": "2017-11-28T06:39:10Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/41#discussion_r152821057",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/41",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/152821057"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/41#discussion_r152821057"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/41"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153473695",
        "pull_request_review_id": 79482580,
        "id": 153473695,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzQ3MzY5NQ==",
        "diff_hunk": "@@ -1,10 +1,13 @@\n+import init from './init';\n+import help from './help';\n+\n export default {\n   title: 'Bottender',\n   subcommands: new Set(['help', 'init']),\n   get init() {\n-    return require('./init').default;\n+    return init;",
        "path": "src/cli/providers/sh/index.js",
        "position": null,
        "original_position": 9,
        "commit_id": "915bdb1622ea162a95e4bf437da70a3f9e870280",
        "original_commit_id": "e92b18e909bf854e26545190003df534dd50ffe8",
        "user": {
            "login": "chentsulin",
            "id": 3382565,
            "node_id": "MDQ6VXNlcjMzODI1NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3382565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chentsulin",
            "html_url": "https://github.com/chentsulin",
            "followers_url": "https://api.github.com/users/chentsulin/followers",
            "following_url": "https://api.github.com/users/chentsulin/following{/other_user}",
            "gists_url": "https://api.github.com/users/chentsulin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chentsulin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chentsulin/subscriptions",
            "organizations_url": "https://api.github.com/users/chentsulin/orgs",
            "repos_url": "https://api.github.com/users/chentsulin/repos",
            "events_url": "https://api.github.com/users/chentsulin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chentsulin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should keep those lazy requires because it reduces the start-up time.",
        "created_at": "2017-11-28T12:11:36Z",
        "updated_at": "2017-11-29T08:10:51Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/50#discussion_r153473695",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/50",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153473695"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/50#discussion_r153473695"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/50"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153704906",
        "pull_request_review_id": 79749814,
        "id": 153704906,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwNDkwNg==",
        "diff_hunk": "@@ -0,0 +1,260 @@\n+/* eslint-disable consistent-return */\n+import { LineClient } from 'messaging-api-line';\n+import { differenceWith, isEqual, omit, findIndex } from 'lodash';\n+import inquirer from 'inquirer';\n+import invariant from 'invariant';\n+import pMap from 'p-map';\n+import chalk from 'chalk';\n+\n+import getConfig from '../../shared/getConfig';\n+import { print, error, bold, log } from '../../shared/log';\n+\n+const generateDeleteQuestions = richMenus => [\n+  {\n+    name: 'deletedRichMenuNames',\n+    message: 'Which rich menus do you want to delete ?',",
        "path": "src/cli/providers/line/menu.js",
        "position": null,
        "original_position": 15,
        "commit_id": "915bdb1622ea162a95e4bf437da70a3f9e870280",
        "original_commit_id": "3cd25632dba71621a1109f1d6d74dee529245e92",
        "user": {
            "login": "kpman",
            "id": 2382594,
            "node_id": "MDQ6VXNlcjIzODI1OTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2382594?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kpman",
            "html_url": "https://github.com/kpman",
            "followers_url": "https://api.github.com/users/kpman/followers",
            "following_url": "https://api.github.com/users/kpman/following{/other_user}",
            "gists_url": "https://api.github.com/users/kpman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kpman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kpman/subscriptions",
            "organizations_url": "https://api.github.com/users/kpman/orgs",
            "repos_url": "https://api.github.com/users/kpman/repos",
            "events_url": "https://api.github.com/users/kpman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kpman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "maybe no space before `?`",
        "created_at": "2017-11-29T06:53:07Z",
        "updated_at": "2017-11-29T08:10:51Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/50#discussion_r153704906",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/50",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153704906"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/50#discussion_r153704906"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/50"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705157",
        "pull_request_review_id": 79750061,
        "id": 153705157,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwNTE1Nw==",
        "diff_hunk": "@@ -0,0 +1,260 @@\n+/* eslint-disable consistent-return */\n+import { LineClient } from 'messaging-api-line';\n+import { differenceWith, isEqual, omit, findIndex } from 'lodash';\n+import inquirer from 'inquirer';\n+import invariant from 'invariant';\n+import pMap from 'p-map';\n+import chalk from 'chalk';\n+\n+import getConfig from '../../shared/getConfig';\n+import { print, error, bold, log } from '../../shared/log';\n+\n+const generateDeleteQuestions = richMenus => [\n+  {\n+    name: 'deletedRichMenuNames',\n+    message: 'Which rich menus do you want to delete ?',",
        "path": "src/cli/providers/line/menu.js",
        "position": null,
        "original_position": 15,
        "commit_id": "915bdb1622ea162a95e4bf437da70a3f9e870280",
        "original_commit_id": "3cd25632dba71621a1109f1d6d74dee529245e92",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`Which rich menu`?",
        "created_at": "2017-11-29T06:55:15Z",
        "updated_at": "2017-11-29T08:10:51Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705157",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/50",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705157"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705157"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/50"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705217",
        "pull_request_review_id": 79750129,
        "id": 153705217,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwNTIxNw==",
        "diff_hunk": "@@ -0,0 +1,260 @@\n+/* eslint-disable consistent-return */\n+import { LineClient } from 'messaging-api-line';\n+import { differenceWith, isEqual, omit, findIndex } from 'lodash';\n+import inquirer from 'inquirer';\n+import invariant from 'invariant';\n+import pMap from 'p-map';\n+import chalk from 'chalk';\n+\n+import getConfig from '../../shared/getConfig';\n+import { print, error, bold, log } from '../../shared/log';\n+\n+const generateDeleteQuestions = richMenus => [\n+  {\n+    name: 'deletedRichMenuNames',\n+    message: 'Which rich menus do you want to delete ?',",
        "path": "src/cli/providers/line/menu.js",
        "position": null,
        "original_position": 15,
        "commit_id": "915bdb1622ea162a95e4bf437da70a3f9e870280",
        "original_commit_id": "3cd25632dba71621a1109f1d6d74dee529245e92",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah, it's checkbox...",
        "created_at": "2017-11-29T06:55:49Z",
        "updated_at": "2017-11-29T08:10:51Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705217",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/50",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705217"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705217"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/50"
            }
        },
        "in_reply_to_id": 153705157
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705530",
        "pull_request_review_id": 79750503,
        "id": 153705530,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwNTUzMA==",
        "diff_hunk": "@@ -0,0 +1,260 @@\n+/* eslint-disable consistent-return */\n+import { LineClient } from 'messaging-api-line';\n+import { differenceWith, isEqual, omit, findIndex } from 'lodash';\n+import inquirer from 'inquirer';\n+import invariant from 'invariant';\n+import pMap from 'p-map';\n+import chalk from 'chalk';\n+\n+import getConfig from '../../shared/getConfig';\n+import { print, error, bold, log } from '../../shared/log';\n+\n+const generateDeleteQuestions = richMenus => [\n+  {\n+    name: 'deletedRichMenuNames',\n+    message: 'Which rich menus do you want to delete ?',\n+    type: 'checkbox',\n+    choices: richMenus.map(richMenu => richMenu.name),\n+  },\n+];\n+\n+export const help = () => {\n+  console.log(`\n+    bottender line menu <action> [option]\n+\n+    ${chalk.dim('Actions:')}\n+\n+      get           Get the LINE rich menu\n+      set           Set the LINE rich menu by diff\n+      del, delete   Delete all the LINE rich menu",
        "path": "src/cli/providers/line/menu.js",
        "position": null,
        "original_position": 29,
        "commit_id": "915bdb1622ea162a95e4bf437da70a3f9e870280",
        "original_commit_id": "3cd25632dba71621a1109f1d6d74dee529245e92",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "will\r\n```\r\nGet LINE rich menus\r\nSet LINE rich menu by diff\r\nDelete all LINE rich menus\r\n```\r\nbe better?",
        "created_at": "2017-11-29T06:58:53Z",
        "updated_at": "2017-11-29T08:10:51Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705530",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/50",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705530"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705530"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/50"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705580",
        "pull_request_review_id": 79750564,
        "id": 153705580,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwNTU4MA==",
        "diff_hunk": "@@ -0,0 +1,260 @@\n+/* eslint-disable consistent-return */\n+import { LineClient } from 'messaging-api-line';\n+import { differenceWith, isEqual, omit, findIndex } from 'lodash';\n+import inquirer from 'inquirer';\n+import invariant from 'invariant';\n+import pMap from 'p-map';\n+import chalk from 'chalk';\n+\n+import getConfig from '../../shared/getConfig';\n+import { print, error, bold, log } from '../../shared/log';\n+\n+const generateDeleteQuestions = richMenus => [\n+  {\n+    name: 'deletedRichMenuNames',\n+    message: 'Which rich menus do you want to delete ?',\n+    type: 'checkbox',\n+    choices: richMenus.map(richMenu => richMenu.name),\n+  },\n+];\n+\n+export const help = () => {\n+  console.log(`\n+    bottender line menu <action> [option]\n+\n+    ${chalk.dim('Actions:')}\n+\n+      get           Get the LINE rich menu\n+      set           Set the LINE rich menu by diff\n+      del, delete   Delete all the LINE rich menu",
        "path": "src/cli/providers/line/menu.js",
        "position": null,
        "original_position": 29,
        "commit_id": "915bdb1622ea162a95e4bf437da70a3f9e870280",
        "original_commit_id": "3cd25632dba71621a1109f1d6d74dee529245e92",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "also remove `the` in `the LINE rich menu` below",
        "created_at": "2017-11-29T06:59:20Z",
        "updated_at": "2017-11-29T08:10:51Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705580",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/50",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705580"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705580"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/50"
            }
        },
        "in_reply_to_id": 153705530
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705643",
        "pull_request_review_id": 79750645,
        "id": 153705643,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwNTY0Mw==",
        "diff_hunk": "@@ -0,0 +1,260 @@\n+/* eslint-disable consistent-return */\n+import { LineClient } from 'messaging-api-line';\n+import { differenceWith, isEqual, omit, findIndex } from 'lodash';\n+import inquirer from 'inquirer';\n+import invariant from 'invariant';\n+import pMap from 'p-map';\n+import chalk from 'chalk';\n+\n+import getConfig from '../../shared/getConfig';\n+import { print, error, bold, log } from '../../shared/log';\n+\n+const generateDeleteQuestions = richMenus => [\n+  {\n+    name: 'deletedRichMenuNames',\n+    message: 'Which rich menus do you want to delete ?',\n+    type: 'checkbox',\n+    choices: richMenus.map(richMenu => richMenu.name),\n+  },\n+];\n+\n+export const help = () => {\n+  console.log(`\n+    bottender line menu <action> [option]\n+\n+    ${chalk.dim('Actions:')}\n+\n+      get           Get the LINE rich menu\n+      set           Set the LINE rich menu by diff\n+      del, delete   Delete all the LINE rich menu\n+      help          Show this help\n+\n+    ${chalk.dim('Options:')}\n+\n+      --force       Force update the LINE rich menu by config\n+\n+    ${chalk.dim('Examples:')}\n+\n+    ${chalk.dim('-')} Set the LINE rich menu\n+\n+      ${chalk.cyan('$ bottender line menu set')}\n+\n+    ${chalk.dim('-')} Force update the LINE rich menu\n+\n+      ${chalk.cyan('$ bottender line menu set --force')}\n+  `);\n+};\n+\n+export async function getLineMenu() {\n+  try {\n+    const config = getConfig('bottender.config.js', 'line');\n+\n+    invariant(config.accessToken, 'accessToken is not found in config file.');\n+\n+    const client = LineClient.connect(config.accessToken);\n+\n+    const richMenus = await client.getRichMenuList();\n+\n+    if (richMenus) {\n+      print('The rich menu is:');",
        "path": "src/cli/providers/line/menu.js",
        "position": null,
        "original_position": 59,
        "commit_id": "915bdb1622ea162a95e4bf437da70a3f9e870280",
        "original_commit_id": "3cd25632dba71621a1109f1d6d74dee529245e92",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`the rich menus are`?",
        "created_at": "2017-11-29T06:59:50Z",
        "updated_at": "2017-11-29T08:10:51Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705643",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/50",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705643"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705643"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/50"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705976",
        "pull_request_review_id": 79750958,
        "id": 153705976,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwNTk3Ng==",
        "diff_hunk": "@@ -0,0 +1,20 @@\n+import sh from '..';\n+\n+jest.mock('../webhook');\n+jest.mock('../help');\n+\n+describe('LINE cli', () => {",
        "path": "src/cli/providers/telegram/__tests__/index.spec.js",
        "position": null,
        "original_position": 6,
        "commit_id": "915bdb1622ea162a95e4bf437da70a3f9e870280",
        "original_commit_id": "3cd25632dba71621a1109f1d6d74dee529245e92",
        "user": {
            "login": "kpman",
            "id": 2382594,
            "node_id": "MDQ6VXNlcjIzODI1OTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2382594?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kpman",
            "html_url": "https://github.com/kpman",
            "followers_url": "https://api.github.com/users/kpman/followers",
            "following_url": "https://api.github.com/users/kpman/following{/other_user}",
            "gists_url": "https://api.github.com/users/kpman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kpman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kpman/subscriptions",
            "organizations_url": "https://api.github.com/users/kpman/orgs",
            "repos_url": "https://api.github.com/users/kpman/repos",
            "events_url": "https://api.github.com/users/kpman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kpman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "telegram",
        "created_at": "2017-11-29T07:02:11Z",
        "updated_at": "2017-11-29T08:10:51Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705976",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/50",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705976"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705976"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/50"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705997",
        "pull_request_review_id": 79750979,
        "id": 153705997,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzcwNTk5Nw==",
        "diff_hunk": "@@ -0,0 +1,260 @@\n+/* eslint-disable consistent-return */\n+import { LineClient } from 'messaging-api-line';\n+import { differenceWith, isEqual, omit, findIndex } from 'lodash';\n+import inquirer from 'inquirer';\n+import invariant from 'invariant';\n+import pMap from 'p-map';\n+import chalk from 'chalk';\n+\n+import getConfig from '../../shared/getConfig';\n+import { print, error, bold, log } from '../../shared/log';\n+\n+const generateDeleteQuestions = richMenus => [\n+  {\n+    name: 'deletedRichMenuNames',\n+    message: 'Which rich menus do you want to delete ?',\n+    type: 'checkbox',\n+    choices: richMenus.map(richMenu => richMenu.name),\n+  },\n+];\n+\n+export const help = () => {\n+  console.log(`\n+    bottender line menu <action> [option]\n+\n+    ${chalk.dim('Actions:')}\n+\n+      get           Get the LINE rich menu\n+      set           Set the LINE rich menu by diff\n+      del, delete   Delete all the LINE rich menu\n+      help          Show this help\n+\n+    ${chalk.dim('Options:')}\n+\n+      --force       Force update the LINE rich menu by config\n+\n+    ${chalk.dim('Examples:')}\n+\n+    ${chalk.dim('-')} Set the LINE rich menu\n+\n+      ${chalk.cyan('$ bottender line menu set')}\n+\n+    ${chalk.dim('-')} Force update the LINE rich menu\n+\n+      ${chalk.cyan('$ bottender line menu set --force')}\n+  `);\n+};\n+\n+export async function getLineMenu() {\n+  try {\n+    const config = getConfig('bottender.config.js', 'line');\n+\n+    invariant(config.accessToken, 'accessToken is not found in config file.');\n+\n+    const client = LineClient.connect(config.accessToken);\n+\n+    const richMenus = await client.getRichMenuList();\n+\n+    if (richMenus) {\n+      print('The rich menu is:');\n+\n+      print(`\\n${JSON.stringify(richMenus, null, 2)}`);\n+    } else {\n+      error(`Failed to find ${bold('LINE rich menu')}.`);\n+    }\n+  } catch (err) {\n+    error(`Failed to get ${bold('LINE rich menu')}.`);\n+    if (err.response) {\n+      error(`status: ${bold(err.response.status)}`);\n+      if (err.response.data) {\n+        error(`data: ${bold(JSON.stringify(err.response.data, null, 2))}`);\n+      }\n+    } else {\n+      error(err.message);\n+    }\n+    return process.exit(1);\n+  }\n+}\n+\n+export async function setLineMenus(ctx) {\n+  const { force } = ctx.argv;\n+  try {\n+    const { accessToken, richMenus: _richMenus } = getConfig(",
        "path": "src/cli/providers/line/menu.js",
        "position": null,
        "original_position": 82,
        "commit_id": "915bdb1622ea162a95e4bf437da70a3f9e870280",
        "original_commit_id": "3cd25632dba71621a1109f1d6d74dee529245e92",
        "user": {
            "login": "tw0517tw",
            "id": 1003146,
            "node_id": "MDQ6VXNlcjEwMDMxNDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1003146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tw0517tw",
            "html_url": "https://github.com/tw0517tw",
            "followers_url": "https://api.github.com/users/tw0517tw/followers",
            "following_url": "https://api.github.com/users/tw0517tw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tw0517tw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tw0517tw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tw0517tw/subscriptions",
            "organizations_url": "https://api.github.com/users/tw0517tw/orgs",
            "repos_url": "https://api.github.com/users/tw0517tw/repos",
            "events_url": "https://api.github.com/users/tw0517tw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tw0517tw/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "how about name this richMenus as `localRichMenus` and the ones from LINE API `onlineRichMenus`",
        "created_at": "2017-11-29T07:02:21Z",
        "updated_at": "2017-11-29T08:10:51Z",
        "html_url": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705997",
        "pull_request_url": "https://api.github.com/repos/Yoctol/bottender/pulls/50",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/comments/153705997"
            },
            "html": {
                "href": "https://github.com/Yoctol/bottender/pull/50#discussion_r153705997"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Yoctol/bottender/pulls/50"
            }
        }
    }
]