[
    {
        "url": "https://api.github.com/repos/gqo/amarna/pulls/comments/257469708",
        "pull_request_review_id": 204528486,
        "id": 257469708,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzQ2OTcwOA==",
        "diff_hunk": "@@ -1,21 +1,63 @@\n package main\n \n import (\n+\t\"encoding/json\"\n+\t\"flag\"\n+\t\"fmt\"\n \t\"log\"\n+\t\"net\"\n+\t\"strconv\"\n \n \tnosql \"../../pkg/nosql\"\n )\n \n+//Packet will hold JSON information for later decoding\n+type Packet struct {\n+\tAction   string `json:\"action\"`\n+\tCompName string `json:\"compName\"`\n+}\n+\n+func handleRequest(c net.Conn) {\n+\tvar header Packet\n+\t// we create a decoder that reads directly from the socket\n+\tdecode := json.NewDecoder(c)\n+\n+\tdecodeErr := decode.Decode(&header)\n+\tif decodeErr != nil {\n+\t\tlog.Println(decodeErr)\n+\t}\n+\n+\tfmt.Printf(\"Action: %s, CompName: %s\\n\", header.Action, header.CompName)\n+\n+\tc.Close()\n+\n+}\n+\n func main() {\n+\tvar port = flag.Int(\"listen\", 8081, \"the port number\") //default port is 8081\n+\tl, listenErr := net.Listen(\"tcp\", \":\"+strconv.Itoa(*port))\n+\tif listenErr != nil {\n+\t\tlog.Panicln(listenErr)\n+\t}\n+\n+\tlog.Println(\"Opening client connections on port\", *port)\n+\n \tdsn := \"mongodb://admin:basketorangenumberbleacher@amarna-shard-00-00-gcgag.gcp.mongodb.net:27017,amarna-shard-00-01-gcgag.gcp.mongodb.net:27017,amarna-shard-00-02-gcgag.gcp.mongodb.net:27017/test?ssl=true&replicaSet=Amarna-shard-0&authSource=admin&retryWrites=true\"\n-\t_, err := nosql.NewDatastore(dsn)\n-\tif err != nil {\n-\t\tlog.Fatalln(\"Could not create datastore. Received err:\", err)\n+\t_, datastoreErr := nosql.NewDatastore(dsn)\n+\tif datastoreErr != nil {\n+\t\tlog.Fatalln(\"Could not create datastore. Received err:\", datastoreErr)\n \t}\n \tlog.Println(\"Connected to the datastore!\")\n \n \tlog.Println(\"Starting Amarna backend...\")\n+\n \tfor {\n+\t\tconn, connErr := l.Accept()\n+\t\tif connErr != nil {\n+\t\t\tlog.Panicln(connErr)",
        "path": "backend/cmd/backend/main.go",
        "position": null,
        "original_position": 60,
        "commit_id": "8f22165401951f360e692b500e1905bfad72760b",
        "original_commit_id": "c370d47207be0b7f61e59dedd7a397e3d9eb6fee",
        "user": {
            "login": "gqo",
            "id": 32684790,
            "node_id": "MDQ6VXNlcjMyNjg0Nzkw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/32684790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gqo",
            "html_url": "https://github.com/gqo",
            "followers_url": "https://api.github.com/users/gqo/followers",
            "following_url": "https://api.github.com/users/gqo/following{/other_user}",
            "gists_url": "https://api.github.com/users/gqo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gqo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gqo/subscriptions",
            "organizations_url": "https://api.github.com/users/gqo/orgs",
            "repos_url": "https://api.github.com/users/gqo/repos",
            "events_url": "https://api.github.com/users/gqo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gqo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't use panic. This will kill our backend by calling panic() after it logs.",
        "created_at": "2019-02-16T18:00:09Z",
        "updated_at": "2019-02-16T18:10:15Z",
        "html_url": "https://github.com/gqo/amarna/pull/2#discussion_r257469708",
        "pull_request_url": "https://api.github.com/repos/gqo/amarna/pulls/2",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/comments/257469708"
            },
            "html": {
                "href": "https://github.com/gqo/amarna/pull/2#discussion_r257469708"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gqo/amarna/pulls/comments/257469760",
        "pull_request_review_id": 204528486,
        "id": 257469760,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzQ2OTc2MA==",
        "diff_hunk": "@@ -1,21 +1,63 @@\n package main\n \n import (\n+\t\"encoding/json\"\n+\t\"flag\"\n+\t\"fmt\"\n \t\"log\"\n+\t\"net\"\n+\t\"strconv\"\n \n \tnosql \"../../pkg/nosql\"\n )\n \n+//Packet will hold JSON information for later decoding\n+type Packet struct {\n+\tAction   string `json:\"action\"`\n+\tCompName string `json:\"compName\"`\n+}\n+\n+func handleRequest(c net.Conn) {\n+\tvar header Packet\n+\t// we create a decoder that reads directly from the socket\n+\tdecode := json.NewDecoder(c)\n+\n+\tdecodeErr := decode.Decode(&header)\n+\tif decodeErr != nil {\n+\t\tlog.Println(decodeErr)\n+\t}\n+\n+\tfmt.Printf(\"Action: %s, CompName: %s\\n\", header.Action, header.CompName)\n+\n+\tc.Close()",
        "path": "backend/cmd/backend/main.go",
        "position": null,
        "original_position": 32,
        "commit_id": "8f22165401951f360e692b500e1905bfad72760b",
        "original_commit_id": "c370d47207be0b7f61e59dedd7a397e3d9eb6fee",
        "user": {
            "login": "gqo",
            "id": 32684790,
            "node_id": "MDQ6VXNlcjMyNjg0Nzkw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/32684790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gqo",
            "html_url": "https://github.com/gqo",
            "followers_url": "https://api.github.com/users/gqo/followers",
            "following_url": "https://api.github.com/users/gqo/following{/other_user}",
            "gists_url": "https://api.github.com/users/gqo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gqo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gqo/subscriptions",
            "organizations_url": "https://api.github.com/users/gqo/orgs",
            "repos_url": "https://api.github.com/users/gqo/repos",
            "events_url": "https://api.github.com/users/gqo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gqo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Defer this at the start of the function instead and change the net.Conn parameter to take a pointer\r\n\r\n```go\r\nfunc handleRequest(c *net.Conn) {\r\n    defer c.Close()\r\n    ...\r\n}\r\n```",
        "created_at": "2019-02-16T18:01:45Z",
        "updated_at": "2019-02-16T18:10:15Z",
        "html_url": "https://github.com/gqo/amarna/pull/2#discussion_r257469760",
        "pull_request_url": "https://api.github.com/repos/gqo/amarna/pulls/2",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/comments/257469760"
            },
            "html": {
                "href": "https://github.com/gqo/amarna/pull/2#discussion_r257469760"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gqo/amarna/pulls/comments/257469787",
        "pull_request_review_id": 204528486,
        "id": 257469787,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzQ2OTc4Nw==",
        "diff_hunk": "@@ -0,0 +1,40 @@\n+package main\n+\n+import (\n+\t\"encoding/json\"\n+\t\"flag\"\n+\t\"fmt\"\n+\t\"log\"\n+\t\"net\"\n+\t\"strconv\"\n+)\n+\n+type Packet struct {\n+\tAction   string `json:\"action\"`\n+\tCompName string `json:\"compName\"`\n+}\n+\n+var port = flag.Int(\"listen\", 8080, \"the port number\")          //default port is 8080\n+var backendPort = flag.Int(\"backend\", 8081, \"backend port num\") //default backend port is 8081\n+\n+func main() {\n+\tc, e := net.Dial(\"tcp\", \":\"+strconv.Itoa(*backendPort))\n+\tif e != nil {\n+\t\tfmt.Println(\"There was a connection error\")\n+\t\tlog.Panicln(e)\n+\t}\n+\n+\tencode := json.NewEncoder(c)\n+\n+\tinputJSON := Packet{\n+\t\tAction:   \"GET\",\n+\t\tCompName: \"TEST\",\n+\t}\n+\n+\tjsonEncodeErr := encode.Encode(inputJSON)\n+\n+\tif jsonEncodeErr != nil {\n+\t\tfmt.Printf(\"Ertror is: %v\", jsonEncodeErr)\n+\t}\n+\tc.Close()",
        "path": "backend/cmd/testfrontend/main.go",
        "position": null,
        "original_position": 39,
        "commit_id": "8f22165401951f360e692b500e1905bfad72760b",
        "original_commit_id": "c370d47207be0b7f61e59dedd7a397e3d9eb6fee",
        "user": {
            "login": "gqo",
            "id": 32684790,
            "node_id": "MDQ6VXNlcjMyNjg0Nzkw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/32684790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gqo",
            "html_url": "https://github.com/gqo",
            "followers_url": "https://api.github.com/users/gqo/followers",
            "following_url": "https://api.github.com/users/gqo/following{/other_user}",
            "gists_url": "https://api.github.com/users/gqo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gqo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gqo/subscriptions",
            "organizations_url": "https://api.github.com/users/gqo/orgs",
            "repos_url": "https://api.github.com/users/gqo/repos",
            "events_url": "https://api.github.com/users/gqo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gqo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "defer this when you start the connection but after the error check so...\r\n\r\n```go\r\nfunc main() {\r\n    c, e := ...\r\n    if e != nil { ... }\r\n    defer c.Close()\r\n    ...\r\n}\r\n```",
        "created_at": "2019-02-16T18:02:41Z",
        "updated_at": "2019-02-16T18:10:15Z",
        "html_url": "https://github.com/gqo/amarna/pull/2#discussion_r257469787",
        "pull_request_url": "https://api.github.com/repos/gqo/amarna/pulls/2",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/comments/257469787"
            },
            "html": {
                "href": "https://github.com/gqo/amarna/pull/2#discussion_r257469787"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gqo/amarna/pulls/comments/257469804",
        "pull_request_review_id": 204528486,
        "id": 257469804,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzQ2OTgwNA==",
        "diff_hunk": "@@ -0,0 +1,4 @@\n+type Packet struct {",
        "path": "backend/cmd/testfrontend/tempCodeRunnerFile.go",
        "position": null,
        "original_position": 1,
        "commit_id": "8f22165401951f360e692b500e1905bfad72760b",
        "original_commit_id": "c370d47207be0b7f61e59dedd7a397e3d9eb6fee",
        "user": {
            "login": "gqo",
            "id": 32684790,
            "node_id": "MDQ6VXNlcjMyNjg0Nzkw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/32684790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gqo",
            "html_url": "https://github.com/gqo",
            "followers_url": "https://api.github.com/users/gqo/followers",
            "following_url": "https://api.github.com/users/gqo/following{/other_user}",
            "gists_url": "https://api.github.com/users/gqo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gqo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gqo/subscriptions",
            "organizations_url": "https://api.github.com/users/gqo/orgs",
            "repos_url": "https://api.github.com/users/gqo/repos",
            "events_url": "https://api.github.com/users/gqo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gqo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This file seems irrelevant. Delete it.",
        "created_at": "2019-02-16T18:03:12Z",
        "updated_at": "2019-02-16T18:10:15Z",
        "html_url": "https://github.com/gqo/amarna/pull/2#discussion_r257469804",
        "pull_request_url": "https://api.github.com/repos/gqo/amarna/pulls/2",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/comments/257469804"
            },
            "html": {
                "href": "https://github.com/gqo/amarna/pull/2#discussion_r257469804"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gqo/amarna/pulls/comments/257477989",
        "pull_request_review_id": 204535788,
        "id": 257477989,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzQ3Nzk4OQ==",
        "diff_hunk": "@@ -0,0 +1,162 @@\n+drop database tables;\n+create database tables;\n+use tables;\n+\n+CREATE TABLE User\n+(\n+    username varchar(64),\n+    f_name varchar(64),\n+    l_name",
        "path": "database/data/tables.sql",
        "position": null,
        "original_position": 9,
        "commit_id": "8e85033b73ad5f9d314983a5f071db17a66c6b76",
        "original_commit_id": "528a3d74c3043985a656876d768918317e4b27b7",
        "user": {
            "login": "gqo",
            "id": 32684790,
            "node_id": "MDQ6VXNlcjMyNjg0Nzkw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/32684790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gqo",
            "html_url": "https://github.com/gqo",
            "followers_url": "https://api.github.com/users/gqo/followers",
            "following_url": "https://api.github.com/users/gqo/following{/other_user}",
            "gists_url": "https://api.github.com/users/gqo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gqo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gqo/subscriptions",
            "organizations_url": "https://api.github.com/users/gqo/orgs",
            "repos_url": "https://api.github.com/users/gqo/repos",
            "events_url": "https://api.github.com/users/gqo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gqo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "needs `varchar(64)`",
        "created_at": "2019-02-16T21:35:14Z",
        "updated_at": "2019-02-16T21:48:21Z",
        "html_url": "https://github.com/gqo/amarna/pull/3#discussion_r257477989",
        "pull_request_url": "https://api.github.com/repos/gqo/amarna/pulls/3",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/comments/257477989"
            },
            "html": {
                "href": "https://github.com/gqo/amarna/pull/3#discussion_r257477989"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/3"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gqo/amarna/pulls/comments/257478050",
        "pull_request_review_id": 204535788,
        "id": 257478050,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzQ3ODA1MA==",
        "diff_hunk": "@@ -0,0 +1,162 @@\n+drop database tables;\n+create database tables;\n+use tables;\n+\n+CREATE TABLE User\n+(\n+    username varchar(64),\n+    f_name varchar(64),\n+    l_name\n+    PRIMARY KEY (username)\n+);\n+\n+CREATE Table Pairing \n+(\n+    leftUser varchar(64),\n+    rightUser varchar(64),\n+    leftUserLang varchar(32),\n+    rightUserLang varchar(32),\n+    PRIMARY KEY (leftUser, rightUser),\n+    FOREIGN KEY (leftUser) REFERENCES User(username) on delete cascade,\n+    FOREIGN KEY (rightUser) REFERENCES User(username) on delete cascade,\n+    FOREIGN KEY (leftUserLang) REFERENCES Language(lang_name),\n+    FOREIGN KEY (rightUserLang) REFERENCES Language(lang_name)\n+);\n+\n+CREATE TABLE Language\n+(\n+    lang_name varchar(32),\n+    PRIMARY KEY(lang_name)\n+);\n+\n+CREATE TABLE KnownLang\n+(\n+    username varchar(64),\n+    lang_name varchar(32),\n+    PRIMARY KEY (username, lang_name),\n+    FOREIGN KEY (username) REFERENCES User(username) on delete cascade,\n+    FOREIGN KEY (lang_name) REFERENCES Language(lang_name)\n+);\n+\n+CREATE TABLE LearnLang\n+(\n+    username varchar(64),\n+    lang_name varchar(32),\n+    PRIMARY KEY (username, lang_name),\n+    FOREIGN KEY (username) REFERENCES User(username) on delete cascade,\n+    FOREIGN KEY (lang_name) REFERENCES Language(lang_name)\n+);\n+\n+CREATE TABLE Topic\n+(\n+    title varchar(128),\n+    lang_name varchar(32),\n+    length int,\n+    PRIMARY KEY (title, lang_name),\n+    FOREIGN KEY (lang_name) REFERENCES Language(lang_name)\n+);\n+\n+CREATE TABLE Section\n+(\n+    topic_title varchar(128),\n+    topic_lang varchar(32),\n+    week int,\n+    description varchar(512),\n+    PRIMARY KEY (topic_title, topic_lang, week),\n+    FOREIGN KEY (topic_title) REFERENCES Topic(title) on delete cascade,\n+    FOREIGN KEY (topic_lang) REFERENCES Language(lang_name) on delete cascade\n+)\n+\n+CREATE TABLE Letter\n+(\n+    leftUser varchar(64),\n+    rightUser varchar(64),\n+    date timestamp,\n+    topic_title varchar(128),\n+    topic_lang varchar(32),\n+    week int,\n+    body varchar(1024),\n+    PRIMARY KEY (leftUser, rightUser, topic_title, topic_lang, week),\n+    FOREIGN KEY(leftUser) REFERENCES User(username),\n+    FOREIGN KEY (rightUser) REFERENCES User(username),\n+    FOREIGN KEY (topic_title) REFERENCES Topic(title),\n+    FOREIGN KEY (topic_lang) REFERENCES Language(lang_name),\n+    FOREIGN KEY (week) REFERENCES Section(week)\n+);\n+\n+\n+SELECT \"------------------------- Adding Data -------------------------\" as \"\";\n+-- Insert dummy data\n+\n+INSERT INTO User\n+    (username, f_name, l_name)\n+VALUES\n+    (\"amvasquez\", \"Andrea\", \"Vasquez\"),\n+    (\"gqo\", \"Graeme\", \"Ferguson\"),\n+    (\"rtr\", \"Reece\", \"Rodriguez\"),\n+    (\"justin39\", \"Justin\", \"Wang\"),\n+    (\"andrew29\", \"Andrew\", \"Chen\");\n+\n+INSERT INTO Pairing\n+    (leftUser, rightUser, leftUserLang, rightUserLang)\n+VALUES\n+    (\"amvasquez\", \"rtr\", \"Chinese\", \"Spanish\"),\n+    (\"rtr\", \"amvasquez\", \"Spanish\", \"Chinese\"),\n+    (\"gqo\", \"andrew29\", \"Chinese\", \"English\"),\n+    (\"andrew29\", \"gqo\", \"English\", \"Chinese\"),\n+    (\"justin39\", \"rtr\", \"Chinese\", \"English\"),\n+    (\"rtr\", \"justin39\", \"English\", \"Chinese\");\n+\n+INSERT INTO Language",
        "path": "database/data/tables.sql",
        "position": 111,
        "original_position": 110,
        "commit_id": "8e85033b73ad5f9d314983a5f071db17a66c6b76",
        "original_commit_id": "528a3d74c3043985a656876d768918317e4b27b7",
        "user": {
            "login": "gqo",
            "id": 32684790,
            "node_id": "MDQ6VXNlcjMyNjg0Nzkw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/32684790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gqo",
            "html_url": "https://github.com/gqo",
            "followers_url": "https://api.github.com/users/gqo/followers",
            "following_url": "https://api.github.com/users/gqo/following{/other_user}",
            "gists_url": "https://api.github.com/users/gqo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gqo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gqo/subscriptions",
            "organizations_url": "https://api.github.com/users/gqo/orgs",
            "repos_url": "https://api.github.com/users/gqo/repos",
            "events_url": "https://api.github.com/users/gqo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gqo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You have to insert the Languages before the Pairings because of foreign keys",
        "created_at": "2019-02-16T21:37:35Z",
        "updated_at": "2019-02-16T21:48:21Z",
        "html_url": "https://github.com/gqo/amarna/pull/3#discussion_r257478050",
        "pull_request_url": "https://api.github.com/repos/gqo/amarna/pulls/3",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/comments/257478050"
            },
            "html": {
                "href": "https://github.com/gqo/amarna/pull/3#discussion_r257478050"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/3"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gqo/amarna/pulls/comments/257484913",
        "pull_request_review_id": 204542485,
        "id": 257484913,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzQ4NDkxMw==",
        "diff_hunk": "@@ -0,0 +1,56 @@\n+package JAYSONstructures\n+\n+import (\n+\tentity \"../entities\"\n+)\n+\n+//both 'JSON' and 'struct' are keywords so I had to get creative\n+\n+//ValUser defines struct for JSON packages recieved from frontend\n+type ValUser struct {\n+\tusername string\n+}\n+\n+//UpdateKnownLangs defines struct for JSON packages recieved from frontend\n+type UpdateKnownLangs struct {\n+\tusername   string\n+\tknownLangs []string\n+}\n+\n+//UpdateLearnLangs defines struct for JSON packages recieved from frontend\n+type UpdateLearnLangs struct {\n+\tusername   string\n+\tlearnLangs []string\n+}\n+\n+//InsertPairing defines struct for JSON packages recieved from frontend\n+type InsertPairing struct {\n+\tleftUsername  string\n+\tleftUserLang  string\n+\trightUsername string\n+\trightUserLang string\n+}\n+\n+//GetPairings defines struct for JSON packages recieved from frontend\n+type GetPairings struct {\n+\tusername string\n+}\n+\n+//GetMatches defines struct for JSON packages recieved from frontend\n+type GetMatches struct {\n+\tuser entity.User\n+}\n+\n+//GetSection defines struct for JSON packages recieved from frontend\n+type GetSection struct {\n+\ttopicTitle string\n+\ttopicLang  string\n+}",
        "path": "backend/pkg/JSON-structs/JSON-stucts.go",
        "position": 48,
        "original_position": 48,
        "commit_id": "d8a7a18ebfdcc5fd00a545342dc44bb79a37105f",
        "original_commit_id": "fd5cea253ec3bc124a8ef6824989a7e13663cda0",
        "user": {
            "login": "amvasquez",
            "id": 38444183,
            "node_id": "MDQ6VXNlcjM4NDQ0MTgz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/38444183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amvasquez",
            "html_url": "https://github.com/amvasquez",
            "followers_url": "https://api.github.com/users/amvasquez/followers",
            "following_url": "https://api.github.com/users/amvasquez/following{/other_user}",
            "gists_url": "https://api.github.com/users/amvasquez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amvasquez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amvasquez/subscriptions",
            "organizations_url": "https://api.github.com/users/amvasquez/orgs",
            "repos_url": "https://api.github.com/users/amvasquez/repos",
            "events_url": "https://api.github.com/users/amvasquez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amvasquez/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "missing week ",
        "created_at": "2019-02-17T02:12:37Z",
        "updated_at": "2019-02-17T04:18:08Z",
        "html_url": "https://github.com/gqo/amarna/pull/7#discussion_r257484913",
        "pull_request_url": "https://api.github.com/repos/gqo/amarna/pulls/7",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/comments/257484913"
            },
            "html": {
                "href": "https://github.com/gqo/amarna/pull/7#discussion_r257484913"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gqo/amarna/pulls/comments/257484937",
        "pull_request_review_id": 204542485,
        "id": 257484937,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzQ4NDkzNw==",
        "diff_hunk": "@@ -0,0 +1,56 @@\n+package JAYSONstructures\n+\n+import (\n+\tentity \"../entities\"\n+)\n+\n+//both 'JSON' and 'struct' are keywords so I had to get creative\n+\n+//ValUser defines struct for JSON packages recieved from frontend\n+type ValUser struct {\n+\tusername string\n+}\n+\n+//UpdateKnownLangs defines struct for JSON packages recieved from frontend\n+type UpdateKnownLangs struct {\n+\tusername   string\n+\tknownLangs []string\n+}\n+\n+//UpdateLearnLangs defines struct for JSON packages recieved from frontend\n+type UpdateLearnLangs struct {\n+\tusername   string\n+\tlearnLangs []string\n+}\n+\n+//InsertPairing defines struct for JSON packages recieved from frontend\n+type InsertPairing struct {\n+\tleftUsername  string\n+\tleftUserLang  string\n+\trightUsername string\n+\trightUserLang string\n+}\n+\n+//GetPairings defines struct for JSON packages recieved from frontend\n+type GetPairings struct {\n+\tusername string\n+}\n+\n+//GetMatches defines struct for JSON packages recieved from frontend\n+type GetMatches struct {\n+\tuser entity.User\n+}\n+\n+//GetSection defines struct for JSON packages recieved from frontend\n+type GetSection struct {\n+\ttopicTitle string\n+\ttopicLang  string\n+}\n+\n+//GetNextUncompletedSection defines struct for JSON packages recieved from frontend\n+type GetNextUncompletedSection struct {\n+\tleftUsername  string\n+\trightUsername string\n+\ttopicTitle    string\n+\ttopicLang     string",
        "path": "backend/pkg/JSON-structs/JSON-stucts.go",
        "position": null,
        "original_position": 55,
        "commit_id": "d8a7a18ebfdcc5fd00a545342dc44bb79a37105f",
        "original_commit_id": "fd5cea253ec3bc124a8ef6824989a7e13663cda0",
        "user": {
            "login": "amvasquez",
            "id": 38444183,
            "node_id": "MDQ6VXNlcjM4NDQ0MTgz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/38444183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amvasquez",
            "html_url": "https://github.com/amvasquez",
            "followers_url": "https://api.github.com/users/amvasquez/followers",
            "following_url": "https://api.github.com/users/amvasquez/following{/other_user}",
            "gists_url": "https://api.github.com/users/amvasquez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amvasquez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amvasquez/subscriptions",
            "organizations_url": "https://api.github.com/users/amvasquez/orgs",
            "repos_url": "https://api.github.com/users/amvasquez/repos",
            "events_url": "https://api.github.com/users/amvasquez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amvasquez/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "missing week again ",
        "created_at": "2019-02-17T02:14:03Z",
        "updated_at": "2019-02-17T04:18:08Z",
        "html_url": "https://github.com/gqo/amarna/pull/7#discussion_r257484937",
        "pull_request_url": "https://api.github.com/repos/gqo/amarna/pulls/7",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/comments/257484937"
            },
            "html": {
                "href": "https://github.com/gqo/amarna/pull/7#discussion_r257484937"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gqo/amarna/pulls/7"
            }
        }
    }
]