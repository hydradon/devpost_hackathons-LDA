[
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/60170259",
        "pull_request_review_id": null,
        "id": 60170259,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTcwMjU5",
        "diff_hunk": "@@ -45,24 +51,37 @@ def geocode(self, location_string):\n     def grid(self, slat, elat, latin, slng, elng, lngin):\n         self.gridsetting = [slat, elat, latin, slng, elng, lngin]\n \n-    def marker(self, lat, lng, color='#FF0000', c=None):\n+    def marker(self, lat, lng, color='#FF0000', c=None, title=None, defaultMarker=None, **kwargs):\n         if c:\n             color = c\n         color = self.color_dict.get(color, color)\n         color = self.html_color_codes.get(color, color)\n-        self.points.append((lat, lng, color[1:]))\n+        if title!=None:\n+            self.points.append((lat, lng, color[1:], title))\n+        else:\n+            self.points.append((lat, lng, color[1:]))\n \n-    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, **kwargs):\n+    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, titles=None, defaultMarker=None, **kwargs):\n         color = color or c\n         size = size or s or 40\n         kwargs[\"color\"] = color\n         kwargs[\"size\"] = size\n-        settings = self._process_kwargs(kwargs)\n-        for lat, lng in zip(lats, lngs):\n-            if marker:\n-                self.marker(lat, lng, settings['color'])\n-            else:\n-                self.circle(lat, lng, size, **settings)\n+        kwargs[\"defaultMarker\"] = defaultMarker",
        "path": "gmplot/gmplot.py",
        "position": 50,
        "original_position": 50,
        "commit_id": "b2127cae14bb3e051f9832e667891026187a7b23",
        "original_commit_id": "b2127cae14bb3e051f9832e667891026187a7b23",
        "user": {
            "login": "vgm64",
            "id": 1680851,
            "node_id": "MDQ6VXNlcjE2ODA4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1680851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vgm64",
            "html_url": "https://github.com/vgm64",
            "followers_url": "https://api.github.com/users/vgm64/followers",
            "following_url": "https://api.github.com/users/vgm64/following{/other_user}",
            "gists_url": "https://api.github.com/users/vgm64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vgm64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vgm64/subscriptions",
            "organizations_url": "https://api.github.com/users/vgm64/orgs",
            "repos_url": "https://api.github.com/users/vgm64/repos",
            "events_url": "https://api.github.com/users/vgm64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vgm64/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It would be great to move any mention of this defaultMarker into _process_kwargs since that is where the default is really stored. From `kwargs.get(\"defaultMarker\", None)`, the default is really `None`.\n",
        "created_at": "2016-04-19T03:56:41Z",
        "updated_at": "2016-04-19T03:56:41Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/11#discussion_r60170259",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/11",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/60170259"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/11#discussion_r60170259"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/60191879",
        "pull_request_review_id": null,
        "id": 60191879,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTkxODc5",
        "diff_hunk": "@@ -45,24 +51,37 @@ def geocode(self, location_string):\n     def grid(self, slat, elat, latin, slng, elng, lngin):\n         self.gridsetting = [slat, elat, latin, slng, elng, lngin]\n \n-    def marker(self, lat, lng, color='#FF0000', c=None):\n+    def marker(self, lat, lng, color='#FF0000', c=None, title=None, defaultMarker=None, **kwargs):\n         if c:\n             color = c\n         color = self.color_dict.get(color, color)\n         color = self.html_color_codes.get(color, color)\n-        self.points.append((lat, lng, color[1:]))\n+        if title!=None:\n+            self.points.append((lat, lng, color[1:], title))\n+        else:\n+            self.points.append((lat, lng, color[1:]))\n \n-    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, **kwargs):\n+    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, titles=None, defaultMarker=None, **kwargs):\n         color = color or c\n         size = size or s or 40\n         kwargs[\"color\"] = color\n         kwargs[\"size\"] = size\n-        settings = self._process_kwargs(kwargs)\n-        for lat, lng in zip(lats, lngs):\n-            if marker:\n-                self.marker(lat, lng, settings['color'])\n-            else:\n-                self.circle(lat, lng, size, **settings)\n+        kwargs[\"defaultMarker\"] = defaultMarker",
        "path": "gmplot/gmplot.py",
        "position": 50,
        "original_position": 50,
        "commit_id": "b2127cae14bb3e051f9832e667891026187a7b23",
        "original_commit_id": "b2127cae14bb3e051f9832e667891026187a7b23",
        "user": {
            "login": "nateGeorge",
            "id": 10804060,
            "node_id": "MDQ6VXNlcjEwODA0MDYw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10804060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nateGeorge",
            "html_url": "https://github.com/nateGeorge",
            "followers_url": "https://api.github.com/users/nateGeorge/followers",
            "following_url": "https://api.github.com/users/nateGeorge/following{/other_user}",
            "gists_url": "https://api.github.com/users/nateGeorge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nateGeorge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nateGeorge/subscriptions",
            "organizations_url": "https://api.github.com/users/nateGeorge/orgs",
            "repos_url": "https://api.github.com/users/nateGeorge/repos",
            "events_url": "https://api.github.com/users/nateGeorge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nateGeorge/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right, I was just adding some more features as a work in progress, also want to add the ability to do info boxes.  Hopefully'll get to it soon.\n",
        "created_at": "2016-04-19T08:38:19Z",
        "updated_at": "2016-04-19T08:38:19Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/11#discussion_r60191879",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/11",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/60191879"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/11#discussion_r60191879"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/77241566",
        "pull_request_review_id": null,
        "id": 77241566,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3MjQxNTY2",
        "diff_hunk": "@@ -269,12 +269,16 @@ def write_shapes(self, f):\n             self.write_polygon(f, shape, settings)\n \n     # TODO: Add support for mapTypeId: google.maps.MapTypeId.SATELLITE\n-    def write_map(self,  f):\n+    def write_map(self,  f, map_styles=None):",
        "path": "gmplot/gmplot.py",
        "position": 75,
        "original_position": 23,
        "commit_id": "c6fcb65cb44f0fa339167a3be5d2c108aa8399c1",
        "original_commit_id": "c6fcb65cb44f0fa339167a3be5d2c108aa8399c1",
        "user": {
            "login": "vgm64",
            "id": 1680851,
            "node_id": "MDQ6VXNlcjE2ODA4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1680851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vgm64",
            "html_url": "https://github.com/vgm64",
            "followers_url": "https://api.github.com/users/vgm64/followers",
            "following_url": "https://api.github.com/users/vgm64/following{/other_user}",
            "gists_url": "https://api.github.com/users/vgm64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vgm64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vgm64/subscriptions",
            "organizations_url": "https://api.github.com/users/vgm64/orgs",
            "repos_url": "https://api.github.com/users/vgm64/repos",
            "events_url": "https://api.github.com/users/vgm64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vgm64/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Instead of map_styles=None, how about map_styles=[]?\n",
        "created_at": "2016-09-01T19:51:09Z",
        "updated_at": "2016-09-01T19:51:09Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/22#discussion_r77241566",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/22",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/77241566"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/22#discussion_r77241566"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/22"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/77245204",
        "pull_request_review_id": null,
        "id": 77245204,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3MjQ1MjA0",
        "diff_hunk": "@@ -269,12 +269,16 @@ def write_shapes(self, f):\n             self.write_polygon(f, shape, settings)\n \n     # TODO: Add support for mapTypeId: google.maps.MapTypeId.SATELLITE\n-    def write_map(self,  f):\n+    def write_map(self,  f, map_styles=None):",
        "path": "gmplot/gmplot.py",
        "position": 75,
        "original_position": 23,
        "commit_id": "c6fcb65cb44f0fa339167a3be5d2c108aa8399c1",
        "original_commit_id": "c6fcb65cb44f0fa339167a3be5d2c108aa8399c1",
        "user": {
            "login": "nziehn",
            "id": 461607,
            "node_id": "MDQ6VXNlcjQ2MTYwNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/461607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nziehn",
            "html_url": "https://github.com/nziehn",
            "followers_url": "https://api.github.com/users/nziehn/followers",
            "following_url": "https://api.github.com/users/nziehn/following{/other_user}",
            "gists_url": "https://api.github.com/users/nziehn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nziehn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nziehn/subscriptions",
            "organizations_url": "https://api.github.com/users/nziehn/orgs",
            "repos_url": "https://api.github.com/users/nziehn/repos",
            "events_url": "https://api.github.com/users/nziehn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nziehn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should avoid mutable objects in default function parameters:\nhttp://docs.python-guide.org/en/latest/writing/gotchas/\n",
        "created_at": "2016-09-01T20:15:17Z",
        "updated_at": "2016-09-01T20:15:17Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/22#discussion_r77245204",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/22",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/77245204"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/22#discussion_r77245204"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/22"
            }
        },
        "in_reply_to_id": 77241566
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/59988068",
        "pull_request_review_id": null,
        "id": 59988068,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg4MDY4",
        "diff_hunk": "@@ -25,7 +26,10 @@ def __init__(self, center_lat, center_lng, zoom):\n         self.heatmap_points = []\n         self.radpoints = []\n         self.gridsetting = None\n-        self.coloricon = os.path.join(os.path.dirname(__file__), 'markers/%s.png')\n+        if platform.system() == 'Windows':\n+            self.coloricon = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'markers\\\\%s.png')",
        "path": "gmplot/gmplot.py",
        "position": null,
        "original_position": 14,
        "commit_id": "b2127cae14bb3e051f9832e667891026187a7b23",
        "original_commit_id": "d12f3c5a48ae6e641ec195fcd27452709cac2ba2",
        "user": {
            "login": "vgm64",
            "id": 1680851,
            "node_id": "MDQ6VXNlcjE2ODA4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1680851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vgm64",
            "html_url": "https://github.com/vgm64",
            "followers_url": "https://api.github.com/users/vgm64/followers",
            "following_url": "https://api.github.com/users/vgm64/following{/other_user}",
            "gists_url": "https://api.github.com/users/vgm64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vgm64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vgm64/subscriptions",
            "organizations_url": "https://api.github.com/users/vgm64/orgs",
            "repos_url": "https://api.github.com/users/vgm64/repos",
            "events_url": "https://api.github.com/users/vgm64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vgm64/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is the issue the abspath, or the joiner betweeen \"markers\" and the marker filename? \n\nIf it's the latter, can we can split the \"markers\" directory and the stub for the filename into separate arguments of os.path.join and let the platform dependence be absorbed there?\n\nSomething like\n`coloricon_filename = os.path.join('markers', '%s.png')`\n`coloricon = os.path.join(os.path.dirname(os.path.abspath(__file__)), coloricon_filename)`\n",
        "created_at": "2016-04-17T16:47:40Z",
        "updated_at": "2018-03-04T06:48:02Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/11#discussion_r59988068",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/11",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/59988068"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/11#discussion_r59988068"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/59988146",
        "pull_request_review_id": null,
        "id": 59988146,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg4MTQ2",
        "diff_hunk": "@@ -51,24 +51,34 @@ def geocode(self, location_string):\n     def grid(self, slat, elat, latin, slng, elng, lngin):\n         self.gridsetting = [slat, elat, latin, slng, elng, lngin]\n \n-    def marker(self, lat, lng, color='#FF0000', c=None):\n+    def marker(self, lat, lng, color='#FF0000', c=None, title=None):\n         if c:\n             color = c\n         color = self.color_dict.get(color, color)\n         color = self.html_color_codes.get(color, color)\n-        self.points.append((lat, lng, color[1:]))\n+        if title!=None:\n+            self.points.append((lat, lng, color[1:], title))\n+        else:\n+            self.points.append((lat, lng, color[1:]))\n \n-    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, **kwargs):\n+    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, titles=None, **kwargs):\n         color = color or c\n         size = size or s or 40\n         kwargs[\"color\"] = color\n         kwargs[\"size\"] = size\n         settings = self._process_kwargs(kwargs)\n-        for lat, lng in zip(lats, lngs):\n-            if marker:\n-                self.marker(lat, lng, settings['color'])\n-            else:\n-                self.circle(lat, lng, size, **settings)\n+        if titles != None:",
        "path": "gmplot/gmplot.py",
        "position": null,
        "original_position": 28,
        "commit_id": "b2127cae14bb3e051f9832e667891026187a7b23",
        "original_commit_id": "7ad44394b2f4733bcce5d1e8ee0ac40ad4c48680",
        "user": {
            "login": "vgm64",
            "id": 1680851,
            "node_id": "MDQ6VXNlcjE2ODA4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1680851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vgm64",
            "html_url": "https://github.com/vgm64",
            "followers_url": "https://api.github.com/users/vgm64/followers",
            "following_url": "https://api.github.com/users/vgm64/following{/other_user}",
            "gists_url": "https://api.github.com/users/vgm64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vgm64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vgm64/subscriptions",
            "organizations_url": "https://api.github.com/users/vgm64/orgs",
            "repos_url": "https://api.github.com/users/vgm64/repos",
            "events_url": "https://api.github.com/users/vgm64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vgm64/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "_process_kwargs handles generating defaults for most fields. What do you think about moving handling whether or not titles are present to that method to keep things organized the same way?\n",
        "created_at": "2016-04-17T16:53:05Z",
        "updated_at": "2018-03-04T06:48:02Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/11#discussion_r59988146",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/11",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/59988146"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/11#discussion_r59988146"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/59991031",
        "pull_request_review_id": null,
        "id": 59991031,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTkxMDMx",
        "diff_hunk": "@@ -25,7 +26,10 @@ def __init__(self, center_lat, center_lng, zoom):\n         self.heatmap_points = []\n         self.radpoints = []\n         self.gridsetting = None\n-        self.coloricon = os.path.join(os.path.dirname(__file__), 'markers/%s.png')\n+        if platform.system() == 'Windows':\n+            self.coloricon = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'markers\\\\%s.png')",
        "path": "gmplot/gmplot.py",
        "position": null,
        "original_position": 14,
        "commit_id": "b2127cae14bb3e051f9832e667891026187a7b23",
        "original_commit_id": "d12f3c5a48ae6e641ec195fcd27452709cac2ba2",
        "user": {
            "login": "nateGeorge",
            "id": 10804060,
            "node_id": "MDQ6VXNlcjEwODA0MDYw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10804060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nateGeorge",
            "html_url": "https://github.com/nateGeorge",
            "followers_url": "https://api.github.com/users/nateGeorge/followers",
            "following_url": "https://api.github.com/users/nateGeorge/following{/other_user}",
            "gists_url": "https://api.github.com/users/nateGeorge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nateGeorge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nateGeorge/subscriptions",
            "organizations_url": "https://api.github.com/users/nateGeorge/orgs",
            "repos_url": "https://api.github.com/users/nateGeorge/repos",
            "events_url": "https://api.github.com/users/nateGeorge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nateGeorge/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The joiner was the issue; it seems to work without abspath.  However, the re.sub part is essential; I couldn't get it to work without that line in any major browser on windows.\n",
        "created_at": "2016-04-17T19:43:46Z",
        "updated_at": "2018-03-04T06:48:02Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/11#discussion_r59991031",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/11",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/59991031"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/11#discussion_r59991031"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/59991076",
        "pull_request_review_id": null,
        "id": 59991076,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTkxMDc2",
        "diff_hunk": "@@ -51,24 +51,34 @@ def geocode(self, location_string):\n     def grid(self, slat, elat, latin, slng, elng, lngin):\n         self.gridsetting = [slat, elat, latin, slng, elng, lngin]\n \n-    def marker(self, lat, lng, color='#FF0000', c=None):\n+    def marker(self, lat, lng, color='#FF0000', c=None, title=None):\n         if c:\n             color = c\n         color = self.color_dict.get(color, color)\n         color = self.html_color_codes.get(color, color)\n-        self.points.append((lat, lng, color[1:]))\n+        if title!=None:\n+            self.points.append((lat, lng, color[1:], title))\n+        else:\n+            self.points.append((lat, lng, color[1:]))\n \n-    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, **kwargs):\n+    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, titles=None, **kwargs):\n         color = color or c\n         size = size or s or 40\n         kwargs[\"color\"] = color\n         kwargs[\"size\"] = size\n         settings = self._process_kwargs(kwargs)\n-        for lat, lng in zip(lats, lngs):\n-            if marker:\n-                self.marker(lat, lng, settings['color'])\n-            else:\n-                self.circle(lat, lng, size, **settings)\n+        if titles != None:",
        "path": "gmplot/gmplot.py",
        "position": null,
        "original_position": 28,
        "commit_id": "b2127cae14bb3e051f9832e667891026187a7b23",
        "original_commit_id": "7ad44394b2f4733bcce5d1e8ee0ac40ad4c48680",
        "user": {
            "login": "nateGeorge",
            "id": 10804060,
            "node_id": "MDQ6VXNlcjEwODA0MDYw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10804060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nateGeorge",
            "html_url": "https://github.com/nateGeorge",
            "followers_url": "https://api.github.com/users/nateGeorge/followers",
            "following_url": "https://api.github.com/users/nateGeorge/following{/other_user}",
            "gists_url": "https://api.github.com/users/nateGeorge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nateGeorge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nateGeorge/subscriptions",
            "organizations_url": "https://api.github.com/users/nateGeorge/orgs",
            "repos_url": "https://api.github.com/users/nateGeorge/repos",
            "events_url": "https://api.github.com/users/nateGeorge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nateGeorge/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sure, if we can pass an array through kwargs that's fine.\n",
        "created_at": "2016-04-17T19:45:57Z",
        "updated_at": "2018-03-04T06:48:02Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/11#discussion_r59991076",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/11",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/59991076"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/11#discussion_r59991076"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/59991168",
        "pull_request_review_id": null,
        "id": 59991168,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTkxMTY4",
        "diff_hunk": "@@ -51,24 +51,34 @@ def geocode(self, location_string):\n     def grid(self, slat, elat, latin, slng, elng, lngin):\n         self.gridsetting = [slat, elat, latin, slng, elng, lngin]\n \n-    def marker(self, lat, lng, color='#FF0000', c=None):\n+    def marker(self, lat, lng, color='#FF0000', c=None, title=None):\n         if c:\n             color = c\n         color = self.color_dict.get(color, color)\n         color = self.html_color_codes.get(color, color)\n-        self.points.append((lat, lng, color[1:]))\n+        if title!=None:\n+            self.points.append((lat, lng, color[1:], title))\n+        else:\n+            self.points.append((lat, lng, color[1:]))\n \n-    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, **kwargs):\n+    def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None, titles=None, **kwargs):\n         color = color or c\n         size = size or s or 40\n         kwargs[\"color\"] = color\n         kwargs[\"size\"] = size\n         settings = self._process_kwargs(kwargs)\n-        for lat, lng in zip(lats, lngs):\n-            if marker:\n-                self.marker(lat, lng, settings['color'])\n-            else:\n-                self.circle(lat, lng, size, **settings)\n+        if titles != None:",
        "path": "gmplot/gmplot.py",
        "position": null,
        "original_position": 28,
        "commit_id": "b2127cae14bb3e051f9832e667891026187a7b23",
        "original_commit_id": "7ad44394b2f4733bcce5d1e8ee0ac40ad4c48680",
        "user": {
            "login": "nateGeorge",
            "id": 10804060,
            "node_id": "MDQ6VXNlcjEwODA0MDYw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10804060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nateGeorge",
            "html_url": "https://github.com/nateGeorge",
            "followers_url": "https://api.github.com/users/nateGeorge/followers",
            "following_url": "https://api.github.com/users/nateGeorge/following{/other_user}",
            "gists_url": "https://api.github.com/users/nateGeorge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nateGeorge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nateGeorge/subscriptions",
            "organizations_url": "https://api.github.com/users/nateGeorge/orgs",
            "repos_url": "https://api.github.com/users/nateGeorge/repos",
            "events_url": "https://api.github.com/users/nateGeorge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nateGeorge/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, I took care of it actually.  Another thing I wanted to do is enable info boxes, but that's another wormhole.\n",
        "created_at": "2016-04-17T19:49:56Z",
        "updated_at": "2018-03-04T06:48:02Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/11#discussion_r59991168",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/11",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/59991168"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/11#discussion_r59991168"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/175387323",
        "pull_request_review_id": 104905675,
        "id": 175387323,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTM4NzMyMw==",
        "diff_hunk": "@@ -145,6 +147,7 @@ def _process_heatmap_kwargs(self, settings_dict):\n         settings_string = ''\n         settings_string += \"heatmap.set('threshold', %d);\\n\" % settings_dict['threshold']\n         settings_string += \"heatmap.set('radius', %d);\\n\" % settings_dict['radius']\n+        settings_string += \"heatmap.set('maxIntensity', %d);\\n\" % settings_dict['maxIntensity']",
        "path": "gmplot/gmplot.py",
        "position": 25,
        "original_position": 25,
        "commit_id": "cb2ddc6d6808f628158b5fb25f951f82752b69e0",
        "original_commit_id": "cb2ddc6d6808f628158b5fb25f951f82752b69e0",
        "user": {
            "login": "paololucchino",
            "id": 14344614,
            "node_id": "MDQ6VXNlcjE0MzQ0NjE0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/14344614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paololucchino",
            "html_url": "https://github.com/paololucchino",
            "followers_url": "https://api.github.com/users/paololucchino/followers",
            "following_url": "https://api.github.com/users/paololucchino/following{/other_user}",
            "gists_url": "https://api.github.com/users/paololucchino/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paololucchino/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paololucchino/subscriptions",
            "organizations_url": "https://api.github.com/users/paololucchino/orgs",
            "repos_url": "https://api.github.com/users/paololucchino/repos",
            "events_url": "https://api.github.com/users/paololucchino/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paololucchino/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hi @vgm64 @ecgill,\r\n\r\nI found this raises an error when the `maxIntensity` is omitted:\r\n`TypeError: %d format: a number is required, not NoneType`\r\n\r\nI think this could be fixed by prefixing this line with something like `if settings_dict['maxIntensity'] is not None:`\r\n\r\nCode to reproduce the error:\r\n\r\n```\r\nimport gmplot\r\nimport numpy as np\r\n\r\nlat_center = 37.766956\r\nlon_center = -122.438481\r\nlat = lat_center + np.random.rand(100,1)\r\nlon = lon_center + np.random.rand(100,1)\r\n\r\n# Place map\r\ngmap = gmplot.GoogleMapPlotter(lat_center, lon_center, 13)\r\n\r\n# Heapmap\r\ngmap.heatmap(lat, lon)\r\n\r\n# Draw\r\ngmap.draw(\"my_map.html\")\r\n```\r\n\r\n",
        "created_at": "2018-03-19T10:30:35Z",
        "updated_at": "2018-03-19T10:30:56Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/61#discussion_r175387323",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/61",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/175387323"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/61#discussion_r175387323"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/61"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/175654276",
        "pull_request_review_id": 105217194,
        "id": 175654276,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTY1NDI3Ng==",
        "diff_hunk": "@@ -145,6 +147,7 @@ def _process_heatmap_kwargs(self, settings_dict):\n         settings_string = ''\n         settings_string += \"heatmap.set('threshold', %d);\\n\" % settings_dict['threshold']\n         settings_string += \"heatmap.set('radius', %d);\\n\" % settings_dict['radius']\n+        settings_string += \"heatmap.set('maxIntensity', %d);\\n\" % settings_dict['maxIntensity']",
        "path": "gmplot/gmplot.py",
        "position": 25,
        "original_position": 25,
        "commit_id": "cb2ddc6d6808f628158b5fb25f951f82752b69e0",
        "original_commit_id": "cb2ddc6d6808f628158b5fb25f951f82752b69e0",
        "user": {
            "login": "vgm64",
            "id": 1680851,
            "node_id": "MDQ6VXNlcjE2ODA4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1680851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vgm64",
            "html_url": "https://github.com/vgm64",
            "followers_url": "https://api.github.com/users/vgm64/followers",
            "following_url": "https://api.github.com/users/vgm64/following{/other_user}",
            "gists_url": "https://api.github.com/users/vgm64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vgm64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vgm64/subscriptions",
            "organizations_url": "https://api.github.com/users/vgm64/orgs",
            "repos_url": "https://api.github.com/users/vgm64/repos",
            "events_url": "https://api.github.com/users/vgm64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vgm64/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're very right. #67 changes the default value of maxIntensity to 1 from None. Same basic fix but fewer lines of code.",
        "created_at": "2018-03-20T04:44:26Z",
        "updated_at": "2018-03-20T04:44:26Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/61#discussion_r175654276",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/61",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/175654276"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/61#discussion_r175654276"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/61"
            }
        },
        "in_reply_to_id": 175387323
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/175704234",
        "pull_request_review_id": 105275002,
        "id": 175704234,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTcwNDIzNA==",
        "diff_hunk": "@@ -145,6 +147,7 @@ def _process_heatmap_kwargs(self, settings_dict):\n         settings_string = ''\n         settings_string += \"heatmap.set('threshold', %d);\\n\" % settings_dict['threshold']\n         settings_string += \"heatmap.set('radius', %d);\\n\" % settings_dict['radius']\n+        settings_string += \"heatmap.set('maxIntensity', %d);\\n\" % settings_dict['maxIntensity']",
        "path": "gmplot/gmplot.py",
        "position": 25,
        "original_position": 25,
        "commit_id": "cb2ddc6d6808f628158b5fb25f951f82752b69e0",
        "original_commit_id": "cb2ddc6d6808f628158b5fb25f951f82752b69e0",
        "user": {
            "login": "paololucchino",
            "id": 14344614,
            "node_id": "MDQ6VXNlcjE0MzQ0NjE0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/14344614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paololucchino",
            "html_url": "https://github.com/paololucchino",
            "followers_url": "https://api.github.com/users/paololucchino/followers",
            "following_url": "https://api.github.com/users/paololucchino/following{/other_user}",
            "gists_url": "https://api.github.com/users/paololucchino/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paololucchino/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paololucchino/subscriptions",
            "organizations_url": "https://api.github.com/users/paololucchino/orgs",
            "repos_url": "https://api.github.com/users/paololucchino/repos",
            "events_url": "https://api.github.com/users/paololucchino/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paololucchino/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks @vgm64 for the prompt fix!",
        "created_at": "2018-03-20T09:45:45Z",
        "updated_at": "2018-03-20T09:45:45Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/61#discussion_r175704234",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/61",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/175704234"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/61#discussion_r175704234"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/61"
            }
        },
        "in_reply_to_id": 175387323
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/178484489",
        "pull_request_review_id": 108545695,
        "id": 178484489,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODQ4NDQ4OQ==",
        "diff_hunk": "@@ -165,6 +166,42 @@ def _process_heatmap_kwargs(self, settings_dict):\n \n         return settings_string\n \n+    def groundoverlay(self, url, bounds_dict):",
        "path": "gmplot/gmplot.py",
        "position": null,
        "original_position": 12,
        "commit_id": "8857df6aaabb16622e357de9b35456908c0c1a68",
        "original_commit_id": "310904d71f5114e41ff20dc9efb480353c591fed",
        "user": {
            "login": "vgm64",
            "id": 1680851,
            "node_id": "MDQ6VXNlcjE2ODA4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1680851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vgm64",
            "html_url": "https://github.com/vgm64",
            "followers_url": "https://api.github.com/users/vgm64/followers",
            "following_url": "https://api.github.com/users/vgm64/following{/other_user}",
            "gists_url": "https://api.github.com/users/vgm64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vgm64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vgm64/subscriptions",
            "organizations_url": "https://api.github.com/users/vgm64/orgs",
            "repos_url": "https://api.github.com/users/vgm64/repos",
            "events_url": "https://api.github.com/users/vgm64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vgm64/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since the google docs call the \"Ground Overlays\" can we switch to \"ground_overlay\" instead of \"groundoverlay\"?",
        "created_at": "2018-04-02T04:01:51Z",
        "updated_at": "2018-04-03T14:49:59Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/65#discussion_r178484489",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/65",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/178484489"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/65#discussion_r178484489"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/65"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/178485826",
        "pull_request_review_id": 108545695,
        "id": 178485826,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODQ4NTgyNg==",
        "diff_hunk": "@@ -165,6 +166,42 @@ def _process_heatmap_kwargs(self, settings_dict):\n \n         return settings_string\n \n+    def groundoverlay(self, url, bounds_dict):\n+\n+        '''\n+\n+        :param url: Url of image to overlay\n+        :param bounds_dict: dict of the form  {'north': , 'south': , 'west': , 'east': }\n+        setting the image container\n+        :return:\n+\n+        Example use:\n+        import gmplot\n+        gmap = gmplot.GoogleMapPlotter(37.766956, -122.438481, 13)\n+        bounds_dict = {'north':37.832285, 'south': 37.637336, 'west': -122.520364, 'east': -122.346922}\n+        gmap.groundoverlay('http://explore.museumca.org/creeks/images/TopoSFCreeks.jpg', bounds_dict)\n+        gmap.draw(\"my_map.html\")\n+\n+        Google Maps API documentation\n+        https://developers.google.com/maps/documentation/javascript/groundoverlays#introduction\n+\n+        '''\n+\n+\n+        bounds_string = self._process_groundoverlay_image_bounds(bounds_dict)\n+\n+        self.groundoverlays.append((url, bounds_string))\n+\n+    def _process_groundoverlay_image_bounds(self, bounds_dict):",
        "path": "gmplot/gmplot.py",
        "position": null,
        "original_position": 38,
        "commit_id": "8857df6aaabb16622e357de9b35456908c0c1a68",
        "original_commit_id": "310904d71f5114e41ff20dc9efb480353c591fed",
        "user": {
            "login": "vgm64",
            "id": 1680851,
            "node_id": "MDQ6VXNlcjE2ODA4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1680851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vgm64",
            "html_url": "https://github.com/vgm64",
            "followers_url": "https://api.github.com/users/vgm64/followers",
            "following_url": "https://api.github.com/users/vgm64/following{/other_user}",
            "gists_url": "https://api.github.com/users/vgm64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vgm64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vgm64/subscriptions",
            "organizations_url": "https://api.github.com/users/vgm64/orgs",
            "repos_url": "https://api.github.com/users/vgm64/repos",
            "events_url": "https://api.github.com/users/vgm64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vgm64/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I was going to say this should be called in `write_groundoverlay` rather than `groundoverlay` so that the javascript API doesn't leak into anything before the `draw` method, but I noticed I broke that with the same pattern in the heatmap method... doh.",
        "created_at": "2018-04-02T04:28:16Z",
        "updated_at": "2018-04-03T14:49:59Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/65#discussion_r178485826",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/65",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/178485826"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/65#discussion_r178485826"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/65"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/178485872",
        "pull_request_review_id": 108545695,
        "id": 178485872,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODQ4NTg3Mg==",
        "diff_hunk": "@@ -165,6 +166,42 @@ def _process_heatmap_kwargs(self, settings_dict):\n \n         return settings_string\n \n+    def groundoverlay(self, url, bounds_dict):\n+\n+        '''\n+\n+        :param url: Url of image to overlay\n+        :param bounds_dict: dict of the form  {'north': , 'south': , 'west': , 'east': }\n+        setting the image container\n+        :return:\n+\n+        Example use:\n+        import gmplot\n+        gmap = gmplot.GoogleMapPlotter(37.766956, -122.438481, 13)\n+        bounds_dict = {'north':37.832285, 'south': 37.637336, 'west': -122.520364, 'east': -122.346922}\n+        gmap.groundoverlay('http://explore.museumca.org/creeks/images/TopoSFCreeks.jpg', bounds_dict)\n+        gmap.draw(\"my_map.html\")\n+\n+        Google Maps API documentation\n+        https://developers.google.com/maps/documentation/javascript/groundoverlays#introduction\n+\n+        '''\n+",
        "path": "gmplot/gmplot.py",
        "position": null,
        "original_position": 32,
        "commit_id": "8857df6aaabb16622e357de9b35456908c0c1a68",
        "original_commit_id": "310904d71f5114e41ff20dc9efb480353c591fed",
        "user": {
            "login": "vgm64",
            "id": 1680851,
            "node_id": "MDQ6VXNlcjE2ODA4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1680851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vgm64",
            "html_url": "https://github.com/vgm64",
            "followers_url": "https://api.github.com/users/vgm64/followers",
            "following_url": "https://api.github.com/users/vgm64/following{/other_user}",
            "gists_url": "https://api.github.com/users/vgm64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vgm64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vgm64/subscriptions",
            "organizations_url": "https://api.github.com/users/vgm64/orgs",
            "repos_url": "https://api.github.com/users/vgm64/repos",
            "events_url": "https://api.github.com/users/vgm64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vgm64/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you remove some of the extra blank lines in this method and docstring? At least the double blank lines.",
        "created_at": "2018-04-02T04:29:25Z",
        "updated_at": "2018-04-03T14:49:59Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/65#discussion_r178485872",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/65",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/178485872"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/65#discussion_r178485872"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/65"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/182158768",
        "pull_request_review_id": 112909979,
        "id": 182158768,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE1ODc2OA==",
        "diff_hunk": "@@ -63,16 +75,23 @@ def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None\n             if marker:\n                 self.marker(lat, lng, settings['color'])\n             else:\n-                self.circle(lat, lng, size, **settings)\n+                self.add_symbol(Symbol(symbol, lat, lng, size), **settings)\n+\n+    def add_symbol(self, symbol, color=None, c=None, **kwargs):\n+        color = color or c\n+        kwargs.setdefault('face_alpha', 0.5)\n+        kwargs.setdefault('face_color', \"#000000\")\n+        kwargs.setdefault(\"color\", color)\n+        settings = self._process_kwargs(kwargs)\n+        self.symbols.append((symbol, settings))\n \n     def circle(self, lat, lng, radius, color=None, c=None, **kwargs):\n         color = color or c\n         kwargs.setdefault('face_alpha', 0.5)\n         kwargs.setdefault('face_color', \"#000000\")\n         kwargs.setdefault(\"color\", color)\n         settings = self._process_kwargs(kwargs)\n-        path = self.get_cycle(lat, lng, radius)",
        "path": "gmplot/gmplot.py",
        "position": 58,
        "original_position": 58,
        "commit_id": "e4366712dfc9d73178ac016ce7a0265324bf2515",
        "original_commit_id": "276b0793813836f39f55a5d125c0a6804e636895",
        "user": {
            "login": "vgm64",
            "id": 1680851,
            "node_id": "MDQ6VXNlcjE2ODA4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1680851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vgm64",
            "html_url": "https://github.com/vgm64",
            "followers_url": "https://api.github.com/users/vgm64/followers",
            "following_url": "https://api.github.com/users/vgm64/following{/other_user}",
            "gists_url": "https://api.github.com/users/vgm64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vgm64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vgm64/subscriptions",
            "organizations_url": "https://api.github.com/users/vgm64/orgs",
            "repos_url": "https://api.github.com/users/vgm64/repos",
            "events_url": "https://api.github.com/users/vgm64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vgm64/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you clean up the get_cycle function, too? Doesn't seem used elsewhere.",
        "created_at": "2018-04-17T17:12:26Z",
        "updated_at": "2018-04-19T05:55:54Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/60#discussion_r182158768",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/60",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/182158768"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/60#discussion_r182158768"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/60"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/182160691",
        "pull_request_review_id": 112909979,
        "id": 182160691,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE2MDY5MQ==",
        "diff_hunk": "@@ -63,16 +75,23 @@ def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None\n             if marker:\n                 self.marker(lat, lng, settings['color'])\n             else:\n-                self.circle(lat, lng, size, **settings)\n+                self.add_symbol(Symbol(symbol, lat, lng, size), **settings)\n+\n+    def add_symbol(self, symbol, color=None, c=None, **kwargs):",
        "path": "gmplot/gmplot.py",
        "position": null,
        "original_position": 44,
        "commit_id": "e4366712dfc9d73178ac016ce7a0265324bf2515",
        "original_commit_id": "276b0793813836f39f55a5d125c0a6804e636895",
        "user": {
            "login": "vgm64",
            "id": 1680851,
            "node_id": "MDQ6VXNlcjE2ODA4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1680851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vgm64",
            "html_url": "https://github.com/vgm64",
            "followers_url": "https://api.github.com/users/vgm64/followers",
            "following_url": "https://api.github.com/users/vgm64/following{/other_user}",
            "gists_url": "https://api.github.com/users/vgm64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vgm64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vgm64/subscriptions",
            "organizations_url": "https://api.github.com/users/vgm64/orgs",
            "repos_url": "https://api.github.com/users/vgm64/repos",
            "events_url": "https://api.github.com/users/vgm64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vgm64/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this intended to be a public method? If not I suggest prefixing with an underscore, much like `get_cycle` wasn't. ;)",
        "created_at": "2018-04-17T17:18:43Z",
        "updated_at": "2018-04-19T05:55:54Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/60#discussion_r182160691",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/60",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/182160691"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/60#discussion_r182160691"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/60"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/182639317",
        "pull_request_review_id": 113473591,
        "id": 182639317,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYzOTMxNw==",
        "diff_hunk": "@@ -63,16 +75,23 @@ def scatter(self, lats, lngs, color=None, size=None, marker=True, c=None, s=None\n             if marker:\n                 self.marker(lat, lng, settings['color'])\n             else:\n-                self.circle(lat, lng, size, **settings)\n+                self.add_symbol(Symbol(symbol, lat, lng, size), **settings)\n+\n+    def add_symbol(self, symbol, color=None, c=None, **kwargs):\n+        color = color or c\n+        kwargs.setdefault('face_alpha', 0.5)\n+        kwargs.setdefault('face_color', \"#000000\")\n+        kwargs.setdefault(\"color\", color)\n+        settings = self._process_kwargs(kwargs)\n+        self.symbols.append((symbol, settings))\n \n     def circle(self, lat, lng, radius, color=None, c=None, **kwargs):\n         color = color or c\n         kwargs.setdefault('face_alpha', 0.5)\n         kwargs.setdefault('face_color', \"#000000\")\n         kwargs.setdefault(\"color\", color)\n         settings = self._process_kwargs(kwargs)\n-        path = self.get_cycle(lat, lng, radius)",
        "path": "gmplot/gmplot.py",
        "position": 58,
        "original_position": 58,
        "commit_id": "e4366712dfc9d73178ac016ce7a0265324bf2515",
        "original_commit_id": "276b0793813836f39f55a5d125c0a6804e636895",
        "user": {
            "login": "otreidel",
            "id": 31638715,
            "node_id": "MDQ6VXNlcjMxNjM4NzE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/31638715?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/otreidel",
            "html_url": "https://github.com/otreidel",
            "followers_url": "https://api.github.com/users/otreidel/followers",
            "following_url": "https://api.github.com/users/otreidel/following{/other_user}",
            "gists_url": "https://api.github.com/users/otreidel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/otreidel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/otreidel/subscriptions",
            "organizations_url": "https://api.github.com/users/otreidel/orgs",
            "repos_url": "https://api.github.com/users/otreidel/repos",
            "events_url": "https://api.github.com/users/otreidel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/otreidel/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "good point",
        "created_at": "2018-04-19T05:52:30Z",
        "updated_at": "2018-04-19T05:55:54Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/60#discussion_r182639317",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/60",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/182639317"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/60#discussion_r182639317"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/60"
            }
        },
        "in_reply_to_id": 182158768
    },
    {
        "url": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/336752179",
        "pull_request_review_id": 304229507,
        "id": 336752179,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjc1MjE3OQ==",
        "diff_hunk": "@@ -9,7 +9,10 @@ make creating exploratory map views effortless. Here's a crash course:\n ::\n \n     from gmplot import gmplot\n-\n+    \n+    # Add Google API Key\n+    gmap.apikey = \"Enter_API_Key_Here\"\n+    \n     # Place map\n     gmap = gmplot.GoogleMapPlotter(37.766956, -122.438481, 13)",
        "path": "README.rst",
        "position": 10,
        "original_position": 10,
        "commit_id": "9a12fed3b61cfb91a57311a13d13a2b3f6621766",
        "original_commit_id": "9a12fed3b61cfb91a57311a13d13a2b3f6621766",
        "user": {
            "login": "frslm",
            "id": 8406475,
            "node_id": "MDQ6VXNlcjg0MDY0NzU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8406475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frslm",
            "html_url": "https://github.com/frslm",
            "followers_url": "https://api.github.com/users/frslm/followers",
            "following_url": "https://api.github.com/users/frslm/following{/other_user}",
            "gists_url": "https://api.github.com/users/frslm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frslm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frslm/subscriptions",
            "organizations_url": "https://api.github.com/users/frslm/orgs",
            "repos_url": "https://api.github.com/users/frslm/repos",
            "events_url": "https://api.github.com/users/frslm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frslm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`gmap.apikey` is accessed before `gmap` exists? Maybe the API key can be defined as a separate variable first, and then passed into `GoogleMapPlotter`?:\r\n\r\n```\r\n# Add Google API Key\r\napikey = \"Enter_API_Key_Here\"\r\n\r\n# Place map\r\ngmap = gmplot.GoogleMapPlotter(37.766956, -122.438481, 13, apikey)\r\n```",
        "created_at": "2019-10-19T20:08:42Z",
        "updated_at": "2019-10-19T20:08:42Z",
        "html_url": "https://github.com/vgm64/gmplot/pull/107#discussion_r336752179",
        "pull_request_url": "https://api.github.com/repos/vgm64/gmplot/pulls/107",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/comments/336752179"
            },
            "html": {
                "href": "https://github.com/vgm64/gmplot/pull/107#discussion_r336752179"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/vgm64/gmplot/pulls/107"
            }
        }
    }
]