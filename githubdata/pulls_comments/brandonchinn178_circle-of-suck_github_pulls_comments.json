[
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701396",
        "pull_request_review_id": 8305578,
        "id": 87701396,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxMzk2",
        "diff_hunk": "@@ -35,3 +36,57 @@ def get(cls, school_id):\n \n for school_id, school in SCHOOLS.items():\n     SCHOOLS[school_id] = School(school_id, school['name'], school['conference'])\n+\n+class Game(object):\n+    \"\"\"\n+    Stores information about a game's winner, loser, and their respective scores.\n+    \"\"\"\n+\n+    def __init__(self, first_school_id, second_school_id, season):\n+        data = self.get_game_data(first_school_id, second_school_id, season)\n+        home = data[\"home_team\"]\n+        away = data[\"away_team\"]\n+\n+        if home[\"points\"] > away[\"points\"]:\n+            winner = home[\"market\"]\n+            loser = away[\"market\"]\n+            winner_score = home[\"points\"]\n+            loser_score = away[\"points\"]\n+        else:\n+            winner = away[\"market\"]\n+            loser = home[\"market\"]\n+            winner_score = away[\"points\"]\n+            loser_score = home[\"points\"]\n+\n+        self.winner = winner\n+        self.loser = loser\n+        self.winner_score = winner_score\n+        self.loser_score = loser_score\n+        self.season = season\n+        self.date = data[\"scheduled\"]\n+\n+    def get_game_data(self, first_school_id, second_school_id, season):\n+        \"\"\"\n+        Helper to init function to grab game data.\n+        \"\"\"\n+        year = season.year\n+        url = \"https://api.sportradar.us/ncaafb-t1/%f/REG/schedule.json\" % (year,)\n+        r = requests.get(url, params={\"api_key\": API_KEY})\n+        data = r.json()\n+        for week in data[\"weeks\"]:\n+            for game in week['games']:\n+                if (game[\"home\"] == first_school_id && game[\"away\"] == second_school_id) || (game[\"home\"] == second_school_id && game[\"away\"] == first_school_id):\n+                    url = \"https://api.sportradar.us/ncaafb-t1/%d/REG/%d/%s/%s/summary.json\" % (year, week[\"number\"], game[\"away\"], game[\"home\"],)\n+                    r = requests.get(url, params={\"api_key\": API_KEY})\n+                    return r.json()\n+\n+class Season(models.Model):\n+    \"\"\"\n+    Contains a circle of suck for a given year and conference.\n+    \"\"\"\n+\n+    sport = models.ChoiceField(choices=SPORTS)",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 61,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "e08ede8204bcdb6210fff49cab088f006d54d6b3",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`choices` needs to be of the form `[(value, display)]`, where `value` is the value to store in the database and `display` is the text to display to the user. In this case, just do `('Football', 'Football')` for every sport\n",
        "created_at": "2016-11-12T22:17:47Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701396",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701396"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701396"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701404",
        "pull_request_review_id": 8305578,
        "id": 87701404,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxNDA0",
        "diff_hunk": "@@ -35,3 +36,57 @@ def get(cls, school_id):\n \n for school_id, school in SCHOOLS.items():\n     SCHOOLS[school_id] = School(school_id, school['name'], school['conference'])\n+\n+class Game(object):\n+    \"\"\"\n+    Stores information about a game's winner, loser, and their respective scores.\n+    \"\"\"\n+\n+    def __init__(self, first_school_id, second_school_id, season):\n+        data = self.get_game_data(first_school_id, second_school_id, season)\n+        home = data[\"home_team\"]\n+        away = data[\"away_team\"]\n+\n+        if home[\"points\"] > away[\"points\"]:\n+            winner = home[\"market\"]\n+            loser = away[\"market\"]\n+            winner_score = home[\"points\"]\n+            loser_score = away[\"points\"]\n+        else:\n+            winner = away[\"market\"]\n+            loser = home[\"market\"]\n+            winner_score = away[\"points\"]\n+            loser_score = home[\"points\"]\n+\n+        self.winner = winner\n+        self.loser = loser\n+        self.winner_score = winner_score\n+        self.loser_score = loser_score\n+        self.season = season\n+        self.date = data[\"scheduled\"]\n+\n+    def get_game_data(self, first_school_id, second_school_id, season):\n+        \"\"\"\n+        Helper to init function to grab game data.\n+        \"\"\"\n+        year = season.year\n+        url = \"https://api.sportradar.us/ncaafb-t1/%f/REG/schedule.json\" % (year,)\n+        r = requests.get(url, params={\"api_key\": API_KEY})\n+        data = r.json()\n+        for week in data[\"weeks\"]:\n+            for game in week['games']:\n+                if (game[\"home\"] == first_school_id && game[\"away\"] == second_school_id) || (game[\"home\"] == second_school_id && game[\"away\"] == first_school_id):\n+                    url = \"https://api.sportradar.us/ncaafb-t1/%d/REG/%d/%s/%s/summary.json\" % (year, week[\"number\"], game[\"away\"], game[\"home\"],)\n+                    r = requests.get(url, params={\"api_key\": API_KEY})\n+                    return r.json()\n+\n+class Season(models.Model):\n+    \"\"\"\n+    Contains a circle of suck for a given year and conference.\n+    \"\"\"\n+\n+    sport = models.ChoiceField(choices=SPORTS)\n+    conference = model.ChoiceField(choices=CONFERENCES.keys())",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 62,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "e08ede8204bcdb6210fff49cab088f006d54d6b3",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Same as before, but do `[(id, name)]`, like `[('PAC_12', 'Pac-12')]`\n",
        "created_at": "2016-11-12T22:18:10Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701404",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701404"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701404"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701407",
        "pull_request_review_id": 8305578,
        "id": 87701407,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxNDA3",
        "diff_hunk": "@@ -35,3 +36,57 @@ def get(cls, school_id):\n \n for school_id, school in SCHOOLS.items():\n     SCHOOLS[school_id] = School(school_id, school['name'], school['conference'])\n+\n+class Game(object):\n+    \"\"\"\n+    Stores information about a game's winner, loser, and their respective scores.\n+    \"\"\"\n+\n+    def __init__(self, first_school_id, second_school_id, season):\n+        data = self.get_game_data(first_school_id, second_school_id, season)\n+        home = data[\"home_team\"]\n+        away = data[\"away_team\"]\n+\n+        if home[\"points\"] > away[\"points\"]:\n+            winner = home[\"market\"]\n+            loser = away[\"market\"]\n+            winner_score = home[\"points\"]\n+            loser_score = away[\"points\"]\n+        else:\n+            winner = away[\"market\"]\n+            loser = home[\"market\"]\n+            winner_score = away[\"points\"]\n+            loser_score = home[\"points\"]\n+\n+        self.winner = winner\n+        self.loser = loser\n+        self.winner_score = winner_score\n+        self.loser_score = loser_score\n+        self.season = season\n+        self.date = data[\"scheduled\"]\n+\n+    def get_game_data(self, first_school_id, second_school_id, season):\n+        \"\"\"\n+        Helper to init function to grab game data.\n+        \"\"\"\n+        year = season.year\n+        url = \"https://api.sportradar.us/ncaafb-t1/%f/REG/schedule.json\" % (year,)\n+        r = requests.get(url, params={\"api_key\": API_KEY})\n+        data = r.json()\n+        for week in data[\"weeks\"]:\n+            for game in week['games']:\n+                if (game[\"home\"] == first_school_id && game[\"away\"] == second_school_id) || (game[\"home\"] == second_school_id && game[\"away\"] == first_school_id):\n+                    url = \"https://api.sportradar.us/ncaafb-t1/%d/REG/%d/%s/%s/summary.json\" % (year, week[\"number\"], game[\"away\"], game[\"home\"],)\n+                    r = requests.get(url, params={\"api_key\": API_KEY})\n+                    return r.json()\n+\n+class Season(models.Model):\n+    \"\"\"\n+    Contains a circle of suck for a given year and conference.\n+    \"\"\"\n+\n+    sport = models.ChoiceField(choices=SPORTS)\n+    conference = model.ChoiceField(choices=CONFERENCES.keys())\n+    year = model.IntegerField(min_value=1915, max_value=2016)",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 63,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "e08ede8204bcdb6210fff49cab088f006d54d6b3",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "lol you dont need min/max values. what happens when we want to save seasons for future years?\n",
        "created_at": "2016-11-12T22:18:30Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701407",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701407"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701407"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701411",
        "pull_request_review_id": 8305578,
        "id": 87701411,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxNDEx",
        "diff_hunk": "@@ -35,3 +36,57 @@ def get(cls, school_id):\n \n for school_id, school in SCHOOLS.items():\n     SCHOOLS[school_id] = School(school_id, school['name'], school['conference'])\n+\n+class Game(object):",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 13,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "e08ede8204bcdb6210fff49cab088f006d54d6b3",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "make this a django model\n",
        "created_at": "2016-11-12T22:18:42Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701411",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701411"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701411"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701600",
        "pull_request_review_id": 8305723,
        "id": 87701600,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxNjAw",
        "diff_hunk": "@@ -4,6 +4,7 @@\n from django.db import models\n \n from base.constants import *\n+import requests, json",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 4,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "6566fb973c4126e66a1af9422acee626daa7f8bb",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "dont need\n",
        "created_at": "2016-11-12T22:30:10Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701600",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701600"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701600"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701603",
        "pull_request_review_id": 8305723,
        "id": 87701603,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxNjAz",
        "diff_hunk": "@@ -35,3 +36,26 @@ def get(cls, school_id):\n \n for school_id, school in SCHOOLS.items():\n     SCHOOLS[school_id] = School(school_id, school['name'], school['conference'])\n+\n+class Game(models.Model):\n+    \"\"\"\n+    Stores information about a game's winner, loser, and their respective scores.\n+    \"\"\"\n+\n+    winner = models.CharField()",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 18,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "6566fb973c4126e66a1af9422acee626daa7f8bb",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "these need `max_length=5`\n",
        "created_at": "2016-11-12T22:30:20Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701603",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701603"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701603"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701607",
        "pull_request_review_id": 8305723,
        "id": 87701607,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxNjA3",
        "diff_hunk": "@@ -35,3 +36,26 @@ def get(cls, school_id):\n \n for school_id, school in SCHOOLS.items():\n     SCHOOLS[school_id] = School(school_id, school['name'], school['conference'])\n+\n+class Game(models.Model):\n+    \"\"\"\n+    Stores information about a game's winner, loser, and their respective scores.\n+    \"\"\"\n+\n+    winner = models.CharField()\n+    loser = models.CharField()\n+    winner_score = models.IntegerField(min_value=0)",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 20,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "6566fb973c4126e66a1af9422acee626daa7f8bb",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "just do `PositiveIntegerField`\n",
        "created_at": "2016-11-12T22:30:31Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701607",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701607"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701607"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701610",
        "pull_request_review_id": 8305723,
        "id": 87701610,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxNjEw",
        "diff_hunk": "@@ -35,3 +36,26 @@ def get(cls, school_id):\n \n for school_id, school in SCHOOLS.items():\n     SCHOOLS[school_id] = School(school_id, school['name'], school['conference'])\n+\n+class Game(models.Model):\n+    \"\"\"\n+    Stores information about a game's winner, loser, and their respective scores.\n+    \"\"\"\n+\n+    winner = models.CharField()\n+    loser = models.CharField()\n+    winner_score = models.IntegerField(min_value=0)\n+    loser_score = models.IntegerField(min_value=0)\n+    season = Season()",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 22,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "6566fb973c4126e66a1af9422acee626daa7f8bb",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`models.ForeignKey`\n",
        "created_at": "2016-11-12T22:30:38Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701610",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701610"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701610"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701623",
        "pull_request_review_id": 8305723,
        "id": 87701623,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxNjIz",
        "diff_hunk": "@@ -1,5 +1,16 @@\n from base.utils import merge_dicts\n \n+# list of sports as choices.\n+SPORTS_CHOICES = [\n+    ('Football', 'Football')",
        "path": "circle_suck/base/constants.py",
        "position": null,
        "original_position": 5,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "6566fb973c4126e66a1af9422acee626daa7f8bb",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Instead of being redundant, just list them out as `['Football', 'Volleyball', etc]` and then in the model, do `[(x, x) for x in SPORTS]`\n",
        "created_at": "2016-11-12T22:31:22Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701623",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701623"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701623"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701628",
        "pull_request_review_id": 8305723,
        "id": 87701628,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxNjI4",
        "diff_hunk": "@@ -1,5 +1,16 @@\n from base.utils import merge_dicts\n \n+# list of sports as choices.\n+SPORTS_CHOICES = [\n+    ('Football', 'Football')\n+]\n+\n+# list of conference ID's to conference name pairs\n+\n+CONF_CHOICES = [\n+    ('PAC_12','Pac-12'),",
        "path": "circle_suck/base/constants.py",
        "position": null,
        "original_position": 11,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "6566fb973c4126e66a1af9422acee626daa7f8bb",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "these values are already in `CONFERENCES`, so do `[(conference_id, conference['name']) for conference_id, conference in CONFERENCES.items()]`\n",
        "created_at": "2016-11-12T22:31:54Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701628",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701628"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701628"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701901",
        "pull_request_review_id": 8305985,
        "id": 87701901,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxOTAx",
        "diff_hunk": "@@ -35,3 +36,26 @@ def get(cls, school_id):\n \n for school_id, school in SCHOOLS.items():\n     SCHOOLS[school_id] = School(school_id, school['name'], school['conference'])\n+\n+class Game(models.Model):\n+    \"\"\"\n+    Stores information about a game's winner, loser, and their respective scores.\n+    \"\"\"\n+\n+    winner = models.CharField(max_length=5)\n+    loser = models.CharField(max_length=5)\n+    winner_score = models.PositiveIntegerField()\n+    loser_score = models.PositiveIntegerField()\n+    season = models.ForeignKey('Season', on_delete=models.,CASCADE)",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 22,
        "commit_id": "2d061edff7fc2496a7cfba9bed348cf9ff7c97a5",
        "original_commit_id": "fc8c75700cdd8ab07a99294a29424c0f5ad13b9a",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "extra comma\n",
        "created_at": "2016-11-12T22:50:44Z",
        "updated_at": "2016-11-12T23:05:46Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701901",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701901"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/13#discussion_r87701901"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87702516",
        "pull_request_review_id": 8306542,
        "id": 87702516,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAyNTE2",
        "diff_hunk": "@@ -59,3 +60,25 @@ class Season(models.Model):\n     year = models.IntegerField()\n     circle_of_suck = models.TextField()\n \n+    def get_school_records(self, school):\n+        \"\"\"Return a tuple of lists that store the wins and losses against teams respectively\"\"\"\n+        wins = [game.loser for game in list(self.games.filter(winner=school))]\n+        losses = [game.winner for game in list(self.games.filter(loser=school))]\n+        return (wins, losses)",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 28,
        "commit_id": "1aab294187aa6bd0cb0dda74fc1199df18777458",
        "original_commit_id": "b1f94442ef39e2d1dc87225fb46b7c538f32cd70",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this should just return the number of wins and losses (e.g. `(7,2)`)\n",
        "created_at": "2016-11-12T23:41:52Z",
        "updated_at": "2016-11-13T00:01:49Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/15#discussion_r87702516",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/15",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87702516"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/15#discussion_r87702516"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/15"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87702693",
        "pull_request_review_id": 8306708,
        "id": 87702693,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAyNjkz",
        "diff_hunk": "@@ -59,3 +60,25 @@ class Season(models.Model):\n     year = models.IntegerField()\n     circle_of_suck = models.TextField()\n \n+    def get_school_records(self, school):\n+        \"\"\"Return a tuple of values that store the number of wins and losses\"\"\"\n+        wins = len(list(self.games.filter(winner=school)))",
        "path": "circle_suck/base/models.py",
        "position": null,
        "original_position": 26,
        "commit_id": "1aab294187aa6bd0cb0dda74fc1199df18777458",
        "original_commit_id": "132ae4b74f403f349afe44227dba7fb42c0ee785",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "it's more efficient to use `.count()`\n",
        "created_at": "2016-11-12T23:57:22Z",
        "updated_at": "2016-11-13T00:01:49Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/15#discussion_r87702693",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/15",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87702693"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/15#discussion_r87702693"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/15"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701187",
        "pull_request_review_id": 8305421,
        "id": 87701187,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxMTg3",
        "diff_hunk": "@@ -11,3 +13,57 @@ def merge_dicts(*dicts):\n     { 'a': 1, 'b': 2, 'c': 3 }\n     \"\"\"\n     return dict(sum([d.items() for d in dicts], []))\n+\n+def find_all_connected(graph, minsize=2):\n+\t\"\"\"\n+\tTakes in a graph in the format: {footballteam1:[footballteam1 beat these footballteams]...}\n+\tEx: {Cal:[Utah, Oregon]...}\n+\t\n+\tReturns a list of all disjoint cycles in the given graph (not sorted by length)\n+\t\"\"\"\n+    listoflists = []\n+    list = tarjan(graph)\n+    for item in list[:]:\n+        if len(item) <= minsize:\n+            list.remove(item)\n+    #print(list)\n+    for con_comp in list:\n+        newgraph = {}\n+        for vertex, to in graph.items():\n+            if vertex in con_comp:\n+                newgraph[vertex] = to\n+        listoflists.append(find_longest_cycle(newgraph))\n+    return listoflists\n+\n+def find_all_cycles(graph, start):\n+    def find_all_paths(graph, start, end, path=[]):",
        "path": "circle_suck/base/utils.py",
        "position": null,
        "original_position": 33,
        "commit_id": "8307fbfa5b008709c68235c1041e9ebdcaf7fe05",
        "original_commit_id": "f1b5a1c107f02b86b2d46d3c50c6853726a5f1df",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you dont need to pass `graph` in again, since it has access to the parent's `graph` variable\n",
        "created_at": "2016-11-12T22:04:01Z",
        "updated_at": "2016-11-13T04:43:22Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87701187",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701187"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87701187"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701196",
        "pull_request_review_id": 8305421,
        "id": 87701196,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxMTk2",
        "diff_hunk": "@@ -11,3 +13,57 @@ def merge_dicts(*dicts):\n     { 'a': 1, 'b': 2, 'c': 3 }\n     \"\"\"\n     return dict(sum([d.items() for d in dicts], []))\n+\n+def find_all_connected(graph, minsize=2):\n+\t\"\"\"\n+\tTakes in a graph in the format: {footballteam1:[footballteam1 beat these footballteams]...}\n+\tEx: {Cal:[Utah, Oregon]...}\n+\t\n+\tReturns a list of all disjoint cycles in the given graph (not sorted by length)\n+\t\"\"\"\n+    listoflists = []\n+    list = tarjan(graph)\n+    for item in list[:]:\n+        if len(item) <= minsize:\n+            list.remove(item)\n+    #print(list)\n+    for con_comp in list:\n+        newgraph = {}\n+        for vertex, to in graph.items():\n+            if vertex in con_comp:\n+                newgraph[vertex] = to\n+        listoflists.append(find_longest_cycle(newgraph))\n+    return listoflists\n+\n+def find_all_cycles(graph, start):\n+    def find_all_paths(graph, start, end, path=[]):\n+        path = path + [start]\n+        if start == end:\n+            return [path]\n+        if not start in graph.keys():\n+            return []\n+        paths = []\n+        for node in graph[start]:\n+            if node not in path:\n+                newpaths = find_all_paths(graph, node, end, path)\n+                for newpath in newpaths:\n+                    paths.append(newpath)\n+        return paths\n+\n+    starting = start\n+    endingindexes = []",
        "path": "circle_suck/base/utils.py",
        "position": null,
        "original_position": 48,
        "commit_id": "8307fbfa5b008709c68235c1041e9ebdcaf7fe05",
        "original_commit_id": "f1b5a1c107f02b86b2d46d3c50c6853726a5f1df",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```\n[k for k, v in graph.items() if starting in v]\n```\n",
        "created_at": "2016-11-12T22:04:42Z",
        "updated_at": "2016-11-13T04:43:22Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87701196",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701196"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87701196"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701202",
        "pull_request_review_id": 8305421,
        "id": 87701202,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxMjAy",
        "diff_hunk": "@@ -11,3 +13,57 @@ def merge_dicts(*dicts):\n     { 'a': 1, 'b': 2, 'c': 3 }\n     \"\"\"\n     return dict(sum([d.items() for d in dicts], []))\n+\n+def find_all_connected(graph, minsize=2):\n+\t\"\"\"\n+\tTakes in a graph in the format: {footballteam1:[footballteam1 beat these footballteams]...}\n+\tEx: {Cal:[Utah, Oregon]...}\n+\t\n+\tReturns a list of all disjoint cycles in the given graph (not sorted by length)\n+\t\"\"\"\n+    listoflists = []\n+    list = tarjan(graph)\n+    for item in list[:]:\n+        if len(item) <= minsize:\n+            list.remove(item)\n+    #print(list)\n+    for con_comp in list:\n+        newgraph = {}\n+        for vertex, to in graph.items():\n+            if vertex in con_comp:\n+                newgraph[vertex] = to\n+        listoflists.append(find_longest_cycle(newgraph))\n+    return listoflists\n+\n+def find_all_cycles(graph, start):\n+    def find_all_paths(graph, start, end, path=[]):\n+        path = path + [start]\n+        if start == end:\n+            return [path]\n+        if not start in graph.keys():\n+            return []\n+        paths = []\n+        for node in graph[start]:\n+            if node not in path:\n+                newpaths = find_all_paths(graph, node, end, path)\n+                for newpath in newpaths:\n+                    paths.append(newpath)\n+        return paths\n+\n+    starting = start",
        "path": "circle_suck/base/utils.py",
        "position": null,
        "original_position": 47,
        "commit_id": "8307fbfa5b008709c68235c1041e9ebdcaf7fe05",
        "original_commit_id": "f1b5a1c107f02b86b2d46d3c50c6853726a5f1df",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why do you need this local variable?\n",
        "created_at": "2016-11-12T22:04:55Z",
        "updated_at": "2016-11-13T04:43:22Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87701202",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87701202"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87701202"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87702489",
        "pull_request_review_id": 8306524,
        "id": 87702489,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAyNDg5",
        "diff_hunk": "@@ -11,3 +13,88 @@ def merge_dicts(*dicts):\n     { 'a': 1, 'b': 2, 'c': 3 }\n     \"\"\"\n     return dict(sum([d.items() for d in dicts], []))\n+\n+def find_all_connected(graph, minsize=2):\n+\t\"\"\"\n+\tTakes in a graph in the format: {footballteam1:[footballteam1 beat these footballteams]...}\n+\tEx: {Cal:[Utah, Oregon]...}\n+\t\n+\tReturns a list of all disjoint cycles in the given graph (not sorted by length)\n+\t\"\"\"\n+    listoflists = []\n+    list = tarjan(graph)\n+    for item in list[:]:\n+        if len(item) <= minsize:\n+            list.remove(item)\n+    #print(list)\n+    for con_comp in list:\n+        newgraph = {}\n+        for vertex, to in graph.items():\n+            if vertex in con_comp:\n+                newgraph[vertex] = to\n+        listoflists.append(find_longest_cycle(newgraph))\n+    return listoflists\n+\n+def find_all_cycles(graph, start):\n+    def find_all_paths(graph, start, end, path=[]):\n+        path = path + [start]\n+        if start == end:\n+            return [path]\n+        if not start in graph.keys():\n+            return []\n+        paths = []\n+        for node in graph[start]:\n+            if node not in path:\n+                newpaths = find_all_paths(graph, node, end, path)\n+                for newpath in newpaths:\n+                    paths.append(newpath)\n+        return paths\n+\n+    starting = start\n+    endingindexes = []\n+    for k, v in graph.items():\n+        if starting in v:\n+            endingindexes.append(k)\n+\n+    all_paths = []\n+    for endindex in endingindexes:\n+        all_paths += find_all_paths(graph, starting, endindex)\n+    return all_paths\n+\n+### TEST CASES ###",
        "path": "circle_suck/base/utils.py",
        "position": null,
        "original_position": 58,
        "commit_id": "8307fbfa5b008709c68235c1041e9ebdcaf7fe05",
        "original_commit_id": "6806391396e1b54f2a423c9c2bbc06d57dd75d43",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "remove comments\n",
        "created_at": "2016-11-12T23:40:03Z",
        "updated_at": "2016-11-13T04:43:22Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87702489",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87702489"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87702489"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87702506",
        "pull_request_review_id": 8306524,
        "id": 87702506,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAyNTA2",
        "diff_hunk": "@@ -0,0 +1,17 @@\n+from django.test import TestCase\n+from base.utils import *\n+\n+class TestCycleFinder(TestCase):\n+\tdef test_single_cycle(self):\n+\t\tself.assertEqual(find_all_connected({1:[2],2:[1,5],3:[4],4:[3,5],5:[6],6:[7],7:[8],8:[6,9],9:[]}), [[8, 6, 7]])",
        "path": "circle_suck/tests/test_utils.py",
        "position": null,
        "original_position": 6,
        "commit_id": "8307fbfa5b008709c68235c1041e9ebdcaf7fe05",
        "original_commit_id": "6806391396e1b54f2a423c9c2bbc06d57dd75d43",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "make these a little bit pretty pls, with comments explaining what you're testing in each case.\n\n```\nseason = {\n    1: [2],\n    2: [1, 5],\n    ...\n}\nself.assertEqual(find_all_connected(season), [[8,6,7]])\n```\n",
        "created_at": "2016-11-12T23:41:03Z",
        "updated_at": "2016-11-13T04:43:22Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87702506",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87702506"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87702506"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87703246",
        "pull_request_review_id": 8307215,
        "id": 87703246,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAzMjQ2",
        "diff_hunk": "@@ -11,3 +13,57 @@ def merge_dicts(*dicts):\n     { 'a': 1, 'b': 2, 'c': 3 }\n     \"\"\"\n     return dict(sum([d.items() for d in dicts], []))\n+\n+def find_all_connected(graph, minsize=2):\n+\t\"\"\"\n+\tTakes in a graph in the format: {footballteam1:[footballteam1 beat these footballteams]...}\n+\tEx: {Cal:[Utah, Oregon]...}\n+\t\n+\tReturns a list of all disjoint cycles in the given graph (not sorted by length)\n+\t\"\"\"\n+    listoflists = []\n+    list = tarjan(graph)\n+    for item in list[:]:\n+        if len(item) <= minsize:\n+            list.remove(item)\n+    #print(list)\n+    for con_comp in list:\n+        newgraph = {}\n+        for vertex, to in graph.items():\n+            if vertex in con_comp:\n+                newgraph[vertex] = to\n+        listoflists.append(find_longest_cycle(newgraph))\n+    return listoflists\n+\n+def find_all_cycles(graph, start):\n+    def find_all_paths(graph, start, end, path=[]):\n+        path = path + [start]\n+        if start == end:\n+            return [path]\n+        if not start in graph.keys():\n+            return []\n+        paths = []\n+        for node in graph[start]:\n+            if node not in path:\n+                newpaths = find_all_paths(graph, node, end, path)\n+                for newpath in newpaths:\n+                    paths.append(newpath)\n+        return paths\n+\n+    starting = start",
        "path": "circle_suck/base/utils.py",
        "position": null,
        "original_position": 47,
        "commit_id": "8307fbfa5b008709c68235c1041e9ebdcaf7fe05",
        "original_commit_id": "f1b5a1c107f02b86b2d46d3c50c6853726a5f1df",
        "user": {
            "login": "thomashzhang",
            "id": 2775684,
            "node_id": "MDQ6VXNlcjI3NzU2ODQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2775684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomashzhang",
            "html_url": "https://github.com/thomashzhang",
            "followers_url": "https://api.github.com/users/thomashzhang/followers",
            "following_url": "https://api.github.com/users/thomashzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomashzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomashzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomashzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/thomashzhang/orgs",
            "repos_url": "https://api.github.com/users/thomashzhang/repos",
            "events_url": "https://api.github.com/users/thomashzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomashzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We don't.\n",
        "created_at": "2016-11-13T00:44:59Z",
        "updated_at": "2016-11-13T04:43:22Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87703246",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87703246"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87703246"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11"
            }
        },
        "in_reply_to_id": 87701202
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87703253",
        "pull_request_review_id": 8307220,
        "id": 87703253,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAzMjUz",
        "diff_hunk": "@@ -11,3 +13,57 @@ def merge_dicts(*dicts):\n     { 'a': 1, 'b': 2, 'c': 3 }\n     \"\"\"\n     return dict(sum([d.items() for d in dicts], []))\n+\n+def find_all_connected(graph, minsize=2):\n+\t\"\"\"\n+\tTakes in a graph in the format: {footballteam1:[footballteam1 beat these footballteams]...}\n+\tEx: {Cal:[Utah, Oregon]...}\n+\t\n+\tReturns a list of all disjoint cycles in the given graph (not sorted by length)\n+\t\"\"\"\n+    listoflists = []\n+    list = tarjan(graph)\n+    for item in list[:]:\n+        if len(item) <= minsize:\n+            list.remove(item)\n+    #print(list)\n+    for con_comp in list:\n+        newgraph = {}\n+        for vertex, to in graph.items():\n+            if vertex in con_comp:\n+                newgraph[vertex] = to\n+        listoflists.append(find_longest_cycle(newgraph))\n+    return listoflists\n+\n+def find_all_cycles(graph, start):\n+    def find_all_paths(graph, start, end, path=[]):\n+        path = path + [start]\n+        if start == end:\n+            return [path]\n+        if not start in graph.keys():\n+            return []\n+        paths = []\n+        for node in graph[start]:\n+            if node not in path:\n+                newpaths = find_all_paths(graph, node, end, path)\n+                for newpath in newpaths:\n+                    paths.append(newpath)\n+        return paths\n+\n+    starting = start\n+    endingindexes = []",
        "path": "circle_suck/base/utils.py",
        "position": null,
        "original_position": 48,
        "commit_id": "8307fbfa5b008709c68235c1041e9ebdcaf7fe05",
        "original_commit_id": "f1b5a1c107f02b86b2d46d3c50c6853726a5f1df",
        "user": {
            "login": "thomashzhang",
            "id": 2775684,
            "node_id": "MDQ6VXNlcjI3NzU2ODQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2775684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomashzhang",
            "html_url": "https://github.com/thomashzhang",
            "followers_url": "https://api.github.com/users/thomashzhang/followers",
            "following_url": "https://api.github.com/users/thomashzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomashzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomashzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomashzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/thomashzhang/orgs",
            "repos_url": "https://api.github.com/users/thomashzhang/repos",
            "events_url": "https://api.github.com/users/thomashzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomashzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "fixed\n",
        "created_at": "2016-11-13T00:45:25Z",
        "updated_at": "2016-11-13T04:43:22Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87703253",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87703253"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/11#discussion_r87703253"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/11"
            }
        },
        "in_reply_to_id": 87701196
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87710976",
        "pull_request_review_id": 8313983,
        "id": 87710976,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzEwOTc2",
        "diff_hunk": "@@ -0,0 +1,29 @@\n+from django.core.management.base import BaseCommand, CommandError\n+from base import utils\n+import datetime\n+from base.models import *\n+\n+class Command(BaseCommand):\n+    help = 'takes game data for every conference and creates circles of suck for each'\n+\n+    def add_arguments(self, parser):\n+        parser.add_argument('--year', type=str, default=datetime.datetime.now().year)\n+\n+    def handle(self, *args, **options):\n+        self.year = options['year']\n+        for sport, sport_url in SPORTS_URLS.items():\n+            self.update_circles(sport, sport_url, **options)\n+    \n+    def update_circles(self, sport, sport_url, **options):\n+    \tfor conference in CONFERENCES:",
        "path": "circle_suck/base/management/commands/makecycles.py",
        "position": null,
        "original_position": 18,
        "commit_id": "92690b7acec4f9530602fe35e5c75902926a097f",
        "original_commit_id": "b4c1e2b6999347d57f17af0408636770e64a411f",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do `conference_id, conference in CONFERENCES.items()` so you dont have to do `CONFERENCES[conference]` below\n",
        "created_at": "2016-11-13T12:03:46Z",
        "updated_at": "2016-11-13T12:19:31Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/21#discussion_r87710976",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/21",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87710976"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/21#discussion_r87710976"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/21"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87710977",
        "pull_request_review_id": 8313983,
        "id": 87710977,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzEwOTc3",
        "diff_hunk": "@@ -0,0 +1,29 @@\n+from django.core.management.base import BaseCommand, CommandError\n+from base import utils\n+import datetime\n+from base.models import *\n+\n+class Command(BaseCommand):\n+    help = 'takes game data for every conference and creates circles of suck for each'\n+\n+    def add_arguments(self, parser):\n+        parser.add_argument('--year', type=str, default=datetime.datetime.now().year)\n+\n+    def handle(self, *args, **options):\n+        self.year = options['year']\n+        for sport, sport_url in SPORTS_URLS.items():\n+            self.update_circles(sport, sport_url, **options)\n+    \n+    def update_circles(self, sport, sport_url, **options):\n+    \tfor conference in CONFERENCES:\n+    \t\tself.season = Season.objects.get(sport = sport, conference = conference, year = self.year)\n+    \t\tgames = Game.objects.all().filter(season = self.season)\n+    \t\tgraph = {}\n+    \t\tfor school in CONFERENCES[conference][\"schools\"]:\n+    \t\t\trelevant_games = games.filter(loser = school.id)\n+    \t\t\tlosses = []\n+    \t\t\tfor game in relevant_games:\n+    \t\t\t\tlosses.append(game.winner)\n+    \t\t\tgraph[school.id] = losses\n+    \t\tcircles = utils.find_all_connected(graph)",
        "path": "circle_suck/base/management/commands/makecycles.py",
        "position": null,
        "original_position": 28,
        "commit_id": "92690b7acec4f9530602fe35e5c75902926a097f",
        "original_commit_id": "b4c1e2b6999347d57f17af0408636770e64a411f",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "i changed the name of this? merge master\n",
        "created_at": "2016-11-13T12:03:57Z",
        "updated_at": "2016-11-13T12:19:31Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/21#discussion_r87710977",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/21",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87710977"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/21#discussion_r87710977"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/21"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87711000",
        "pull_request_review_id": 8313983,
        "id": 87711000,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzExMDAw",
        "diff_hunk": "@@ -0,0 +1,29 @@\n+from django.core.management.base import BaseCommand, CommandError\n+from base import utils\n+import datetime\n+from base.models import *\n+\n+class Command(BaseCommand):\n+    help = 'takes game data for every conference and creates circles of suck for each'\n+\n+    def add_arguments(self, parser):\n+        parser.add_argument('--year', type=str, default=datetime.datetime.now().year)\n+\n+    def handle(self, *args, **options):\n+        self.year = options['year']\n+        for sport, sport_url in SPORTS_URLS.items():\n+            self.update_circles(sport, sport_url, **options)\n+    \n+    def update_circles(self, sport, sport_url, **options):\n+    \tfor conference in CONFERENCES:\n+    \t\tself.season = Season.objects.get(sport = sport, conference = conference, year = self.year)\n+    \t\tgames = Game.objects.all().filter(season = self.season)\n+    \t\tgraph = {}\n+    \t\tfor school in CONFERENCES[conference][\"schools\"]:",
        "path": "circle_suck/base/management/commands/makecycles.py",
        "position": null,
        "original_position": 22,
        "commit_id": "92690b7acec4f9530602fe35e5c75902926a097f",
        "original_commit_id": "b4c1e2b6999347d57f17af0408636770e64a411f",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this can be done easier:\n\n```\ngraph = {\n    school.id: games.filter(loser=school.id).values_list('winner', flat=True)\n    for school in conference['schools']\n}\n```\n",
        "created_at": "2016-11-13T12:05:23Z",
        "updated_at": "2016-11-13T12:19:31Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/21#discussion_r87711000",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/21",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87711000"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/21#discussion_r87711000"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/21"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87711140",
        "pull_request_review_id": 8314143,
        "id": 87711140,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzExMTQw",
        "diff_hunk": "@@ -0,0 +1,25 @@\n+from django.core.management.base import BaseCommand, CommandError\n+from base import utils\n+import datetime\n+from base.models import *\n+\n+class Command(BaseCommand):\n+    help = 'takes game data for every conference and creates circles of suck for each'\n+\n+    def add_arguments(self, parser):\n+        parser.add_argument('--year', type=str, default=datetime.datetime.now().year)\n+\n+    def handle(self, *args, **options):\n+        self.year = options['year']\n+        for sport, sport_url in SPORTS_URLS.items():\n+            self.update_circles(sport, sport_url, **options)\n+    \n+    def update_circles(self, sport, sport_url, **options):\n+    \tfor conference_id, conference in CONFERENCES.items():\n+    \t\tself.season = Season.objects.get(sport = sport, conference = conference_id, year = self.year)\n+    \t\tgames = Game.objects.all().filter(season = self.season)\n+    \t\tgraph = {\n+\t\t\t    school.id: games.filter(loser=school.id).values_list('winner', flat=True) for school in conference['schools']",
        "path": "circle_suck/base/management/commands/makecycles.py",
        "position": null,
        "original_position": 22,
        "commit_id": "92690b7acec4f9530602fe35e5c75902926a097f",
        "original_commit_id": "c6d3e0fb38c3034a6e7af6ac9f8e7fad07e0f03f",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "too many indents, plus tab characters\n",
        "created_at": "2016-11-13T12:17:38Z",
        "updated_at": "2016-11-13T12:19:31Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/21#discussion_r87711140",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/21",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87711140"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/21#discussion_r87711140"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/21"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87711145",
        "pull_request_review_id": 8314146,
        "id": 87711145,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzExMTQ1",
        "diff_hunk": "@@ -0,0 +1,25 @@\n+from django.core.management.base import BaseCommand, CommandError\n+from base import utils\n+import datetime\n+from base.models import *\n+\n+class Command(BaseCommand):\n+    help = 'takes game data for every conference and creates circles of suck for each'\n+\n+    def add_arguments(self, parser):\n+        parser.add_argument('--year', type=str, default=datetime.datetime.now().year)\n+\n+    def handle(self, *args, **options):\n+        self.year = options['year']\n+        for sport, sport_url in SPORTS_URLS.items():\n+            self.update_circles(sport, sport_url, **options)\n+    \n+    def update_circles(self, sport, sport_url, **options):\n+    \tfor conference_id, conference in CONFERENCES.items():\n+    \t\tself.season = Season.objects.get(sport = sport, conference = conference_id, year = self.year)",
        "path": "circle_suck/base/management/commands/makecycles.py",
        "position": null,
        "original_position": 19,
        "commit_id": "92690b7acec4f9530602fe35e5c75902926a097f",
        "original_commit_id": "c6d3e0fb38c3034a6e7af6ac9f8e7fad07e0f03f",
        "user": {
            "login": "brandonchinn178",
            "id": 6827922,
            "node_id": "MDQ6VXNlcjY4Mjc5MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6827922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandonchinn178",
            "html_url": "https://github.com/brandonchinn178",
            "followers_url": "https://api.github.com/users/brandonchinn178/followers",
            "following_url": "https://api.github.com/users/brandonchinn178/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonchinn178/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandonchinn178/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonchinn178/subscriptions",
            "organizations_url": "https://api.github.com/users/brandonchinn178/orgs",
            "repos_url": "https://api.github.com/users/brandonchinn178/repos",
            "events_url": "https://api.github.com/users/brandonchinn178/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandonchinn178/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you dont need to set this as `self.season`? just do `season`\n",
        "created_at": "2016-11-13T12:18:01Z",
        "updated_at": "2016-11-13T12:19:31Z",
        "html_url": "https://github.com/brandonchinn178/circle-of-suck/pull/21#discussion_r87711145",
        "pull_request_url": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/21",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/comments/87711145"
            },
            "html": {
                "href": "https://github.com/brandonchinn178/circle-of-suck/pull/21#discussion_r87711145"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/brandonchinn178/circle-of-suck/pulls/21"
            }
        }
    }
]