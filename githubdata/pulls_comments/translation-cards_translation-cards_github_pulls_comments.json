[
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50434842",
        "pull_request_review_id": null,
        "id": 50434842,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM0ODQy",
        "diff_hunk": "@@ -24,172 +24,61 @@\n \n public class ImportActivity extends AppCompatActivity {\n \n-    private static final String TAG = \"ImportActivity\";\n-\n-    private static final String INDEX_FILENAME_1 = \"card_deck.csv\";\n-    private static final String INDEX_FILENAME_2 = \"card_deck.txt\";\n-    private static final int BUFFER_SIZE = 2048;\n-\n     @Override\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n-        importData(getIntent().getData());\n-    }\n-\n-    private void importData(Uri source) {\n-        ZipInputStream zip = getZip(source);\n-        if (zip == null) {\n-            alertUserOfFailure();\n-            return;\n-        }\n-        String filename = source.getLastPathSegment();\n-        File targetDir = getTargetDirectory(filename);\n-        String indexFilename = readFiles(zip, targetDir);\n-        if (indexFilename == null) {\n-            alertUserOfFailure();\n-            return;\n-        }\n-        List<ImportItem> index = getIndex(targetDir, indexFilename);\n-        if (index == null) {\n-            alertUserOfFailure();\n-            return;\n-        }\n-        confirmAndLoadData(targetDir, index);\n-    }\n-\n-    private ZipInputStream getZip(Uri source) {\n-        InputStream inputStream = null;\n-        try {\n-            inputStream = getContentResolver().openInputStream(source);\n-        } catch (FileNotFoundException e) {\n-            return null;\n-        }\n-        return new ZipInputStream(inputStream);\n-    }\n-\n-    private File getTargetDirectory(String filename) {\n-        File recordingsDir = new File(getFilesDir(), \"recordings\");\n-        File targetDir = new File(recordingsDir, String.format(\"%s-%d\",\n-                filename, (new Random()).nextInt()));\n-        targetDir.mkdirs();\n-        return targetDir;\n-    }\n-\n-    private String readFiles(ZipInputStream zip, File targetDir) {\n-        String indexFilename = null;\n-        FileOutputStream outputStream = null;\n-        try {\n-            ZipEntry zipEntry = null;\n-            while ((zipEntry = zip.getNextEntry()) != null) {\n-                String name = zipEntry.getName();\n-                if (INDEX_FILENAME_1.equals(name) || INDEX_FILENAME_2.equals(name)) {\n-                    indexFilename = name;\n-                }\n-                outputStream = new FileOutputStream(new File(targetDir, name));\n-                byte[] buffer = new byte[BUFFER_SIZE];\n-                int read;\n-                while ((read = zip.read(buffer)) != -1) {\n-                    outputStream.write(buffer, 0, read);\n-                }\n-                outputStream.flush();\n-                outputStream.close();\n-                outputStream = null;\n-            }\n-        } catch (IOException e) {\n-        } finally {\n-            try {\n-                zip.close();\n-            } catch (IOException e) {\n-                return null;\n-            }\n-            if (outputStream != null) {\n-                try {\n-                    outputStream.close();\n-                } catch (IOException e) {\n-                    return null;\n-                }\n-            }\n-        }\n-        if (indexFilename == null) {\n-            targetDir.delete();\n-            Log.d(TAG, \"Failed to find index.\");\n-        }\n-        return indexFilename;\n-    }\n-\n-    private List<ImportItem> getIndex(File dir, String indexFilename) {\n-        List<ImportItem> results = new ArrayList<>();\n-        Scanner s;\n-        try {\n-            s = new Scanner(new File(dir, indexFilename));\n-        } catch (FileNotFoundException e) {\n-            return null;\n-        }\n-        while (s.hasNextLine()) {\n-            String line = s.nextLine();\n-            String[] split = line.trim().split(\"\\\\|\");\n-            if (split.length != 3) {\n-                Log.d(TAG, String.format(\"Improper index line: \" + line));\n-                s.close();\n-                return null;\n-            }\n-            results.add(new ImportItem(split[0], split[1], split[2]));\n-        }\n-        s.close();\n-        return results;\n-    }\n-\n-    private void loadData(File dir, List<ImportItem> index) {\n-        DbManager dbm = new DbManager(this);\n-        Map<String, Long> dictionaryLookup = getDictionaryLookup(dbm);\n-        // Iterate backwards through the list, because we're adding each translation at the top of\n-        // the list and want them to appear in the correct order.\n-        for (int i = index.size() - 1; i >= 0; i--) {\n-            ImportItem item = index.get(i);\n-            File targetFile = new File(dir, item.name);\n-            long dictionaryId = dictionaryLookup.get(item.language.toLowerCase());\n-            dbm.addTranslationAtTop(dictionaryId, item.text, false, targetFile.getAbsolutePath());\n-        }\n-    }\n-\n-    private Map<String, Long> getDictionaryLookup(DbManager dbm) {\n-        Map<String, Long> results = new HashMap<>();\n-        for (Dictionary dictionary : dbm.getAllDictionaries()) {\n-            results.put(dictionary.getLabel().toLowerCase(), dictionary.getDbId());\n-        }\n-        return results;\n-    }\n-\n-    private void alertUserOfFailure() {\n-        new AlertDialog.Builder(this)\n-                .setTitle(R.string.import_failure_alert_title)\n-                .setMessage(R.string.import_failure_alert_message)\n-                .setNeutralButton(R.string.misc_ok, new DialogInterface.OnClickListener() {\n-                    @Override\n-                    public void onClick(DialogInterface dialog, int which) {\n-                        ImportActivity.this.finish();\n-                    }\n-                })\n-                .show();\n+        confirmAndLoadData(getIntent().getData());\n     }\n \n-    private void confirmAndLoadData(final File targetDir, final List<ImportItem> index) {\n+    private void confirmAndLoadData(final Uri source) {\n         new AlertDialog.Builder(this)\n                 .setTitle(R.string.import_confirm_alert_title)\n-                .setMessage(getString(R.string.import_confirm_alert_message, index.size()))\n+                .setMessage(getString(R.string.import_confirm_alert_message))\n                 .setPositiveButton(R.string.import_confirm_alert_positive,\n                         new DialogInterface.OnClickListener() {\n-                    @Override\n-                    public void onClick(DialogInterface dialog, int which) {\n-                        loadData(targetDir, index);\n-                        Intent intent = new Intent(ImportActivity.this, MainActivity.class);\n-                        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n-                        startActivity(intent);\n-                        finish();\n-                    }\n-                })\n+                            @Override\n+                            public void onClick(DialogInterface dialog, int which) {\n+                                TxcPortingUtility portingUtility = new TxcPortingUtility();\n+                                try {\n+                                    portingUtility.importData(ImportActivity.this, source);\n+                                } catch (TxcPortingUtility.ImportException e) {\n+                                    alertUserOfFailure(e);\n+                                    return;\n+                                }\n+                                Intent intent = new Intent(ImportActivity.this, MainActivity.class);\n+                                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n+                                startActivity(intent);\n+                                finish();\n+                            }\n+                        })\n                 .setNegativeButton(R.string.import_confirm_alert_negative,\n                         new DialogInterface.OnClickListener() {\n+                            @Override\n+                            public void onClick(DialogInterface dialog, int which) {\n+                                ImportActivity.this.finish();\n+                            }\n+                        })\n+                .show();\n+    }\n+\n+    private void alertUserOfFailure(TxcPortingUtility.ImportException error) {\n+        String errorMessage = getString(R.string.import_failure_default_error_message);\n+        if (error.getProblem() == TxcPortingUtility.ImportException.ImportProblem.FILE_NOT_FOUND) {\n+            errorMessage = getString(R.string.import_failure_file_not_found_error_message);\n+        } else if (error.getProblem() ==\n+                TxcPortingUtility.ImportException.ImportProblem.NO_INDEX_FILE) {\n+            errorMessage = getString(R.string.import_failure_no_index_file_error_message);\n+        } else if (error.getProblem() ==\n+                TxcPortingUtility.ImportException.ImportProblem.INVALID_INDEX_FILE) {\n+            errorMessage = getString(R.string.import_failure_invalid_index_file_error_message);\n+        } else if (error.getProblem() ==\n+                TxcPortingUtility.ImportException.ImportProblem.READ_ERROR) {\n+            errorMessage = getString(R.string.import_failure_read_error_error_message);\n+        }\n+        new AlertDialog.Builder(this)\n+                .setTitle(R.string.import_failure_alert_title)\n+                .setMessage(errorMessage)\n+                .setNeutralButton(R.string.misc_ok, new DialogInterface.OnClickListener() {\n                     @Override\n                     public void onClick(DialogInterface dialog, int which) {\n                         ImportActivity.this.finish();",
        "path": "app/src/main/java/org/mercycorps/translationcards/ImportActivity.java",
        "position": 213,
        "original_position": 216,
        "commit_id": "b4e194beb2e8991710be4220f5663ada0ca2415c",
        "original_commit_id": "f801f21d0e4ad21921f29ba3e8fbc14eb56be269",
        "user": {
            "login": "natashaj7",
            "id": 1128671,
            "node_id": "MDQ6VXNlcjExMjg2NzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1128671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/natashaj7",
            "html_url": "https://github.com/natashaj7",
            "followers_url": "https://api.github.com/users/natashaj7/followers",
            "following_url": "https://api.github.com/users/natashaj7/following{/other_user}",
            "gists_url": "https://api.github.com/users/natashaj7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/natashaj7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/natashaj7/subscriptions",
            "organizations_url": "https://api.github.com/users/natashaj7/orgs",
            "repos_url": "https://api.github.com/users/natashaj7/repos",
            "events_url": "https://api.github.com/users/natashaj7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/natashaj7/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line 90-101 is a duplicate class from TxcPortingUtitlity 267-278\n",
        "created_at": "2016-01-21T17:41:25Z",
        "updated_at": "2016-01-21T23:27:44Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/12#discussion_r50434842",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/12",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50434842"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/12#discussion_r50434842"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/12"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50436835",
        "pull_request_review_id": null,
        "id": 50436835,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2ODM1",
        "diff_hunk": "@@ -0,0 +1,300 @@\n+package org.mercycorps.translationcards;\n+\n+import android.content.Context;\n+import android.net.Uri;\n+import android.util.Log;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Random;\n+import java.util.Scanner;\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipInputStream;\n+import java.util.zip.ZipOutputStream;\n+\n+/**\n+ * Class to handle constructing and reading .txc files.\n+ *\n+ * @author nick.c.worden@gmail.com (Nick Worden)\n+ */\n+public class TxcPortingUtility {\n+\n+    private static final String INDEX_FILENAME = \"card_deck.csv\";\n+    private static final String ALT_INDEX_FILENAME = \"card_deck.txt\";\n+    private static final int BUFFER_SIZE = 2048;\n+\n+    public void exportData(Dictionary[] dictionaries, File file) throws ExportException {\n+        ZipOutputStream zos = null;\n+        try {\n+            OutputStream os;\n+            try {\n+                os = new FileOutputStream(file);\n+            } catch (FileNotFoundException e) {\n+                throw new ExportException(ExportException.ExportProblem.TARGET_FILE_NOT_FOUND, e);\n+            }\n+            zos = new ZipOutputStream(os);\n+            Map<String, Dictionary.Translation> translationFilenames =\n+                    buildIndex(dictionaries, zos);\n+            for (String filename : translationFilenames.keySet()) {\n+                addFileToZip(filename, translationFilenames.get(filename), zos);\n+            }\n+        } catch (ExportException e) {\n+            if (zos != null) {\n+                try {\n+                    zos.close();\n+                } catch (IOException ignored) {\n+                    // Do nothing, we've failed already anyway.\n+                }\n+            }\n+            file.delete();\n+            throw e;\n+        }\n+        try {\n+            zos.close();\n+        } catch (IOException e) {\n+            throw new ExportException(ExportException.ExportProblem.WRITE_ERROR, e);\n+        }\n+    }\n+\n+    private Map<String, Dictionary.Translation> buildIndex(\n+            Dictionary[] dictionaries, ZipOutputStream zos) throws ExportException {\n+        Map<String, Dictionary.Translation> translationFilenames = new HashMap<>();\n+        try {\n+            zos.putNextEntry(new ZipEntry(INDEX_FILENAME));\n+            for (Dictionary dictionary : dictionaries) {\n+                String language = dictionary.getLabel();\n+                for (int i = 0; i < dictionary.getTranslationCount(); i++) {\n+                    Dictionary.Translation translation = dictionary.getTranslation(i);\n+                    String translationFilename = buildUniqueFilename(\n+                            translation, translationFilenames);\n+                    translationFilenames.put(translationFilename, translation);\n+                    String line = String.format(\"%s|%s|%s\\n\",\n+                            translation.getLabel(), translationFilename, language);\n+                    zos.write(line.getBytes());\n+                }\n+            }\n+            zos.closeEntry();\n+        } catch (IOException e) {\n+            throw new ExportException(ExportException.ExportProblem.WRITE_ERROR, e);\n+        }\n+        return translationFilenames;\n+    }\n+\n+    private String buildUniqueFilename(\n+            Dictionary.Translation translation,\n+            Map<String, Dictionary.Translation> translationFilenames) throws ExportException {\n+        String baseName = new File(translation.getFilename()).getName();\n+        if (!translationFilenames.containsKey(baseName)) {\n+            return baseName;\n+        }\n+        int appendage = 2;\n+        while (appendage < 100) {\n+            // We have to have this cut off at some point. If someone has 100 files of the same name\n+            // somehow, this is going to fail for them.\n+            String name = String.format(\"%s-%d\", baseName, appendage);\n+            if (!translationFilenames.containsKey(name)) {\n+                return name;\n+            }\n+            appendage++;\n+        }\n+        throw new ExportException(ExportException.ExportProblem.TOO_MANY_DUPLICATE_FILENAMES, null);\n+    }\n+\n+    private void addFileToZip(\n+            String filename, Dictionary.Translation translation, ZipOutputStream zos)\n+            throws ExportException {\n+        try {\n+            zos.putNextEntry(new ZipEntry(filename));\n+            FileInputStream translationInput =\n+                    new FileInputStream(new File(translation.getFilename()));\n+            byte[] buffer = new byte[BUFFER_SIZE];\n+            int read;\n+            while ((read = translationInput.read(buffer)) != -1) {\n+                zos.write(buffer, 0, read);\n+            }\n+            translationInput.close();\n+            zos.closeEntry();\n+        } catch (IOException e) {\n+            throw new ExportException(ExportException.ExportProblem.WRITE_ERROR, e);\n+        }\n+    }\n+\n+    public void importData(Context context, Uri source) throws ImportException {\n+        ZipInputStream zip = getZip(context, source);\n+        String filename = source.getLastPathSegment();\n+        File targetDir = getImportTargetDirectory(context, filename);\n+        String indexFilename = readFiles(zip, targetDir);\n+        List<ImportItem> index = getIndex(targetDir, indexFilename);\n+        loadData(context, targetDir, index);\n+    }\n+\n+    private ZipInputStream getZip(Context context, Uri source) throws ImportException {\n+        InputStream inputStream = null;\n+        try {\n+            inputStream = context.getContentResolver().openInputStream(source);\n+        } catch (FileNotFoundException e) {\n+            throw new ImportException(ImportException.ImportProblem.FILE_NOT_FOUND, e);\n+        }\n+        return new ZipInputStream(inputStream);\n+    }\n+\n+    private File getImportTargetDirectory(Context context, String filename) {\n+        File recordingsDir = new File(context.getFilesDir(), \"recordings\");\n+        File targetDir = new File(recordingsDir, String.format(\"%s-%d\",\n+                filename, (new Random()).nextInt()));\n+        targetDir.mkdirs();\n+        return targetDir;\n+    }\n+\n+    private String readFiles(ZipInputStream zip, File targetDir) throws ImportException {\n+        String indexFilename = null;\n+        FileOutputStream outputStream = null;\n+        Exception readError = null;\n+        try {\n+            ZipEntry zipEntry;\n+            while ((zipEntry = zip.getNextEntry()) != null) {\n+                String name = zipEntry.getName();\n+                if (INDEX_FILENAME.equals(name) || ALT_INDEX_FILENAME.equals(name)) {\n+                    indexFilename = name;\n+                }\n+                outputStream = new FileOutputStream(new File(targetDir, name));\n+                byte[] buffer = new byte[BUFFER_SIZE];\n+                int read;\n+                while ((read = zip.read(buffer)) != -1) {\n+                    outputStream.write(buffer, 0, read);\n+                }\n+                outputStream.flush();\n+                outputStream.close();\n+                outputStream = null;\n+            }\n+        } catch (IOException e) {\n+            readError = e;\n+        } finally {\n+            try {\n+                zip.close();\n+            } catch (IOException e) {\n+                readError = e;\n+            }\n+            if (outputStream != null) {\n+                try {\n+                    outputStream.close();\n+                } catch (IOException e) {\n+                    readError = e;\n+                }\n+            }\n+        }\n+        if (readError != null) {\n+            throw new ImportException(ImportException.ImportProblem.READ_ERROR, readError);\n+        }\n+        if (indexFilename == null) {\n+            targetDir.delete();\n+            throw new ImportException(ImportException.ImportProblem.NO_INDEX_FILE, null);\n+        }\n+        return indexFilename;\n+    }\n+\n+    private List<ImportItem> getIndex(File dir, String indexFilename) throws ImportException {\n+        List<ImportItem> results = new ArrayList<>();\n+        Scanner s;\n+        try {\n+            s = new Scanner(new File(dir, indexFilename));\n+        } catch (FileNotFoundException e) {\n+            return null;",
        "path": "app/src/main/java/org/mercycorps/translationcards/TxcPortingUtility.java",
        "position": null,
        "original_position": 211,
        "commit_id": "b4e194beb2e8991710be4220f5663ada0ca2415c",
        "original_commit_id": "f801f21d0e4ad21921f29ba3e8fbc14eb56be269",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could this be an ImportException as well?\n",
        "created_at": "2016-01-21T17:56:58Z",
        "updated_at": "2016-01-21T23:27:44Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/12#discussion_r50436835",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/12",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50436835"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/12#discussion_r50436835"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/12"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50482663",
        "pull_request_review_id": null,
        "id": 50482663,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgyNjYz",
        "diff_hunk": "@@ -47,7 +47,7 @@ public DbManager(Context context) {\n         // Getting translations.\n         Map<Long, List<Dictionary.Translation>> translations = new HashMap<>();\n         String[] columns = {TranslationsTable.ID, TranslationsTable.DICTIONARY_ID,\n-                TranslationsTable.LABEL, TranslationsTable.IS_ASSET, TranslationsTable.FILENAME};\n+                TranslationsTable.LABEL, TranslationsTable.IS_ASSET, TranslationsTable.FILENAME, TranslationsTable.TRANSLATED_TEXT};",
        "path": "app/src/main/java/org/mercycorps/translationcards/DbManager.java",
        "position": null,
        "original_position": 5,
        "commit_id": "c10acb5026158c1d0c57e4888d03147d590883de",
        "original_commit_id": "6fe10e9e5ecb5eef4d4890b5a1bffedfe65333c2",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've been trying to stick to a 100-character limit for each line (the code's a little easier to read that way, I think, at least if your screen isn't very wide). Would you mind doing that too?\n",
        "created_at": "2016-01-21T23:37:09Z",
        "updated_at": "2016-01-26T20:44:08Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/13#discussion_r50482663",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/13",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50482663"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/13#discussion_r50482663"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50482904",
        "pull_request_review_id": null,
        "id": 50482904,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgyOTA0",
        "diff_hunk": "@@ -210,13 +215,17 @@ private void populateIncludedData(SQLiteDatabase db) {\n                     Dictionary.Translation translation = dictionary.getTranslation(translationIndex);\n                     int itemIndex = dictionary.getTranslationCount() - translationIndex - 1;\n                     addTranslation(db, dictionaryId, translation.getLabel(),\n-                            translation.getIsAsset(), translation.getFilename(), itemIndex);\n+                            translation.getIsAsset(), translation.getFilename(), itemIndex, translation.getTranslatedText());\n                 }\n             }\n         }\n+        private static final String ALTER_TABLE_ADD_TRANSLATED_TEXT_COLUMN =\n+                \"ALTER TABLE\" + TranslationsTable.TABLE_NAME + \"ADD \" +TranslationsTable.TRANSLATED_TEXT +\" TEXT\";\n \n         public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n-            // Do nothing.\n+            if (oldVersion == 1 && newVersion == 2) {",
        "path": "app/src/main/java/org/mercycorps/translationcards/DbManager.java",
        "position": null,
        "original_position": 117,
        "commit_id": "c10acb5026158c1d0c57e4888d03147d590883de",
        "original_commit_id": "6fe10e9e5ecb5eef4d4890b5a1bffedfe65333c2",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think you can just make this \"if (oldVersion == 1)\". Plus, someone might hypothetically skips upgrades for a while and skip straight from version 1 of the database to version 3, and we'd still want to be sure we add the new column if that happened.\n",
        "created_at": "2016-01-21T23:39:23Z",
        "updated_at": "2016-01-26T20:44:08Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/13#discussion_r50482904",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/13",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50482904"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/13#discussion_r50482904"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50483143",
        "pull_request_review_id": null,
        "id": 50483143,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgzMTQz",
        "diff_hunk": "@@ -153,27 +153,35 @@ private void setDictionary(int dictionaryIndex) {\n \n     }\n \n-    private void play(int translationIndex, final ProgressBar progressBar) {\n+    private void play(int translationIndex, final ProgressBar progressBar, TextView cardText) {\n         if (lastMediaPlayerManager != null) {\n             lastMediaPlayerManager.stop();\n         }\n         MediaPlayer mediaPlayer = new MediaPlayer();\n         mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);\n+        Dictionary.Translation translationCard = dictionaries[currentDictionaryIndex].getTranslation(translationIndex);\n         try {\n-            dictionaries[currentDictionaryIndex]\n-                    .getTranslation(translationIndex)\n+            translationCard",
        "path": "app/src/main/java/org/mercycorps/translationcards/MainActivity.java",
        "position": null,
        "original_position": 25,
        "commit_id": "c10acb5026158c1d0c57e4888d03147d590883de",
        "original_commit_id": "6fe10e9e5ecb5eef4d4890b5a1bffedfe65333c2",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Does this line break need to be here anymore?\n",
        "created_at": "2016-01-21T23:41:56Z",
        "updated_at": "2016-01-26T20:44:08Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/13#discussion_r50483143",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/13",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50483143"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/13#discussion_r50483143"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50709982",
        "pull_request_review_id": null,
        "id": 50709982,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA5OTgy",
        "diff_hunk": "@@ -47,7 +47,7 @@ public DbManager(Context context) {\n         // Getting translations.\n         Map<Long, List<Dictionary.Translation>> translations = new HashMap<>();\n         String[] columns = {TranslationsTable.ID, TranslationsTable.DICTIONARY_ID,\n-                TranslationsTable.LABEL, TranslationsTable.IS_ASSET, TranslationsTable.FILENAME};\n+                TranslationsTable.LABEL, TranslationsTable.IS_ASSET, TranslationsTable.FILENAME, TranslationsTable.TRANSLATED_TEXT};",
        "path": "app/src/main/java/org/mercycorps/translationcards/DbManager.java",
        "position": null,
        "original_position": 5,
        "commit_id": "c10acb5026158c1d0c57e4888d03147d590883de",
        "original_commit_id": "6fe10e9e5ecb5eef4d4890b5a1bffedfe65333c2",
        "user": {
            "login": "natashaj7",
            "id": 1128671,
            "node_id": "MDQ6VXNlcjExMjg2NzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1128671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/natashaj7",
            "html_url": "https://github.com/natashaj7",
            "followers_url": "https://api.github.com/users/natashaj7/followers",
            "following_url": "https://api.github.com/users/natashaj7/following{/other_user}",
            "gists_url": "https://api.github.com/users/natashaj7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/natashaj7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/natashaj7/subscriptions",
            "organizations_url": "https://api.github.com/users/natashaj7/orgs",
            "repos_url": "https://api.github.com/users/natashaj7/repos",
            "events_url": "https://api.github.com/users/natashaj7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/natashaj7/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sounds like a good practice, we'll keep that in mind and break up this line\n",
        "created_at": "2016-01-25T15:44:01Z",
        "updated_at": "2016-01-26T20:44:08Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/13#discussion_r50709982",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/13",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/50709982"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/13#discussion_r50709982"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52347010",
        "pull_request_review_id": null,
        "id": 52347010,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ3MDEw",
        "diff_hunk": "@@ -91,19 +93,47 @@ public DbManager(Context context) {\n             }\n             res[dictionaryIndex] = new Dictionary(\n                     label, languageTranslations, dictionaryId, deckId);\n-            c.moveToNext();\n+            cursor.moveToNext();\n             dictionaryIndex++;\n         }\n         return res;\n     }\n \n-    public long addDeck(SQLiteDatabase writableDatabase, String label, String publisher) {\n+    public Dictionary[] getAllDictionariesForDeck(long deckId) {\n+        Cursor cursor = dbh.getReadableDatabase().query(\n+                DictionariesTable.TABLE_NAME, null,\n+                DictionariesTable.DECK_ID + \" = ?\",\n+                new String[]{String.valueOf(deckId)}, null, null,\n+                null);",
        "path": "app/src/main/java/org/mercycorps/translationcards/DbManager.java",
        "position": null,
        "original_position": 83,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It might be useful to order these by dictionary ID, to ensure a consistent ordering when people open/close the screen.\n",
        "created_at": "2016-02-09T17:59:45Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52347010",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52347010"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52347010"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52347125",
        "pull_request_review_id": null,
        "id": 52347125,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ3MTI1",
        "diff_hunk": "@@ -91,19 +93,47 @@ public DbManager(Context context) {\n             }\n             res[dictionaryIndex] = new Dictionary(\n                     label, languageTranslations, dictionaryId, deckId);\n-            c.moveToNext();\n+            cursor.moveToNext();\n             dictionaryIndex++;\n         }\n         return res;\n     }\n \n-    public long addDeck(SQLiteDatabase writableDatabase, String label, String publisher) {\n+    public Dictionary[] getAllDictionariesForDeck(long deckId) {\n+        Cursor cursor = dbh.getReadableDatabase().query(\n+                DictionariesTable.TABLE_NAME, null,\n+                DictionariesTable.DECK_ID + \" = ?\",\n+                new String[]{String.valueOf(deckId)}, null, null,\n+                null);\n+\n+        Dictionary[] dictionaries = new Dictionary[cursor.getCount()];\n+        boolean hasNext = cursor.moveToFirst();\n+        int i = 0;\n+        while (hasNext) {\n+            String label = cursor.getString(cursor.getColumnIndex(DictionariesTable.LABEL));\n+            Long dictionaryId = cursor.getLong(cursor.getColumnIndex(DictionariesTable.ID));",
        "path": "app/src/main/java/org/mercycorps/translationcards/DbManager.java",
        "position": null,
        "original_position": 90,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Minor: I think this could just be a primitive long rather than an object.\n",
        "created_at": "2016-02-09T18:00:30Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52347125",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52347125"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52347125"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52347516",
        "pull_request_review_id": null,
        "id": 52347516,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ3NTE2",
        "diff_hunk": "@@ -163,12 +196,79 @@ public void updateTranslation(\n         String[] whereArgs = new String[] {String.format(\"%d\", translationId)};\n         dbh.getWritableDatabase().update(\n                 TranslationsTable.TABLE_NAME, values, whereClause, whereArgs);\n+        dbh.close();\n     }\n \n     public void deleteTranslation(long translationId) {\n+\n         String whereClause = String.format(\"%s = ?\", TranslationsTable.ID);\n         String[] whereArgs = new String[] {String.format(\"%d\", translationId)};\n         dbh.getWritableDatabase().delete(TranslationsTable.TABLE_NAME, whereClause, whereArgs);\n+        dbh.close();\n+    }\n+\n+    public List<Deck> getAllDecks() {\n+        Cursor cursor = dbh.getReadableDatabase().query(\n+                DecksTable.TABLE_NAME, null,\n+                null, null, null, null,\n+                String.format(\"%s DESC\", DecksTable.ID));\n+        List<Deck> decks = new ArrayList<>();",
        "path": "app/src/main/java/org/mercycorps/translationcards/DbManager.java",
        "position": null,
        "original_position": 170,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure I understand why this needs to be a list. Why not an array of length cursor.getCount()?\nEdit: oh, do you need a list to use the ListAdapater? I thought you could use it with arrays but I don't remember for sure.\n",
        "created_at": "2016-02-09T18:03:26Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52347516",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52347516"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52347516"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52352564",
        "pull_request_review_id": null,
        "id": 52352564,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzUyNTY0",
        "diff_hunk": "@@ -0,0 +1,105 @@\n+package org.mercycorps.translationcards;\n+\n+import android.content.Context;\n+import android.content.Intent;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.support.v7.app.AppCompatActivity;\n+import android.support.v7.widget.Toolbar;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ArrayAdapter;\n+import android.widget.ListView;\n+import android.widget.TextView;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class DecksActivity extends AppCompatActivity {\n+    private static final String FEEDBACK_URL =\n+            \"https://docs.google.com/forms/d/1p8nJlpFSv03MXWf67pjh_fHyOfjbK9LJgF8hORNcvNM/\" +\n+                    \"viewform?entry.1158658650=0.2.1\";\n+    private DbManager dbManager;\n+\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_decks);\n+        initFeedbackButton();\n+        dbManager = new DbManager(this);\n+        initDecks();\n+        getSupportActionBar().setTitle(R.string.my_decks);\n+        getSupportActionBar().setElevation(0);",
        "path": "app/src/main/java/org/mercycorps/translationcards/DecksActivity.java",
        "position": 40,
        "original_position": 34,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is excellent. It probably sounds seems silly, but I had a hard time getting this right without using the action bar class (Olly eventually gave up on me and sent me a background image to use as a shadow).\n",
        "created_at": "2016-02-09T18:38:09Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52352564",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52352564"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52352564"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52353400",
        "pull_request_review_id": null,
        "id": 52353400,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzUzNDAw",
        "diff_hunk": "@@ -0,0 +1,105 @@\n+package org.mercycorps.translationcards;\n+\n+import android.content.Context;\n+import android.content.Intent;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.support.v7.app.AppCompatActivity;\n+import android.support.v7.widget.Toolbar;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ArrayAdapter;\n+import android.widget.ListView;\n+import android.widget.TextView;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class DecksActivity extends AppCompatActivity {\n+    private static final String FEEDBACK_URL =\n+            \"https://docs.google.com/forms/d/1p8nJlpFSv03MXWf67pjh_fHyOfjbK9LJgF8hORNcvNM/\" +\n+                    \"viewform?entry.1158658650=0.2.1\";\n+    private DbManager dbManager;\n+\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_decks);\n+        initFeedbackButton();\n+        dbManager = new DbManager(this);\n+        initDecks();\n+        getSupportActionBar().setTitle(R.string.my_decks);\n+        getSupportActionBar().setElevation(0);\n+    }\n+\n+    private void initDecks() {\n+        ListView decksListView = (ListView) findViewById(R.id.decks_list);\n+        ArrayList<Deck> listItems = new ArrayList<>();\n+        ArrayAdapter<Deck> listAdapter = new DecksAdapter(this,\n+                R.layout.deck_item, R.id.deck_name, listItems, decksListView);\n+        decksListView.setAdapter(listAdapter);\n+\n+        List<Deck> decks = dbManager.getAllDecks();\n+        for (Deck deck : decks) {\n+            listAdapter.add(deck);\n+        }\n+\n+    }\n+\n+    private void initFeedbackButton() {\n+        ListView decksListView = (ListView) findViewById(R.id.decks_list);\n+\n+        decksListView.addFooterView(getLayoutInflater()\n+                .inflate(R.layout.decks_footer, decksListView, false));\n+        findViewById(R.id.feedback_button).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(FEEDBACK_URL)));\n+            }\n+        });\n+    }\n+\n+    private class DecksAdapter extends ArrayAdapter<Deck> {\n+\n+        private ListView decks;\n+\n+        public DecksAdapter(Context context, int resource, int textViewResourceId,\n+                            List<Deck> objects, ListView decks) {\n+            super(context, resource, textViewResourceId, objects);\n+            this.decks = decks;\n+        }\n+\n+        @Override\n+        public View getView (final int position, View convertView, ViewGroup parent){\n+            if (convertView == null) {\n+                LayoutInflater layoutInflater = getLayoutInflater();\n+                convertView = layoutInflater.inflate(R.layout.deck_item, parent, false);\n+                convertView.findViewById(R.id.deck_card).setOnClickListener(new View.OnClickListener() {\n+\n+                    @Override\n+                    public void onClick(View v) {\n+                        Intent decksIntent = new Intent(DecksActivity.this, TranslationsActivity.class);\n+                        decksIntent.putExtra(\"Deck\", getItem(position));",
        "path": "app/src/main/java/org/mercycorps/translationcards/DecksActivity.java",
        "position": null,
        "original_position": 84,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you make \"deck\" a constant in DecksActivity (something like INTENT_KEY_DECK_ID)?\n",
        "created_at": "2016-02-09T18:43:37Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52353400",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52353400"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52353400"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52353838",
        "pull_request_review_id": null,
        "id": 52353838,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzUzODM4",
        "diff_hunk": "@@ -54,7 +55,11 @@ public void onClick(View v) {\n \n     private void setTranslationText(View playCardView) {\n         TextView playCardText = (TextView) playCardView.findViewById(R.id.play_card_text);\n-        playCardText.setText(translationCard.getTranslatedText());\n+        String translatedText = translationCard.getTranslatedText();\n+        if (translatedText.isEmpty()) {\n+            translatedText = \"No Translation Provided\";",
        "path": "app/src/main/java/org/mercycorps/translationcards/PlayCardFragment.java",
        "position": null,
        "original_position": 35,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you put this in res/values/strings.xml?\n",
        "created_at": "2016-02-09T18:46:37Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52353838",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52353838"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52353838"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52683991",
        "pull_request_review_id": null,
        "id": 52683991,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgzOTkx",
        "diff_hunk": "@@ -91,19 +93,47 @@ public DbManager(Context context) {\n             }\n             res[dictionaryIndex] = new Dictionary(\n                     label, languageTranslations, dictionaryId, deckId);\n-            c.moveToNext();\n+            cursor.moveToNext();\n             dictionaryIndex++;\n         }\n         return res;\n     }\n \n-    public long addDeck(SQLiteDatabase writableDatabase, String label, String publisher) {\n+    public Dictionary[] getAllDictionariesForDeck(long deckId) {\n+        Cursor cursor = dbh.getReadableDatabase().query(\n+                DictionariesTable.TABLE_NAME, null,\n+                DictionariesTable.DECK_ID + \" = ?\",\n+                new String[]{String.valueOf(deckId)}, null, null,\n+                null);",
        "path": "app/src/main/java/org/mercycorps/translationcards/DbManager.java",
        "position": null,
        "original_position": 83,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, that makes sense to me. \n",
        "created_at": "2016-02-11T23:17:15Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52683991",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52683991"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52683991"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52685262",
        "pull_request_review_id": null,
        "id": 52685262,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1MjYy",
        "diff_hunk": "@@ -91,19 +93,47 @@ public DbManager(Context context) {\n             }\n             res[dictionaryIndex] = new Dictionary(\n                     label, languageTranslations, dictionaryId, deckId);\n-            c.moveToNext();\n+            cursor.moveToNext();\n             dictionaryIndex++;\n         }\n         return res;\n     }\n \n-    public long addDeck(SQLiteDatabase writableDatabase, String label, String publisher) {\n+    public Dictionary[] getAllDictionariesForDeck(long deckId) {\n+        Cursor cursor = dbh.getReadableDatabase().query(\n+                DictionariesTable.TABLE_NAME, null,\n+                DictionariesTable.DECK_ID + \" = ?\",\n+                new String[]{String.valueOf(deckId)}, null, null,\n+                null);\n+\n+        Dictionary[] dictionaries = new Dictionary[cursor.getCount()];\n+        boolean hasNext = cursor.moveToFirst();\n+        int i = 0;\n+        while (hasNext) {\n+            String label = cursor.getString(cursor.getColumnIndex(DictionariesTable.LABEL));\n+            Long dictionaryId = cursor.getLong(cursor.getColumnIndex(DictionariesTable.ID));",
        "path": "app/src/main/java/org/mercycorps/translationcards/DbManager.java",
        "position": null,
        "original_position": 90,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good catch\n",
        "created_at": "2016-02-11T23:30:17Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52685262",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52685262"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52685262"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52685574",
        "pull_request_review_id": null,
        "id": 52685574,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1NTc0",
        "diff_hunk": "@@ -163,12 +196,79 @@ public void updateTranslation(\n         String[] whereArgs = new String[] {String.format(\"%d\", translationId)};\n         dbh.getWritableDatabase().update(\n                 TranslationsTable.TABLE_NAME, values, whereClause, whereArgs);\n+        dbh.close();\n     }\n \n     public void deleteTranslation(long translationId) {\n+\n         String whereClause = String.format(\"%s = ?\", TranslationsTable.ID);\n         String[] whereArgs = new String[] {String.format(\"%d\", translationId)};\n         dbh.getWritableDatabase().delete(TranslationsTable.TABLE_NAME, whereClause, whereArgs);\n+        dbh.close();\n+    }\n+\n+    public List<Deck> getAllDecks() {\n+        Cursor cursor = dbh.getReadableDatabase().query(\n+                DecksTable.TABLE_NAME, null,\n+                null, null, null, null,\n+                String.format(\"%s DESC\", DecksTable.ID));\n+        List<Deck> decks = new ArrayList<>();",
        "path": "app/src/main/java/org/mercycorps/translationcards/DbManager.java",
        "position": null,
        "original_position": 170,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We used a List object because it was a more familiar structure to work with. I think it does make sense to be an Array though to be consistent with the other return types in DbManager. I will make sure to change that.\n",
        "created_at": "2016-02-11T23:34:00Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52685574",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52685574"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52685574"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52685665",
        "pull_request_review_id": null,
        "id": 52685665,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1NjY1",
        "diff_hunk": "@@ -0,0 +1,105 @@\n+package org.mercycorps.translationcards;\n+\n+import android.content.Context;\n+import android.content.Intent;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.support.v7.app.AppCompatActivity;\n+import android.support.v7.widget.Toolbar;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ArrayAdapter;\n+import android.widget.ListView;\n+import android.widget.TextView;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class DecksActivity extends AppCompatActivity {\n+    private static final String FEEDBACK_URL =\n+            \"https://docs.google.com/forms/d/1p8nJlpFSv03MXWf67pjh_fHyOfjbK9LJgF8hORNcvNM/\" +\n+                    \"viewform?entry.1158658650=0.2.1\";\n+    private DbManager dbManager;\n+\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_decks);\n+        initFeedbackButton();\n+        dbManager = new DbManager(this);\n+        initDecks();\n+        getSupportActionBar().setTitle(R.string.my_decks);\n+        getSupportActionBar().setElevation(0);",
        "path": "app/src/main/java/org/mercycorps/translationcards/DecksActivity.java",
        "position": 40,
        "original_position": 34,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We had a lot of issues with this as well! You would think it would be easy to do...\n",
        "created_at": "2016-02-11T23:34:56Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52685665",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52685665"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52685665"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52685699",
        "pull_request_review_id": null,
        "id": 52685699,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1Njk5",
        "diff_hunk": "@@ -0,0 +1,105 @@\n+package org.mercycorps.translationcards;\n+\n+import android.content.Context;\n+import android.content.Intent;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.support.v7.app.AppCompatActivity;\n+import android.support.v7.widget.Toolbar;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ArrayAdapter;\n+import android.widget.ListView;\n+import android.widget.TextView;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class DecksActivity extends AppCompatActivity {\n+    private static final String FEEDBACK_URL =\n+            \"https://docs.google.com/forms/d/1p8nJlpFSv03MXWf67pjh_fHyOfjbK9LJgF8hORNcvNM/\" +\n+                    \"viewform?entry.1158658650=0.2.1\";\n+    private DbManager dbManager;\n+\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_decks);\n+        initFeedbackButton();\n+        dbManager = new DbManager(this);\n+        initDecks();\n+        getSupportActionBar().setTitle(R.string.my_decks);\n+        getSupportActionBar().setElevation(0);\n+    }\n+\n+    private void initDecks() {\n+        ListView decksListView = (ListView) findViewById(R.id.decks_list);\n+        ArrayList<Deck> listItems = new ArrayList<>();\n+        ArrayAdapter<Deck> listAdapter = new DecksAdapter(this,\n+                R.layout.deck_item, R.id.deck_name, listItems, decksListView);\n+        decksListView.setAdapter(listAdapter);\n+\n+        List<Deck> decks = dbManager.getAllDecks();\n+        for (Deck deck : decks) {\n+            listAdapter.add(deck);\n+        }\n+\n+    }\n+\n+    private void initFeedbackButton() {\n+        ListView decksListView = (ListView) findViewById(R.id.decks_list);\n+\n+        decksListView.addFooterView(getLayoutInflater()\n+                .inflate(R.layout.decks_footer, decksListView, false));\n+        findViewById(R.id.feedback_button).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(FEEDBACK_URL)));\n+            }\n+        });\n+    }\n+\n+    private class DecksAdapter extends ArrayAdapter<Deck> {\n+\n+        private ListView decks;\n+\n+        public DecksAdapter(Context context, int resource, int textViewResourceId,\n+                            List<Deck> objects, ListView decks) {\n+            super(context, resource, textViewResourceId, objects);\n+            this.decks = decks;\n+        }\n+\n+        @Override\n+        public View getView (final int position, View convertView, ViewGroup parent){\n+            if (convertView == null) {\n+                LayoutInflater layoutInflater = getLayoutInflater();\n+                convertView = layoutInflater.inflate(R.layout.deck_item, parent, false);\n+                convertView.findViewById(R.id.deck_card).setOnClickListener(new View.OnClickListener() {\n+\n+                    @Override\n+                    public void onClick(View v) {\n+                        Intent decksIntent = new Intent(DecksActivity.this, TranslationsActivity.class);\n+                        decksIntent.putExtra(\"Deck\", getItem(position));",
        "path": "app/src/main/java/org/mercycorps/translationcards/DecksActivity.java",
        "position": null,
        "original_position": 84,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2016-02-11T23:35:13Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52685699",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52685699"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52685699"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52686320",
        "pull_request_review_id": null,
        "id": 52686320,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg2MzIw",
        "diff_hunk": "@@ -54,7 +55,11 @@ public void onClick(View v) {\n \n     private void setTranslationText(View playCardView) {\n         TextView playCardText = (TextView) playCardView.findViewById(R.id.play_card_text);\n-        playCardText.setText(translationCard.getTranslatedText());\n+        String translatedText = translationCard.getTranslatedText();\n+        if (translatedText.isEmpty()) {\n+            translatedText = \"No Translation Provided\";",
        "path": "app/src/main/java/org/mercycorps/translationcards/PlayCardFragment.java",
        "position": null,
        "original_position": 35,
        "commit_id": "c6599e772ce7d6bd492b09cffcb8427058d6556a",
        "original_commit_id": "bc8785afd9f0ed6ce07fa20ce785b4f140bf3cb4",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2016-02-11T23:41:19Z",
        "updated_at": "2016-02-12T02:08:28Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52686320",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/52686320"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/19#discussion_r52686320"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/19"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53802099",
        "pull_request_review_id": null,
        "id": 53802099,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAyMDk5",
        "diff_hunk": "@@ -0,0 +1,86 @@\n+package org.mercycorps.translationcards;\n+\n+import android.media.MediaPlayer;\n+import android.util.Log;\n+import android.widget.ProgressBar;\n+\n+import java.io.IOException;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class MediaPlayerManager implements Runnable {",
        "path": "app/src/main/java/org/mercycorps/translationcards/MediaPlayerManager.java",
        "position": null,
        "original_position": 11,
        "commit_id": "817bcae8beb3f21dbc4b3ed49cd633c633a87683",
        "original_commit_id": "f00847de041846118c0a40ee5f940b2f519803e0",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If it's necessary to pull out so many of these smaller classes, could you put some of them in a package (maybe org.mercycorps.translationcards.playing, for classes related to playing audio) and make stuff package-private when possible?\n",
        "created_at": "2016-02-23T16:07:55Z",
        "updated_at": "2016-02-24T16:51:13Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53802099",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53802099"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53802099"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53802763",
        "pull_request_review_id": null,
        "id": 53802763,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAyNzYz",
        "diff_hunk": "@@ -0,0 +1,25 @@\n+package org.mercycorps.translationcards;\n+\n+import android.app.Application;\n+import android.media.AudioManager;\n+import android.media.MediaPlayer;\n+\n+/**\n+ * Created by njimenez on 2/18/16.",
        "path": "app/src/main/java/org/mercycorps/translationcards/MainApplication.java",
        "position": null,
        "original_position": 8,
        "commit_id": "817bcae8beb3f21dbc4b3ed49cd633c633a87683",
        "original_commit_id": "f00847de041846118c0a40ee5f940b2f519803e0",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you add some javadoc explaining that this is used to share the MediaPlayerManager between the recording and playing activities (I think?), and why it's necessary to do that?\n",
        "created_at": "2016-02-23T16:11:35Z",
        "updated_at": "2016-02-24T16:51:13Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53802763",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53802763"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53802763"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53803086",
        "pull_request_review_id": null,
        "id": 53803086,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzMDg2",
        "diff_hunk": "@@ -305,10 +315,10 @@ private void setLabelNextButtonEnabled(boolean enabled) {\n         TextView text = (TextView) findViewById(R.id.recording_label_next_text);\n         ImageView image = (ImageView) findViewById(R.id.recording_label_next_image);\n         if (enabled) {\n-            text.setTextColor(getResources().getColor(R.color.primaryTextColor));\n+            text.setTextColor(ContextCompat.getColor(this, R.color.primaryTextColor));",
        "path": "app/src/main/java/org/mercycorps/translationcards/RecordingActivity.java",
        "position": 109,
        "original_position": 91,
        "commit_id": "817bcae8beb3f21dbc4b3ed49cd633c633a87683",
        "original_commit_id": "f00847de041846118c0a40ee5f940b2f519803e0",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why the change from getResources (just curious)?\n",
        "created_at": "2016-02-23T16:13:23Z",
        "updated_at": "2016-02-24T16:51:13Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53803086",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53803086"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53803086"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53803420",
        "pull_request_review_id": null,
        "id": 53803420,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNDIw",
        "diff_hunk": "@@ -503,15 +513,33 @@ private void moveToDoneStep() {\n         titleView.setText(getString(R.string.recording_done_title, dictionaryLabel));\n         TextView detailView = (TextView) findViewById(R.id.recording_done_detail);\n         detailView.setText(getString(R.string.recording_done_detail, dictionaryLabel));\n-        TextView cardTextView = (TextView) findViewById(R.id.card_text);\n+        TextView cardTextView = (TextView) findViewById(R.id.origin_translation_text);\n         cardTextView.setText(label);\n-        findViewById(R.id.card_edit).setOnClickListener(new View.OnClickListener() {\n+        TextView translatedCardText = (TextView) findViewById(R.id.translated_text);\n+        if (translatedText.trim().isEmpty()) {\n+            translatedCardText.setHint(String.format(getString(R.string.translated_text_hint), dictionaryLabel));\n+            translatedCardText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);\n+        } else {\n+            translatedCardText.setText(translatedText);\n+            translatedCardText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);\n+        }\n+        ImageView cardIndicator = (ImageView) findViewById(R.id.indicator_icon);\n+        cardIndicator.setBackgroundResource(R.drawable.collapse_arrow);\n+        findViewById(R.id.translation_child).setVisibility(View.VISIBLE);\n+        findViewById(R.id.translation_child_actions).setVisibility(View.GONE);\n+\n+        findViewById(R.id.recording_done_card).setOnClickListener(new CardAudioClickListener(filename,",
        "path": "app/src/main/java/org/mercycorps/translationcards/RecordingActivity.java",
        "position": null,
        "original_position": 152,
        "commit_id": "817bcae8beb3f21dbc4b3ed49cd633c633a87683",
        "original_commit_id": "f00847de041846118c0a40ee5f940b2f519803e0",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Would it be possible to use the PlayCardFragment for this instead? It seems like you might be able to save a lot of trouble that way (for instance, maybe MediaPlayerManager could be a static field there).\n",
        "created_at": "2016-02-23T16:15:31Z",
        "updated_at": "2016-02-24T16:51:13Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53803420",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53803420"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53803420"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53807652",
        "pull_request_review_id": null,
        "id": 53807652,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NjUy",
        "diff_hunk": "@@ -0,0 +1,86 @@\n+package org.mercycorps.translationcards;\n+\n+import android.media.MediaPlayer;\n+import android.util.Log;\n+import android.widget.ProgressBar;\n+\n+import java.io.IOException;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class MediaPlayerManager implements Runnable {",
        "path": "app/src/main/java/org/mercycorps/translationcards/MediaPlayerManager.java",
        "position": null,
        "original_position": 11,
        "commit_id": "817bcae8beb3f21dbc4b3ed49cd633c633a87683",
        "original_commit_id": "f00847de041846118c0a40ee5f940b2f519803e0",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes we can put them in a package. We extracted this because we were starting to use it in multiple places, and added some tests to help with the extracting of the class. Will packaging some of these smaller classes cause you many merge conflicts?\n",
        "created_at": "2016-02-23T16:38:27Z",
        "updated_at": "2016-02-24T16:51:13Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53807652",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53807652"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53807652"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53807769",
        "pull_request_review_id": null,
        "id": 53807769,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NzY5",
        "diff_hunk": "@@ -0,0 +1,25 @@\n+package org.mercycorps.translationcards;\n+\n+import android.app.Application;\n+import android.media.AudioManager;\n+import android.media.MediaPlayer;\n+\n+/**\n+ * Created by njimenez on 2/18/16.",
        "path": "app/src/main/java/org/mercycorps/translationcards/MainApplication.java",
        "position": null,
        "original_position": 8,
        "commit_id": "817bcae8beb3f21dbc4b3ed49cd633c633a87683",
        "original_commit_id": "f00847de041846118c0a40ee5f940b2f519803e0",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yup, we will do that! Should we start making this convention? Or only with extracted classes?\n",
        "created_at": "2016-02-23T16:39:05Z",
        "updated_at": "2016-02-24T16:51:13Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53807769",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53807769"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53807769"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53807984",
        "pull_request_review_id": null,
        "id": 53807984,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3OTg0",
        "diff_hunk": "@@ -305,10 +315,10 @@ private void setLabelNextButtonEnabled(boolean enabled) {\n         TextView text = (TextView) findViewById(R.id.recording_label_next_text);\n         ImageView image = (ImageView) findViewById(R.id.recording_label_next_image);\n         if (enabled) {\n-            text.setTextColor(getResources().getColor(R.color.primaryTextColor));\n+            text.setTextColor(ContextCompat.getColor(this, R.color.primaryTextColor));",
        "path": "app/src/main/java/org/mercycorps/translationcards/RecordingActivity.java",
        "position": 109,
        "original_position": 91,
        "commit_id": "817bcae8beb3f21dbc4b3ed49cd633c633a87683",
        "original_commit_id": "f00847de041846118c0a40ee5f940b2f519803e0",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Android Studio kept yelling at us and saying getResources().getColor(...) is deprecated. So we found ContextCompat.getColor(...) as a backward compatible solution that doesn't seem to be deprecated.\n",
        "created_at": "2016-02-23T16:40:12Z",
        "updated_at": "2016-02-24T16:51:13Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53807984",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53807984"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53807984"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53807998",
        "pull_request_review_id": null,
        "id": 53807998,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3OTk4",
        "diff_hunk": "@@ -0,0 +1,86 @@\n+package org.mercycorps.translationcards;\n+\n+import android.media.MediaPlayer;\n+import android.util.Log;\n+import android.widget.ProgressBar;\n+\n+import java.io.IOException;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+public class MediaPlayerManager implements Runnable {",
        "path": "app/src/main/java/org/mercycorps/translationcards/MediaPlayerManager.java",
        "position": null,
        "original_position": 11,
        "commit_id": "817bcae8beb3f21dbc4b3ed49cd633c633a87683",
        "original_commit_id": "f00847de041846118c0a40ee5f940b2f519803e0",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think I made any changes in any of these smaller classes (either because I didn't need to or because they hadn't been pulled out last time I merged), so it shouldn't make a difference to me.\n",
        "created_at": "2016-02-23T16:40:15Z",
        "updated_at": "2016-02-24T16:51:13Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53807998",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53807998"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53807998"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53808174",
        "pull_request_review_id": null,
        "id": 53808174,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA4MTc0",
        "diff_hunk": "@@ -503,15 +513,33 @@ private void moveToDoneStep() {\n         titleView.setText(getString(R.string.recording_done_title, dictionaryLabel));\n         TextView detailView = (TextView) findViewById(R.id.recording_done_detail);\n         detailView.setText(getString(R.string.recording_done_detail, dictionaryLabel));\n-        TextView cardTextView = (TextView) findViewById(R.id.card_text);\n+        TextView cardTextView = (TextView) findViewById(R.id.origin_translation_text);\n         cardTextView.setText(label);\n-        findViewById(R.id.card_edit).setOnClickListener(new View.OnClickListener() {\n+        TextView translatedCardText = (TextView) findViewById(R.id.translated_text);\n+        if (translatedText.trim().isEmpty()) {\n+            translatedCardText.setHint(String.format(getString(R.string.translated_text_hint), dictionaryLabel));\n+            translatedCardText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);\n+        } else {\n+            translatedCardText.setText(translatedText);\n+            translatedCardText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);\n+        }\n+        ImageView cardIndicator = (ImageView) findViewById(R.id.indicator_icon);\n+        cardIndicator.setBackgroundResource(R.drawable.collapse_arrow);\n+        findViewById(R.id.translation_child).setVisibility(View.VISIBLE);\n+        findViewById(R.id.translation_child_actions).setVisibility(View.GONE);\n+\n+        findViewById(R.id.recording_done_card).setOnClickListener(new CardAudioClickListener(filename,",
        "path": "app/src/main/java/org/mercycorps/translationcards/RecordingActivity.java",
        "position": null,
        "original_position": 152,
        "commit_id": "817bcae8beb3f21dbc4b3ed49cd633c633a87683",
        "original_commit_id": "f00847de041846118c0a40ee5f940b2f519803e0",
        "user": {
            "login": "PatrickDale",
            "id": 5590812,
            "node_id": "MDQ6VXNlcjU1OTA4MTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5590812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PatrickDale",
            "html_url": "https://github.com/PatrickDale",
            "followers_url": "https://api.github.com/users/PatrickDale/followers",
            "following_url": "https://api.github.com/users/PatrickDale/following{/other_user}",
            "gists_url": "https://api.github.com/users/PatrickDale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PatrickDale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PatrickDale/subscriptions",
            "organizations_url": "https://api.github.com/users/PatrickDale/orgs",
            "repos_url": "https://api.github.com/users/PatrickDale/repos",
            "events_url": "https://api.github.com/users/PatrickDale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PatrickDale/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could we talk for a bit about this when you have free time? It may clear up some confusion we have on our end.\n",
        "created_at": "2016-02-23T16:41:05Z",
        "updated_at": "2016-02-24T16:51:13Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53808174",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53808174"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53808174"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53968818",
        "pull_request_review_id": null,
        "id": 53968818,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4ODE4",
        "diff_hunk": "@@ -0,0 +1,25 @@\n+package org.mercycorps.translationcards;\n+\n+import android.app.Application;\n+import android.media.AudioManager;\n+import android.media.MediaPlayer;\n+\n+/**\n+ * Created by njimenez on 2/18/16.",
        "path": "app/src/main/java/org/mercycorps/translationcards/MainApplication.java",
        "position": null,
        "original_position": 8,
        "commit_id": "817bcae8beb3f21dbc4b3ed49cd633c633a87683",
        "original_commit_id": "f00847de041846118c0a40ee5f940b2f519803e0",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's not really because it's extracted, it's because it's not obvious (at least to me) what the class is needed for. If anyone else comes along and wonders the same thing, it'd be nice to have the answer right there.\n",
        "created_at": "2016-02-24T16:53:43Z",
        "updated_at": "2016-02-24T16:53:43Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53968818",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/53968818"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/23#discussion_r53968818"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/54444185",
        "pull_request_review_id": null,
        "id": 54444185,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ0MTg1",
        "diff_hunk": "@@ -65,7 +65,7 @@ public void initFeedbackButton_shouldShowFeedbackButton() {\n     public void initFeedbackButton_shouldLaunchFeedbackForm() {\n         decksActivity.findViewById(R.id.feedback_button).performClick();\n \n-        Intent expectedIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://docs.google.com/forms/d/1p8nJlpFSv03MXWf67pjh_fHyOfjbK9LJgF8hORNcvNM/viewform?entry.1158658650=0.3.0\"));\n+        Intent expectedIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://docs.google.com/forms/d/1p8nJlpFSv03MXWf67pjh_fHyOfjbK9LJgF8hORNcvNM/viewform?entry.1158658650=0.3.1\"));",
        "path": "app/src/test/java/org/mercycorps/translationcards/activity/DecksActivityTest.java",
        "position": 5,
        "original_position": 5,
        "commit_id": "42a8f0c2ca2d2e13a003bb36b22c22bfd01599b7",
        "original_commit_id": "42a8f0c2ca2d2e13a003bb36b22c22bfd01599b7",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah, sorry I didn't notice that. Thanks for fixing it.\nAt some point (not now, just at some point), it might be worth it to make this test less brittle and only check that the Intent's URI starts with what we expect, so it doesn't have to be update for each version release.\n",
        "created_at": "2016-02-29T17:23:51Z",
        "updated_at": "2016-02-29T17:23:51Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/44#discussion_r54444185",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/44",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/54444185"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/44#discussion_r54444185"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/44"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/54452983",
        "pull_request_review_id": null,
        "id": 54452983,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyOTgz",
        "diff_hunk": "@@ -76,6 +77,8 @@\n     public static final String INTENT_KEY_TRANSLATION_TEXT = \"translatedText\";\n \n     private static final int PERMISSIONS_REQUEST_RECORD_AUDIO = 1;\n+    public static final int NO_DB_ID = 0;",
        "path": "app/src/main/java/org/mercycorps/translationcards/activity/RecordingActivity.java",
        "position": null,
        "original_position": 12,
        "commit_id": "14f0b92ed411e6a7bf508e1bd11d1018b24fd153",
        "original_commit_id": "54db9858fe8e05e784893d84354f3948c7817c8b",
        "user": {
            "login": "nworden",
            "id": 9059304,
            "node_id": "MDQ6VXNlcjkwNTkzMDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9059304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nworden",
            "html_url": "https://github.com/nworden",
            "followers_url": "https://api.github.com/users/nworden/followers",
            "following_url": "https://api.github.com/users/nworden/following{/other_user}",
            "gists_url": "https://api.github.com/users/nworden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nworden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nworden/subscriptions",
            "organizations_url": "https://api.github.com/users/nworden/orgs",
            "repos_url": "https://api.github.com/users/nworden/repos",
            "events_url": "https://api.github.com/users/nworden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nworden/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe make this -1? I'm not sure SQLite doesn't start at 0.\n",
        "created_at": "2016-02-29T18:25:07Z",
        "updated_at": "2016-02-29T18:31:57Z",
        "html_url": "https://github.com/translation-cards/translation-cards/pull/45#discussion_r54452983",
        "pull_request_url": "https://api.github.com/repos/translation-cards/translation-cards/pulls/45",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/comments/54452983"
            },
            "html": {
                "href": "https://github.com/translation-cards/translation-cards/pull/45#discussion_r54452983"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/translation-cards/translation-cards/pulls/45"
            }
        }
    }
]