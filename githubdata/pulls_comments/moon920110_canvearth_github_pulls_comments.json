[
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200126695",
        "pull_request_review_id": 134380350,
        "id": 200126695,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDEyNjY5NQ==",
        "diff_hunk": "@@ -1,23 +1,23 @@\n package com.canvearth.canvearth.pixel;\n \n public class Pixel {\n-    public Long x;\n-    public Long y;\n-    public Long level;\n+    public int x;\n+    public int y;\n+    public int zoom;\n ",
        "path": "app/src/main/java/com/canvearth/canvearth/pixel/Pixel.java",
        "position": 10,
        "original_position": 10,
        "commit_id": "bb2a60ffb0afe84d44017dfc4bc7150777675be1",
        "original_commit_id": "bb2a60ffb0afe84d44017dfc4bc7150777675be1",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "These variable Types were intended. (For Firebase use).",
        "created_at": "2018-07-04T13:28:14Z",
        "updated_at": "2018-07-04T13:28:14Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/4#discussion_r200126695",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/4",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200126695"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/4#discussion_r200126695"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200162056",
        "pull_request_review_id": 134423929,
        "id": 200162056,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDE2MjA1Ng==",
        "diff_hunk": "@@ -1,23 +1,23 @@\n package com.canvearth.canvearth.pixel;\n \n public class Pixel {\n-    public Long x;\n-    public Long y;\n-    public Long level;\n+    public int x;\n+    public int y;\n+    public int zoom;\n ",
        "path": "app/src/main/java/com/canvearth/canvearth/pixel/Pixel.java",
        "position": 10,
        "original_position": 10,
        "commit_id": "bb2a60ffb0afe84d44017dfc4bc7150777675be1",
        "original_commit_id": "bb2a60ffb0afe84d44017dfc4bc7150777675be1",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since I need this commit, I will fix this myself later myself.",
        "created_at": "2018-07-04T15:39:47Z",
        "updated_at": "2018-07-04T15:39:47Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/4#discussion_r200162056",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/4",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200162056"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/4#discussion_r200162056"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/4"
            }
        },
        "in_reply_to_id": 200126695
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200163071",
        "pull_request_review_id": 134425184,
        "id": 200163071,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDE2MzA3MQ==",
        "diff_hunk": "@@ -1,23 +1,23 @@\n package com.canvearth.canvearth.pixel;\n \n public class Pixel {\n-    public Long x;\n-    public Long y;\n-    public Long level;\n+    public int x;\n+    public int y;\n+    public int zoom;\n ",
        "path": "app/src/main/java/com/canvearth/canvearth/pixel/Pixel.java",
        "position": 10,
        "original_position": 10,
        "commit_id": "bb2a60ffb0afe84d44017dfc4bc7150777675be1",
        "original_commit_id": "bb2a60ffb0afe84d44017dfc4bc7150777675be1",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Then you'll need to also fix the PixelUtils too. Just keep it in mind~",
        "created_at": "2018-07-04T15:44:49Z",
        "updated_at": "2018-07-04T15:44:50Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/4#discussion_r200163071",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/4",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200163071"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/4#discussion_r200163071"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/4"
            }
        },
        "in_reply_to_id": 200126695
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200729269",
        "pull_request_review_id": 135106872,
        "id": 200729269,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDcyOTI2OQ==",
        "diff_hunk": "@@ -45,26 +48,36 @@ public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\n             }\n         };\n         mCallbackManager = CallbackManager.Factory.create();\n-        LoginButton loginButton = findViewById(R.id.button_facebook_login);\n+        final LoginButton loginButton = findViewById(R.id.button_facebook_login);\n         loginButton.setReadPermissions(\"email\", \"public_profile\");\n-        loginButton.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {\n+//        loginButton.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {",
        "path": "app/src/main/java/com/canvearth/canvearth/LoginActivity.java",
        "position": null,
        "original_position": 18,
        "commit_id": "6f15970338c306d82a620b3e20342fc7dda7f28e",
        "original_commit_id": "202b86f7ea3e143a12b47cae720fc92b4620cf88",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you leave comment for this temporary comment-out?",
        "created_at": "2018-07-06T18:02:12Z",
        "updated_at": "2018-07-07T12:40:11Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/15#discussion_r200729269",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/15",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200729269"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/15#discussion_r200729269"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/15"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200730771",
        "pull_request_review_id": 135108649,
        "id": 200730771,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDczMDc3MQ==",
        "diff_hunk": "@@ -0,0 +1,58 @@\n+package com.canvearth.canvearth.client;",
        "path": "app/src/main/java/com/canvearth/canvearth/client/PixelManager.java",
        "position": null,
        "original_position": 1,
        "commit_id": "6f15970338c306d82a620b3e20342fc7dda7f28e",
        "original_commit_id": "202b86f7ea3e143a12b47cae720fc92b4620cf88",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since we have PixelDataManager class, I think this class name can be confusing. How about to rename PixelDrawManager (or something else) ?",
        "created_at": "2018-07-06T18:08:30Z",
        "updated_at": "2018-07-07T12:40:11Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/15#discussion_r200730771",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/15",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200730771"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/15#discussion_r200730771"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/15"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200733061",
        "pull_request_review_id": 135111373,
        "id": 200733061,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDczMzA2MQ==",
        "diff_hunk": "@@ -1,11 +1,19 @@\n package com.canvearth.canvearth.utils;\n \n-public class Constants {\n-    public static int LEAF_PIXEL_LEVEL = 20; // TODO to be fixed\n+import android.graphics.Color;\n \n+public class Constants {\n+    public static int LEAF_PIXEL_ZOOM_LEVEL = 20; // TODO to be fixed\n+    public static int GRID_SHOW_MAX_ZOOM_LEVEL = 18;\n+    public static int GRID_SHOW_MIN_ZOOM_LEVEL = 14;\n+    public static int VIEW_GRID_ZOOM_DIFF = 3;\n+    public static int MAX_GRID_ZOOM_LEVEL = 20;",
        "path": "app/src/main/java/com/canvearth/canvearth/utils/Constants.java",
        "position": null,
        "original_position": 12,
        "commit_id": "6f15970338c306d82a620b3e20342fc7dda7f28e",
        "original_commit_id": "202b86f7ea3e143a12b47cae720fc92b4620cf88",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Isn't `MAX_GRID_ZOOM_LEVEL`'s role same with `LEAF_PIXEL_ZOOM_LEVEL`?",
        "created_at": "2018-07-06T18:18:01Z",
        "updated_at": "2018-07-07T12:40:11Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/15#discussion_r200733061",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/15",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200733061"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/15#discussion_r200733061"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/15"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200802205",
        "pull_request_review_id": 135193417,
        "id": 200802205,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgwMjIwNQ==",
        "diff_hunk": "@@ -45,26 +48,36 @@ public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\n             }\n         };\n         mCallbackManager = CallbackManager.Factory.create();\n-        LoginButton loginButton = findViewById(R.id.button_facebook_login);\n+        final LoginButton loginButton = findViewById(R.id.button_facebook_login);\n         loginButton.setReadPermissions(\"email\", \"public_profile\");\n-        loginButton.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {\n+//        loginButton.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {",
        "path": "app/src/main/java/com/canvearth/canvearth/LoginActivity.java",
        "position": null,
        "original_position": 18,
        "commit_id": "6f15970338c306d82a620b3e20342fc7dda7f28e",
        "original_commit_id": "202b86f7ea3e143a12b47cae720fc92b4620cf88",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done",
        "created_at": "2018-07-07T04:34:52Z",
        "updated_at": "2018-07-07T12:40:11Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/15#discussion_r200802205",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/15",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200802205"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/15#discussion_r200802205"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/15"
            }
        },
        "in_reply_to_id": 200729269
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200802209",
        "pull_request_review_id": 135193420,
        "id": 200802209,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgwMjIwOQ==",
        "diff_hunk": "@@ -0,0 +1,58 @@\n+package com.canvearth.canvearth.client;",
        "path": "app/src/main/java/com/canvearth/canvearth/client/PixelManager.java",
        "position": null,
        "original_position": 1,
        "commit_id": "6f15970338c306d82a620b3e20342fc7dda7f28e",
        "original_commit_id": "202b86f7ea3e143a12b47cae720fc92b4620cf88",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Changed to GridManager",
        "created_at": "2018-07-07T04:35:00Z",
        "updated_at": "2018-07-07T12:40:11Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/15#discussion_r200802209",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/15",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200802209"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/15#discussion_r200802209"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/15"
            }
        },
        "in_reply_to_id": 200730771
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200802213",
        "pull_request_review_id": 135193423,
        "id": 200802213,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgwMjIxMw==",
        "diff_hunk": "@@ -1,11 +1,19 @@\n package com.canvearth.canvearth.utils;\n \n-public class Constants {\n-    public static int LEAF_PIXEL_LEVEL = 20; // TODO to be fixed\n+import android.graphics.Color;\n \n+public class Constants {\n+    public static int LEAF_PIXEL_ZOOM_LEVEL = 20; // TODO to be fixed\n+    public static int GRID_SHOW_MAX_ZOOM_LEVEL = 18;\n+    public static int GRID_SHOW_MIN_ZOOM_LEVEL = 14;\n+    public static int VIEW_GRID_ZOOM_DIFF = 3;\n+    public static int MAX_GRID_ZOOM_LEVEL = 20;",
        "path": "app/src/main/java/com/canvearth/canvearth/utils/Constants.java",
        "position": null,
        "original_position": 12,
        "commit_id": "6f15970338c306d82a620b3e20342fc7dda7f28e",
        "original_commit_id": "202b86f7ea3e143a12b47cae720fc92b4620cf88",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yep, removed MAX_GRID_ZOOM_LEVEL",
        "created_at": "2018-07-07T04:35:13Z",
        "updated_at": "2018-07-07T12:40:11Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/15#discussion_r200802213",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/15",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200802213"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/15#discussion_r200802213"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/15"
            }
        },
        "in_reply_to_id": 200733061
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815214",
        "pull_request_review_id": 135207424,
        "id": 200815214,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgxNTIxNA==",
        "diff_hunk": "@@ -35,31 +35,46 @@ public Color clone() throws CloneNotSupportedException {\n         return color;\n     }\n \n-    public boolean isTransparent() {\n+    public boolean equals(Color color) {\n+        return this.r.longValue() == color.r.longValue()\n+                && this.g.longValue() == color.g.longValue()\n+                && this.b.longValue() == color.b.longValue()\n+                && this.a.longValue() == color.a.longValue();\n+    }\n+\n+    public boolean transparent() {\n         return (this.a < Constants.COLOR_TRANSPARENT_BOUND) ;\n     }\n \n     public String toString() {\n         return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n     }\n \n+    // TODO consider this one more time\n     public void replaceColorPortion(Color originColor, Color newColor, double portion) {",
        "path": "app/src/main/java/com/canvearth/canvearth/pixel/Color.java",
        "position": null,
        "original_position": 21,
        "commit_id": "c38de8719aee52a11282ed15ab31758b8f95b3f4",
        "original_commit_id": "39add82b6793d26185e14723003c78e00ac2f87b",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What does this method do? Is originColor needed?",
        "created_at": "2018-07-07T15:30:51Z",
        "updated_at": "2018-07-07T15:50:18Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815214",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/18",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815214"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815214"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815390",
        "pull_request_review_id": 135207599,
        "id": 200815390,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgxNTM5MA==",
        "diff_hunk": "@@ -35,31 +35,46 @@ public Color clone() throws CloneNotSupportedException {\n         return color;\n     }\n \n-    public boolean isTransparent() {\n+    public boolean equals(Color color) {\n+        return this.r.longValue() == color.r.longValue()\n+                && this.g.longValue() == color.g.longValue()\n+                && this.b.longValue() == color.b.longValue()\n+                && this.a.longValue() == color.a.longValue();\n+    }\n+\n+    public boolean transparent() {\n         return (this.a < Constants.COLOR_TRANSPARENT_BOUND) ;\n     }\n \n     public String toString() {\n         return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n     }\n \n+    // TODO consider this one more time\n     public void replaceColorPortion(Color originColor, Color newColor, double portion) {",
        "path": "app/src/main/java/com/canvearth/canvearth/pixel/Color.java",
        "position": null,
        "original_position": 21,
        "commit_id": "c38de8719aee52a11282ed15ab31758b8f95b3f4",
        "original_commit_id": "39add82b6793d26185e14723003c78e00ac2f87b",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This method have to be improved.\r\nI'll explain this method's role.\r\nLet's consider the situation when parent pixel's color A is composed of its children's color B,C,D,E.\r\nWhen B is changed to B', A have to be changed accordingly.\r\nIn this situation, we have to call `A.replaceColorPortion(B, B', 0.25)` (0.25 is because B contributes 0.25 for A)\r\n",
        "created_at": "2018-07-07T15:38:04Z",
        "updated_at": "2018-07-07T15:50:18Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815390",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/18",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815390"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815390"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/18"
            }
        },
        "in_reply_to_id": 200815214
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815462",
        "pull_request_review_id": 135207675,
        "id": 200815462,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgxNTQ2Mg==",
        "diff_hunk": "@@ -101,7 +118,58 @@ public void onCancelled(@NonNull DatabaseError databaseError) {\n         return fbPixel;\n     }\n \n-    public boolean writePixel(PixelData pixelData, Color color, @Nullable Runnable callback) {\n+    // You don't have to watch this pixel (for now).. I'm nervous about performance issue of this method.\n+    // returns Bitmap which has resolution of 2^resolutionFactor * 2^resolutionFactor\n+    // TODO cache this when there is performance issue\n+    // Do we need Async version of this?\n+    public Bitmap getBitmapSync(PixelData pixelData, int resolutionFactor) {",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 86,
        "original_position": 85,
        "commit_id": "c38de8719aee52a11282ed15ab31758b8f95b3f4",
        "original_commit_id": "39add82b6793d26185e14723003c78e00ac2f87b",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This performs a network request & might freeze the main thread. I think we need an Async version.",
        "created_at": "2018-07-07T15:41:36Z",
        "updated_at": "2018-07-07T15:50:18Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815462",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/18",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815462"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815462"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815480",
        "pull_request_review_id": 135207697,
        "id": 200815480,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgxNTQ4MA==",
        "diff_hunk": "@@ -101,7 +118,58 @@ public void onCancelled(@NonNull DatabaseError databaseError) {\n         return fbPixel;\n     }\n \n-    public boolean writePixel(PixelData pixelData, Color color, @Nullable Runnable callback) {\n+    // You don't have to watch this pixel (for now).. I'm nervous about performance issue of this method.\n+    // returns Bitmap which has resolution of 2^resolutionFactor * 2^resolutionFactor\n+    // TODO cache this when there is performance issue\n+    // Do we need Async version of this?\n+    public Bitmap getBitmapSync(PixelData pixelData, int resolutionFactor) {\n+        int resolution = MathUtils.intPow(2, resolutionFactor);\n+        final Bitmap bitmap = Bitmap.createBitmap(resolution, resolution, Bitmap.Config.ARGB_8888);\n+        try {\n+            int hierarchy = Math.min(Constants.LEAF_PIXEL_ZOOM_LEVEL - pixelData.zoom, resolutionFactor);\n+            int chargeForOnePixel = MathUtils.intPow(2, resolutionFactor - hierarchy);\n+            ArrayList<PixelData> childrenPixelData = PixelUtils.getChildrenPixelData(pixelData, hierarchy);\n+            int childrenStartX = childrenPixelData.get(0).x;\n+            int childrenStartY = childrenPixelData.get(0).y;\n+            CountDownLatch latchForFinish = new CountDownLatch(childrenPixelData.size());\n+            for (PixelData childPixelData: childrenPixelData) {\n+                String firebaseId = childPixelData.firebaseId;\n+                DatabaseUtils.getPixelReference(firebaseId).addListenerForSingleValueEvent(new ValueEventListener() {\n+                    @Override\n+                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n+                        Log.v(TAG, \"Got one pixel\");\n+                        FBPixel ServerPixel4Firebase = dataSnapshot.getValue(FBPixel.class);",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": null,
        "original_position": 101,
        "commit_id": "c38de8719aee52a11282ed15ab31758b8f95b3f4",
        "original_commit_id": "39add82b6793d26185e14723003c78e00ac2f87b",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you fix the inconsistencies in variable names?",
        "created_at": "2018-07-07T15:42:21Z",
        "updated_at": "2018-07-07T15:50:18Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815480",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/18",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815480"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815480"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815609",
        "pull_request_review_id": 135207829,
        "id": 200815609,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgxNTYwOQ==",
        "diff_hunk": "@@ -101,7 +118,58 @@ public void onCancelled(@NonNull DatabaseError databaseError) {\n         return fbPixel;\n     }\n \n-    public boolean writePixel(PixelData pixelData, Color color, @Nullable Runnable callback) {\n+    // You don't have to watch this pixel (for now).. I'm nervous about performance issue of this method.\n+    // returns Bitmap which has resolution of 2^resolutionFactor * 2^resolutionFactor\n+    // TODO cache this when there is performance issue\n+    // Do we need Async version of this?\n+    public Bitmap getBitmapSync(PixelData pixelData, int resolutionFactor) {",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 86,
        "original_position": 85,
        "commit_id": "c38de8719aee52a11282ed15ab31758b8f95b3f4",
        "original_commit_id": "39add82b6793d26185e14723003c78e00ac2f87b",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Got it. I will do performance test and decide which way is the best.",
        "created_at": "2018-07-07T15:46:53Z",
        "updated_at": "2018-07-07T15:50:18Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815609",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/18",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815609"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815609"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/18"
            }
        },
        "in_reply_to_id": 200815462
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815616",
        "pull_request_review_id": 135207836,
        "id": 200815616,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgxNTYxNg==",
        "diff_hunk": "@@ -101,7 +118,58 @@ public void onCancelled(@NonNull DatabaseError databaseError) {\n         return fbPixel;\n     }\n \n-    public boolean writePixel(PixelData pixelData, Color color, @Nullable Runnable callback) {\n+    // You don't have to watch this pixel (for now).. I'm nervous about performance issue of this method.\n+    // returns Bitmap which has resolution of 2^resolutionFactor * 2^resolutionFactor\n+    // TODO cache this when there is performance issue\n+    // Do we need Async version of this?\n+    public Bitmap getBitmapSync(PixelData pixelData, int resolutionFactor) {\n+        int resolution = MathUtils.intPow(2, resolutionFactor);\n+        final Bitmap bitmap = Bitmap.createBitmap(resolution, resolution, Bitmap.Config.ARGB_8888);\n+        try {\n+            int hierarchy = Math.min(Constants.LEAF_PIXEL_ZOOM_LEVEL - pixelData.zoom, resolutionFactor);\n+            int chargeForOnePixel = MathUtils.intPow(2, resolutionFactor - hierarchy);\n+            ArrayList<PixelData> childrenPixelData = PixelUtils.getChildrenPixelData(pixelData, hierarchy);\n+            int childrenStartX = childrenPixelData.get(0).x;\n+            int childrenStartY = childrenPixelData.get(0).y;\n+            CountDownLatch latchForFinish = new CountDownLatch(childrenPixelData.size());\n+            for (PixelData childPixelData: childrenPixelData) {\n+                String firebaseId = childPixelData.firebaseId;\n+                DatabaseUtils.getPixelReference(firebaseId).addListenerForSingleValueEvent(new ValueEventListener() {\n+                    @Override\n+                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n+                        Log.v(TAG, \"Got one pixel\");\n+                        FBPixel ServerPixel4Firebase = dataSnapshot.getValue(FBPixel.class);",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": null,
        "original_position": 101,
        "commit_id": "c38de8719aee52a11282ed15ab31758b8f95b3f4",
        "original_commit_id": "39add82b6793d26185e14723003c78e00ac2f87b",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Got it.",
        "created_at": "2018-07-07T15:47:12Z",
        "updated_at": "2018-07-07T15:50:18Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815616",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/18",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815616"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815616"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/18"
            }
        },
        "in_reply_to_id": 200815480
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815634",
        "pull_request_review_id": 135207856,
        "id": 200815634,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgxNTYzNA==",
        "diff_hunk": "@@ -35,31 +35,46 @@ public Color clone() throws CloneNotSupportedException {\n         return color;\n     }\n \n-    public boolean isTransparent() {\n+    public boolean equals(Color color) {\n+        return this.r.longValue() == color.r.longValue()\n+                && this.g.longValue() == color.g.longValue()\n+                && this.b.longValue() == color.b.longValue()\n+                && this.a.longValue() == color.a.longValue();\n+    }\n+\n+    public boolean transparent() {\n         return (this.a < Constants.COLOR_TRANSPARENT_BOUND) ;\n     }\n \n     public String toString() {\n         return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n     }\n \n+    // TODO consider this one more time\n     public void replaceColorPortion(Color originColor, Color newColor, double portion) {",
        "path": "app/src/main/java/com/canvearth/canvearth/pixel/Color.java",
        "position": null,
        "original_position": 21,
        "commit_id": "c38de8719aee52a11282ed15ab31758b8f95b3f4",
        "original_commit_id": "39add82b6793d26185e14723003c78e00ac2f87b",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm.. Okay, how about adding a short comment about the method usage as it is hard to understand without any context.",
        "created_at": "2018-07-07T15:48:10Z",
        "updated_at": "2018-07-07T15:50:18Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815634",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/18",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815634"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815634"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/18"
            }
        },
        "in_reply_to_id": 200815214
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815646",
        "pull_request_review_id": 135207868,
        "id": 200815646,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgxNTY0Ng==",
        "diff_hunk": "@@ -35,31 +35,46 @@ public Color clone() throws CloneNotSupportedException {\n         return color;\n     }\n \n-    public boolean isTransparent() {\n+    public boolean equals(Color color) {\n+        return this.r.longValue() == color.r.longValue()\n+                && this.g.longValue() == color.g.longValue()\n+                && this.b.longValue() == color.b.longValue()\n+                && this.a.longValue() == color.a.longValue();\n+    }\n+\n+    public boolean transparent() {\n         return (this.a < Constants.COLOR_TRANSPARENT_BOUND) ;\n     }\n \n     public String toString() {\n         return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n     }\n \n+    // TODO consider this one more time\n     public void replaceColorPortion(Color originColor, Color newColor, double portion) {",
        "path": "app/src/main/java/com/canvearth/canvearth/pixel/Color.java",
        "position": null,
        "original_position": 21,
        "commit_id": "c38de8719aee52a11282ed15ab31758b8f95b3f4",
        "original_commit_id": "39add82b6793d26185e14723003c78e00ac2f87b",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Got it",
        "created_at": "2018-07-07T15:48:55Z",
        "updated_at": "2018-07-07T15:50:18Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815646",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/18",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200815646"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/18#discussion_r200815646"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/18"
            }
        },
        "in_reply_to_id": 200815214
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200976063",
        "pull_request_review_id": 135385931,
        "id": 200976063,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDk3NjA2Mw==",
        "diff_hunk": "@@ -206,21 +211,27 @@ public void writePixelAsync(PixelData pixelData, Color color, @Nullable Runnable\n     }\n \n     // Please prefer writePixelAsync, for performance.\n-    public void writePixelSync(PixelData pixelData, Color color) {\n+    // returns last update pixel data.\n+    public PixelData writePixelSync(PixelData pixelData, Color color) {\n+        final PixelData returnPixelData = new PixelData(0, 0, 0);\n         try {\n             CountDownLatch latchForFinish = new CountDownLatch(1);\n-            writePixelAsync(pixelData, color, latchForFinish::countDown);\n+            writePixelAsync(pixelData, color, (PixelData lastUpdatedPixelData) -> {\n+                returnPixelData.copyFrom(lastUpdatedPixelData);\n+                latchForFinish.countDown();\n+            });\n             latchForFinish.await();\n         } catch (InterruptedException e) {\n             Log.e(TAG, e.getMessage());\n         }\n+        return returnPixelData;\n     }\n \n-\n-    private void updateParent(FBPixel childOriginPixel, FBPixel childNewPixel,\n+    // returns last updated pixel\n+    private PixelData updateParent(FBPixel childOriginPixel, FBPixel childNewPixel,",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 74,
        "original_position": 74,
        "commit_id": "f3fe0da24cceebcba2f3dbd0b49e37f998edd250",
        "original_commit_id": "f3fe0da24cceebcba2f3dbd0b49e37f998edd250",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why does this need to return the last updated pixel?",
        "created_at": "2018-07-09T11:59:57Z",
        "updated_at": "2018-07-09T11:59:57Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/23#discussion_r200976063",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/23",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200976063"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/23#discussion_r200976063"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200985468",
        "pull_request_review_id": 135396778,
        "id": 200985468,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDk4NTQ2OA==",
        "diff_hunk": "@@ -119,10 +119,16 @@ public void onCancelled(@NonNull DatabaseError databaseError) {\n         return fbPixel;\n     }\n \n+    public void getBitmapAsync(PixelData pixelData, int resolutionFactor, Function<Bitmap> callback) {\n+        new Thread(()->{\n+            callback.run(getBitmapSync(pixelData, resolutionFactor));\n+        }).start();\n+    }\n+\n     // You don't have to watch this pixel (for now).. I'm nervous about performance issue of this method.\n     // returns Bitmap which has resolution of 2^resolutionFactor * 2^resolutionFactor\n     // TODO cache this when there is performance issue\n-    // Do we need Async version of this?\n+    // TODO this seems better to executed in server side.",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 14,
        "original_position": 14,
        "commit_id": "b870e20f3f2cc692bee2e20bebc14b37960ff91d",
        "original_commit_id": "b870e20f3f2cc692bee2e20bebc14b37960ff91d",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What does this mean?",
        "created_at": "2018-07-09T12:35:56Z",
        "updated_at": "2018-07-09T12:35:56Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/25#discussion_r200985468",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/25",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/200985468"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/25#discussion_r200985468"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/25"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201030981",
        "pull_request_review_id": 135452373,
        "id": 201030981,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAzMDk4MQ==",
        "diff_hunk": "@@ -206,21 +211,27 @@ public void writePixelAsync(PixelData pixelData, Color color, @Nullable Runnable\n     }\n \n     // Please prefer writePixelAsync, for performance.\n-    public void writePixelSync(PixelData pixelData, Color color) {\n+    // returns last update pixel data.\n+    public PixelData writePixelSync(PixelData pixelData, Color color) {\n+        final PixelData returnPixelData = new PixelData(0, 0, 0);\n         try {\n             CountDownLatch latchForFinish = new CountDownLatch(1);\n-            writePixelAsync(pixelData, color, latchForFinish::countDown);\n+            writePixelAsync(pixelData, color, (PixelData lastUpdatedPixelData) -> {\n+                returnPixelData.copyFrom(lastUpdatedPixelData);\n+                latchForFinish.countDown();\n+            });\n             latchForFinish.await();\n         } catch (InterruptedException e) {\n             Log.e(TAG, e.getMessage());\n         }\n+        return returnPixelData;\n     }\n \n-\n-    private void updateParent(FBPixel childOriginPixel, FBPixel childNewPixel,\n+    // returns last updated pixel\n+    private PixelData updateParent(FBPixel childOriginPixel, FBPixel childNewPixel,",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 74,
        "original_position": 74,
        "commit_id": "f3fe0da24cceebcba2f3dbd0b49e37f998edd250",
        "original_commit_id": "f3fe0da24cceebcba2f3dbd0b49e37f998edd250",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I used this in performance test, to see which number of update occurred.\r\nMaybe client-side don't really have to use this. Then simply ignore this return value",
        "created_at": "2018-07-09T14:51:08Z",
        "updated_at": "2018-07-09T14:51:08Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/23#discussion_r201030981",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/23",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201030981"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/23#discussion_r201030981"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/23"
            }
        },
        "in_reply_to_id": 200976063
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201032377",
        "pull_request_review_id": 135454038,
        "id": 201032377,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAzMjM3Nw==",
        "diff_hunk": "@@ -119,10 +119,16 @@ public void onCancelled(@NonNull DatabaseError databaseError) {\n         return fbPixel;\n     }\n \n+    public void getBitmapAsync(PixelData pixelData, int resolutionFactor, Function<Bitmap> callback) {\n+        new Thread(()->{\n+            callback.run(getBitmapSync(pixelData, resolutionFactor));\n+        }).start();\n+    }\n+\n     // You don't have to watch this pixel (for now).. I'm nervous about performance issue of this method.\n     // returns Bitmap which has resolution of 2^resolutionFactor * 2^resolutionFactor\n     // TODO cache this when there is performance issue\n-    // Do we need Async version of this?\n+    // TODO this seems better to executed in server side.",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 14,
        "original_position": 14,
        "commit_id": "b870e20f3f2cc692bee2e20bebc14b37960ff91d",
        "original_commit_id": "b870e20f3f2cc692bee2e20bebc14b37960ff91d",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In this implementation, this recursive update logic is executed at each device.\r\nSince I don't have good sense of performance of devices, I am nervous of using devices' resource a lot.\r\nThis recursive logic can be executed at the server side(such as aws lambda), so when we have to optimize devices' resources, we can save this execution.",
        "created_at": "2018-07-09T14:54:44Z",
        "updated_at": "2018-07-09T14:54:44Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/25#discussion_r201032377",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/25",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201032377"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/25#discussion_r201032377"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/25"
            }
        },
        "in_reply_to_id": 200985468
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201034916",
        "pull_request_review_id": 135457177,
        "id": 201034916,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAzNDkxNg==",
        "diff_hunk": "@@ -119,10 +119,16 @@ public void onCancelled(@NonNull DatabaseError databaseError) {\n         return fbPixel;\n     }\n \n+    public void getBitmapAsync(PixelData pixelData, int resolutionFactor, Function<Bitmap> callback) {\n+        new Thread(()->{\n+            callback.run(getBitmapSync(pixelData, resolutionFactor));\n+        }).start();\n+    }\n+\n     // You don't have to watch this pixel (for now).. I'm nervous about performance issue of this method.\n     // returns Bitmap which has resolution of 2^resolutionFactor * 2^resolutionFactor\n     // TODO cache this when there is performance issue\n-    // Do we need Async version of this?\n+    // TODO this seems better to executed in server side.",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 14,
        "original_position": 14,
        "commit_id": "b870e20f3f2cc692bee2e20bebc14b37960ff91d",
        "original_commit_id": "b870e20f3f2cc692bee2e20bebc14b37960ff91d",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems plausible. Maybe AWS Lambda can return the endpoint for the image, so it can be used like https://github.com/googlemaps/android-samples/blob/master/ApiDemos/java/app/src/main/java/com/example/mapdemo/TileOverlayDemoActivity.java. But we will have to see the performance on a few devices first.",
        "created_at": "2018-07-09T15:00:59Z",
        "updated_at": "2018-07-09T15:00:59Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/25#discussion_r201034916",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/25",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201034916"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/25#discussion_r201034916"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/25"
            }
        },
        "in_reply_to_id": 200985468
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201035046",
        "pull_request_review_id": 135457316,
        "id": 201035046,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAzNTA0Ng==",
        "diff_hunk": "@@ -206,21 +211,27 @@ public void writePixelAsync(PixelData pixelData, Color color, @Nullable Runnable\n     }\n \n     // Please prefer writePixelAsync, for performance.\n-    public void writePixelSync(PixelData pixelData, Color color) {\n+    // returns last update pixel data.\n+    public PixelData writePixelSync(PixelData pixelData, Color color) {\n+        final PixelData returnPixelData = new PixelData(0, 0, 0);\n         try {\n             CountDownLatch latchForFinish = new CountDownLatch(1);\n-            writePixelAsync(pixelData, color, latchForFinish::countDown);\n+            writePixelAsync(pixelData, color, (PixelData lastUpdatedPixelData) -> {\n+                returnPixelData.copyFrom(lastUpdatedPixelData);\n+                latchForFinish.countDown();\n+            });\n             latchForFinish.await();\n         } catch (InterruptedException e) {\n             Log.e(TAG, e.getMessage());\n         }\n+        return returnPixelData;\n     }\n \n-\n-    private void updateParent(FBPixel childOriginPixel, FBPixel childNewPixel,\n+    // returns last updated pixel\n+    private PixelData updateParent(FBPixel childOriginPixel, FBPixel childNewPixel,",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 74,
        "original_position": 74,
        "commit_id": "f3fe0da24cceebcba2f3dbd0b49e37f998edd250",
        "original_commit_id": "f3fe0da24cceebcba2f3dbd0b49e37f998edd250",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok",
        "created_at": "2018-07-09T15:01:16Z",
        "updated_at": "2018-07-09T15:01:17Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/23#discussion_r201035046",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/23",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201035046"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/23#discussion_r201035046"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/23"
            }
        },
        "in_reply_to_id": 200976063
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201095019",
        "pull_request_review_id": 135529837,
        "id": 201095019,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTA5NTAxOQ==",
        "diff_hunk": "@@ -90,9 +86,9 @@ private void enableMyLocation() {\n         }\n     }\n \n-    private void showToast(Context context, String text){\n+    private void showToast(Context context, String text) {\n         Toast toast = Toast.makeText(context, text, Toast.LENGTH_LONG);\n-        toast.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.CENTER_VERTICAL|Gravity.BOTTOM,\n+        toast.setGravity(Gravity.CENTER_HORIZONTAL | Gravity.CENTER_VERTICAL | Gravity.BOTTOM,",
        "path": "app/src/main/java/com/canvearth/canvearth/MapsActivity.java",
        "position": null,
        "original_position": 37,
        "commit_id": "2112d78da0b65d88f18594326846e68200638735",
        "original_commit_id": "d482a0f991029097153d25194a2fe3baa0d5f659",
        "user": {
            "login": "moon920110",
            "id": 23100823,
            "node_id": "MDQ6VXNlcjIzMTAwODIz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/23100823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/moon920110",
            "html_url": "https://github.com/moon920110",
            "followers_url": "https://api.github.com/users/moon920110/followers",
            "following_url": "https://api.github.com/users/moon920110/following{/other_user}",
            "gists_url": "https://api.github.com/users/moon920110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/moon920110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/moon920110/subscriptions",
            "organizations_url": "https://api.github.com/users/moon920110/orgs",
            "repos_url": "https://api.github.com/users/moon920110/repos",
            "events_url": "https://api.github.com/users/moon920110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/moon920110/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think you can use `CENTER` instead of `CENTER_HORIZONTAL | CENTER_VERTICAL`.\r\nIt looks much more simple to see, but it is just my personal preference. Never mind.",
        "created_at": "2018-07-09T18:02:09Z",
        "updated_at": "2018-07-10T14:18:08Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/35#discussion_r201095019",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/35",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201095019"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/35#discussion_r201095019"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/35"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201359919",
        "pull_request_review_id": 135845022,
        "id": 201359919,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTM1OTkxOQ==",
        "diff_hunk": "@@ -90,9 +86,9 @@ private void enableMyLocation() {\n         }\n     }\n \n-    private void showToast(Context context, String text){\n+    private void showToast(Context context, String text) {\n         Toast toast = Toast.makeText(context, text, Toast.LENGTH_LONG);\n-        toast.setGravity(Gravity.CENTER_HORIZONTAL|Gravity.CENTER_VERTICAL|Gravity.BOTTOM,\n+        toast.setGravity(Gravity.CENTER_HORIZONTAL | Gravity.CENTER_VERTICAL | Gravity.BOTTOM,",
        "path": "app/src/main/java/com/canvearth/canvearth/MapsActivity.java",
        "position": null,
        "original_position": 37,
        "commit_id": "2112d78da0b65d88f18594326846e68200638735",
        "original_commit_id": "d482a0f991029097153d25194a2fe3baa0d5f659",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Will do",
        "created_at": "2018-07-10T14:16:36Z",
        "updated_at": "2018-07-10T14:18:08Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/35#discussion_r201359919",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/35",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/201359919"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/35#discussion_r201359919"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/35"
            }
        },
        "in_reply_to_id": 201095019
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/202059725",
        "pull_request_review_id": 136681643,
        "id": 202059725,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjA1OTcyNQ==",
        "diff_hunk": "@@ -208,8 +232,8 @@ public void onCancelled(@NonNull DatabaseError databaseError) {\n         return bitmap;\n     }\n \n-    public void writePixelAsync(PixelData pixelData, PixelColor pixelColor, @Nullable Function<PixelData> callback) {\n-        new Thread(() -> {\n+    public Thread writePixelAsync(PixelData pixelData, PixelColor pixelColor) {\n+        Thread thread = new Thread(() -> {",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 72,
        "original_position": 72,
        "commit_id": "c2bfcee74fc97a3cf44587f24c7b9b7fbc3afbc8",
        "original_commit_id": "c2bfcee74fc97a3cf44587f24c7b9b7fbc3afbc8",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about using a Handler like Moogung suggested?\r\n",
        "created_at": "2018-07-12T14:39:17Z",
        "updated_at": "2018-07-12T14:39:17Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/53#discussion_r202059725",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/202059725"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/53#discussion_r202059725"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/202061385",
        "pull_request_review_id": 136683756,
        "id": 202061385,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjA2MTM4NQ==",
        "diff_hunk": "@@ -208,8 +232,8 @@ public void onCancelled(@NonNull DatabaseError databaseError) {\n         return bitmap;\n     }\n \n-    public void writePixelAsync(PixelData pixelData, PixelColor pixelColor, @Nullable Function<PixelData> callback) {\n-        new Thread(() -> {\n+    public Thread writePixelAsync(PixelData pixelData, PixelColor pixelColor) {\n+        Thread thread = new Thread(() -> {",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 72,
        "original_position": 72,
        "commit_id": "c2bfcee74fc97a3cf44587f24c7b9b7fbc3afbc8",
        "original_commit_id": "c2bfcee74fc97a3cf44587f24c7b9b7fbc3afbc8",
        "user": {
            "login": "inyukwo1",
            "id": 18697844,
            "node_id": "MDQ6VXNlcjE4Njk3ODQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18697844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inyukwo1",
            "html_url": "https://github.com/inyukwo1",
            "followers_url": "https://api.github.com/users/inyukwo1/followers",
            "following_url": "https://api.github.com/users/inyukwo1/following{/other_user}",
            "gists_url": "https://api.github.com/users/inyukwo1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inyukwo1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inyukwo1/subscriptions",
            "organizations_url": "https://api.github.com/users/inyukwo1/orgs",
            "repos_url": "https://api.github.com/users/inyukwo1/repos",
            "events_url": "https://api.github.com/users/inyukwo1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inyukwo1/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since we are planning to move this execution to server, I think preventing this callback is better for our future.\r\nThus, I don't really think this callback is needed, since we can do same work by event occurrence of watching pixel. (and I think it's better.)\r\nHowever, if you really need this callback, I will modify this. Tell me when you need.",
        "created_at": "2018-07-12T14:43:51Z",
        "updated_at": "2018-07-12T14:43:51Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/53#discussion_r202061385",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/53",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/202061385"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/53#discussion_r202061385"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/53"
            }
        },
        "in_reply_to_id": 202059725
    },
    {
        "url": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/202084789",
        "pull_request_review_id": 136712699,
        "id": 202084789,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjA4NDc4OQ==",
        "diff_hunk": "@@ -208,8 +232,8 @@ public void onCancelled(@NonNull DatabaseError databaseError) {\n         return bitmap;\n     }\n \n-    public void writePixelAsync(PixelData pixelData, PixelColor pixelColor, @Nullable Function<PixelData> callback) {\n-        new Thread(() -> {\n+    public Thread writePixelAsync(PixelData pixelData, PixelColor pixelColor) {\n+        Thread thread = new Thread(() -> {",
        "path": "app/src/main/java/com/canvearth/canvearth/server/FBPixelManager.java",
        "position": 72,
        "original_position": 72,
        "commit_id": "c2bfcee74fc97a3cf44587f24c7b9b7fbc3afbc8",
        "original_commit_id": "c2bfcee74fc97a3cf44587f24c7b9b7fbc3afbc8",
        "user": {
            "login": "prodia4",
            "id": 13569738,
            "node_id": "MDQ6VXNlcjEzNTY5NzM4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13569738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodia4",
            "html_url": "https://github.com/prodia4",
            "followers_url": "https://api.github.com/users/prodia4/followers",
            "following_url": "https://api.github.com/users/prodia4/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodia4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodia4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodia4/subscriptions",
            "organizations_url": "https://api.github.com/users/prodia4/orgs",
            "repos_url": "https://api.github.com/users/prodia4/repos",
            "events_url": "https://api.github.com/users/prodia4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodia4/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh sorry I didn't mean brining the callback back. I meant to suggest using a ThreadPoolExecutor as in https://developer.android.com/training/multiple-threads/run-code.",
        "created_at": "2018-07-12T15:45:05Z",
        "updated_at": "2018-07-12T15:45:05Z",
        "html_url": "https://github.com/moon920110/canvearth/pull/53#discussion_r202084789",
        "pull_request_url": "https://api.github.com/repos/moon920110/canvearth/pulls/53",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/comments/202084789"
            },
            "html": {
                "href": "https://github.com/moon920110/canvearth/pull/53#discussion_r202084789"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/moon920110/canvearth/pulls/53"
            }
        },
        "in_reply_to_id": 202059725
    }
]