[
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/6742816",
        "pull_request_review_id": null,
        "id": 6742816,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDI4MTY=",
        "diff_hunk": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
        "path": "ListRefreshSpike2Project.iml",
        "position": null,
        "original_position": 1,
        "commit_id": "3cf2ec37c3e11ebcd3f2a1cb013c43de9c170345",
        "original_commit_id": "b52108a006ffb32f4d39fc1984a2712fe1563bed",
        "user": {
            "login": "DrPaulT",
            "id": 5172456,
            "node_id": "MDQ6VXNlcjUxNzI0NTY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5172456?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DrPaulT",
            "html_url": "https://github.com/DrPaulT",
            "followers_url": "https://api.github.com/users/DrPaulT/followers",
            "following_url": "https://api.github.com/users/DrPaulT/following{/other_user}",
            "gists_url": "https://api.github.com/users/DrPaulT/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DrPaulT/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DrPaulT/subscriptions",
            "organizations_url": "https://api.github.com/users/DrPaulT/orgs",
            "repos_url": "https://api.github.com/users/DrPaulT/repos",
            "events_url": "https://api.github.com/users/DrPaulT/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DrPaulT/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":x: Going to remove this.\n",
        "created_at": "2013-10-03T14:45:20Z",
        "updated_at": "2013-10-03T18:44:06Z",
        "html_url": "https://github.com/novoda/spikes/pull/1#discussion_r6742816",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/6742816"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/1#discussion_r6742816"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743378",
        "pull_request_review_id": null,
        "id": 6743378,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDMzNzg=",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+package com.novoda.spike.listrefreshspike2;\n+\n+import android.app.Activity;\n+import android.app.FragmentManager;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.widget.ListView;\n+\n+public class MainActivity extends Activity implements Handler.Callback {\n+\n+    public static final int WHAT = 99;\n+    private Handler handler;\n+    private SimpleListFragment slf1;\n+    private SimpleListFragment slf2;\n+    private ListView listView1;\n+    private ListView listView2;\n+    private boolean noMoreBgUpdates;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        noMoreBgUpdates = false;\n+        handler = new Handler(this);\n+        handler.sendEmptyMessageDelayed(MainActivity.WHAT, 400L);\n+        setContentView(R.layout.main);\n+        FragmentManager fragmentManager = getFragmentManager();\n+        slf1 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment1);\n+        slf2 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment2);\n+        listView1 = (ListView) slf1.getView();\n+        listView2 = (ListView) slf2.getView();\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        super.onResume();\n+    }\n+\n+    @Override\n+    protected void onPause() {\n+        super.onPause();\n+        handler.removeMessages(WHAT);\n+        noMoreBgUpdates = true;\n+    }\n+\n+    @Override\n+    public boolean handleMessage(Message msg) {\n+        if (msg.what == WHAT && !noMoreBgUpdates) {\n+            new DataUpdateTask(getApplicationContext(), slf1, handler).execute((Void) null);",
        "path": "ListRefreshSpike2/src/main/java/com/novoda/spike/listrefreshspike2/MainActivity.java",
        "position": null,
        "original_position": 49,
        "commit_id": "3cf2ec37c3e11ebcd3f2a1cb013c43de9c170345",
        "original_commit_id": "259e4bfc1b7909e3c724c16621e1e9d523b4776c",
        "user": {
            "login": "frankiesardo",
            "id": 1476561,
            "node_id": "MDQ6VXNlcjE0NzY1NjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1476561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frankiesardo",
            "html_url": "https://github.com/frankiesardo",
            "followers_url": "https://api.github.com/users/frankiesardo/followers",
            "following_url": "https://api.github.com/users/frankiesardo/following{/other_user}",
            "gists_url": "https://api.github.com/users/frankiesardo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frankiesardo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frankiesardo/subscriptions",
            "organizations_url": "https://api.github.com/users/frankiesardo/orgs",
            "repos_url": "https://api.github.com/users/frankiesardo/repos",
            "events_url": "https://api.github.com/users/frankiesardo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frankiesardo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you can just call it with `execute()`\n",
        "created_at": "2013-10-03T15:01:05Z",
        "updated_at": "2013-10-03T18:44:06Z",
        "html_url": "https://github.com/novoda/spikes/pull/1#discussion_r6743378",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743378"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/1#discussion_r6743378"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743393",
        "pull_request_review_id": null,
        "id": 6743393,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDMzOTM=",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+package com.novoda.spike.listrefreshspike2;\n+\n+import android.app.Activity;\n+import android.app.FragmentManager;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.widget.ListView;\n+\n+public class MainActivity extends Activity implements Handler.Callback {\n+\n+    public static final int WHAT = 99;\n+    private Handler handler;\n+    private SimpleListFragment slf1;\n+    private SimpleListFragment slf2;\n+    private ListView listView1;\n+    private ListView listView2;\n+    private boolean noMoreBgUpdates;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        noMoreBgUpdates = false;\n+        handler = new Handler(this);\n+        handler.sendEmptyMessageDelayed(MainActivity.WHAT, 400L);\n+        setContentView(R.layout.main);\n+        FragmentManager fragmentManager = getFragmentManager();\n+        slf1 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment1);\n+        slf2 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment2);\n+        listView1 = (ListView) slf1.getView();\n+        listView2 = (ListView) slf2.getView();\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        super.onResume();\n+    }\n+\n+    @Override\n+    protected void onPause() {\n+        super.onPause();\n+        handler.removeMessages(WHAT);\n+        noMoreBgUpdates = true;\n+    }\n+\n+    @Override\n+    public boolean handleMessage(Message msg) {",
        "path": "ListRefreshSpike2/src/main/java/com/novoda/spike/listrefreshspike2/MainActivity.java",
        "position": null,
        "original_position": 47,
        "commit_id": "3cf2ec37c3e11ebcd3f2a1cb013c43de9c170345",
        "original_commit_id": "259e4bfc1b7909e3c724c16621e1e9d523b4776c",
        "user": {
            "login": "frankiesardo",
            "id": 1476561,
            "node_id": "MDQ6VXNlcjE0NzY1NjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1476561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frankiesardo",
            "html_url": "https://github.com/frankiesardo",
            "followers_url": "https://api.github.com/users/frankiesardo/followers",
            "following_url": "https://api.github.com/users/frankiesardo/following{/other_user}",
            "gists_url": "https://api.github.com/users/frankiesardo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frankiesardo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frankiesardo/subscriptions",
            "organizations_url": "https://api.github.com/users/frankiesardo/orgs",
            "repos_url": "https://api.github.com/users/frankiesardo/repos",
            "events_url": "https://api.github.com/users/frankiesardo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frankiesardo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why not `handler.postDelayed`? You're just doing a single action. I always found handler messages quite confusing\n",
        "created_at": "2013-10-03T15:01:48Z",
        "updated_at": "2013-10-03T18:44:06Z",
        "html_url": "https://github.com/novoda/spikes/pull/1#discussion_r6743393",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743393"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/1#discussion_r6743393"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743418",
        "pull_request_review_id": null,
        "id": 6743418,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDM0MTg=",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+package com.novoda.spike.listrefreshspike2;\n+\n+import android.app.Activity;\n+import android.app.FragmentManager;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.widget.ListView;\n+\n+public class MainActivity extends Activity implements Handler.Callback {\n+\n+    public static final int WHAT = 99;\n+    private Handler handler;\n+    private SimpleListFragment slf1;\n+    private SimpleListFragment slf2;\n+    private ListView listView1;\n+    private ListView listView2;\n+    private boolean noMoreBgUpdates;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        noMoreBgUpdates = false;\n+        handler = new Handler(this);\n+        handler.sendEmptyMessageDelayed(MainActivity.WHAT, 400L);\n+        setContentView(R.layout.main);\n+        FragmentManager fragmentManager = getFragmentManager();\n+        slf1 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment1);\n+        slf2 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment2);\n+        listView1 = (ListView) slf1.getView();\n+        listView2 = (ListView) slf2.getView();\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        super.onResume();\n+    }\n+\n+    @Override\n+    protected void onPause() {\n+        super.onPause();\n+        handler.removeMessages(WHAT);\n+        noMoreBgUpdates = true;\n+    }\n+\n+    @Override\n+    public boolean handleMessage(Message msg) {\n+        if (msg.what == WHAT && !noMoreBgUpdates) {\n+            new DataUpdateTask(getApplicationContext(), slf1, handler).execute((Void) null);",
        "path": "ListRefreshSpike2/src/main/java/com/novoda/spike/listrefreshspike2/MainActivity.java",
        "position": null,
        "original_position": 49,
        "commit_id": "3cf2ec37c3e11ebcd3f2a1cb013c43de9c170345",
        "original_commit_id": "259e4bfc1b7909e3c724c16621e1e9d523b4776c",
        "user": {
            "login": "DrPaulT",
            "id": 5172456,
            "node_id": "MDQ6VXNlcjUxNzI0NTY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5172456?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DrPaulT",
            "html_url": "https://github.com/DrPaulT",
            "followers_url": "https://api.github.com/users/DrPaulT/followers",
            "following_url": "https://api.github.com/users/DrPaulT/following{/other_user}",
            "gists_url": "https://api.github.com/users/DrPaulT/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DrPaulT/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DrPaulT/subscriptions",
            "organizations_url": "https://api.github.com/users/DrPaulT/orgs",
            "repos_url": "https://api.github.com/users/DrPaulT/repos",
            "events_url": "https://api.github.com/users/DrPaulT/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DrPaulT/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Cool :-)\n",
        "created_at": "2013-10-03T15:02:29Z",
        "updated_at": "2013-10-03T18:44:06Z",
        "html_url": "https://github.com/novoda/spikes/pull/1#discussion_r6743418",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743418"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/1#discussion_r6743418"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743430",
        "pull_request_review_id": null,
        "id": 6743430,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDM0MzA=",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+package com.novoda.spike.listrefreshspike2;\n+\n+import android.app.Activity;\n+import android.app.FragmentManager;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.widget.ListView;\n+\n+public class MainActivity extends Activity implements Handler.Callback {\n+\n+    public static final int WHAT = 99;\n+    private Handler handler;\n+    private SimpleListFragment slf1;\n+    private SimpleListFragment slf2;\n+    private ListView listView1;\n+    private ListView listView2;\n+    private boolean noMoreBgUpdates;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        noMoreBgUpdates = false;\n+        handler = new Handler(this);\n+        handler.sendEmptyMessageDelayed(MainActivity.WHAT, 400L);\n+        setContentView(R.layout.main);\n+        FragmentManager fragmentManager = getFragmentManager();\n+        slf1 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment1);\n+        slf2 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment2);\n+        listView1 = (ListView) slf1.getView();\n+        listView2 = (ListView) slf2.getView();\n+    }\n+\n+    @Override\n+    protected void onResume() {",
        "path": "ListRefreshSpike2/src/main/java/com/novoda/spike/listrefreshspike2/MainActivity.java",
        "position": null,
        "original_position": 35,
        "commit_id": "3cf2ec37c3e11ebcd3f2a1cb013c43de9c170345",
        "original_commit_id": "259e4bfc1b7909e3c724c16621e1e9d523b4776c",
        "user": {
            "login": "frankiesardo",
            "id": 1476561,
            "node_id": "MDQ6VXNlcjE0NzY1NjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1476561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frankiesardo",
            "html_url": "https://github.com/frankiesardo",
            "followers_url": "https://api.github.com/users/frankiesardo/followers",
            "following_url": "https://api.github.com/users/frankiesardo/following{/other_user}",
            "gists_url": "https://api.github.com/users/frankiesardo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frankiesardo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frankiesardo/subscriptions",
            "organizations_url": "https://api.github.com/users/frankiesardo/orgs",
            "repos_url": "https://api.github.com/users/frankiesardo/repos",
            "events_url": "https://api.github.com/users/frankiesardo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frankiesardo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If I understand what you want to do, you may want to call `noMoreBgUpdates = false` here\n",
        "created_at": "2013-10-03T15:02:53Z",
        "updated_at": "2013-10-03T18:44:06Z",
        "html_url": "https://github.com/novoda/spikes/pull/1#discussion_r6743430",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743430"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/1#discussion_r6743430"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743497",
        "pull_request_review_id": null,
        "id": 6743497,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDM0OTc=",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+package com.novoda.spike.listrefreshspike2;\n+\n+import android.app.Activity;\n+import android.app.FragmentManager;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.widget.ListView;\n+\n+public class MainActivity extends Activity implements Handler.Callback {\n+\n+    public static final int WHAT = 99;\n+    private Handler handler;\n+    private SimpleListFragment slf1;\n+    private SimpleListFragment slf2;\n+    private ListView listView1;\n+    private ListView listView2;\n+    private boolean noMoreBgUpdates;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        noMoreBgUpdates = false;\n+        handler = new Handler(this);\n+        handler.sendEmptyMessageDelayed(MainActivity.WHAT, 400L);\n+        setContentView(R.layout.main);\n+        FragmentManager fragmentManager = getFragmentManager();\n+        slf1 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment1);\n+        slf2 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment2);\n+        listView1 = (ListView) slf1.getView();\n+        listView2 = (ListView) slf2.getView();\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        super.onResume();\n+    }\n+\n+    @Override\n+    protected void onPause() {\n+        super.onPause();\n+        handler.removeMessages(WHAT);\n+        noMoreBgUpdates = true;\n+    }\n+\n+    @Override\n+    public boolean handleMessage(Message msg) {",
        "path": "ListRefreshSpike2/src/main/java/com/novoda/spike/listrefreshspike2/MainActivity.java",
        "position": null,
        "original_position": 47,
        "commit_id": "3cf2ec37c3e11ebcd3f2a1cb013c43de9c170345",
        "original_commit_id": "259e4bfc1b7909e3c724c16621e1e9d523b4776c",
        "user": {
            "login": "DrPaulT",
            "id": 5172456,
            "node_id": "MDQ6VXNlcjUxNzI0NTY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5172456?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DrPaulT",
            "html_url": "https://github.com/DrPaulT",
            "followers_url": "https://api.github.com/users/DrPaulT/followers",
            "following_url": "https://api.github.com/users/DrPaulT/following{/other_user}",
            "gists_url": "https://api.github.com/users/DrPaulT/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DrPaulT/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DrPaulT/subscriptions",
            "organizations_url": "https://api.github.com/users/DrPaulT/orgs",
            "repos_url": "https://api.github.com/users/DrPaulT/repos",
            "events_url": "https://api.github.com/users/DrPaulT/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DrPaulT/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, could have done.  Performance isn't really an issue here, but messages make more sense than creating a whole runnable class that will be garbage-collected straight after one execution.\n\nI don't know if Android actually allocates a message class when you send an empty message.  It might have an optimisation to just re-use one from a pool.\n",
        "created_at": "2013-10-03T15:05:07Z",
        "updated_at": "2013-10-03T18:44:06Z",
        "html_url": "https://github.com/novoda/spikes/pull/1#discussion_r6743497",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743497"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/1#discussion_r6743497"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743541",
        "pull_request_review_id": null,
        "id": 6743541,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDM1NDE=",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+package com.novoda.spike.listrefreshspike2;\n+\n+import android.app.Activity;\n+import android.app.FragmentManager;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.widget.ListView;\n+\n+public class MainActivity extends Activity implements Handler.Callback {\n+\n+    public static final int WHAT = 99;\n+    private Handler handler;\n+    private SimpleListFragment slf1;\n+    private SimpleListFragment slf2;\n+    private ListView listView1;\n+    private ListView listView2;\n+    private boolean noMoreBgUpdates;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        noMoreBgUpdates = false;\n+        handler = new Handler(this);\n+        handler.sendEmptyMessageDelayed(MainActivity.WHAT, 400L);\n+        setContentView(R.layout.main);\n+        FragmentManager fragmentManager = getFragmentManager();\n+        slf1 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment1);\n+        slf2 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment2);\n+        listView1 = (ListView) slf1.getView();\n+        listView2 = (ListView) slf2.getView();\n+    }\n+\n+    @Override\n+    protected void onResume() {",
        "path": "ListRefreshSpike2/src/main/java/com/novoda/spike/listrefreshspike2/MainActivity.java",
        "position": null,
        "original_position": 35,
        "commit_id": "3cf2ec37c3e11ebcd3f2a1cb013c43de9c170345",
        "original_commit_id": "259e4bfc1b7909e3c724c16621e1e9d523b4776c",
        "user": {
            "login": "DrPaulT",
            "id": 5172456,
            "node_id": "MDQ6VXNlcjUxNzI0NTY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5172456?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DrPaulT",
            "html_url": "https://github.com/DrPaulT",
            "followers_url": "https://api.github.com/users/DrPaulT/followers",
            "following_url": "https://api.github.com/users/DrPaulT/following{/other_user}",
            "gists_url": "https://api.github.com/users/DrPaulT/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DrPaulT/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DrPaulT/subscriptions",
            "organizations_url": "https://api.github.com/users/DrPaulT/orgs",
            "repos_url": "https://api.github.com/users/DrPaulT/repos",
            "events_url": "https://api.github.com/users/DrPaulT/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DrPaulT/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, should do that really.\n",
        "created_at": "2013-10-03T15:06:10Z",
        "updated_at": "2013-10-03T18:44:06Z",
        "html_url": "https://github.com/novoda/spikes/pull/1#discussion_r6743541",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/6743541"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/1#discussion_r6743541"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/6746643",
        "pull_request_review_id": null,
        "id": 6746643,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDY2NDM=",
        "diff_hunk": "@@ -0,0 +1,54 @@\n+package com.novoda.spike.listrefreshspike2;\n+\n+import android.app.Activity;\n+import android.app.FragmentManager;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.widget.ListView;\n+\n+public class MainActivity extends Activity implements Handler.Callback {\n+\n+    public static final int WHAT = 99;\n+    private Handler handler;\n+    private SimpleListFragment slf1;\n+    private SimpleListFragment slf2;\n+    private ListView listView1;\n+    private ListView listView2;\n+    private boolean noMoreBgUpdates;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        noMoreBgUpdates = false;\n+        handler = new Handler(this);\n+        handler.sendEmptyMessageDelayed(MainActivity.WHAT, 400L);\n+        setContentView(R.layout.main);\n+        FragmentManager fragmentManager = getFragmentManager();\n+        slf1 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment1);\n+        slf2 = (SimpleListFragment) fragmentManager.findFragmentById(R.id.simple_list_fragment2);\n+        listView1 = (ListView) slf1.getView();\n+        listView2 = (ListView) slf2.getView();\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        super.onResume();\n+    }\n+\n+    @Override\n+    protected void onPause() {\n+        super.onPause();\n+        handler.removeMessages(WHAT);\n+        noMoreBgUpdates = true;\n+    }\n+\n+    @Override\n+    public boolean handleMessage(Message msg) {",
        "path": "ListRefreshSpike2/src/main/java/com/novoda/spike/listrefreshspike2/MainActivity.java",
        "position": null,
        "original_position": 47,
        "commit_id": "3cf2ec37c3e11ebcd3f2a1cb013c43de9c170345",
        "original_commit_id": "259e4bfc1b7909e3c724c16621e1e9d523b4776c",
        "user": {
            "login": "charroch",
            "id": 29667,
            "node_id": "MDQ6VXNlcjI5NjY3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/29667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charroch",
            "html_url": "https://github.com/charroch",
            "followers_url": "https://api.github.com/users/charroch/followers",
            "following_url": "https://api.github.com/users/charroch/following{/other_user}",
            "gists_url": "https://api.github.com/users/charroch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charroch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charroch/subscriptions",
            "organizations_url": "https://api.github.com/users/charroch/orgs",
            "repos_url": "https://api.github.com/users/charroch/repos",
            "events_url": "https://api.github.com/users/charroch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charroch/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Message is pooled. You should never do new Message but rather Handler.obtainMessage() and dispose accordingly\n",
        "created_at": "2013-10-03T16:46:24Z",
        "updated_at": "2013-10-03T18:44:06Z",
        "html_url": "https://github.com/novoda/spikes/pull/1#discussion_r6746643",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/1",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/6746643"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/1#discussion_r6746643"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14330191",
        "pull_request_review_id": null,
        "id": 14330191,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzMwMTkx",
        "diff_hunk": "@@ -0,0 +1,78 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.animation.ValueAnimator;\n+import android.content.Context;\n+import android.util.AttributeSet;\n+import android.util.Log;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.FrameLayout;\n+import android.widget.LinearLayout;\n+import android.widget.RelativeLayout;\n+import android.widget.Toast;\n+\n+public class SwipeableView extends RelativeLayout implements View.OnClickListener, ValueAnimator.AnimatorUpdateListener {\n+\n+    private ViewGroup firstPage;\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init();\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs, int defStyleAttr) {\n+        super(context, attrs, defStyleAttr);\n+        init();\n+    }\n+\n+    private void init() {\n+        validateUsage();\n+    }\n+\n+    private void validateUsage() {\n+        int childCount = getChildCount();\n+        if (childCount > 2) {\n+            throw new RuntimeException(\"Can only have two children at the moment\");\n+        }\n+    }\n+\n+    @Override\n+    protected void onFinishInflate() {\n+        super.onFinishInflate();\n+        firstPage = (ViewGroup) getChildAt(1);\n+        setOnClickListener(this);\n+    }\n+\n+    public void slide() {\n+        Toast.makeText(getContext(), \"Sliding\", Toast.LENGTH_SHORT).show();\n+        ValueAnimator va = ValueAnimator.ofInt(getWidth() / 2, 0);\n+        va.setDuration(500);\n+        va.setStartDelay(0L);\n+        va.addUpdateListener(this);\n+        va.start();\n+    }\n+\n+    @Override\n+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n+        super.onMeasure(widthMeasureSpec * 2, heightMeasureSpec);\n+        int wspec = MeasureSpec.makeMeasureSpec(getMeasuredWidth() / 2, MeasureSpec.EXACTLY);\n+        int hspec = MeasureSpec.makeMeasureSpec(getMeasuredHeight(), MeasureSpec.EXACTLY);\n+        for (int i = 0; i < getChildCount(); i++) {\n+            View v = getChildAt(i);\n+            v.measure(wspec, hspec);\n+        }\n+    }\n+\n+    @Override\n+    public void onClick(View view) {\n+        slide();\n+    }\n+\n+    @Override\n+    public void onAnimationUpdate(ValueAnimator valueAnimator) {\n+        Integer value = (Integer) valueAnimator.getAnimatedValue();\n+        int i = value.intValue();\n+        firstPage.getLayoutParams().width = i;\n+        requestLayout();",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": null,
        "original_position": 76,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "d8374c153e767d0005e80f6d6e3687be6930ec3e",
        "user": {
            "login": "mr-archano",
            "id": 1069201,
            "node_id": "MDQ6VXNlcjEwNjkyMDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1069201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mr-archano",
            "html_url": "https://github.com/mr-archano",
            "followers_url": "https://api.github.com/users/mr-archano/followers",
            "following_url": "https://api.github.com/users/mr-archano/following{/other_user}",
            "gists_url": "https://api.github.com/users/mr-archano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mr-archano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mr-archano/subscriptions",
            "organizations_url": "https://api.github.com/users/mr-archano/orgs",
            "repos_url": "https://api.github.com/users/mr-archano/repos",
            "events_url": "https://api.github.com/users/mr-archano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mr-archano/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would be careful with this approach: basically you are requesting a layout on each frame of the animation, so you will encounter performance problems with anything more complex than the layout you are using in this test. A proper description of what you want to achieve will help anyone to understand better what you want to achieve, and perhaps discuss a better solution :)\n",
        "created_at": "2014-06-29T16:31:13Z",
        "updated_at": "2014-07-05T17:01:47Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14330191",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14330191"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14330191"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14330196",
        "pull_request_review_id": null,
        "id": 14330196,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzMwMTk2",
        "diff_hunk": "@@ -0,0 +1,78 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.animation.ValueAnimator;\n+import android.content.Context;\n+import android.util.AttributeSet;\n+import android.util.Log;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.FrameLayout;\n+import android.widget.LinearLayout;\n+import android.widget.RelativeLayout;\n+import android.widget.Toast;\n+\n+public class SwipeableView extends RelativeLayout implements View.OnClickListener, ValueAnimator.AnimatorUpdateListener {\n+\n+    private ViewGroup firstPage;\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init();\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs, int defStyleAttr) {\n+        super(context, attrs, defStyleAttr);\n+        init();\n+    }\n+\n+    private void init() {\n+        validateUsage();\n+    }\n+\n+    private void validateUsage() {\n+        int childCount = getChildCount();\n+        if (childCount > 2) {\n+            throw new RuntimeException(\"Can only have two children at the moment\");\n+        }\n+    }\n+\n+    @Override\n+    protected void onFinishInflate() {\n+        super.onFinishInflate();\n+        firstPage = (ViewGroup) getChildAt(1);\n+        setOnClickListener(this);\n+    }\n+\n+    public void slide() {\n+        Toast.makeText(getContext(), \"Sliding\", Toast.LENGTH_SHORT).show();\n+        ValueAnimator va = ValueAnimator.ofInt(getWidth() / 2, 0);\n+        va.setDuration(500);\n+        va.setStartDelay(0L);\n+        va.addUpdateListener(this);\n+        va.start();\n+    }\n+\n+    @Override\n+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n+        super.onMeasure(widthMeasureSpec * 2, heightMeasureSpec);\n+        int wspec = MeasureSpec.makeMeasureSpec(getMeasuredWidth() / 2, MeasureSpec.EXACTLY);\n+        int hspec = MeasureSpec.makeMeasureSpec(getMeasuredHeight(), MeasureSpec.EXACTLY);\n+        for (int i = 0; i < getChildCount(); i++) {\n+            View v = getChildAt(i);\n+            v.measure(wspec, hspec);\n+        }\n+    }\n+\n+    @Override\n+    public void onClick(View view) {\n+        slide();\n+    }\n+\n+    @Override\n+    public void onAnimationUpdate(ValueAnimator valueAnimator) {\n+        Integer value = (Integer) valueAnimator.getAnimatedValue();\n+        int i = value.intValue();\n+        firstPage.getLayoutParams().width = i;\n+        requestLayout();",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": null,
        "original_position": 76,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "d8374c153e767d0005e80f6d6e3687be6930ec3e",
        "user": {
            "login": "ouchadam",
            "id": 1848238,
            "node_id": "MDQ6VXNlcjE4NDgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1848238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ouchadam",
            "html_url": "https://github.com/ouchadam",
            "followers_url": "https://api.github.com/users/ouchadam/followers",
            "following_url": "https://api.github.com/users/ouchadam/following{/other_user}",
            "gists_url": "https://api.github.com/users/ouchadam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ouchadam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ouchadam/subscriptions",
            "organizations_url": "https://api.github.com/users/ouchadam/orgs",
            "repos_url": "https://api.github.com/users/ouchadam/repos",
            "events_url": "https://api.github.com/users/ouchadam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ouchadam/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "All I want is what the gif does. Yep we should discuss!\n",
        "created_at": "2014-06-29T16:33:52Z",
        "updated_at": "2014-07-05T17:01:47Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14330196",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14330196"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14330196"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14331132",
        "pull_request_review_id": null,
        "id": 14331132,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzMxMTMy",
        "diff_hunk": "@@ -0,0 +1,22 @@\n+buildscript {\n+    repositories {\n+        mavenCentral()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:0.12.+'\n+    }\n+}\n+\n+apply plugin: 'android'\n+\n+android {\n+    compileSdkVersion 19\n+    buildToolsVersion \"20\"",
        "path": "SwipeableView/build.gradle",
        "position": null,
        "original_position": 14,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "d8374c153e767d0005e80f6d6e3687be6930ec3e",
        "user": {
            "login": "blundell",
            "id": 655860,
            "node_id": "MDQ6VXNlcjY1NTg2MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/655860?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blundell",
            "html_url": "https://github.com/blundell",
            "followers_url": "https://api.github.com/users/blundell/followers",
            "following_url": "https://api.github.com/users/blundell/following{/other_user}",
            "gists_url": "https://api.github.com/users/blundell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blundell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blundell/subscriptions",
            "organizations_url": "https://api.github.com/users/blundell/orgs",
            "repos_url": "https://api.github.com/users/blundell/repos",
            "events_url": "https://api.github.com/users/blundell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blundell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is this a new style of choosing a version?\n",
        "created_at": "2014-06-29T19:54:59Z",
        "updated_at": "2014-07-05T17:01:47Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14331132",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14331132"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14331132"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14331162",
        "pull_request_review_id": null,
        "id": 14331162,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzMxMTYy",
        "diff_hunk": "@@ -0,0 +1,22 @@\n+buildscript {\n+    repositories {\n+        mavenCentral()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:0.12.+'\n+    }\n+}\n+\n+apply plugin: 'android'\n+\n+android {\n+    compileSdkVersion 19\n+    buildToolsVersion \"20\"",
        "path": "SwipeableView/build.gradle",
        "position": null,
        "original_position": 14,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "d8374c153e767d0005e80f6d6e3687be6930ec3e",
        "user": {
            "login": "ouchadam",
            "id": 1848238,
            "node_id": "MDQ6VXNlcjE4NDgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1848238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ouchadam",
            "html_url": "https://github.com/ouchadam",
            "followers_url": "https://api.github.com/users/ouchadam/followers",
            "following_url": "https://api.github.com/users/ouchadam/following{/other_user}",
            "gists_url": "https://api.github.com/users/ouchadam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ouchadam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ouchadam/subscriptions",
            "organizations_url": "https://api.github.com/users/ouchadam/orgs",
            "repos_url": "https://api.github.com/users/ouchadam/repos",
            "events_url": "https://api.github.com/users/ouchadam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ouchadam/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nope?\n",
        "created_at": "2014-06-29T20:00:47Z",
        "updated_at": "2014-07-05T17:01:47Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14331162",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14331162"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14331162"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14331311",
        "pull_request_review_id": null,
        "id": 14331311,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzMxMzEx",
        "diff_hunk": "@@ -0,0 +1,22 @@\n+buildscript {\n+    repositories {\n+        mavenCentral()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:0.12.+'\n+    }\n+}\n+\n+apply plugin: 'android'\n+\n+android {\n+    compileSdkVersion 19\n+    buildToolsVersion \"20\"",
        "path": "SwipeableView/build.gradle",
        "position": null,
        "original_position": 14,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "d8374c153e767d0005e80f6d6e3687be6930ec3e",
        "user": {
            "login": "blundell",
            "id": 655860,
            "node_id": "MDQ6VXNlcjY1NTg2MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/655860?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blundell",
            "html_url": "https://github.com/blundell",
            "followers_url": "https://api.github.com/users/blundell/followers",
            "following_url": "https://api.github.com/users/blundell/following{/other_user}",
            "gists_url": "https://api.github.com/users/blundell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blundell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blundell/subscriptions",
            "organizations_url": "https://api.github.com/users/blundell/orgs",
            "repos_url": "https://api.github.com/users/blundell/repos",
            "events_url": "https://api.github.com/users/blundell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blundell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oh yeah I'm just used to seeing major minor incremental, would \"20.0.0\" work?\n",
        "created_at": "2014-06-29T20:24:48Z",
        "updated_at": "2014-07-05T17:01:47Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14331311",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14331311"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14331311"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14331450",
        "pull_request_review_id": null,
        "id": 14331450,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzMxNDUw",
        "diff_hunk": "@@ -0,0 +1,22 @@\n+buildscript {\n+    repositories {\n+        mavenCentral()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:0.12.+'\n+    }\n+}\n+\n+apply plugin: 'android'\n+\n+android {\n+    compileSdkVersion 19\n+    buildToolsVersion \"20\"",
        "path": "SwipeableView/build.gradle",
        "position": null,
        "original_position": 14,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "d8374c153e767d0005e80f6d6e3687be6930ec3e",
        "user": {
            "login": "ouchadam",
            "id": 1848238,
            "node_id": "MDQ6VXNlcjE4NDgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1848238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ouchadam",
            "html_url": "https://github.com/ouchadam",
            "followers_url": "https://api.github.com/users/ouchadam/followers",
            "following_url": "https://api.github.com/users/ouchadam/following{/other_user}",
            "gists_url": "https://api.github.com/users/ouchadam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ouchadam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ouchadam/subscriptions",
            "organizations_url": "https://api.github.com/users/ouchadam/orgs",
            "repos_url": "https://api.github.com/users/ouchadam/repos",
            "events_url": "https://api.github.com/users/ouchadam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ouchadam/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yep that work as well\n",
        "created_at": "2014-06-29T20:45:02Z",
        "updated_at": "2014-07-05T17:01:47Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14331450",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14331450"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14331450"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14331453",
        "pull_request_review_id": null,
        "id": 14331453,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzMxNDUz",
        "diff_hunk": "@@ -0,0 +1,78 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.animation.ValueAnimator;\n+import android.content.Context;\n+import android.util.AttributeSet;\n+import android.util.Log;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.FrameLayout;\n+import android.widget.LinearLayout;\n+import android.widget.RelativeLayout;\n+import android.widget.Toast;\n+\n+public class SwipeableView extends RelativeLayout implements View.OnClickListener, ValueAnimator.AnimatorUpdateListener {\n+\n+    private ViewGroup firstPage;\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init();\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs, int defStyleAttr) {\n+        super(context, attrs, defStyleAttr);\n+        init();\n+    }\n+\n+    private void init() {\n+        validateUsage();\n+    }\n+\n+    private void validateUsage() {\n+        int childCount = getChildCount();\n+        if (childCount > 2) {\n+            throw new RuntimeException(\"Can only have two children at the moment\");\n+        }\n+    }\n+\n+    @Override\n+    protected void onFinishInflate() {\n+        super.onFinishInflate();\n+        firstPage = (ViewGroup) getChildAt(1);\n+        setOnClickListener(this);\n+    }\n+\n+    public void slide() {\n+        Toast.makeText(getContext(), \"Sliding\", Toast.LENGTH_SHORT).show();\n+        ValueAnimator va = ValueAnimator.ofInt(getWidth() / 2, 0);\n+        va.setDuration(500);\n+        va.setStartDelay(0L);\n+        va.addUpdateListener(this);\n+        va.start();\n+    }\n+\n+    @Override\n+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n+        super.onMeasure(widthMeasureSpec * 2, heightMeasureSpec);\n+        int wspec = MeasureSpec.makeMeasureSpec(getMeasuredWidth() / 2, MeasureSpec.EXACTLY);\n+        int hspec = MeasureSpec.makeMeasureSpec(getMeasuredHeight(), MeasureSpec.EXACTLY);\n+        for (int i = 0; i < getChildCount(); i++) {\n+            View v = getChildAt(i);\n+            v.measure(wspec, hspec);\n+        }\n+    }\n+\n+    @Override\n+    public void onClick(View view) {\n+        slide();\n+    }\n+\n+    @Override\n+    public void onAnimationUpdate(ValueAnimator valueAnimator) {\n+        Integer value = (Integer) valueAnimator.getAnimatedValue();\n+        int i = value.intValue();\n+        firstPage.getLayoutParams().width = i;\n+        requestLayout();",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": null,
        "original_position": 76,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "d8374c153e767d0005e80f6d6e3687be6930ec3e",
        "user": {
            "login": "ouchadam",
            "id": 1848238,
            "node_id": "MDQ6VXNlcjE4NDgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1848238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ouchadam",
            "html_url": "https://github.com/ouchadam",
            "followers_url": "https://api.github.com/users/ouchadam/followers",
            "following_url": "https://api.github.com/users/ouchadam/following{/other_user}",
            "gists_url": "https://api.github.com/users/ouchadam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ouchadam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ouchadam/subscriptions",
            "organizations_url": "https://api.github.com/users/ouchadam/orgs",
            "repos_url": "https://api.github.com/users/ouchadam/repos",
            "events_url": "https://api.github.com/users/ouchadam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ouchadam/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "6dde3a8fc6de1614d3c47ad7af5fd601a640291c\n",
        "created_at": "2014-06-29T20:45:29Z",
        "updated_at": "2014-07-05T17:01:47Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14331453",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14331453"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14331453"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14571865",
        "pull_request_review_id": null,
        "id": 14571865,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTcxODY1",
        "diff_hunk": "@@ -0,0 +1,26 @@\n+buildscript {\n+    repositories {\n+        mavenCentral()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:0.12.+'\n+    }\n+}\n+\n+apply plugin: 'com.android.application'\n+\n+\n+dependencies {\n+    compile 'com.android.support:support-v13:19.1.0'\n+}\n+\n+android {\n+    compileSdkVersion 19\n+    buildToolsVersion \"20\"\n+\n+    defaultConfig {\n+        minSdkVersion 14\n+        targetSdkVersion 19",
        "path": "SwipeableView/build.gradle",
        "position": 23,
        "original_position": 23,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "6605a72c175cd7eed12c941e81ce5425114cf3e0",
        "user": {
            "login": "blundell",
            "id": 655860,
            "node_id": "MDQ6VXNlcjY1NTg2MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/655860?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blundell",
            "html_url": "https://github.com/blundell",
            "followers_url": "https://api.github.com/users/blundell/followers",
            "following_url": "https://api.github.com/users/blundell/following{/other_user}",
            "gists_url": "https://api.github.com/users/blundell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blundell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blundell/subscriptions",
            "organizations_url": "https://api.github.com/users/blundell/orgs",
            "repos_url": "https://api.github.com/users/blundell/repos",
            "events_url": "https://api.github.com/users/blundell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blundell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "target 20 ? :-)\n",
        "created_at": "2014-07-05T16:58:54Z",
        "updated_at": "2014-07-05T17:01:47Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14571865",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14571865"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14571865"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14571870",
        "pull_request_review_id": null,
        "id": 14571870,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTcxODcw",
        "diff_hunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<com.ouchadam.swipeableview.SwipeableView\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\">\n+",
        "path": "SwipeableView/src/main/res/layout/main_activity.xml",
        "position": 7,
        "original_position": 7,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "6605a72c175cd7eed12c941e81ce5425114cf3e0",
        "user": {
            "login": "blundell",
            "id": 655860,
            "node_id": "MDQ6VXNlcjY1NTg2MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/655860?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blundell",
            "html_url": "https://github.com/blundell",
            "followers_url": "https://api.github.com/users/blundell/followers",
            "following_url": "https://api.github.com/users/blundell/following{/other_user}",
            "gists_url": "https://api.github.com/users/blundell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blundell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blundell/subscriptions",
            "organizations_url": "https://api.github.com/users/blundell/orgs",
            "repos_url": "https://api.github.com/users/blundell/repos",
            "events_url": "https://api.github.com/users/blundell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blundell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this can have children or `/>`?\n",
        "created_at": "2014-07-05T17:00:12Z",
        "updated_at": "2014-07-05T17:01:47Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14571870",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14571870"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14571870"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14571883",
        "pull_request_review_id": null,
        "id": 14571883,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTcxODgz",
        "diff_hunk": "@@ -0,0 +1,26 @@\n+buildscript {\n+    repositories {\n+        mavenCentral()\n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:0.12.+'\n+    }\n+}\n+\n+apply plugin: 'com.android.application'\n+\n+\n+dependencies {\n+    compile 'com.android.support:support-v13:19.1.0'\n+}\n+\n+android {\n+    compileSdkVersion 19\n+    buildToolsVersion \"20\"\n+\n+    defaultConfig {\n+        minSdkVersion 14\n+        targetSdkVersion 19",
        "path": "SwipeableView/build.gradle",
        "position": 23,
        "original_position": 23,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "6605a72c175cd7eed12c941e81ce5425114cf3e0",
        "user": {
            "login": "ouchadam",
            "id": 1848238,
            "node_id": "MDQ6VXNlcjE4NDgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1848238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ouchadam",
            "html_url": "https://github.com/ouchadam",
            "followers_url": "https://api.github.com/users/ouchadam/followers",
            "following_url": "https://api.github.com/users/ouchadam/following{/other_user}",
            "gists_url": "https://api.github.com/users/ouchadam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ouchadam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ouchadam/subscriptions",
            "organizations_url": "https://api.github.com/users/ouchadam/orgs",
            "repos_url": "https://api.github.com/users/ouchadam/repos",
            "events_url": "https://api.github.com/users/ouchadam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ouchadam/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "can do\n",
        "created_at": "2014-07-05T17:04:40Z",
        "updated_at": "2014-07-05T17:04:40Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14571883",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14571883"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14571883"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14571884",
        "pull_request_review_id": null,
        "id": 14571884,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTcxODg0",
        "diff_hunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<com.ouchadam.swipeableview.SwipeableView\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\">\n+",
        "path": "SwipeableView/src/main/res/layout/main_activity.xml",
        "position": 7,
        "original_position": 7,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "6605a72c175cd7eed12c941e81ce5425114cf3e0",
        "user": {
            "login": "ouchadam",
            "id": 1848238,
            "node_id": "MDQ6VXNlcjE4NDgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1848238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ouchadam",
            "html_url": "https://github.com/ouchadam",
            "followers_url": "https://api.github.com/users/ouchadam/followers",
            "following_url": "https://api.github.com/users/ouchadam/following{/other_user}",
            "gists_url": "https://api.github.com/users/ouchadam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ouchadam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ouchadam/subscriptions",
            "organizations_url": "https://api.github.com/users/ouchadam/orgs",
            "repos_url": "https://api.github.com/users/ouchadam/repos",
            "events_url": "https://api.github.com/users/ouchadam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ouchadam/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nope, should be /> :+1: \n",
        "created_at": "2014-07-05T17:04:54Z",
        "updated_at": "2014-07-05T17:04:54Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14571884",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14571884"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14571884"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14575011",
        "pull_request_review_id": null,
        "id": 14575011,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc1MDEx",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.content.Context;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+public class SwipeableView extends ViewPager {\n+\n+    private static final int VIEW_COUNT = 2;\n+    private boolean canSwipe;\n+\n+    public SwipeableView(Context context) {\n+        super(context);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    private void init(LayoutInflater layoutInflater) {\n+        canSwipe = true;\n+        setOnPageChangeListener(onPageChangeListener);\n+        setAdapter(new ViewAdapter(layoutInflater));\n+    }\n+\n+\n+    private final OnPageChangeListener onPageChangeListener = new OnPageChangeListener() {",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": 34,
        "original_position": 34,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "user": {
            "login": "mr-archano",
            "id": 1069201,
            "node_id": "MDQ6VXNlcjEwNjkyMDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1069201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mr-archano",
            "html_url": "https://github.com/mr-archano",
            "followers_url": "https://api.github.com/users/mr-archano/followers",
            "following_url": "https://api.github.com/users/mr-archano/following{/other_user}",
            "gists_url": "https://api.github.com/users/mr-archano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mr-archano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mr-archano/subscriptions",
            "organizations_url": "https://api.github.com/users/mr-archano/orgs",
            "repos_url": "https://api.github.com/users/mr-archano/repos",
            "events_url": "https://api.github.com/users/mr-archano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mr-archano/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If you use this approach and someone uses `setOnPageChangeListener()` then your internal `onPageSelected()` logic will be lost. It's better to make this listener to wrap another `OnPageChangeListener` that can be set using the public setter instead. Then in each `onPage*(...)` you can correctly invoke the external listener (if any), maintaining both yours and the \"external\" behaviour\n",
        "created_at": "2014-07-06T12:35:29Z",
        "updated_at": "2014-07-06T12:35:29Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14575011",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14575011"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14575011"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14575019",
        "pull_request_review_id": null,
        "id": 14575019,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc1MDE5",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.content.Context;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+public class SwipeableView extends ViewPager {\n+\n+    private static final int VIEW_COUNT = 2;\n+    private boolean canSwipe;\n+\n+    public SwipeableView(Context context) {\n+        super(context);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    private void init(LayoutInflater layoutInflater) {\n+        canSwipe = true;\n+        setOnPageChangeListener(onPageChangeListener);\n+        setAdapter(new ViewAdapter(layoutInflater));\n+    }\n+\n+\n+    private final OnPageChangeListener onPageChangeListener = new OnPageChangeListener() {\n+        @Override\n+        public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n+\n+        }\n+\n+        @Override\n+        public void onPageSelected(int position) {\n+            if (position == 1) {\n+                canSwipe = false;",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": 43,
        "original_position": 43,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "user": {
            "login": "mr-archano",
            "id": 1069201,
            "node_id": "MDQ6VXNlcjEwNjkyMDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1069201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mr-archano",
            "html_url": "https://github.com/mr-archano",
            "followers_url": "https://api.github.com/users/mr-archano/followers",
            "following_url": "https://api.github.com/users/mr-archano/following{/other_user}",
            "gists_url": "https://api.github.com/users/mr-archano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mr-archano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mr-archano/subscriptions",
            "organizations_url": "https://api.github.com/users/mr-archano/orgs",
            "repos_url": "https://api.github.com/users/mr-archano/repos",
            "events_url": "https://api.github.com/users/mr-archano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mr-archano/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure I understand the purpose of this method. What it does is ~~swallow the touch events if~~ change the touch events handling when the user swipes to the second page. But what if the user will swipe back? `canSwipe` does not seem to be reset anywhere. Is it the intended behaviour?\n",
        "created_at": "2014-07-06T12:38:47Z",
        "updated_at": "2014-07-06T12:42:19Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14575019",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14575019"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14575019"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14575647",
        "pull_request_review_id": null,
        "id": 14575647,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc1NjQ3",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.content.Context;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+public class SwipeableView extends ViewPager {\n+\n+    private static final int VIEW_COUNT = 2;\n+    private boolean canSwipe;\n+\n+    public SwipeableView(Context context) {\n+        super(context);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    private void init(LayoutInflater layoutInflater) {\n+        canSwipe = true;\n+        setOnPageChangeListener(onPageChangeListener);\n+        setAdapter(new ViewAdapter(layoutInflater));\n+    }\n+\n+\n+    private final OnPageChangeListener onPageChangeListener = new OnPageChangeListener() {\n+        @Override\n+        public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n+\n+        }\n+\n+        @Override\n+        public void onPageSelected(int position) {\n+            if (position == 1) {\n+                canSwipe = false;",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": 43,
        "original_position": 43,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "user": {
            "login": "xrigau",
            "id": 1626673,
            "node_id": "MDQ6VXNlcjE2MjY2NzM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1626673?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xrigau",
            "html_url": "https://github.com/xrigau",
            "followers_url": "https://api.github.com/users/xrigau/followers",
            "following_url": "https://api.github.com/users/xrigau/following{/other_user}",
            "gists_url": "https://api.github.com/users/xrigau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xrigau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xrigau/subscriptions",
            "organizations_url": "https://api.github.com/users/xrigau/orgs",
            "repos_url": "https://api.github.com/users/xrigau/repos",
            "events_url": "https://api.github.com/users/xrigau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xrigau/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yes\n",
        "created_at": "2014-07-06T15:16:54Z",
        "updated_at": "2014-07-06T15:16:54Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14575647",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14575647"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14575647"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14575880",
        "pull_request_review_id": null,
        "id": 14575880,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc1ODgw",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.content.Context;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+public class SwipeableView extends ViewPager {\n+\n+    private static final int VIEW_COUNT = 2;\n+    private boolean canSwipe;\n+\n+    public SwipeableView(Context context) {\n+        super(context);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    private void init(LayoutInflater layoutInflater) {\n+        canSwipe = true;\n+        setOnPageChangeListener(onPageChangeListener);\n+        setAdapter(new ViewAdapter(layoutInflater));\n+    }\n+\n+\n+    private final OnPageChangeListener onPageChangeListener = new OnPageChangeListener() {",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": 34,
        "original_position": 34,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "user": {
            "login": "ouchadam",
            "id": 1848238,
            "node_id": "MDQ6VXNlcjE4NDgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1848238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ouchadam",
            "html_url": "https://github.com/ouchadam",
            "followers_url": "https://api.github.com/users/ouchadam/followers",
            "following_url": "https://api.github.com/users/ouchadam/following{/other_user}",
            "gists_url": "https://api.github.com/users/ouchadam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ouchadam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ouchadam/subscriptions",
            "organizations_url": "https://api.github.com/users/ouchadam/orgs",
            "repos_url": "https://api.github.com/users/ouchadam/repos",
            "events_url": "https://api.github.com/users/ouchadam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ouchadam/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yep, that's what I've done in the real usage. However, there's no way to stop someone from calling `setOnPageChangeListener()` and overriding the internal logic :confused: \n",
        "created_at": "2014-07-06T16:04:04Z",
        "updated_at": "2014-07-06T16:04:04Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14575880",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14575880"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14575880"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14577659",
        "pull_request_review_id": null,
        "id": 14577659,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc3NjU5",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.content.Context;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+public class SwipeableView extends ViewPager {\n+\n+    private static final int VIEW_COUNT = 2;\n+    private boolean canSwipe;\n+\n+    public SwipeableView(Context context) {\n+        super(context);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    private void init(LayoutInflater layoutInflater) {\n+        canSwipe = true;\n+        setOnPageChangeListener(onPageChangeListener);\n+        setAdapter(new ViewAdapter(layoutInflater));\n+    }\n+\n+\n+    private final OnPageChangeListener onPageChangeListener = new OnPageChangeListener() {\n+        @Override\n+        public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n+\n+        }\n+\n+        @Override\n+        public void onPageSelected(int position) {\n+            if (position == 1) {\n+                canSwipe = false;",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": 43,
        "original_position": 43,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "user": {
            "login": "blundell",
            "id": 655860,
            "node_id": "MDQ6VXNlcjY1NTg2MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/655860?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blundell",
            "html_url": "https://github.com/blundell",
            "followers_url": "https://api.github.com/users/blundell/followers",
            "following_url": "https://api.github.com/users/blundell/following{/other_user}",
            "gists_url": "https://api.github.com/users/blundell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blundell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blundell/subscriptions",
            "organizations_url": "https://api.github.com/users/blundell/orgs",
            "repos_url": "https://api.github.com/users/blundell/repos",
            "events_url": "https://api.github.com/users/blundell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blundell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I thought they idea is - it stops them swiping back. See read me :-)\n",
        "created_at": "2014-07-06T21:18:00Z",
        "updated_at": "2014-07-06T21:18:00Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14577659",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14577659"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14577659"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14577662",
        "pull_request_review_id": null,
        "id": 14577662,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc3NjYy",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.content.Context;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+public class SwipeableView extends ViewPager {\n+\n+    private static final int VIEW_COUNT = 2;\n+    private boolean canSwipe;\n+\n+    public SwipeableView(Context context) {\n+        super(context);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    private void init(LayoutInflater layoutInflater) {\n+        canSwipe = true;\n+        setOnPageChangeListener(onPageChangeListener);\n+        setAdapter(new ViewAdapter(layoutInflater));\n+    }\n+\n+\n+    private final OnPageChangeListener onPageChangeListener = new OnPageChangeListener() {",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": 34,
        "original_position": 34,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "user": {
            "login": "blundell",
            "id": 655860,
            "node_id": "MDQ6VXNlcjY1NTg2MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/655860?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blundell",
            "html_url": "https://github.com/blundell",
            "followers_url": "https://api.github.com/users/blundell/followers",
            "following_url": "https://api.github.com/users/blundell/following{/other_user}",
            "gists_url": "https://api.github.com/users/blundell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blundell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blundell/subscriptions",
            "organizations_url": "https://api.github.com/users/blundell/orgs",
            "repos_url": "https://api.github.com/users/blundell/repos",
            "events_url": "https://api.github.com/users/blundell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blundell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can override `setOnPageChangeListener()` to keep both references\n",
        "created_at": "2014-07-06T21:18:27Z",
        "updated_at": "2014-07-06T21:18:27Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14577662",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14577662"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14577662"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14577750",
        "pull_request_review_id": null,
        "id": 14577750,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc3NzUw",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.content.Context;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+public class SwipeableView extends ViewPager {\n+\n+    private static final int VIEW_COUNT = 2;\n+    private boolean canSwipe;\n+\n+    public SwipeableView(Context context) {\n+        super(context);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    private void init(LayoutInflater layoutInflater) {\n+        canSwipe = true;\n+        setOnPageChangeListener(onPageChangeListener);\n+        setAdapter(new ViewAdapter(layoutInflater));\n+    }\n+\n+\n+    private final OnPageChangeListener onPageChangeListener = new OnPageChangeListener() {",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": 34,
        "original_position": 34,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "user": {
            "login": "ouchadam",
            "id": 1848238,
            "node_id": "MDQ6VXNlcjE4NDgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1848238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ouchadam",
            "html_url": "https://github.com/ouchadam",
            "followers_url": "https://api.github.com/users/ouchadam/followers",
            "following_url": "https://api.github.com/users/ouchadam/following{/other_user}",
            "gists_url": "https://api.github.com/users/ouchadam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ouchadam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ouchadam/subscriptions",
            "organizations_url": "https://api.github.com/users/ouchadam/orgs",
            "repos_url": "https://api.github.com/users/ouchadam/repos",
            "events_url": "https://api.github.com/users/ouchadam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ouchadam/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ahhh yeah could wrap it\n",
        "created_at": "2014-07-06T21:32:37Z",
        "updated_at": "2014-07-06T21:32:37Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14577750",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14577750"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14577750"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14585672",
        "pull_request_review_id": null,
        "id": 14585672,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTg1Njcy",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.content.Context;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+public class SwipeableView extends ViewPager {\n+\n+    private static final int VIEW_COUNT = 2;\n+    private boolean canSwipe;\n+\n+    public SwipeableView(Context context) {\n+        super(context);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    private void init(LayoutInflater layoutInflater) {\n+        canSwipe = true;\n+        setOnPageChangeListener(onPageChangeListener);\n+        setAdapter(new ViewAdapter(layoutInflater));\n+    }\n+\n+\n+    private final OnPageChangeListener onPageChangeListener = new OnPageChangeListener() {",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": 34,
        "original_position": 34,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "user": {
            "login": "mr-archano",
            "id": 1069201,
            "node_id": "MDQ6VXNlcjEwNjkyMDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1069201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mr-archano",
            "html_url": "https://github.com/mr-archano",
            "followers_url": "https://api.github.com/users/mr-archano/followers",
            "following_url": "https://api.github.com/users/mr-archano/following{/other_user}",
            "gists_url": "https://api.github.com/users/mr-archano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mr-archano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mr-archano/subscriptions",
            "organizations_url": "https://api.github.com/users/mr-archano/orgs",
            "repos_url": "https://api.github.com/users/mr-archano/repos",
            "events_url": "https://api.github.com/users/mr-archano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mr-archano/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just to be sure, below my idea:\n\n``` java\n\n@Override\npublic void setOnPageChangeListener(OnPageChangeListener listener) {\n    this.wrappedListener = listener;\n}\n...\n@Override\npublic void onPageSelected(int position) {\n    if (position == 1) {\n        canSwipe = false;\n    }\n    if (wrappedListener != null) {\n        wrappedListener.onPageSelected(position);\n    }\n}\n\n```\n\nedit: in this way your `canSwipe` logic will never be overridden by an external listener. Or am I missing something?\n",
        "created_at": "2014-07-07T08:31:19Z",
        "updated_at": "2014-07-07T08:36:23Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14585672",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14585672"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14585672"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14585895",
        "pull_request_review_id": null,
        "id": 14585895,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTg1ODk1",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.content.Context;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+public class SwipeableView extends ViewPager {\n+\n+    private static final int VIEW_COUNT = 2;\n+    private boolean canSwipe;\n+\n+    public SwipeableView(Context context) {\n+        super(context);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    private void init(LayoutInflater layoutInflater) {\n+        canSwipe = true;\n+        setOnPageChangeListener(onPageChangeListener);\n+        setAdapter(new ViewAdapter(layoutInflater));\n+    }\n+\n+\n+    private final OnPageChangeListener onPageChangeListener = new OnPageChangeListener() {\n+        @Override\n+        public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n+\n+        }\n+\n+        @Override\n+        public void onPageSelected(int position) {\n+            if (position == 1) {\n+                canSwipe = false;",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": 43,
        "original_position": 43,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "user": {
            "login": "mr-archano",
            "id": 1069201,
            "node_id": "MDQ6VXNlcjEwNjkyMDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1069201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mr-archano",
            "html_url": "https://github.com/mr-archano",
            "followers_url": "https://api.github.com/users/mr-archano/followers",
            "following_url": "https://api.github.com/users/mr-archano/following{/other_user}",
            "gists_url": "https://api.github.com/users/mr-archano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mr-archano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mr-archano/subscriptions",
            "organizations_url": "https://api.github.com/users/mr-archano/orgs",
            "repos_url": "https://api.github.com/users/mr-archano/repos",
            "events_url": "https://api.github.com/users/mr-archano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mr-archano/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh yah, I suppose you want to prevent users to swipe back after they have moved from page 0 (ie: onboarding?)\n",
        "created_at": "2014-07-07T08:38:37Z",
        "updated_at": "2014-07-07T08:38:37Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14585895",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14585895"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14585895"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/14585910",
        "pull_request_review_id": null,
        "id": 14585910,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTg1OTEw",
        "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.ouchadam.swipeableview;\n+\n+import android.content.Context;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+public class SwipeableView extends ViewPager {\n+\n+    private static final int VIEW_COUNT = 2;\n+    private boolean canSwipe;\n+\n+    public SwipeableView(Context context) {\n+        super(context);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    public SwipeableView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(LayoutInflater.from(context));\n+    }\n+\n+    private void init(LayoutInflater layoutInflater) {\n+        canSwipe = true;\n+        setOnPageChangeListener(onPageChangeListener);\n+        setAdapter(new ViewAdapter(layoutInflater));\n+    }\n+\n+\n+    private final OnPageChangeListener onPageChangeListener = new OnPageChangeListener() {\n+        @Override\n+        public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n+\n+        }\n+\n+        @Override\n+        public void onPageSelected(int position) {\n+            if (position == 1) {\n+                canSwipe = false;",
        "path": "SwipeableView/src/main/java/com/ouchadam/swipeableview/SwipeableView.java",
        "position": 43,
        "original_position": 43,
        "commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "original_commit_id": "8a298de53698f63821680a402e20866a4b357909",
        "user": {
            "login": "ouchadam",
            "id": 1848238,
            "node_id": "MDQ6VXNlcjE4NDgyMzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1848238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ouchadam",
            "html_url": "https://github.com/ouchadam",
            "followers_url": "https://api.github.com/users/ouchadam/followers",
            "following_url": "https://api.github.com/users/ouchadam/following{/other_user}",
            "gists_url": "https://api.github.com/users/ouchadam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ouchadam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ouchadam/subscriptions",
            "organizations_url": "https://api.github.com/users/ouchadam/orgs",
            "repos_url": "https://api.github.com/users/ouchadam/repos",
            "events_url": "https://api.github.com/users/ouchadam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ouchadam/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "exactly :+1: \n",
        "created_at": "2014-07-07T08:39:02Z",
        "updated_at": "2014-07-07T08:39:02Z",
        "html_url": "https://github.com/novoda/spikes/pull/6#discussion_r14585910",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/6",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/14585910"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/6#discussion_r14585910"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/6"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/novoda/spikes/pulls/comments/21098201",
        "pull_request_review_id": null,
        "id": 21098201,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk4MjAx",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+# priority-share [![](https://raw.githubusercontent.com/novoda/novoda/master/assets/btn_apache_lisence.png)](LICENSE.txt)",
        "path": "priority-share/README.md",
        "position": 1,
        "original_position": 1,
        "commit_id": "91013afa94d678194ba1438ffc2051c15ff49f6c",
        "original_commit_id": "ea293bdb52bca277cd86c5f2bee6350d388e9fff",
        "user": {
            "login": "blundell",
            "id": 655860,
            "node_id": "MDQ6VXNlcjY1NTg2MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/655860?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blundell",
            "html_url": "https://github.com/blundell",
            "followers_url": "https://api.github.com/users/blundell/followers",
            "following_url": "https://api.github.com/users/blundell/following{/other_user}",
            "gists_url": "https://api.github.com/users/blundell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blundell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blundell/subscriptions",
            "organizations_url": "https://api.github.com/users/blundell/orgs",
            "repos_url": "https://api.github.com/users/blundell/repos",
            "events_url": "https://api.github.com/users/blundell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blundell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: lol `btn_apache_lisence`\n",
        "created_at": "2014-12-01T16:11:17Z",
        "updated_at": "2014-12-03T17:06:21Z",
        "html_url": "https://github.com/novoda/spikes/pull/9#discussion_r21098201",
        "pull_request_url": "https://api.github.com/repos/novoda/spikes/pulls/9",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/comments/21098201"
            },
            "html": {
                "href": "https://github.com/novoda/spikes/pull/9#discussion_r21098201"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/novoda/spikes/pulls/9"
            }
        }
    }
]