[
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259570494",
        "pull_request_review_id": 207100921,
        "id": 259570494,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MDQ5NA==",
        "diff_hunk": "@@ -1,2 +1,36 @@\n # hyper-orama\n A screen recorder for the hyper terminal\n+\n+To use repo in your hyper terminal do the following:\n+\n+```bash \n+mkdir ~/.hyper-plugins # create these follows if they don't exist\n+mkdir ~/.hyper-plugins/local/ \n+\n+```\n+\n+```bash \n+\n+cd ~/.hyper-plugins/local/\n+git clone git@github.com:cwlowder/hyper-orama.git\n+```\n+\n+\n+Add the following the lines to your `.hyper.js`:\n+\n+```javascript\n+\n+  // in development, you can create a directory under\n+  // `~/.hyper_plugins/local/` and include it here\n+  // to load it and avoid it being `npm install`ed\n+  // ... \n+  localPlugins: ['hyper-orama'],\n+  // ... \n+\n+```\n+\n+## Active Plugin",
        "path": "README.md",
        "position": null,
        "original_position": 32,
        "commit_id": "235b51ccdee97748985a5f3a732539e9f215ca59",
        "original_commit_id": "4063027cd605afb6e6fc7e031cd3e9218b65fbfc",
        "user": {
            "login": "cwlowder",
            "id": 17357997,
            "node_id": "MDQ6VXNlcjE3MzU3OTk3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17357997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cwlowder",
            "html_url": "https://github.com/cwlowder",
            "followers_url": "https://api.github.com/users/cwlowder/followers",
            "following_url": "https://api.github.com/users/cwlowder/following{/other_user}",
            "gists_url": "https://api.github.com/users/cwlowder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cwlowder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cwlowder/subscriptions",
            "organizations_url": "https://api.github.com/users/cwlowder/orgs",
            "repos_url": "https://api.github.com/users/cwlowder/repos",
            "events_url": "https://api.github.com/users/cwlowder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cwlowder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Activate plugin",
        "created_at": "2019-02-23T08:01:45Z",
        "updated_at": "2019-02-23T08:04:47Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/1#discussion_r259570494",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/1",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259570494"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/1#discussion_r259570494"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259570527",
        "pull_request_review_id": 207100921,
        "id": 259570527,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MDUyNw==",
        "diff_hunk": "@@ -1,2 +1,36 @@\n # hyper-orama\n A screen recorder for the hyper terminal\n+\n+To use repo in your hyper terminal do the following:",
        "path": "README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "235b51ccdee97748985a5f3a732539e9f215ca59",
        "original_commit_id": "4063027cd605afb6e6fc7e031cd3e9218b65fbfc",
        "user": {
            "login": "cwlowder",
            "id": 17357997,
            "node_id": "MDQ6VXNlcjE3MzU3OTk3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17357997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cwlowder",
            "html_url": "https://github.com/cwlowder",
            "followers_url": "https://api.github.com/users/cwlowder/followers",
            "following_url": "https://api.github.com/users/cwlowder/following{/other_user}",
            "gists_url": "https://api.github.com/users/cwlowder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cwlowder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cwlowder/subscriptions",
            "organizations_url": "https://api.github.com/users/cwlowder/orgs",
            "repos_url": "https://api.github.com/users/cwlowder/repos",
            "events_url": "https://api.github.com/users/cwlowder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cwlowder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "To add this plugin for development in the hyper terminal",
        "created_at": "2019-02-23T08:03:08Z",
        "updated_at": "2019-02-23T08:04:47Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/1#discussion_r259570527",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/1",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259570527"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/1#discussion_r259570527"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259570573",
        "pull_request_review_id": 207101003,
        "id": 259570573,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MDU3Mw==",
        "diff_hunk": "@@ -1,2 +1,36 @@\n # hyper-orama\n A screen recorder for the hyper terminal\n+\n+To use repo in your hyper terminal do the following:\n+\n+```bash \n+mkdir ~/.hyper-plugins # create these follows if they don't exist\n+mkdir ~/.hyper-plugins/local/ \n+\n+```\n+\n+```bash \n+\n+cd ~/.hyper-plugins/local/\n+git clone git@github.com:cwlowder/hyper-orama.git\n+```\n+\n+\n+Add the following the lines to your `.hyper.js`:\n+\n+```javascript\n+\n+  // in development, you can create a directory under\n+  // `~/.hyper_plugins/local/` and include it here\n+  // to load it and avoid it being `npm install`ed\n+  // ... \n+  localPlugins: ['hyper-orama'],\n+  // ... \n+\n+```\n+\n+## Active Plugin",
        "path": "README.md",
        "position": null,
        "original_position": 32,
        "commit_id": "235b51ccdee97748985a5f3a732539e9f215ca59",
        "original_commit_id": "4063027cd605afb6e6fc7e031cd3e9218b65fbfc",
        "user": {
            "login": "cwlowder",
            "id": 17357997,
            "node_id": "MDQ6VXNlcjE3MzU3OTk3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17357997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cwlowder",
            "html_url": "https://github.com/cwlowder",
            "followers_url": "https://api.github.com/users/cwlowder/followers",
            "following_url": "https://api.github.com/users/cwlowder/following{/other_user}",
            "gists_url": "https://api.github.com/users/cwlowder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cwlowder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cwlowder/subscriptions",
            "organizations_url": "https://api.github.com/users/cwlowder/orgs",
            "repos_url": "https://api.github.com/users/cwlowder/repos",
            "events_url": "https://api.github.com/users/cwlowder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cwlowder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\n## Activate Plugin\r\n```",
        "created_at": "2019-02-23T08:04:20Z",
        "updated_at": "2019-02-23T08:04:47Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/1#discussion_r259570573",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/1",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259570573"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/1#discussion_r259570573"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/1"
            }
        },
        "in_reply_to_id": 259570494
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259570584",
        "pull_request_review_id": 207101014,
        "id": 259570584,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MDU4NA==",
        "diff_hunk": "@@ -1,2 +1,36 @@\n # hyper-orama\n A screen recorder for the hyper terminal\n+\n+To use repo in your hyper terminal do the following:",
        "path": "README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "235b51ccdee97748985a5f3a732539e9f215ca59",
        "original_commit_id": "4063027cd605afb6e6fc7e031cd3e9218b65fbfc",
        "user": {
            "login": "cwlowder",
            "id": 17357997,
            "node_id": "MDQ6VXNlcjE3MzU3OTk3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17357997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cwlowder",
            "html_url": "https://github.com/cwlowder",
            "followers_url": "https://api.github.com/users/cwlowder/followers",
            "following_url": "https://api.github.com/users/cwlowder/following{/other_user}",
            "gists_url": "https://api.github.com/users/cwlowder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cwlowder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cwlowder/subscriptions",
            "organizations_url": "https://api.github.com/users/cwlowder/orgs",
            "repos_url": "https://api.github.com/users/cwlowder/repos",
            "events_url": "https://api.github.com/users/cwlowder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cwlowder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\nTo add this plugin for development in the hyper terminal\r\n```",
        "created_at": "2019-02-23T08:04:43Z",
        "updated_at": "2019-02-23T08:04:47Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/1#discussion_r259570584",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/1",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259570584"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/1#discussion_r259570584"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/1"
            }
        },
        "in_reply_to_id": 259570527
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259582739",
        "pull_request_review_id": 207113764,
        "id": 259582739,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4MjczOQ==",
        "diff_hunk": "@@ -0,0 +1,29 @@\n+# hyper-orama\n+A screen recorder for the hyper terminal\n+\n+To add this plugin for development in the hyper terminal:\n+\n+For initial setup, follow: https://github.com/zeit/hyper/blob/master/PLUGINS.md#setup-your-plugin\n+\n+Clone the repository into `.hyper-plugins/local/`:\n+\n+```bash \n+cd <repository_root>/.hyper-plugins/local/",
        "path": "README-WINDOWS.md",
        "position": null,
        "original_position": 11,
        "commit_id": "66f03645521836a4071ebb5d486db4683c17c873",
        "original_commit_id": "e07d8123a0931f1d251db01f22f8dc7aa4ea4561",
        "user": {
            "login": "cjoshmartin",
            "id": 8135112,
            "node_id": "MDQ6VXNlcjgxMzUxMTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8135112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjoshmartin",
            "html_url": "https://github.com/cjoshmartin",
            "followers_url": "https://api.github.com/users/cjoshmartin/followers",
            "following_url": "https://api.github.com/users/cjoshmartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjoshmartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjoshmartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjoshmartin/subscriptions",
            "organizations_url": "https://api.github.com/users/cjoshmartin/orgs",
            "repos_url": "https://api.github.com/users/cjoshmartin/repos",
            "events_url": "https://api.github.com/users/cjoshmartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjoshmartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "shouldn't be `~/.hyper-plugins/local/`",
        "created_at": "2019-02-23T15:39:24Z",
        "updated_at": "2019-02-23T15:49:29Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/5#discussion_r259582739",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/5",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259582739"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/5#discussion_r259582739"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/5"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259582840",
        "pull_request_review_id": 207113869,
        "id": 259582840,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4Mjg0MA==",
        "diff_hunk": "@@ -0,0 +1,29 @@\n+# hyper-orama\n+A screen recorder for the hyper terminal\n+\n+To add this plugin for development in the hyper terminal:\n+\n+For initial setup, follow: https://github.com/zeit/hyper/blob/master/PLUGINS.md#setup-your-plugin\n+\n+Clone the repository into `.hyper-plugins/local/`:\n+\n+```bash \n+cd <repository_root>/.hyper-plugins/local/\n+git clone https://github.com/cwlowder/hyper-orama",
        "path": "README-WINDOWS.md",
        "position": null,
        "original_position": 12,
        "commit_id": "66f03645521836a4071ebb5d486db4683c17c873",
        "original_commit_id": "e07d8123a0931f1d251db01f22f8dc7aa4ea4561",
        "user": {
            "login": "cjoshmartin",
            "id": 8135112,
            "node_id": "MDQ6VXNlcjgxMzUxMTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8135112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjoshmartin",
            "html_url": "https://github.com/cjoshmartin",
            "followers_url": "https://api.github.com/users/cjoshmartin/followers",
            "following_url": "https://api.github.com/users/cjoshmartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjoshmartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjoshmartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjoshmartin/subscriptions",
            "organizations_url": "https://api.github.com/users/cjoshmartin/orgs",
            "repos_url": "https://api.github.com/users/cjoshmartin/repos",
            "events_url": "https://api.github.com/users/cjoshmartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjoshmartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\ngit clone git@github.com:cwlowder/hyper-orama.git\r\n```",
        "created_at": "2019-02-23T15:42:17Z",
        "updated_at": "2019-02-23T15:49:29Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/5#discussion_r259582840",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/5",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259582840"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/5#discussion_r259582840"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/5"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259588724",
        "pull_request_review_id": 207120368,
        "id": 259588724,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4ODcyNA==",
        "diff_hunk": "@@ -1,64 +1,82 @@\n-exports.decorateTerms = (Terms, {React}) => {\r\n-return class extends React.Component {\r\n-\tconstructor(props, context) {\r\n-\t\tsuper(props, context);\r\n-\t\tthis.terms = null;\r\n-\t\tthis.onDecorated = this.onDecorated.bind(this);\r\n-\t\tthis.state = {\r\n-\t\t\tisRecording: false\r\n-\t\t}\r\n-\t}\r\n+const recording = require('./recording');\r\n \r\n-\tonDecorated(terms) {\r\n-\t\tthis.terms = terms;\r\n+exports.decorateTerms = (Terms, { React }) => {\r\n+  return class extends React.Component {\r\n+    constructor(props, context) {\r\n+      super(props, context);\r\n+      this.terms = null;\r\n+      this.onDecorated = this.onDecorated.bind(this);\r\n+      this.state = {\r\n+        isRecording: false\r\n+      };\r\n+    }\r\n \r\n-\t\tthis.terms.registerCommands({\r\n-\t\t\t\"window:togglerecord\": e => {\r\n-\t\t\t\t// e parameter is React key event\r\n-\t\t\t\te.preventDefault();\r\n-\t\t\t\tconsole.log(\"PRESSED\")\r\n-\t\t\t\tthis.setState((prevState) => ({ isRecording: !prevState.isRecording }))\r\n-\t\t\t}\r\n-\t\t});\r\n+    onDecorated(terms) {\r\n+      this.terms = terms;\r\n \r\n-\t\t// Don't forget to propagate it to HOC chain\r\n-\t\tif (this.props.onDecorated) this.props.onDecorated(terms);\r\n-\t}\r\n+      this.terms.registerCommands({\r\n+        'window:togglerecord': e => {\r\n+          // e parameter is React key event\r\n+          e.preventDefault();\r\n+          console.log('PRESSED');\r",
        "path": "index.js",
        "position": null,
        "original_position": 44,
        "commit_id": "eb5bc0341f3a4f195a4fe34a9f93d38b860a37d3",
        "original_commit_id": "22588b677b6b19209c5819dcb22a9c72e8137634",
        "user": {
            "login": "TejasQ",
            "id": 9947422,
            "node_id": "MDQ6VXNlcjk5NDc0MjI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9947422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TejasQ",
            "html_url": "https://github.com/TejasQ",
            "followers_url": "https://api.github.com/users/TejasQ/followers",
            "following_url": "https://api.github.com/users/TejasQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/TejasQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TejasQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TejasQ/subscriptions",
            "organizations_url": "https://api.github.com/users/TejasQ/orgs",
            "repos_url": "https://api.github.com/users/TejasQ/repos",
            "events_url": "https://api.github.com/users/TejasQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TejasQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\n          console.log('PRESSED'); // @todo remove this before we ship\r\n```",
        "created_at": "2019-02-23T18:44:33Z",
        "updated_at": "2019-02-23T19:28:21Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/8#discussion_r259588724",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/8",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259588724"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/8#discussion_r259588724"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259588753",
        "pull_request_review_id": 207120368,
        "id": 259588753,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4ODc1Mw==",
        "diff_hunk": "@@ -1,64 +1,82 @@\n-exports.decorateTerms = (Terms, {React}) => {\r\n-return class extends React.Component {\r\n-\tconstructor(props, context) {\r\n-\t\tsuper(props, context);\r\n-\t\tthis.terms = null;\r\n-\t\tthis.onDecorated = this.onDecorated.bind(this);\r\n-\t\tthis.state = {\r\n-\t\t\tisRecording: false\r\n-\t\t}\r\n-\t}\r\n+const recording = require('./recording');\r\n \r\n-\tonDecorated(terms) {\r\n-\t\tthis.terms = terms;\r\n+exports.decorateTerms = (Terms, { React }) => {\r\n+  return class extends React.Component {\r\n+    constructor(props, context) {\r\n+      super(props, context);\r\n+      this.terms = null;\r\n+      this.onDecorated = this.onDecorated.bind(this);\r\n+      this.state = {\r\n+        isRecording: false\r\n+      };\r\n+    }\r\n \r\n-\t\tthis.terms.registerCommands({\r\n-\t\t\t\"window:togglerecord\": e => {\r\n-\t\t\t\t// e parameter is React key event\r\n-\t\t\t\te.preventDefault();\r\n-\t\t\t\tconsole.log(\"PRESSED\")\r\n-\t\t\t\tthis.setState((prevState) => ({ isRecording: !prevState.isRecording }))\r\n-\t\t\t}\r\n-\t\t});\r\n+    onDecorated(terms) {\r\n+      this.terms = terms;\r\n \r\n-\t\t// Don't forget to propagate it to HOC chain\r\n-\t\tif (this.props.onDecorated) this.props.onDecorated(terms);\r\n-\t}\r\n+      this.terms.registerCommands({\r\n+        'window:togglerecord': e => {\r\n+          // e parameter is React key event\r\n+          e.preventDefault();\r\n+          console.log('PRESSED');\r\n+          if (!this.state.isRecording) {\r\n+            recording.startRecording();\r\n+          } else {\r\n+            recording.stopRecording();\r\n+          }\r\n+          this.setState(prevState => ({ isRecording: !prevState.isRecording }));\r\n+        }\r\n+      });\r\n \r\n-\trender() {\r\n-\t\treturn [\r\n-\t\t\tReact.createElement(\r\n-\t\t\t\tTerms,\r\n-\t\t\t\tObject.assign({}, this.props, {\r\n-\t\t\t\t\tonDecorated: this.onDecorated,\r\n-\t\t\t\t\tkey: 1,\r\n-\t\t\t\t})\r\n-\t\t\t),\r\n-\t\t\tthis.state.isRecording && React.createElement(\"div\", {\r\n-\t\t\t\tkey: 2,\r\n-\t\t\t\tclassName: \"IsRecording\",\r\n-\t\t\t\tstyle: {\r\n-\t\t\t\t\tanimation: 'blink-motion 1s infinite',\r\n-\t\t\t\t\tposition: 'absolute',\r\n-\t\t\t\t\tborderRadius: '50%',\r\n-\t\t\t\t\ttop: document.querySelector('.header_appTitle').getBoundingClientRect().top + 2,\r\n-\t\t\t\t\tleft: document.querySelector('.header_appTitle').offsetLeft - 16,\r\n-\t\t\t\t\twidth: 9,\r\n-\t\t\t\t\theight: 9,\r\n-\t\t\t\t\tborder: '1px solid black',\r\n-\t\t\t\t\tboxShadow: '0 0 5px red',\r\n-\t\t\t\t\tbackgroundColor: 'red',\r\n-\t\t\t\t}\r\n-\t\t\t}), React.createElement('style', {key: 3}, `@keyframes blink-motion { 0% { opacity: .1; } 50% { opacity: 1; } 100% { opacity: 0.1; } }`)\r\n-\t\t];\r\n-\t}\r\n-  }\r\n-}\r\n+      // Don't forget to propagate it to HOC chain\r\n+      if (this.props.onDecorated) this.props.onDecorated(terms);\r\n+    }\r\n+\r\n+    render() {\r\n+      return [\r\n+        React.createElement(\r\n+          Terms,\r\n+          Object.assign({}, this.props, {\r\n+            onDecorated: this.onDecorated,\r\n+            key: 1\r",
        "path": "index.js",
        "position": null,
        "original_position": 93,
        "commit_id": "eb5bc0341f3a4f195a4fe34a9f93d38b860a37d3",
        "original_commit_id": "22588b677b6b19209c5819dcb22a9c72e8137634",
        "user": {
            "login": "TejasQ",
            "id": 9947422,
            "node_id": "MDQ6VXNlcjk5NDc0MjI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9947422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TejasQ",
            "html_url": "https://github.com/TejasQ",
            "followers_url": "https://api.github.com/users/TejasQ/followers",
            "following_url": "https://api.github.com/users/TejasQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/TejasQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TejasQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TejasQ/subscriptions",
            "organizations_url": "https://api.github.com/users/TejasQ/orgs",
            "repos_url": "https://api.github.com/users/TejasQ/repos",
            "events_url": "https://api.github.com/users/TejasQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TejasQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Are the `key`s required?",
        "created_at": "2019-02-23T18:45:25Z",
        "updated_at": "2019-02-23T19:28:21Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/8#discussion_r259588753",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/8",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259588753"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/8#discussion_r259588753"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259588762",
        "pull_request_review_id": 207120368,
        "id": 259588762,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4ODc2Mg==",
        "diff_hunk": "@@ -1,64 +1,82 @@\n-exports.decorateTerms = (Terms, {React}) => {\r\n-return class extends React.Component {\r\n-\tconstructor(props, context) {\r\n-\t\tsuper(props, context);\r\n-\t\tthis.terms = null;\r\n-\t\tthis.onDecorated = this.onDecorated.bind(this);\r\n-\t\tthis.state = {\r\n-\t\t\tisRecording: false\r\n-\t\t}\r\n-\t}\r\n+const recording = require('./recording');\r\n \r\n-\tonDecorated(terms) {\r\n-\t\tthis.terms = terms;\r\n+exports.decorateTerms = (Terms, { React }) => {\r\n+  return class extends React.Component {\r\n+    constructor(props, context) {\r\n+      super(props, context);\r\n+      this.terms = null;\r\n+      this.onDecorated = this.onDecorated.bind(this);\r\n+      this.state = {\r\n+        isRecording: false\r\n+      };\r\n+    }\r\n \r\n-\t\tthis.terms.registerCommands({\r\n-\t\t\t\"window:togglerecord\": e => {\r\n-\t\t\t\t// e parameter is React key event\r\n-\t\t\t\te.preventDefault();\r\n-\t\t\t\tconsole.log(\"PRESSED\")\r\n-\t\t\t\tthis.setState((prevState) => ({ isRecording: !prevState.isRecording }))\r\n-\t\t\t}\r\n-\t\t});\r\n+    onDecorated(terms) {\r\n+      this.terms = terms;\r\n \r\n-\t\t// Don't forget to propagate it to HOC chain\r\n-\t\tif (this.props.onDecorated) this.props.onDecorated(terms);\r\n-\t}\r\n+      this.terms.registerCommands({\r\n+        'window:togglerecord': e => {\r\n+          // e parameter is React key event\r\n+          e.preventDefault();\r\n+          console.log('PRESSED');\r\n+          if (!this.state.isRecording) {\r\n+            recording.startRecording();\r\n+          } else {\r\n+            recording.stopRecording();\r\n+          }\r\n+          this.setState(prevState => ({ isRecording: !prevState.isRecording }));\r\n+        }\r\n+      });\r\n \r\n-\trender() {\r\n-\t\treturn [\r\n-\t\t\tReact.createElement(\r\n-\t\t\t\tTerms,\r\n-\t\t\t\tObject.assign({}, this.props, {\r\n-\t\t\t\t\tonDecorated: this.onDecorated,\r\n-\t\t\t\t\tkey: 1,\r\n-\t\t\t\t})\r\n-\t\t\t),\r\n-\t\t\tthis.state.isRecording && React.createElement(\"div\", {\r\n-\t\t\t\tkey: 2,\r\n-\t\t\t\tclassName: \"IsRecording\",\r\n-\t\t\t\tstyle: {\r\n-\t\t\t\t\tanimation: 'blink-motion 1s infinite',\r\n-\t\t\t\t\tposition: 'absolute',\r\n-\t\t\t\t\tborderRadius: '50%',\r\n-\t\t\t\t\ttop: document.querySelector('.header_appTitle').getBoundingClientRect().top + 2,\r\n-\t\t\t\t\tleft: document.querySelector('.header_appTitle').offsetLeft - 16,\r\n-\t\t\t\t\twidth: 9,\r\n-\t\t\t\t\theight: 9,\r\n-\t\t\t\t\tborder: '1px solid black',\r\n-\t\t\t\t\tboxShadow: '0 0 5px red',\r\n-\t\t\t\t\tbackgroundColor: 'red',\r\n-\t\t\t\t}\r\n-\t\t\t}), React.createElement('style', {key: 3}, `@keyframes blink-motion { 0% { opacity: .1; } 50% { opacity: 1; } 100% { opacity: 0.1; } }`)\r\n-\t\t];\r\n-\t}\r\n-  }\r\n-}\r\n+      // Don't forget to propagate it to HOC chain\r\n+      if (this.props.onDecorated) this.props.onDecorated(terms);\r\n+    }\r\n+\r\n+    render() {\r\n+      return [\r\n+        React.createElement(\r\n+          Terms,\r\n+          Object.assign({}, this.props, {\r\n+            onDecorated: this.onDecorated,\r\n+            key: 1\r\n+          })\r\n+        ),\r\n+        this.state.isRecording &&\r\n+          React.createElement('div', {\r\n+            key: 2,\r\n+            className: 'IsRecording',\r\n+            style: {\r\n+              animation: 'blink-motion 1s infinite',\r\n+              position: 'absolute',\r\n+              borderRadius: '50%',\r\n+\t\t\t\t\t\t\ttop:\r",
        "path": "index.js",
        "position": null,
        "original_position": 104,
        "commit_id": "eb5bc0341f3a4f195a4fe34a9f93d38b860a37d3",
        "original_commit_id": "22588b677b6b19209c5819dcb22a9c72e8137634",
        "user": {
            "login": "TejasQ",
            "id": 9947422,
            "node_id": "MDQ6VXNlcjk5NDc0MjI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9947422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TejasQ",
            "html_url": "https://github.com/TejasQ",
            "followers_url": "https://api.github.com/users/TejasQ/followers",
            "following_url": "https://api.github.com/users/TejasQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/TejasQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TejasQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TejasQ/subscriptions",
            "organizations_url": "https://api.github.com/users/TejasQ/orgs",
            "repos_url": "https://api.github.com/users/TejasQ/repos",
            "events_url": "https://api.github.com/users/TejasQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TejasQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What is this spacing? \ud83e\udd14 ",
        "created_at": "2019-02-23T18:45:53Z",
        "updated_at": "2019-02-23T19:28:21Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/8#discussion_r259588762",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/8",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259588762"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/8#discussion_r259588762"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259588782",
        "pull_request_review_id": 207120368,
        "id": 259588782,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU4ODc4Mg==",
        "diff_hunk": "@@ -0,0 +1,112 @@\n+const { desktopCapturer, app } = require('electron');\n+const path = require('path');\n+const fs = require('fs');\n+const saveAs = require('file-saver').saveAs;\n+const prompt = require('electron-prompt');\n+let mediaRecorder;\n+let title;\n+\n+function handleStream(stream) {\n+  document.title = `[RECORDING] ${title}`;\n+  mediaRecorder = new MediaRecorder(stream);\n+  const chunks = [];\n+\n+  mediaRecorder.start();\n+  console.log(mediaRecorder.state);\n+  console.log('recorder started');\n+  mediaRecorder.ondataavailable = function(e) {\n+    chunks.push(e.data);\n+  };\n+\n+  /* Return promise to stream buffer if successful */\n+  return new Promise((resolve, reject) => {\n+    mediaRecorder.onstop = () => {\n+      document.title = title;\n+      console.log('recorder stopped');\n+      resolve(\n+        new Blob(chunks, {\n+          type: 'video/webm'\n+        })\n+      );\n+    };\n+\n+    /* Reject recording if longer than 10min */\n+    setTimeout(() => reject(null), 10 * 60 * 1000);\n+  });\n+}\n+\n+function saveStream(stream) {\n+  // Logic to save blob to fs\n+\n+  handleStream(stream)\n+    .then(blob => {\n+      saveAs(blob, 'test.webm');\n+      //   const reader = new FileReader();",
        "path": "recording.js",
        "position": null,
        "original_position": 44,
        "commit_id": "eb5bc0341f3a4f195a4fe34a9f93d38b860a37d3",
        "original_commit_id": "22588b677b6b19209c5819dcb22a9c72e8137634",
        "user": {
            "login": "TejasQ",
            "id": 9947422,
            "node_id": "MDQ6VXNlcjk5NDc0MjI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9947422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TejasQ",
            "html_url": "https://github.com/TejasQ",
            "followers_url": "https://api.github.com/users/TejasQ/followers",
            "following_url": "https://api.github.com/users/TejasQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/TejasQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TejasQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TejasQ/subscriptions",
            "organizations_url": "https://api.github.com/users/TejasQ/orgs",
            "repos_url": "https://api.github.com/users/TejasQ/repos",
            "events_url": "https://api.github.com/users/TejasQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TejasQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "? It's all commented out...",
        "created_at": "2019-02-23T18:46:48Z",
        "updated_at": "2019-02-23T19:28:21Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/8#discussion_r259588782",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/8",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259588782"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/8#discussion_r259588782"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594031",
        "pull_request_review_id": 207125900,
        "id": 259594031,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5NDAzMQ==",
        "diff_hunk": "@@ -2,73 +2,74 @@ const fs = require(\"fs\");\n const path = require(\"path\");\r\n const { spawn } = require(\"child_process\");\r\n const { shell } = require(\"electron\");\r\n-var ncp = require(\"copy-paste\");\r\n+const ncp = require(\"copy-paste\");\r\n const recording = require(\"./recording\");\r\n-console.log('index.js running')\r\n+const del = require('del');\r\n+\r\n exports.decorateTerms = (Terms, { React, notify }) => {\r\n   return class extends React.Component {\r\n     constructor(props, context) {\r\n       super(props, context);\r\n       this.terms = null;\r\n       this.onDecorated = this.onDecorated.bind(this);\r\n       this.state = {\r\n-        isRecording: false\r\n+\t\tisRecording: false,\r\n+\t\tfilename: `terminal-session-${performance.now()}.webm`\r\n       };\r\n     }\r\n \r\n     componentDidUpdate(_, prevState) {\r\n       if (!this.state.isRecording && prevState.isRecording) {\r\n-        // Make a temp working DIRECTORY!!!!!!!!!!\r\n         const dir = path.resolve(__dirname, \"./.tmp\");\r\n-        const fileName = \"my-clip.webm\";\r\n \r\n         if (!fs.existsSync(dir)) {\r\n           fs.mkdirSync(dir);\r\n         }\r\n \r\n         // Write the target file to disk\r\n         fs.writeFileSync(\r\n-          dir + \"/\" + fileName,\r\n-          \"hello i am not a secret chicken \ud83d\udc14\",\r\n+          dir + \"/\" + this.state.filename,\r\n+          \"\",\r\n           \"utf8\"\r\n         );\r\n \r\n         // Write a `now.json` in this directory\r\n         const nowConfig = {\r\n           version: 2,\r\n-          builds: [{ src: fileName, use: \"@now/static\" }]\r\n+          builds: [{ src: this.state.filename, use: \"@now/static\" }]\r\n         };\r\n \r\n         fs.writeFileSync(\r\n           dir + \"/now.json\",\r\n           JSON.stringify(nowConfig, null, 2),\r\n           \"utf8\"\r\n         );\r\n-        console.log(__dirname);\r\n+\t\t// console.log(__dirname);\r\n+\t\tconst pathToTmp = path.resolve(__dirname, \"./.tmp/\")\r\n         var child = spawn(\r\n           path.resolve(__dirname, \"./node_modules/now/download/dist/now\"),\r\n-          [path.resolve(__dirname, \"./.tmp/\")]\r\n+          [pathToTmp]\r\n         );\r\n \r\n         child.stdout.on(\"data\", data => {\r\n           console.log(`stdout: ${data}`);\r\n-          this._notifyVideoUploaded(data);\r\n+\t\t  this._notifyVideoUploaded(`${data}/${this.state.filename}`);\r\n+\t\t\r\n         });\r\n \r\n         child.stderr.on(\"data\", data => {\r\n           console.log(`stderr: ${data}`);\r\n         });\r\n \r\n         child.on(\"close\", code => {\r\n-          console.log(`child process exited with code ${code}`);\r\n+\t\t  console.log(`child process exited with code ${code}`);\r\n+\t\t  del(pathToTmp, { force: true})\r\n         });\r\n       }\r\n     }\r\n \r\n     _notifyVideoUploaded(nowVideo) {\r\n-      console.log(\"RUNNING!!!!!!!!!!!!!!!!!!!!\" + nowVideo);\r\n-      this.setState({ deployedUrl: nowVideo });\r\n-\r\n+    //   console.log(\"RUNNING!!!!!!!!!!!!!!!!!!!!\" + nowVideo);\r",
        "path": "index.js",
        "position": null,
        "original_position": 86,
        "commit_id": "26a710047813b54a2fbc001eae3d60c145eddb09",
        "original_commit_id": "5d5b329078e47aba890e810b18e26ff51e5e1061",
        "user": {
            "login": "kmui2",
            "id": 17896701,
            "node_id": "MDQ6VXNlcjE3ODk2NzAx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17896701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kmui2",
            "html_url": "https://github.com/kmui2",
            "followers_url": "https://api.github.com/users/kmui2/followers",
            "following_url": "https://api.github.com/users/kmui2/following{/other_user}",
            "gists_url": "https://api.github.com/users/kmui2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kmui2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kmui2/subscriptions",
            "organizations_url": "https://api.github.com/users/kmui2/orgs",
            "repos_url": "https://api.github.com/users/kmui2/repos",
            "events_url": "https://api.github.com/users/kmui2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kmui2/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Remove commented code.",
        "created_at": "2019-02-23T21:35:30Z",
        "updated_at": "2019-02-23T21:47:45Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594031",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594031"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594031"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594059",
        "pull_request_review_id": 207125938,
        "id": 259594059,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5NDA1OQ==",
        "diff_hunk": "@@ -2,73 +2,74 @@ const fs = require(\"fs\");\n const path = require(\"path\");\r\n const { spawn } = require(\"child_process\");\r\n const { shell } = require(\"electron\");\r\n-var ncp = require(\"copy-paste\");\r\n+const ncp = require(\"copy-paste\");\r\n const recording = require(\"./recording\");\r\n-console.log('index.js running')\r\n+const del = require('del');\r\n+\r\n exports.decorateTerms = (Terms, { React, notify }) => {\r\n   return class extends React.Component {\r\n     constructor(props, context) {\r\n       super(props, context);\r\n       this.terms = null;\r\n       this.onDecorated = this.onDecorated.bind(this);\r\n       this.state = {\r\n-        isRecording: false\r\n+\t\tisRecording: false,\r\n+\t\tfilename: `terminal-session-${performance.now()}.webm`\r\n       };\r\n     }\r\n \r\n     componentDidUpdate(_, prevState) {\r\n       if (!this.state.isRecording && prevState.isRecording) {\r\n-        // Make a temp working DIRECTORY!!!!!!!!!!\r\n         const dir = path.resolve(__dirname, \"./.tmp\");\r\n-        const fileName = \"my-clip.webm\";\r\n \r\n         if (!fs.existsSync(dir)) {\r\n           fs.mkdirSync(dir);\r\n         }\r\n \r\n         // Write the target file to disk\r\n         fs.writeFileSync(\r\n-          dir + \"/\" + fileName,\r\n-          \"hello i am not a secret chicken \ud83d\udc14\",\r\n+          dir + \"/\" + this.state.filename,\r\n+          \"\",\r\n           \"utf8\"\r\n         );\r\n \r\n         // Write a `now.json` in this directory\r\n         const nowConfig = {\r\n           version: 2,\r\n-          builds: [{ src: fileName, use: \"@now/static\" }]\r\n+          builds: [{ src: this.state.filename, use: \"@now/static\" }]\r\n         };\r\n \r\n         fs.writeFileSync(\r\n           dir + \"/now.json\",\r\n           JSON.stringify(nowConfig, null, 2),\r\n           \"utf8\"\r\n         );\r\n-        console.log(__dirname);\r\n+\t\t// console.log(__dirname);\r\n+\t\tconst pathToTmp = path.resolve(__dirname, \"./.tmp/\")\r\n         var child = spawn(\r\n           path.resolve(__dirname, \"./node_modules/now/download/dist/now\"),\r\n-          [path.resolve(__dirname, \"./.tmp/\")]\r\n+          [pathToTmp]\r\n         );\r\n \r\n         child.stdout.on(\"data\", data => {\r\n           console.log(`stdout: ${data}`);\r\n-          this._notifyVideoUploaded(data);\r\n+\t\t  this._notifyVideoUploaded(`${data}/${this.state.filename}`);\r\n+\t\t\r\n         });\r\n \r\n         child.stderr.on(\"data\", data => {\r\n           console.log(`stderr: ${data}`);\r\n         });\r\n \r\n         child.on(\"close\", code => {\r\n-          console.log(`child process exited with code ${code}`);\r\n+\t\t  console.log(`child process exited with code ${code}`);\r\n+\t\t  del(pathToTmp, { force: true})\r\n         });\r\n       }\r\n     }\r\n \r\n     _notifyVideoUploaded(nowVideo) {\r\n-      console.log(\"RUNNING!!!!!!!!!!!!!!!!!!!!\" + nowVideo);\r\n-      this.setState({ deployedUrl: nowVideo });\r\n-\r\n+    //   console.log(\"RUNNING!!!!!!!!!!!!!!!!!!!!\" + nowVideo);\r",
        "path": "index.js",
        "position": null,
        "original_position": 86,
        "commit_id": "26a710047813b54a2fbc001eae3d60c145eddb09",
        "original_commit_id": "5d5b329078e47aba890e810b18e26ff51e5e1061",
        "user": {
            "login": "cjoshmartin",
            "id": 8135112,
            "node_id": "MDQ6VXNlcjgxMzUxMTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8135112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjoshmartin",
            "html_url": "https://github.com/cjoshmartin",
            "followers_url": "https://api.github.com/users/cjoshmartin/followers",
            "following_url": "https://api.github.com/users/cjoshmartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjoshmartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjoshmartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjoshmartin/subscriptions",
            "organizations_url": "https://api.github.com/users/cjoshmartin/orgs",
            "repos_url": "https://api.github.com/users/cjoshmartin/repos",
            "events_url": "https://api.github.com/users/cjoshmartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjoshmartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\n```",
        "created_at": "2019-02-23T21:36:24Z",
        "updated_at": "2019-02-23T21:47:45Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594059",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594059"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594059"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10"
            }
        },
        "in_reply_to_id": 259594031
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594065",
        "pull_request_review_id": 207125944,
        "id": 259594065,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5NDA2NQ==",
        "diff_hunk": "@@ -2,73 +2,74 @@ const fs = require(\"fs\");\n const path = require(\"path\");\r\n const { spawn } = require(\"child_process\");\r\n const { shell } = require(\"electron\");\r\n-var ncp = require(\"copy-paste\");\r\n+const ncp = require(\"copy-paste\");\r\n const recording = require(\"./recording\");\r\n-console.log('index.js running')\r\n+const del = require('del');\r\n+\r\n exports.decorateTerms = (Terms, { React, notify }) => {\r\n   return class extends React.Component {\r\n     constructor(props, context) {\r\n       super(props, context);\r\n       this.terms = null;\r\n       this.onDecorated = this.onDecorated.bind(this);\r\n       this.state = {\r\n-        isRecording: false\r\n+\t\tisRecording: false,\r\n+\t\tfilename: `terminal-session-${performance.now()}.webm`\r",
        "path": "index.js",
        "position": null,
        "original_position": 19,
        "commit_id": "26a710047813b54a2fbc001eae3d60c145eddb09",
        "original_commit_id": "5d5b329078e47aba890e810b18e26ff51e5e1061",
        "user": {
            "login": "TejasQ",
            "id": 9947422,
            "node_id": "MDQ6VXNlcjk5NDc0MjI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9947422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TejasQ",
            "html_url": "https://github.com/TejasQ",
            "followers_url": "https://api.github.com/users/TejasQ/followers",
            "following_url": "https://api.github.com/users/TejasQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/TejasQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TejasQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TejasQ/subscriptions",
            "organizations_url": "https://api.github.com/users/TejasQ/orgs",
            "repos_url": "https://api.github.com/users/TejasQ/repos",
            "events_url": "https://api.github.com/users/TejasQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TejasQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You only should put stuff in `this.state` that can change at runtime. Since this is a static value, just declare it on the class:\r\n\r\n```js\r\nthis.fileName = `terminal-session-${performance.now()}.webm`\r\n```",
        "created_at": "2019-02-23T21:36:34Z",
        "updated_at": "2019-02-23T21:47:45Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594065",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594065"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594065"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594073",
        "pull_request_review_id": 207125944,
        "id": 259594073,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5NDA3Mw==",
        "diff_hunk": "@@ -2,73 +2,74 @@ const fs = require(\"fs\");\n const path = require(\"path\");\r\n const { spawn } = require(\"child_process\");\r\n const { shell } = require(\"electron\");\r\n-var ncp = require(\"copy-paste\");\r\n+const ncp = require(\"copy-paste\");\r\n const recording = require(\"./recording\");\r\n-console.log('index.js running')\r\n+const del = require('del');\r\n+\r\n exports.decorateTerms = (Terms, { React, notify }) => {\r\n   return class extends React.Component {\r\n     constructor(props, context) {\r\n       super(props, context);\r\n       this.terms = null;\r\n       this.onDecorated = this.onDecorated.bind(this);\r\n       this.state = {\r\n-        isRecording: false\r\n+\t\tisRecording: false,\r\n+\t\tfilename: `terminal-session-${performance.now()}.webm`\r\n       };\r\n     }\r\n \r\n     componentDidUpdate(_, prevState) {\r\n       if (!this.state.isRecording && prevState.isRecording) {\r\n-        // Make a temp working DIRECTORY!!!!!!!!!!\r\n         const dir = path.resolve(__dirname, \"./.tmp\");\r\n-        const fileName = \"my-clip.webm\";\r\n \r\n         if (!fs.existsSync(dir)) {\r\n           fs.mkdirSync(dir);\r\n         }\r\n \r\n         // Write the target file to disk\r\n         fs.writeFileSync(\r",
        "path": "index.js",
        "position": null,
        "original_position": 34,
        "commit_id": "26a710047813b54a2fbc001eae3d60c145eddb09",
        "original_commit_id": "5d5b329078e47aba890e810b18e26ff51e5e1061",
        "user": {
            "login": "TejasQ",
            "id": 9947422,
            "node_id": "MDQ6VXNlcjk5NDc0MjI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9947422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TejasQ",
            "html_url": "https://github.com/TejasQ",
            "followers_url": "https://api.github.com/users/TejasQ/followers",
            "following_url": "https://api.github.com/users/TejasQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/TejasQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TejasQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TejasQ/subscriptions",
            "organizations_url": "https://api.github.com/users/TejasQ/orgs",
            "repos_url": "https://api.github.com/users/TejasQ/repos",
            "events_url": "https://api.github.com/users/TejasQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TejasQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why are you writing an empty file to disk?",
        "created_at": "2019-02-23T21:37:04Z",
        "updated_at": "2019-02-23T21:47:45Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594073",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594073"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594073"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594080",
        "pull_request_review_id": 207125944,
        "id": 259594080,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5NDA4MA==",
        "diff_hunk": "@@ -2,73 +2,74 @@ const fs = require(\"fs\");\n const path = require(\"path\");\r\n const { spawn } = require(\"child_process\");\r\n const { shell } = require(\"electron\");\r\n-var ncp = require(\"copy-paste\");\r\n+const ncp = require(\"copy-paste\");\r\n const recording = require(\"./recording\");\r\n-console.log('index.js running')\r\n+const del = require('del');\r\n+\r\n exports.decorateTerms = (Terms, { React, notify }) => {\r\n   return class extends React.Component {\r\n     constructor(props, context) {\r\n       super(props, context);\r\n       this.terms = null;\r\n       this.onDecorated = this.onDecorated.bind(this);\r\n       this.state = {\r\n-        isRecording: false\r\n+\t\tisRecording: false,\r\n+\t\tfilename: `terminal-session-${performance.now()}.webm`\r\n       };\r\n     }\r\n \r\n     componentDidUpdate(_, prevState) {\r\n       if (!this.state.isRecording && prevState.isRecording) {\r\n-        // Make a temp working DIRECTORY!!!!!!!!!!\r\n         const dir = path.resolve(__dirname, \"./.tmp\");\r\n-        const fileName = \"my-clip.webm\";\r\n \r\n         if (!fs.existsSync(dir)) {\r\n           fs.mkdirSync(dir);\r\n         }\r\n \r\n         // Write the target file to disk\r\n         fs.writeFileSync(\r\n-          dir + \"/\" + fileName,\r\n-          \"hello i am not a secret chicken \ud83d\udc14\",\r\n+          dir + \"/\" + this.state.filename,\r\n+          \"\",\r\n           \"utf8\"\r\n         );\r\n \r\n         // Write a `now.json` in this directory\r\n         const nowConfig = {\r\n           version: 2,\r\n-          builds: [{ src: fileName, use: \"@now/static\" }]\r\n+          builds: [{ src: this.state.filename, use: \"@now/static\" }]\r\n         };\r\n \r\n         fs.writeFileSync(\r\n           dir + \"/now.json\",\r\n           JSON.stringify(nowConfig, null, 2),\r\n           \"utf8\"\r\n         );\r\n-        console.log(__dirname);\r\n+\t\t// console.log(__dirname);\r",
        "path": "index.js",
        "position": null,
        "original_position": 55,
        "commit_id": "26a710047813b54a2fbc001eae3d60c145eddb09",
        "original_commit_id": "5d5b329078e47aba890e810b18e26ff51e5e1061",
        "user": {
            "login": "TejasQ",
            "id": 9947422,
            "node_id": "MDQ6VXNlcjk5NDc0MjI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9947422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TejasQ",
            "html_url": "https://github.com/TejasQ",
            "followers_url": "https://api.github.com/users/TejasQ/followers",
            "following_url": "https://api.github.com/users/TejasQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/TejasQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TejasQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TejasQ/subscriptions",
            "organizations_url": "https://api.github.com/users/TejasQ/orgs",
            "repos_url": "https://api.github.com/users/TejasQ/repos",
            "events_url": "https://api.github.com/users/TejasQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TejasQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\n```",
        "created_at": "2019-02-23T21:37:17Z",
        "updated_at": "2019-02-23T21:47:45Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594080",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594080"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594080"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594086",
        "pull_request_review_id": 207125944,
        "id": 259594086,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5NDA4Ng==",
        "diff_hunk": "@@ -2,73 +2,74 @@ const fs = require(\"fs\");\n const path = require(\"path\");\r\n const { spawn } = require(\"child_process\");\r\n const { shell } = require(\"electron\");\r\n-var ncp = require(\"copy-paste\");\r\n+const ncp = require(\"copy-paste\");\r\n const recording = require(\"./recording\");\r\n-console.log('index.js running')\r\n+const del = require('del');\r\n+\r\n exports.decorateTerms = (Terms, { React, notify }) => {\r\n   return class extends React.Component {\r\n     constructor(props, context) {\r\n       super(props, context);\r\n       this.terms = null;\r\n       this.onDecorated = this.onDecorated.bind(this);\r\n       this.state = {\r\n-        isRecording: false\r\n+\t\tisRecording: false,\r\n+\t\tfilename: `terminal-session-${performance.now()}.webm`\r\n       };\r\n     }\r\n \r\n     componentDidUpdate(_, prevState) {\r\n       if (!this.state.isRecording && prevState.isRecording) {\r\n-        // Make a temp working DIRECTORY!!!!!!!!!!\r\n         const dir = path.resolve(__dirname, \"./.tmp\");\r\n-        const fileName = \"my-clip.webm\";\r\n \r\n         if (!fs.existsSync(dir)) {\r\n           fs.mkdirSync(dir);\r\n         }\r\n \r\n         // Write the target file to disk\r\n         fs.writeFileSync(\r\n-          dir + \"/\" + fileName,\r\n-          \"hello i am not a secret chicken \ud83d\udc14\",\r\n+          dir + \"/\" + this.state.filename,\r\n+          \"\",\r\n           \"utf8\"\r\n         );\r\n \r\n         // Write a `now.json` in this directory\r\n         const nowConfig = {\r\n           version: 2,\r\n-          builds: [{ src: fileName, use: \"@now/static\" }]\r\n+          builds: [{ src: this.state.filename, use: \"@now/static\" }]\r\n         };\r\n \r\n         fs.writeFileSync(\r\n           dir + \"/now.json\",\r\n           JSON.stringify(nowConfig, null, 2),\r\n           \"utf8\"\r\n         );\r\n-        console.log(__dirname);\r\n+\t\t// console.log(__dirname);\r\n+\t\tconst pathToTmp = path.resolve(__dirname, \"./.tmp/\")\r\n         var child = spawn(\r\n           path.resolve(__dirname, \"./node_modules/now/download/dist/now\"),\r\n-          [path.resolve(__dirname, \"./.tmp/\")]\r\n+          [pathToTmp]\r\n         );\r\n \r\n         child.stdout.on(\"data\", data => {\r\n           console.log(`stdout: ${data}`);\r\n-          this._notifyVideoUploaded(data);\r\n+\t\t  this._notifyVideoUploaded(`${data}/${this.state.filename}`);\r\n+\t\t\r",
        "path": "index.js",
        "position": 67,
        "original_position": 67,
        "commit_id": "26a710047813b54a2fbc001eae3d60c145eddb09",
        "original_commit_id": "5d5b329078e47aba890e810b18e26ff51e5e1061",
        "user": {
            "login": "TejasQ",
            "id": 9947422,
            "node_id": "MDQ6VXNlcjk5NDc0MjI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9947422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TejasQ",
            "html_url": "https://github.com/TejasQ",
            "followers_url": "https://api.github.com/users/TejasQ/followers",
            "following_url": "https://api.github.com/users/TejasQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/TejasQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TejasQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TejasQ/subscriptions",
            "organizations_url": "https://api.github.com/users/TejasQ/orgs",
            "repos_url": "https://api.github.com/users/TejasQ/repos",
            "events_url": "https://api.github.com/users/TejasQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TejasQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\n```",
        "created_at": "2019-02-23T21:37:31Z",
        "updated_at": "2019-02-23T21:47:45Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594086",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259594086"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/10#discussion_r259594086"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/10"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259596592",
        "pull_request_review_id": 207128567,
        "id": 259596592,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5NjU5Mg==",
        "diff_hunk": "@@ -6,6 +6,18 @@ const ncp = require('copy-paste');\n const recording = require('./recording');\r\n const del = require('del');\r\n \r\n+exports.reduceUI = (state, action) => {\r",
        "path": "index.js",
        "position": 141,
        "original_position": 4,
        "commit_id": "5d38b6916ccdfea19a2bc79004b0aedb57edcfa7",
        "original_commit_id": "5f30a7f5adda32410843bf453837f9f607212701",
        "user": {
            "login": "TejasQ",
            "id": 9947422,
            "node_id": "MDQ6VXNlcjk5NDc0MjI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9947422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TejasQ",
            "html_url": "https://github.com/TejasQ",
            "followers_url": "https://api.github.com/users/TejasQ/followers",
            "following_url": "https://api.github.com/users/TejasQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/TejasQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TejasQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TejasQ/subscriptions",
            "organizations_url": "https://api.github.com/users/TejasQ/orgs",
            "repos_url": "https://api.github.com/users/TejasQ/repos",
            "events_url": "https://api.github.com/users/TejasQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TejasQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why are we exporting this if it isn't used anywhere?",
        "created_at": "2019-02-23T23:09:54Z",
        "updated_at": "2019-02-24T01:00:00Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/13#discussion_r259596592",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/13",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259596592"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/13#discussion_r259596592"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/13"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259598947",
        "pull_request_review_id": 207131046,
        "id": 259598947,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU5ODk0Nw==",
        "diff_hunk": "@@ -6,6 +6,18 @@ const ncp = require('copy-paste');\n const recording = require('./recording');\r\n const del = require('del');\r\n \r\n+exports.reduceUI = (state, action) => {\r",
        "path": "index.js",
        "position": 141,
        "original_position": 4,
        "commit_id": "5d38b6916ccdfea19a2bc79004b0aedb57edcfa7",
        "original_commit_id": "5f30a7f5adda32410843bf453837f9f607212701",
        "user": {
            "login": "kmui2",
            "id": 17896701,
            "node_id": "MDQ6VXNlcjE3ODk2NzAx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17896701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kmui2",
            "html_url": "https://github.com/kmui2",
            "followers_url": "https://api.github.com/users/kmui2/followers",
            "following_url": "https://api.github.com/users/kmui2/following{/other_user}",
            "gists_url": "https://api.github.com/users/kmui2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kmui2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kmui2/subscriptions",
            "organizations_url": "https://api.github.com/users/kmui2/orgs",
            "repos_url": "https://api.github.com/users/kmui2/repos",
            "events_url": "https://api.github.com/users/kmui2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kmui2/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@cjoshmartin will use the hyperOrama config for merging the desktop capture and canvas recording.",
        "created_at": "2019-02-24T00:56:36Z",
        "updated_at": "2019-02-24T01:00:00Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/13#discussion_r259598947",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/13",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259598947"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/13#discussion_r259598947"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/13"
            }
        },
        "in_reply_to_id": 259596592
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259603685",
        "pull_request_review_id": 207135748,
        "id": 259603685,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYwMzY4NQ==",
        "diff_hunk": "@@ -66,19 +66,12 @@ exports.decorateTerms = (Terms, { React }) => {\n       if (!this.state.isRecording && prevState.isRecording) {\r\n         // Make a temp working DIRECTORY!!!!!!!!!!\r\n         const dir = path.resolve(__dirname, './.tmp');\r\n-        const fileName = 'my-clip.webm';\r\n+        const fileName = this.fileName;\r",
        "path": "index.js",
        "position": null,
        "original_position": 5,
        "commit_id": "de10cf3e162a840d21dcde07d08cebded818ff93",
        "original_commit_id": "ac29f8801ea882a77b8df9b531c5058f371d99a6",
        "user": {
            "login": "cjoshmartin",
            "id": 8135112,
            "node_id": "MDQ6VXNlcjgxMzUxMTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8135112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjoshmartin",
            "html_url": "https://github.com/cjoshmartin",
            "followers_url": "https://api.github.com/users/cjoshmartin/followers",
            "following_url": "https://api.github.com/users/cjoshmartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjoshmartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjoshmartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjoshmartin/subscriptions",
            "organizations_url": "https://api.github.com/users/cjoshmartin/orgs",
            "repos_url": "https://api.github.com/users/cjoshmartin/repos",
            "events_url": "https://api.github.com/users/cjoshmartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjoshmartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\n\r\n```",
        "created_at": "2019-02-24T05:01:36Z",
        "updated_at": "2019-02-24T05:07:24Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/15#discussion_r259603685",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/15",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259603685"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/15#discussion_r259603685"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/15"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259603704",
        "pull_request_review_id": 207135748,
        "id": 259603704,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYwMzcwNA==",
        "diff_hunk": "@@ -66,19 +66,12 @@ exports.decorateTerms = (Terms, { React }) => {\n       if (!this.state.isRecording && prevState.isRecording) {\r\n         // Make a temp working DIRECTORY!!!!!!!!!!\r",
        "path": "index.js",
        "position": null,
        "original_position": 2,
        "commit_id": "de10cf3e162a840d21dcde07d08cebded818ff93",
        "original_commit_id": "ac29f8801ea882a77b8df9b531c5058f371d99a6",
        "user": {
            "login": "cjoshmartin",
            "id": 8135112,
            "node_id": "MDQ6VXNlcjgxMzUxMTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8135112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjoshmartin",
            "html_url": "https://github.com/cjoshmartin",
            "followers_url": "https://api.github.com/users/cjoshmartin/followers",
            "following_url": "https://api.github.com/users/cjoshmartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjoshmartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjoshmartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjoshmartin/subscriptions",
            "organizations_url": "https://api.github.com/users/cjoshmartin/orgs",
            "repos_url": "https://api.github.com/users/cjoshmartin/repos",
            "events_url": "https://api.github.com/users/cjoshmartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjoshmartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\n```",
        "created_at": "2019-02-24T05:02:21Z",
        "updated_at": "2019-02-24T05:07:24Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/15#discussion_r259603704",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/15",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259603704"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/15#discussion_r259603704"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/15"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259623283",
        "pull_request_review_id": 207154616,
        "id": 259623283,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYyMzI4Mw==",
        "diff_hunk": "@@ -2,7 +2,7 @@\n \n A screen recorder for the hyper terminal",
        "path": "README.md",
        "position": null,
        "original_position": 2,
        "commit_id": "1019b71d4f79b996030139b989a9ec198b716a5f",
        "original_commit_id": "b9283bee550c238d62973dc60c69b175b58f0627",
        "user": {
            "login": "cwlowder",
            "id": 17357997,
            "node_id": "MDQ6VXNlcjE3MzU3OTk3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17357997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cwlowder",
            "html_url": "https://github.com/cwlowder",
            "followers_url": "https://api.github.com/users/cwlowder/followers",
            "following_url": "https://api.github.com/users/cwlowder/following{/other_user}",
            "gists_url": "https://api.github.com/users/cwlowder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cwlowder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cwlowder/subscriptions",
            "organizations_url": "https://api.github.com/users/cwlowder/orgs",
            "repos_url": "https://api.github.com/users/cwlowder/repos",
            "events_url": "https://api.github.com/users/cwlowder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cwlowder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\nA screen recorder for the hyper terminal. It publishes all captured sessions to [now.sh](https://zeit.co/now)\r\n```",
        "created_at": "2019-02-24T14:29:17Z",
        "updated_at": "2019-02-24T15:05:02Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/18#discussion_r259623283",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/18",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/259623283"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/18#discussion_r259623283"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/18"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/260010263",
        "pull_request_review_id": 207622392,
        "id": 260010263,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDAxMDI2Mw==",
        "diff_hunk": "@@ -1,7 +1,7 @@\n # Hyper-Orama\n [![All Contributors](https://flat.badgen.net/github/contributors/cwlowder/hyper-orama)](#contributors)\n \n-A screen recorder for the hyper terminal. It publishes all captured sessions to [now.sh](https://zeit.co/now)\n+A screen recorder for the hyper terminal. It publishes all captured sessions to [now.sh](https://zeit.co/now).",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "2fac3079303e2ec2379084d29221079e17f0f7a3",
        "original_commit_id": "4d9a0d1183b1ec3a25e565ab3e29c1f51ba4ed49",
        "user": {
            "login": "cwlowder",
            "id": 17357997,
            "node_id": "MDQ6VXNlcjE3MzU3OTk3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17357997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cwlowder",
            "html_url": "https://github.com/cwlowder",
            "followers_url": "https://api.github.com/users/cwlowder/followers",
            "following_url": "https://api.github.com/users/cwlowder/following{/other_user}",
            "gists_url": "https://api.github.com/users/cwlowder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cwlowder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cwlowder/subscriptions",
            "organizations_url": "https://api.github.com/users/cwlowder/orgs",
            "repos_url": "https://api.github.com/users/cwlowder/repos",
            "events_url": "https://api.github.com/users/cwlowder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cwlowder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perhaps we should also mention that it saves videos locally as well?",
        "created_at": "2019-02-25T20:44:45Z",
        "updated_at": "2019-02-25T22:30:42Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/47#discussion_r260010263",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/47",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/260010263"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/47#discussion_r260010263"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/47"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/260012903",
        "pull_request_review_id": 207625878,
        "id": 260012903,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDAxMjkwMw==",
        "diff_hunk": "@@ -1,7 +1,7 @@\n # Hyper-Orama\n [![All Contributors](https://flat.badgen.net/github/contributors/cwlowder/hyper-orama)](#contributors)\n \n-A screen recorder for the hyper terminal. It publishes all captured sessions to [now.sh](https://zeit.co/now)\n+A screen recorder for the hyper terminal. It publishes all captured sessions to [now.sh](https://zeit.co/now).",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "2fac3079303e2ec2379084d29221079e17f0f7a3",
        "original_commit_id": "4d9a0d1183b1ec3a25e565ab3e29c1f51ba4ed49",
        "user": {
            "login": "lpulley",
            "id": 7193187,
            "node_id": "MDQ6VXNlcjcxOTMxODc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7193187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lpulley",
            "html_url": "https://github.com/lpulley",
            "followers_url": "https://api.github.com/users/lpulley/followers",
            "following_url": "https://api.github.com/users/lpulley/following{/other_user}",
            "gists_url": "https://api.github.com/users/lpulley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lpulley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lpulley/subscriptions",
            "organizations_url": "https://api.github.com/users/lpulley/orgs",
            "repos_url": "https://api.github.com/users/lpulley/repos",
            "events_url": "https://api.github.com/users/lpulley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lpulley/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good call! Can you add that?",
        "created_at": "2019-02-25T20:52:24Z",
        "updated_at": "2019-02-25T22:30:42Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/47#discussion_r260012903",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/47",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/260012903"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/47#discussion_r260012903"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/47"
            }
        },
        "in_reply_to_id": 260010263
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/260027170",
        "pull_request_review_id": 207643842,
        "id": 260027170,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDAyNzE3MA==",
        "diff_hunk": "@@ -1,7 +1,7 @@\n # Hyper-Orama\n [![All Contributors](https://flat.badgen.net/github/contributors/cwlowder/hyper-orama)](#contributors)\n \n-A screen recorder for the hyper terminal. It publishes all captured sessions to [now.sh](https://zeit.co/now)\n+A screen recorder for the hyper terminal. It publishes all captured sessions to [now.sh](https://zeit.co/now).",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "2fac3079303e2ec2379084d29221079e17f0f7a3",
        "original_commit_id": "4d9a0d1183b1ec3a25e565ab3e29c1f51ba4ed49",
        "user": {
            "login": "cwlowder",
            "id": 17357997,
            "node_id": "MDQ6VXNlcjE3MzU3OTk3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17357997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cwlowder",
            "html_url": "https://github.com/cwlowder",
            "followers_url": "https://api.github.com/users/cwlowder/followers",
            "following_url": "https://api.github.com/users/cwlowder/following{/other_user}",
            "gists_url": "https://api.github.com/users/cwlowder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cwlowder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cwlowder/subscriptions",
            "organizations_url": "https://api.github.com/users/cwlowder/orgs",
            "repos_url": "https://api.github.com/users/cwlowder/repos",
            "events_url": "https://api.github.com/users/cwlowder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cwlowder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can add it yourself directly in the PR! hit ctrl+g inside a reply to this thread",
        "created_at": "2019-02-25T21:31:48Z",
        "updated_at": "2019-02-25T22:30:42Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/47#discussion_r260027170",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/47",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/260027170"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/47#discussion_r260027170"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/47"
            }
        },
        "in_reply_to_id": 260010263
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/260030658",
        "pull_request_review_id": 207648196,
        "id": 260030658,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDAzMDY1OA==",
        "diff_hunk": "@@ -1,7 +1,7 @@\n # Hyper-Orama\n [![All Contributors](https://flat.badgen.net/github/contributors/cwlowder/hyper-orama)](#contributors)\n \n-A screen recorder for the hyper terminal. It publishes all captured sessions to [now.sh](https://zeit.co/now)\n+A screen recorder for the hyper terminal. It publishes all captured sessions to [now.sh](https://zeit.co/now).",
        "path": "README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "2fac3079303e2ec2379084d29221079e17f0f7a3",
        "original_commit_id": "4d9a0d1183b1ec3a25e565ab3e29c1f51ba4ed49",
        "user": {
            "login": "lpulley",
            "id": 7193187,
            "node_id": "MDQ6VXNlcjcxOTMxODc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7193187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lpulley",
            "html_url": "https://github.com/lpulley",
            "followers_url": "https://api.github.com/users/lpulley/followers",
            "following_url": "https://api.github.com/users/lpulley/following{/other_user}",
            "gists_url": "https://api.github.com/users/lpulley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lpulley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lpulley/subscriptions",
            "organizations_url": "https://api.github.com/users/lpulley/orgs",
            "repos_url": "https://api.github.com/users/lpulley/repos",
            "events_url": "https://api.github.com/users/lpulley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lpulley/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```suggestion\r\nA screen recorder for the hyper terminal. It publishes all captured sessions to [now.sh](https://zeit.co/now) (or locally).\r\n```",
        "created_at": "2019-02-25T21:41:19Z",
        "updated_at": "2019-02-25T22:30:42Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/47#discussion_r260030658",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/47",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/260030658"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/47#discussion_r260030658"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/47"
            }
        },
        "in_reply_to_id": 260010263
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/261909600",
        "pull_request_review_id": 209957129,
        "id": 261909600,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTkwOTYwMA==",
        "diff_hunk": "@@ -50,12 +50,9 @@ exports.decorateTerms = (Terms, { React }) => {\n         );\n         if (canvasCollection.length >= 3) {\n           const canvases = new Array();\n-          document.body.removeEventListener(\n-            'DOMSubtreeModified',\n-            canvasListener,\n-          );\n+\n           for (let canvas of canvasCollection) canvases.push(canvas);\n-          this.setState({ ...this.state, canvases });\n+          this.setState({ canvases });",
        "path": "index.js",
        "position": 11,
        "original_position": 11,
        "commit_id": "78ab65d995d50b910e38444f8b7cbe5220e64149",
        "original_commit_id": "78ab65d995d50b910e38444f8b7cbe5220e64149",
        "user": {
            "login": "cjoshmartin",
            "id": 8135112,
            "node_id": "MDQ6VXNlcjgxMzUxMTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8135112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjoshmartin",
            "html_url": "https://github.com/cjoshmartin",
            "followers_url": "https://api.github.com/users/cjoshmartin/followers",
            "following_url": "https://api.github.com/users/cjoshmartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjoshmartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjoshmartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjoshmartin/subscriptions",
            "organizations_url": "https://api.github.com/users/cjoshmartin/orgs",
            "repos_url": "https://api.github.com/users/cjoshmartin/repos",
            "events_url": "https://api.github.com/users/cjoshmartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjoshmartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Try this:\r\n```suggestion\r\n          this.setState(prevState, _ ) => ({...prevState, canvases }) );\r\n```\r\n I think React doesn't like it when you spread `this.state` inside of `setState`. I think when you do so it throws the app into an infinite loop (maybe?)",
        "created_at": "2019-03-04T02:49:55Z",
        "updated_at": "2019-03-04T02:49:55Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/55#discussion_r261909600",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/261909600"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/55#discussion_r261909600"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/261911418",
        "pull_request_review_id": 209959539,
        "id": 261911418,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTkxMTQxOA==",
        "diff_hunk": "@@ -50,12 +50,9 @@ exports.decorateTerms = (Terms, { React }) => {\n         );\n         if (canvasCollection.length >= 3) {\n           const canvases = new Array();\n-          document.body.removeEventListener(\n-            'DOMSubtreeModified',\n-            canvasListener,\n-          );\n+\n           for (let canvas of canvasCollection) canvases.push(canvas);\n-          this.setState({ ...this.state, canvases });\n+          this.setState({ canvases });",
        "path": "index.js",
        "position": 11,
        "original_position": 11,
        "commit_id": "78ab65d995d50b910e38444f8b7cbe5220e64149",
        "original_commit_id": "78ab65d995d50b910e38444f8b7cbe5220e64149",
        "user": {
            "login": "cwlowder",
            "id": 17357997,
            "node_id": "MDQ6VXNlcjE3MzU3OTk3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17357997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cwlowder",
            "html_url": "https://github.com/cwlowder",
            "followers_url": "https://api.github.com/users/cwlowder/followers",
            "following_url": "https://api.github.com/users/cwlowder/following{/other_user}",
            "gists_url": "https://api.github.com/users/cwlowder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cwlowder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cwlowder/subscriptions",
            "organizations_url": "https://api.github.com/users/cwlowder/orgs",
            "repos_url": "https://api.github.com/users/cwlowder/repos",
            "events_url": "https://api.github.com/users/cwlowder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cwlowder/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think @TejasQ Once told me that updating the state this way with ... was not a good idea and it was unnecessary. That setState only updated the state and it wasn't necessary to explicitly include the old state.",
        "created_at": "2019-03-04T03:06:36Z",
        "updated_at": "2019-03-04T03:06:36Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/55#discussion_r261911418",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/55",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/261911418"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/55#discussion_r261911418"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/55"
            }
        },
        "in_reply_to_id": 261909600
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/261911963",
        "pull_request_review_id": 209960302,
        "id": 261911963,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTkxMTk2Mw==",
        "diff_hunk": "@@ -50,12 +50,9 @@ exports.decorateTerms = (Terms, { React }) => {\n         );\n         if (canvasCollection.length >= 3) {\n           const canvases = new Array();\n-          document.body.removeEventListener(\n-            'DOMSubtreeModified',\n-            canvasListener,\n-          );\n+\n           for (let canvas of canvasCollection) canvases.push(canvas);\n-          this.setState({ ...this.state, canvases });\n+          this.setState({ canvases });",
        "path": "index.js",
        "position": 11,
        "original_position": 11,
        "commit_id": "78ab65d995d50b910e38444f8b7cbe5220e64149",
        "original_commit_id": "78ab65d995d50b910e38444f8b7cbe5220e64149",
        "user": {
            "login": "cjoshmartin",
            "id": 8135112,
            "node_id": "MDQ6VXNlcjgxMzUxMTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8135112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjoshmartin",
            "html_url": "https://github.com/cjoshmartin",
            "followers_url": "https://api.github.com/users/cjoshmartin/followers",
            "following_url": "https://api.github.com/users/cjoshmartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjoshmartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjoshmartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjoshmartin/subscriptions",
            "organizations_url": "https://api.github.com/users/cjoshmartin/orgs",
            "repos_url": "https://api.github.com/users/cjoshmartin/repos",
            "events_url": "https://api.github.com/users/cjoshmartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjoshmartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Okay That makes sense\r\n",
        "created_at": "2019-03-04T03:12:23Z",
        "updated_at": "2019-03-04T03:12:23Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/55#discussion_r261911963",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/261911963"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/55#discussion_r261911963"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/55"
            }
        },
        "in_reply_to_id": 261909600
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/261911156",
        "pull_request_review_id": 209959181,
        "id": 261911156,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTkxMTE1Ng==",
        "diff_hunk": "@@ -50,12 +50,9 @@ exports.decorateTerms = (Terms, { React }) => {\n         );\n         if (canvasCollection.length >= 3) {\n           const canvases = new Array();\n-          document.body.removeEventListener(\n-            'DOMSubtreeModified',\n-            canvasListener,\n-          );\n+\n           for (let canvas of canvasCollection) canvases.push(canvas);\n-          this.setState({ ...this.state, canvases });\n+          this.setState({ canvases });",
        "path": "index.js",
        "position": 11,
        "original_position": 11,
        "commit_id": "78ab65d995d50b910e38444f8b7cbe5220e64149",
        "original_commit_id": "78ab65d995d50b910e38444f8b7cbe5220e64149",
        "user": {
            "login": "rioam2",
            "id": 35539750,
            "node_id": "MDQ6VXNlcjM1NTM5NzUw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/35539750?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rioam2",
            "html_url": "https://github.com/rioam2",
            "followers_url": "https://api.github.com/users/rioam2/followers",
            "following_url": "https://api.github.com/users/rioam2/following{/other_user}",
            "gists_url": "https://api.github.com/users/rioam2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rioam2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rioam2/subscriptions",
            "organizations_url": "https://api.github.com/users/rioam2/orgs",
            "repos_url": "https://api.github.com/users/rioam2/repos",
            "events_url": "https://api.github.com/users/rioam2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rioam2/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The spread operator is used correctly in the original code assuming ES6 standards (which I believe production version of Hyper is on ES5). Object.assign() is a fallback for the spread operator.\r\nMerging your suggestion, Josh, with the original:\r\n```suggestion\r\n          this.setState((prevState, _) => Object.assign({}, prevState, {canvases}));\r\n```",
        "created_at": "2019-03-04T03:04:01Z",
        "updated_at": "2019-03-04T03:24:09Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/55#discussion_r261911156",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/55",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/261911156"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/55#discussion_r261911156"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/55"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/261792741",
        "pull_request_review_id": 209829152,
        "id": 261792741,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTc5Mjc0MQ==",
        "diff_hunk": "@@ -143,12 +143,18 @@ exports.decorateTerms = (Terms, { React }) => {\n           if (this.state.isLoading) return;\n           if (!this.state.isRecording) {\n             this.titleElement = document.querySelector('header');\n-            recording.startRecording(this.state.canvases, this.fileName);\n+            this.setState({ isRecording: true });",
        "path": "index.js",
        "position": 90,
        "original_position": 14,
        "commit_id": "02b3a88c81c2022b6e8cdd36bc89cf957ae3e9d0",
        "original_commit_id": "2527467c7354d6060c812833a69bb6e92d3ede76",
        "user": {
            "login": "cjoshmartin",
            "id": 8135112,
            "node_id": "MDQ6VXNlcjgxMzUxMTI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8135112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjoshmartin",
            "html_url": "https://github.com/cjoshmartin",
            "followers_url": "https://api.github.com/users/cjoshmartin/followers",
            "following_url": "https://api.github.com/users/cjoshmartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjoshmartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjoshmartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjoshmartin/subscriptions",
            "organizations_url": "https://api.github.com/users/cjoshmartin/orgs",
            "repos_url": "https://api.github.com/users/cjoshmartin/repos",
            "events_url": "https://api.github.com/users/cjoshmartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjoshmartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why do this instead of toggle `prevState`?",
        "created_at": "2019-03-01T23:44:41Z",
        "updated_at": "2019-03-04T18:37:15Z",
        "html_url": "https://github.com/cwlowder/hyper-orama/pull/52#discussion_r261792741",
        "pull_request_url": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/52",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/comments/261792741"
            },
            "html": {
                "href": "https://github.com/cwlowder/hyper-orama/pull/52#discussion_r261792741"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/cwlowder/hyper-orama/pulls/52"
            }
        }
    }
]