[
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493642",
        "pull_request_review_id": null,
        "id": 37493642,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzNjQy",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime",
        "path": "users/models.py",
        "position": 4,
        "original_position": 4,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "unused import\n",
        "created_at": "2015-08-20T04:14:38Z",
        "updated_at": "2015-08-20T04:14:38Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493642",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493642"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493642"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493749",
        "pull_request_review_id": null,
        "id": 37493749,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzNzQ5",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models",
        "path": "users/models.py",
        "position": 11,
        "original_position": 11,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "just put them in the right places :P circle dependancies are common enough that it will take you some time to separate them. Might as well do it now. Circle dependancies are when you import file A into another file B where B already depends on file A.\n",
        "created_at": "2015-08-20T04:16:50Z",
        "updated_at": "2015-08-20T04:17:46Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493749",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493749"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493749"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493786",
        "pull_request_review_id": null,
        "id": 37493786,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzNzg2",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"",
        "path": "users/models.py",
        "position": 20,
        "original_position": 20,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "not needed\n",
        "created_at": "2015-08-20T04:17:57Z",
        "updated_at": "2015-08-20T04:17:57Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493786",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493786"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493786"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493805",
        "pull_request_review_id": null,
        "id": 37493805,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzODA1",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)",
        "path": "users/models.py",
        "position": 29,
        "original_position": 29,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ids are made by default in django\n",
        "created_at": "2015-08-20T04:18:33Z",
        "updated_at": "2015-08-20T04:18:33Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493805",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493805"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493805"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493826",
        "pull_request_review_id": null,
        "id": 37493826,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzODI2",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)\n+\tscenic = models.BooleanField(blank=True, default=False)\n+\tstart_ts = models.DateTimeField(blank=True, null=True, default=timezone.now)",
        "path": "users/models.py",
        "position": 31,
        "original_position": 31,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "me like the proper timezone change\n",
        "created_at": "2015-08-20T04:18:48Z",
        "updated_at": "2015-08-20T04:18:48Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493826",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493826"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493826"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493880",
        "pull_request_review_id": null,
        "id": 37493880,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzODgw",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)\n+\tscenic = models.BooleanField(blank=True, default=False)\n+\tstart_ts = models.DateTimeField(blank=True, null=True, default=timezone.now)\n+\tstatus = models.CharField(blank=True, default='unconfirmed', max_length=200)",
        "path": "users/models.py",
        "position": 32,
        "original_position": 32,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "gonna be making a separate model just for status's, remind me if i forget\n",
        "created_at": "2015-08-20T04:20:22Z",
        "updated_at": "2015-08-20T04:20:22Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493880",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493880"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493880"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493909",
        "pull_request_review_id": null,
        "id": 37493909,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzOTA5",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)\n+\tscenic = models.BooleanField(blank=True, default=False)\n+\tstart_ts = models.DateTimeField(blank=True, null=True, default=timezone.now)\n+\tstatus = models.CharField(blank=True, default='unconfirmed', max_length=200)\n+    # Either distance or time to one-to-one with driver\n+    # We could reward drivers based on distance\n+    distance = models.BigIntergerField(blank=True, null=True)\n+    driver = ForeignKey(Driver)",
        "path": "users/models.py",
        "position": 36,
        "original_position": 36,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "drivers will have a list of trips, so in models.py for users: `driver = models.ForeignKeyField(Trip, related_name='trips')`\n",
        "created_at": "2015-08-20T04:21:35Z",
        "updated_at": "2015-08-20T04:21:35Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493909",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493909"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493909"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493914",
        "pull_request_review_id": null,
        "id": 37493914,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzOTE0",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)\n+\tscenic = models.BooleanField(blank=True, default=False)\n+\tstart_ts = models.DateTimeField(blank=True, null=True, default=timezone.now)\n+\tstatus = models.CharField(blank=True, default='unconfirmed', max_length=200)\n+    # Either distance or time to one-to-one with driver\n+    # We could reward drivers based on distance\n+    distance = models.BigIntergerField(blank=True, null=True)\n+    driver = ForeignKey(Driver)\n+    rider = ForeignKey(Rider)",
        "path": "users/models.py",
        "position": 37,
        "original_position": 37,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "same for here\n",
        "created_at": "2015-08-20T04:21:51Z",
        "updated_at": "2015-08-20T04:21:51Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493914",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493914"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493914"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493986",
        "pull_request_review_id": null,
        "id": 37493986,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzOTg2",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)\n+\tscenic = models.BooleanField(blank=True, default=False)\n+\tstart_ts = models.DateTimeField(blank=True, null=True, default=timezone.now)\n+\tstatus = models.CharField(blank=True, default='unconfirmed', max_length=200)\n+    # Either distance or time to one-to-one with driver\n+    # We could reward drivers based on distance\n+    distance = models.BigIntergerField(blank=True, null=True)\n+    driver = ForeignKey(Driver)\n+    rider = ForeignKey(Rider)\n+    # Unless driver and rider could be removed and solely linked through their trip_id",
        "path": "users/models.py",
        "position": 38,
        "original_position": 38,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "instead of putting comments in code, make a PR and then just comment on the pieces of code where attention should be made\n",
        "created_at": "2015-08-20T04:23:43Z",
        "updated_at": "2015-08-20T04:23:43Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493986",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37493986"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37493986"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37494000",
        "pull_request_review_id": null,
        "id": 37494000,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0MDAw",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)\n+\tscenic = models.BooleanField(blank=True, default=False)\n+\tstart_ts = models.DateTimeField(blank=True, null=True, default=timezone.now)\n+\tstatus = models.CharField(blank=True, default='unconfirmed', max_length=200)\n+    # Either distance or time to one-to-one with driver\n+    # We could reward drivers based on distance\n+    distance = models.BigIntergerField(blank=True, null=True)\n+    driver = ForeignKey(Driver)\n+    rider = ForeignKey(Rider)\n+    # Unless driver and rider could be removed and solely linked through their trip_id\n+    # Trip should definitely include addtional parameters\n+\n+    # Why isn't this a thing?",
        "path": "users/models.py",
        "position": 41,
        "original_position": 41,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "haha, not needed usually\n",
        "created_at": "2015-08-20T04:24:12Z",
        "updated_at": "2015-08-20T04:24:12Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37494000",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37494000"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37494000"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37494062",
        "pull_request_review_id": null,
        "id": 37494062,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0MDYy",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)\n+\tscenic = models.BooleanField(blank=True, default=False)\n+\tstart_ts = models.DateTimeField(blank=True, null=True, default=timezone.now)\n+\tstatus = models.CharField(blank=True, default='unconfirmed', max_length=200)\n+    # Either distance or time to one-to-one with driver\n+    # We could reward drivers based on distance\n+    distance = models.BigIntergerField(blank=True, null=True)\n+    driver = ForeignKey(Driver)\n+    rider = ForeignKey(Rider)\n+    # Unless driver and rider could be removed and solely linked through their trip_id\n+    # Trip should definitely include addtional parameters\n+\n+    # Why isn't this a thing?\n+    # def __unicode__(self):\n+    #     return some machine-readble shit\n+\n+\n+class User(model.Model):\n+    \"\"\" [Abstract] User model \"\"\"\n+\n+    class Meta:\n+        abstract = True\n \n-    # relationships\n-    trips = models.ManyToManyField(Trip, blank=True, related_name='users')\n+    name = models.CharField(blank=True, max_length=100)\n+    phone_number = models.BigIntegerField(blank=True, null=True)\n \n     def __unicode__(self):\n-        return self.username\n+        \"\"\" Retuns username (utf-8) \"\"\"\n+    \treturn self.username\n \n     def get_absolute_url(self):\n         return reverse('users:detail', kwargs={'username': self.username})\n+\n+\n+class Driver(User):\n+    \"\"\" Driver model \"\"\"\n+\n+    photo = models.URLField(blank=True)\n+    # Instead of description and interests we should just have a bio\n+    description = models.CharField(blank=True, max_length=1000)\n+    interests = models.CharField(blank=True, max_length=500)\n+    # As well as a field to showcase all of the trips driven\n+    trips = ForeignKey(Trip)\n+    bike = models.CharField(blank=True, max_length=100)\n+\n+\n+class Rider(User):\n+    \"\"\" Rider model \"\"\"\n+\n+    # Might be useless but I'll leave it here in case I think of",
        "path": "users/models.py",
        "position": 81,
        "original_position": 81,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nah, this is good, we will be using this in the future and it should be distinctive like this\n",
        "created_at": "2015-08-20T04:25:32Z",
        "updated_at": "2015-08-20T04:25:32Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37494062",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37494062"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37494062"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37494085",
        "pull_request_review_id": null,
        "id": 37494085,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0MDg1",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)\n+\tscenic = models.BooleanField(blank=True, default=False)\n+\tstart_ts = models.DateTimeField(blank=True, null=True, default=timezone.now)\n+\tstatus = models.CharField(blank=True, default='unconfirmed', max_length=200)\n+    # Either distance or time to one-to-one with driver\n+    # We could reward drivers based on distance\n+    distance = models.BigIntergerField(blank=True, null=True)\n+    driver = ForeignKey(Driver)\n+    rider = ForeignKey(Rider)\n+    # Unless driver and rider could be removed and solely linked through their trip_id\n+    # Trip should definitely include addtional parameters\n+\n+    # Why isn't this a thing?\n+    # def __unicode__(self):\n+    #     return some machine-readble shit\n+\n+\n+class User(model.Model):\n+    \"\"\" [Abstract] User model \"\"\"\n+\n+    class Meta:\n+        abstract = True\n \n-    # relationships\n-    trips = models.ManyToManyField(Trip, blank=True, related_name='users')\n+    name = models.CharField(blank=True, max_length=100)\n+    phone_number = models.BigIntegerField(blank=True, null=True)\n \n     def __unicode__(self):\n-        return self.username\n+        \"\"\" Retuns username (utf-8) \"\"\"\n+    \treturn self.username\n \n     def get_absolute_url(self):\n         return reverse('users:detail', kwargs={'username': self.username})\n+\n+\n+class Driver(User):\n+    \"\"\" Driver model \"\"\"\n+\n+    photo = models.URLField(blank=True)",
        "path": "users/models.py",
        "position": 69,
        "original_position": 69,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "both users will have photos\n",
        "created_at": "2015-08-20T04:26:06Z",
        "updated_at": "2015-08-20T04:26:06Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37494085",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37494085"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37494085"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37494151",
        "pull_request_review_id": null,
        "id": 37494151,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0MTUx",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)\n+\tscenic = models.BooleanField(blank=True, default=False)\n+\tstart_ts = models.DateTimeField(blank=True, null=True, default=timezone.now)\n+\tstatus = models.CharField(blank=True, default='unconfirmed', max_length=200)\n+    # Either distance or time to one-to-one with driver\n+    # We could reward drivers based on distance\n+    distance = models.BigIntergerField(blank=True, null=True)\n+    driver = ForeignKey(Driver)\n+    rider = ForeignKey(Rider)\n+    # Unless driver and rider could be removed and solely linked through their trip_id\n+    # Trip should definitely include addtional parameters\n+\n+    # Why isn't this a thing?\n+    # def __unicode__(self):\n+    #     return some machine-readble shit\n+\n+\n+class User(model.Model):\n+    \"\"\" [Abstract] User model \"\"\"\n+\n+    class Meta:\n+        abstract = True\n \n-    # relationships\n-    trips = models.ManyToManyField(Trip, blank=True, related_name='users')\n+    name = models.CharField(blank=True, max_length=100)\n+    phone_number = models.BigIntegerField(blank=True, null=True)\n \n     def __unicode__(self):\n-        return self.username\n+        \"\"\" Retuns username (utf-8) \"\"\"\n+    \treturn self.username\n \n     def get_absolute_url(self):\n         return reverse('users:detail', kwargs={'username': self.username})\n+\n+\n+class Driver(User):\n+    \"\"\" Driver model \"\"\"\n+\n+    photo = models.URLField(blank=True)\n+    # Instead of description and interests we should just have a bio\n+    description = models.CharField(blank=True, max_length=1000)\n+    interests = models.CharField(blank=True, max_length=500)\n+    # As well as a field to showcase all of the trips driven\n+    trips = ForeignKey(Trip)",
        "path": "users/models.py",
        "position": 74,
        "original_position": 74,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "General django trick: foreign keys should only be declared in the `one` of a `one-to-many` relationship, `related_name` param gives a nice way to do easy reverse-lookup\n",
        "created_at": "2015-08-20T04:28:00Z",
        "updated_at": "2015-08-20T04:28:00Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37494151",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37494151"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37494151"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37494165",
        "pull_request_review_id": null,
        "id": 37494165,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0MTY1",
        "diff_hunk": "@@ -1,29 +1,71 @@\n # -*- coding: utf-8 -*-\n from __future__ import unicode_literals, absolute_import\n \n+from datetime import datetime\n+\n from django.contrib.auth.models import AbstractUser\n from django.core.urlresolvers import reverse\n from django.db import models\n+from django.utils import timezone\n+\n+# Should be seperate but for clarity I'm putting them together to showcase our models\n+# from api.models import Trip\n \n-from api.models import Trip\n # from django.utils.translation import ugettext_lazy as _\n \n \n-class User(AbstractUser):\n+class Trip(models.Model):\n+    \"\"\" Trip model \"\"\"\n \n-    # First Name and Last Name do not cover name patterns\n-    # around the globe.\n-    photo = models.URLField(blank=True)\n-    phone_number = models.BigIntegerField(blank=True, null=True)\n-    is_customer = models.BooleanField(max_length=100, default=True)\n-    description = models.CharField(blank=True, max_length=1000)\n-    interests = models.CharField(blank=True, max_length=500)\n+    trip_id = models.BigIntegerField(blank=True, null=True)\n+\tscenic = models.BooleanField(blank=True, default=False)\n+\tstart_ts = models.DateTimeField(blank=True, null=True, default=timezone.now)\n+\tstatus = models.CharField(blank=True, default='unconfirmed', max_length=200)\n+    # Either distance or time to one-to-one with driver\n+    # We could reward drivers based on distance\n+    distance = models.BigIntergerField(blank=True, null=True)\n+    driver = ForeignKey(Driver)\n+    rider = ForeignKey(Rider)\n+    # Unless driver and rider could be removed and solely linked through their trip_id\n+    # Trip should definitely include addtional parameters\n+\n+    # Why isn't this a thing?\n+    # def __unicode__(self):\n+    #     return some machine-readble shit\n+\n+\n+class User(model.Model):\n+    \"\"\" [Abstract] User model \"\"\"\n+\n+    class Meta:\n+        abstract = True\n \n-    # relationships\n-    trips = models.ManyToManyField(Trip, blank=True, related_name='users')\n+    name = models.CharField(blank=True, max_length=100)\n+    phone_number = models.BigIntegerField(blank=True, null=True)\n \n     def __unicode__(self):\n-        return self.username\n+        \"\"\" Retuns username (utf-8) \"\"\"\n+    \treturn self.username\n \n     def get_absolute_url(self):\n         return reverse('users:detail', kwargs={'username': self.username})\n+\n+\n+class Driver(User):\n+    \"\"\" Driver model \"\"\"\n+\n+    photo = models.URLField(blank=True)\n+    # Instead of description and interests we should just have a bio\n+    description = models.CharField(blank=True, max_length=1000)\n+    interests = models.CharField(blank=True, max_length=500)\n+    # As well as a field to showcase all of the trips driven\n+    trips = ForeignKey(Trip)\n+    bike = models.CharField(blank=True, max_length=100)",
        "path": "users/models.py",
        "position": 75,
        "original_position": 75,
        "commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "original_commit_id": "2b7c9fe3d9ed17585e4fa8056ac7a69090869fb9",
        "user": {
            "login": "aleccool213",
            "id": 6475934,
            "node_id": "MDQ6VXNlcjY0NzU5MzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6475934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleccool213",
            "html_url": "https://github.com/aleccool213",
            "followers_url": "https://api.github.com/users/aleccool213/followers",
            "following_url": "https://api.github.com/users/aleccool213/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleccool213/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleccool213/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleccool213/subscriptions",
            "organizations_url": "https://api.github.com/users/aleccool213/orgs",
            "repos_url": "https://api.github.com/users/aleccool213/repos",
            "events_url": "https://api.github.com/users/aleccool213/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleccool213/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this looks like it is applicable to just `Driver` but the rest can go in `User`\n",
        "created_at": "2015-08-20T04:28:32Z",
        "updated_at": "2015-08-20T04:28:32Z",
        "html_url": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37494165",
        "pull_request_url": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/comments/37494165"
            },
            "html": {
                "href": "https://github.com/newtonjain/hacktheplanet/pull/1#discussion_r37494165"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/newtonjain/hacktheplanet/pulls/1"
            }
        }
    }
]