[
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564030",
        "pull_request_review_id": null,
        "id": 9564030,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjQwMzA=",
        "diff_hunk": "@@ -8,7 +8,7 @@ USAGE\n \n openMVG uses the [OSI]_ and the [CLP]_ solver in order to solve linear programs [LP]_.\n \n-CLP have been choosen because is it known to support problems of up to 1.5 million constraints [CLP FAQ]_.\n+CLP has been choosen because it iq known to support problems of up to 1.5 million constraints [CLP FAQ]_.",
        "path": "docs/sphinx/rst/dependencies/osi_clp.rst",
        "position": null,
        "original_position": 5,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "419052fd053d46afbd91f3cadb282893974a2d23",
        "user": {
            "login": "Meekohi",
            "id": 10985,
            "node_id": "MDQ6VXNlcjEwOTg1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Meekohi",
            "html_url": "https://github.com/Meekohi",
            "followers_url": "https://api.github.com/users/Meekohi/followers",
            "following_url": "https://api.github.com/users/Meekohi/following{/other_user}",
            "gists_url": "https://api.github.com/users/Meekohi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Meekohi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Meekohi/subscriptions",
            "organizations_url": "https://api.github.com/users/Meekohi/orgs",
            "repos_url": "https://api.github.com/users/Meekohi/repos",
            "events_url": "https://api.github.com/users/Meekohi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Meekohi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is, not iq\n",
        "created_at": "2014-02-08T14:47:14Z",
        "updated_at": "2014-02-08T15:47:10Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564030",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564030"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564030"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564036",
        "pull_request_review_id": null,
        "id": 9564036,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjQwMzY=",
        "diff_hunk": "@@ -18,7 +18,7 @@ Single channel image:\n * a 8-bit gray image: ``Image<unsigned char>``\n * a 32-bit gray image: ``Image<double>``\n \n-Multiple channel image: (In order to ease usage for color images some types are already available to handle RGB and RGBA images)\n+Multiple channels image: (In order to ease usage for color images some types are already available to handle RGB and RGBA images)",
        "path": "docs/sphinx/rst/openMVG/image/image.rst",
        "position": null,
        "original_position": 5,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "419052fd053d46afbd91f3cadb282893974a2d23",
        "user": {
            "login": "Meekohi",
            "id": 10985,
            "node_id": "MDQ6VXNlcjEwOTg1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Meekohi",
            "html_url": "https://github.com/Meekohi",
            "followers_url": "https://api.github.com/users/Meekohi/followers",
            "following_url": "https://api.github.com/users/Meekohi/following{/other_user}",
            "gists_url": "https://api.github.com/users/Meekohi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Meekohi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Meekohi/subscriptions",
            "organizations_url": "https://api.github.com/users/Meekohi/orgs",
            "repos_url": "https://api.github.com/users/Meekohi/repos",
            "events_url": "https://api.github.com/users/Meekohi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Meekohi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Most common would be to say \"Multichannel image\". \"Multiple channels image\" sounds wrong to me compared to \"Multiple channel image\", but the more I think about it I am not sure why...\n",
        "created_at": "2014-02-08T14:49:57Z",
        "updated_at": "2014-02-08T15:47:10Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564036",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564036"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564036"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564045",
        "pull_request_review_id": null,
        "id": 9564045,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjQwNDU=",
        "diff_hunk": "@@ -67,15 +67,15 @@ OpenMVG implementation follows the DLT (Direct Linear Transform) explained in [H\n Fundamental matrix:\n ---------------------\n \n-The fundamental matrix is a relation between two image viewing the same scene where points\n-projection are visible in the two images. Given a point correspondence between two view :math:`(x_i,x'_i)`:\n+The fundamental matrix is a relation between two images viewing the same scene where points\n+projection are visible in the two images. Given a point correspondence between two views :math:`(x_i,x'_i)`:",
        "path": "docs/sphinx/rst/openMVG/multiview/multiview.rst",
        "position": null,
        "original_position": 16,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "419052fd053d46afbd91f3cadb282893974a2d23",
        "user": {
            "login": "Meekohi",
            "id": 10985,
            "node_id": "MDQ6VXNlcjEwOTg1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Meekohi",
            "html_url": "https://github.com/Meekohi",
            "followers_url": "https://api.github.com/users/Meekohi/followers",
            "following_url": "https://api.github.com/users/Meekohi/following{/other_user}",
            "gists_url": "https://api.github.com/users/Meekohi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Meekohi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Meekohi/subscriptions",
            "organizations_url": "https://api.github.com/users/Meekohi/orgs",
            "repos_url": "https://api.github.com/users/Meekohi/repos",
            "events_url": "https://api.github.com/users/Meekohi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Meekohi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"point projections\" not \"points projection\". Could also do \"those point's projections\" to be more clear.\n",
        "created_at": "2014-02-08T14:51:13Z",
        "updated_at": "2014-02-08T15:47:10Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564045",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564045"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564045"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564050",
        "pull_request_review_id": null,
        "id": 9564050,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjQwNTA=",
        "diff_hunk": "@@ -67,15 +67,15 @@ OpenMVG implementation follows the DLT (Direct Linear Transform) explained in [H\n Fundamental matrix:\n ---------------------\n \n-The fundamental matrix is a relation between two image viewing the same scene where points\n-projection are visible in the two images. Given a point correspondence between two view :math:`(x_i,x'_i)`:\n+The fundamental matrix is a relation between two images viewing the same scene where points\n+projection are visible in the two images. Given a point correspondence between two views :math:`(x_i,x'_i)`:\n \n We obtain the following relation:\n \n .. math:: x'^T_i Fx_i = 0\n \n-:math:`F` is the (3 x 3) Fundamental matrix, it put in relation a point x to a line where belong the projection of the 3D X point.\n-:math:`l'_i = Fx_i` design the epipolar line on which the point :math:`x'_i` could be.\n+:math:`F` is the (3 x 3) Fundamental matrix, it puts in relation a point x to a line where belong the projection of the 3D X point.\n+:math:`l'_i = Fx_i` designq the epipolar line on which the point :math:`x'_i` could be.",
        "path": "docs/sphinx/rst/openMVG/multiview/multiview.rst",
        "position": null,
        "original_position": 25,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "419052fd053d46afbd91f3cadb282893974a2d23",
        "user": {
            "login": "Meekohi",
            "id": 10985,
            "node_id": "MDQ6VXNlcjEwOTg1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Meekohi",
            "html_url": "https://github.com/Meekohi",
            "followers_url": "https://api.github.com/users/Meekohi/followers",
            "following_url": "https://api.github.com/users/Meekohi/following{/other_user}",
            "gists_url": "https://api.github.com/users/Meekohi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Meekohi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Meekohi/subscriptions",
            "organizations_url": "https://api.github.com/users/Meekohi/orgs",
            "repos_url": "https://api.github.com/users/Meekohi/repos",
            "events_url": "https://api.github.com/users/Meekohi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Meekohi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Extra q. Someone must be using vi recklessly ;D\n",
        "created_at": "2014-02-08T14:51:48Z",
        "updated_at": "2014-02-08T15:47:10Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564050",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564050"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564050"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564113",
        "pull_request_review_id": null,
        "id": 9564113,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjQxMTM=",
        "diff_hunk": "@@ -2,9 +2,9 @@\n dependencies\n ############################\n \n-OpenMVG library use the git submodule idea to make its repository lighter.\n+OpenMVG library uses the git submodule idea to make its repository lighter.\n \n-Here the list of the library used through the submodule concept:\n+Here the list of the libraries used through the submodule concept:",
        "path": "docs/sphinx/rst/dependencies/external_libs.rst",
        "position": null,
        "original_position": 8,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "419052fd053d46afbd91f3cadb282893974a2d23",
        "user": {
            "login": "vins31",
            "id": 644674,
            "node_id": "MDQ6VXNlcjY0NDY3NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/644674?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vins31",
            "html_url": "https://github.com/vins31",
            "followers_url": "https://api.github.com/users/vins31/followers",
            "following_url": "https://api.github.com/users/vins31/following{/other_user}",
            "gists_url": "https://api.github.com/users/vins31/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vins31/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vins31/subscriptions",
            "organizations_url": "https://api.github.com/users/vins31/orgs",
            "repos_url": "https://api.github.com/users/vins31/repos",
            "events_url": "https://api.github.com/users/vins31/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vins31/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think you meant \"Here are the libraries ...\" or \"Here is the list ...\" because there is a single list.\n",
        "created_at": "2014-02-08T15:09:48Z",
        "updated_at": "2014-02-08T15:47:10Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564113",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564113"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564113"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564121",
        "pull_request_review_id": null,
        "id": 9564121,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjQxMjE=",
        "diff_hunk": "@@ -67,15 +67,15 @@ OpenMVG implementation follows the DLT (Direct Linear Transform) explained in [H\n Fundamental matrix:\n ---------------------\n \n-The fundamental matrix is a relation between two image viewing the same scene where points\n-projection are visible in the two images. Given a point correspondence between two view :math:`(x_i,x'_i)`:\n+The fundamental matrix is a relation between two images viewing the same scene where points\n+projection are visible in the two images. Given a point correspondence between two views :math:`(x_i,x'_i)`:\n \n We obtain the following relation:\n \n .. math:: x'^T_i Fx_i = 0\n \n-:math:`F` is the (3 x 3) Fundamental matrix, it put in relation a point x to a line where belong the projection of the 3D X point.\n-:math:`l'_i = Fx_i` design the epipolar line on which the point :math:`x'_i` could be.\n+:math:`F` is the (3 x 3) Fundamental matrix, it puts in relation a point x to a line where belong the projection of the 3D X point.\n+:math:`l'_i = Fx_i` designq the epipolar line on which the point :math:`x'_i` could be.",
        "path": "docs/sphinx/rst/openMVG/multiview/multiview.rst",
        "position": null,
        "original_position": 25,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "419052fd053d46afbd91f3cadb282893974a2d23",
        "user": {
            "login": "vins31",
            "id": 644674,
            "node_id": "MDQ6VXNlcjY0NDY3NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/644674?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vins31",
            "html_url": "https://github.com/vins31",
            "followers_url": "https://api.github.com/users/vins31/followers",
            "following_url": "https://api.github.com/users/vins31/following{/other_user}",
            "gists_url": "https://api.github.com/users/vins31/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vins31/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vins31/subscriptions",
            "organizations_url": "https://api.github.com/users/vins31/orgs",
            "repos_url": "https://api.github.com/users/vins31/repos",
            "events_url": "https://api.github.com/users/vins31/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vins31/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oops. Thank you, I meant _designs_.\nYou guessed it right about vim :)\n",
        "created_at": "2014-02-08T15:13:12Z",
        "updated_at": "2014-02-08T15:47:10Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564121",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564121"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564121"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564163",
        "pull_request_review_id": null,
        "id": 9564163,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NjQxNjM=",
        "diff_hunk": "@@ -2,9 +2,9 @@\n dependencies\n ############################\n \n-OpenMVG library use the git submodule idea to make its repository lighter.\n+OpenMVG library uses the git submodule idea to make its repository lighter.\n \n-Here the list of the library used through the submodule concept:\n+Here the list of the libraries used through the submodule concept:",
        "path": "docs/sphinx/rst/dependencies/external_libs.rst",
        "position": null,
        "original_position": 8,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "419052fd053d46afbd91f3cadb282893974a2d23",
        "user": {
            "login": "Meekohi",
            "id": 10985,
            "node_id": "MDQ6VXNlcjEwOTg1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Meekohi",
            "html_url": "https://github.com/Meekohi",
            "followers_url": "https://api.github.com/users/Meekohi/followers",
            "following_url": "https://api.github.com/users/Meekohi/following{/other_user}",
            "gists_url": "https://api.github.com/users/Meekohi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Meekohi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Meekohi/subscriptions",
            "organizations_url": "https://api.github.com/users/Meekohi/orgs",
            "repos_url": "https://api.github.com/users/Meekohi/repos",
            "events_url": "https://api.github.com/users/Meekohi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Meekohi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "English is hard ;)\n\"Here are the libraries used through the submodule concept:\"\n",
        "created_at": "2014-02-08T15:24:07Z",
        "updated_at": "2014-02-08T15:47:10Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564163",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9564163"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9564163"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9577141",
        "pull_request_review_id": null,
        "id": 9577141,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzcxNDE=",
        "diff_hunk": "@@ -3,14 +3,14 @@ patented\n ############################\n \n \n-The openMVG licence is MPL2 but some code used to provided intersting functionnalities have different licence or are subject to patent.\n+The openMVG licence is MPL2 but some code used to provide interesting functionnalities have different licences or are subject to patent.",
        "path": "docs/sphinx/rst/patented/patented.rst",
        "position": 5,
        "original_position": 5,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "user": {
            "login": "fcastan",
            "id": 5681756,
            "node_id": "MDQ6VXNlcjU2ODE3NTY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5681756?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fcastan",
            "html_url": "https://github.com/fcastan",
            "followers_url": "https://api.github.com/users/fcastan/followers",
            "following_url": "https://api.github.com/users/fcastan/following{/other_user}",
            "gists_url": "https://api.github.com/users/fcastan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fcastan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fcastan/subscriptions",
            "organizations_url": "https://api.github.com/users/fcastan/orgs",
            "repos_url": "https://api.github.com/users/fcastan/repos",
            "events_url": "https://api.github.com/users/fcastan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fcastan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`license` in US english\n",
        "created_at": "2014-02-10T09:05:14Z",
        "updated_at": "2014-02-10T09:05:14Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9577141",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9577141"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9577141"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9577207",
        "pull_request_review_id": null,
        "id": 9577207,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzcyMDc=",
        "diff_hunk": "@@ -3,14 +3,14 @@ patented\n ############################\n \n \n-The openMVG licence is MPL2 but some code used to provided intersting functionnalities have different licence or are subject to patent.\n+The openMVG licence is MPL2 but some code used to provide interesting functionnalities have different licences or are subject to patent.",
        "path": "docs/sphinx/rst/patented/patented.rst",
        "position": 5,
        "original_position": 5,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Still ok for UK english\n",
        "created_at": "2014-02-10T09:07:56Z",
        "updated_at": "2014-02-10T09:07:56Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9577207",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9577207"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9577207"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9577258",
        "pull_request_review_id": null,
        "id": 9577258,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzcyNTg=",
        "diff_hunk": "@@ -3,14 +3,14 @@ patented\n ############################\n \n \n-The openMVG licence is MPL2 but some code used to provided intersting functionnalities have different licence or are subject to patent.\n+The openMVG licence is MPL2 but some code used to provide interesting functionnalities have different licences or are subject to patent.",
        "path": "docs/sphinx/rst/patented/patented.rst",
        "position": 5,
        "original_position": 5,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "user": {
            "login": "fcastan",
            "id": 5681756,
            "node_id": "MDQ6VXNlcjU2ODE3NTY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5681756?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fcastan",
            "html_url": "https://github.com/fcastan",
            "followers_url": "https://api.github.com/users/fcastan/followers",
            "following_url": "https://api.github.com/users/fcastan/following{/other_user}",
            "gists_url": "https://api.github.com/users/fcastan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fcastan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fcastan/subscriptions",
            "organizations_url": "https://api.github.com/users/fcastan/orgs",
            "repos_url": "https://api.github.com/users/fcastan/repos",
            "events_url": "https://api.github.com/users/fcastan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fcastan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Mixing both is not great (see license.openMVG, license.libmv).\n",
        "created_at": "2014-02-10T09:10:34Z",
        "updated_at": "2014-02-10T09:10:34Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9577258",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9577258"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9577258"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9577439",
        "pull_request_review_id": null,
        "id": 9577439,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1Nzc0Mzk=",
        "diff_hunk": "@@ -3,14 +3,14 @@ patented\n ############################\n \n \n-The openMVG licence is MPL2 but some code used to provided intersting functionnalities have different licence or are subject to patent.\n+The openMVG licence is MPL2 but some code used to provide interesting functionnalities have different licences or are subject to patent.",
        "path": "docs/sphinx/rst/patented/patented.rst",
        "position": 5,
        "original_position": 5,
        "commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "original_commit_id": "a3074f2becbbced6dada1cf3255b2fb143235cbf",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, thanks\n",
        "created_at": "2014-02-10T09:17:24Z",
        "updated_at": "2014-02-10T09:17:24Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/79#discussion_r9577439",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/79",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/9577439"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/79#discussion_r9577439"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/79"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/20681450",
        "pull_request_review_id": null,
        "id": 20681450,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjgxNDUw",
        "diff_hunk": "@@ -15,6 +15,40 @@\n \n using namespace openMVG;\n \n+bool computeIndexFromImageNames(const std::string& sMatchesDir, const std::pair<std::string,std::string>& initialPairName, std::pair<size_t, size_t>& initialPairIndex)\n+{\n+  const std::string sListsFile = stlplus::create_filespec(sMatchesDir, \"lists.txt\" );\n+  if (!stlplus::is_file(sListsFile)) {\n+    std::cerr << \"Cannont access input file \\\"\"<< sListsFile << \"\\\"\" << std::endl;",
        "path": "src/software/SfM/main_IncrementalSfM.cpp",
        "position": null,
        "original_position": 8,
        "commit_id": "da1cc647b5d86c59f78c8f9fe451e2839f2ec53e",
        "original_commit_id": "83a9a59314addcdbb6b324928312d9a41863b8d5",
        "user": {
            "login": "fabiencastan",
            "id": 153585,
            "node_id": "MDQ6VXNlcjE1MzU4NQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/153585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fabiencastan",
            "html_url": "https://github.com/fabiencastan",
            "followers_url": "https://api.github.com/users/fabiencastan/followers",
            "following_url": "https://api.github.com/users/fabiencastan/following{/other_user}",
            "gists_url": "https://api.github.com/users/fabiencastan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fabiencastan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fabiencastan/subscriptions",
            "organizations_url": "https://api.github.com/users/fabiencastan/orgs",
            "repos_url": "https://api.github.com/users/fabiencastan/repos",
            "events_url": "https://api.github.com/users/fabiencastan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fabiencastan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Cannont\n",
        "created_at": "2014-11-20T22:11:10Z",
        "updated_at": "2014-11-21T15:57:43Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/200#discussion_r20681450",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/200",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/20681450"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/200#discussion_r20681450"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/200"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/25515350",
        "pull_request_review_id": null,
        "id": 25515350,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTE1MzUw",
        "diff_hunk": "@@ -34,10 +34,13 @@ struct IntrinsicCameraInfo\n   size_t m_w, m_h;\n   float m_focal;\n   Mat3 m_K;\n+  double m_k1;",
        "path": "src/software/SfM/SfMIOHelper.hpp",
        "position": 4,
        "original_position": 4,
        "commit_id": "1bca4f85969b2062c4b4920f3b85bbf3cc49ff2e",
        "original_commit_id": "1bca4f85969b2062c4b4920f3b85bbf3cc49ff2e",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Does this modification is useful ?\n",
        "created_at": "2015-02-27T15:54:22Z",
        "updated_at": "2015-02-27T15:54:22Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/236#discussion_r25515350",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/236",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/25515350"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/236#discussion_r25515350"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/25561076",
        "pull_request_review_id": null,
        "id": 25561076,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTYxMDc2",
        "diff_hunk": "@@ -34,10 +34,13 @@ struct IntrinsicCameraInfo\n   size_t m_w, m_h;\n   float m_focal;\n   Mat3 m_K;\n+  double m_k1;",
        "path": "src/software/SfM/SfMIOHelper.hpp",
        "position": 4,
        "original_position": 4,
        "commit_id": "1bca4f85969b2062c4b4920f3b85bbf3cc49ff2e",
        "original_commit_id": "1bca4f85969b2062c4b4920f3b85bbf3cc49ff2e",
        "user": {
            "login": "lcalvet",
            "id": 7878820,
            "node_id": "MDQ6VXNlcjc4Nzg4MjA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7878820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lcalvet",
            "html_url": "https://github.com/lcalvet",
            "followers_url": "https://api.github.com/users/lcalvet/followers",
            "following_url": "https://api.github.com/users/lcalvet/following{/other_user}",
            "gists_url": "https://api.github.com/users/lcalvet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lcalvet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lcalvet/subscriptions",
            "organizations_url": "https://api.github.com/users/lcalvet/orgs",
            "repos_url": "https://api.github.com/users/lcalvet/repos",
            "events_url": "https://api.github.com/users/lcalvet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lcalvet/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, required.\n",
        "created_at": "2015-02-28T20:51:47Z",
        "updated_at": "2015-02-28T20:51:47Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/236#discussion_r25561076",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/236",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/25561076"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/236#discussion_r25561076"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/236"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30992068",
        "pull_request_review_id": null,
        "id": 30992068,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTkyMDY4",
        "diff_hunk": "@@ -98,8 +98,9 @@ void Template_Matcher(\n     const features::Regions *regionsI = regions_perImage.at(I).get();\n     const size_t regions_countI = regionsI->RegionCount();\n     const std::vector<PointFeature> pointFeaturesI = regionsI->GetRegionsPositions();\n-    const typename MatcherT::ScalarT * tabI =\n-      reinterpret_cast<const typename MatcherT::ScalarT *>(regionsI->DescriptorRawData());\n+    const typename MatcherT::ScalarT * tabI = NULL;\n+    if(regions_countI > 0)",
        "path": "src/openMVG/matching_image_collection/Matcher_Regions_AllInMemory.cpp",
        "position": 7,
        "original_position": 7,
        "commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "original_commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "While not consider\n\n```\nconst typename MatcherT::ScalarT * tabI = NULL;\nif(regions_countI == 0)\n  continue;\n```\n",
        "created_at": "2015-05-25T19:21:52Z",
        "updated_at": "2015-05-25T19:21:52Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/310#discussion_r30992068",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/310",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30992068"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/310#discussion_r30992068"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/310"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30992093",
        "pull_request_review_id": null,
        "id": 30992093,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTkyMDkz",
        "diff_hunk": "@@ -112,8 +113,9 @@ void Template_Matcher(\n \n       const features::Regions *regionsJ = regions_perImage.at(J).get();\n       const size_t regions_countJ = regionsJ->RegionCount();\n-      const typename MatcherT::ScalarT * tabJ =\n-        reinterpret_cast<const typename MatcherT::ScalarT *>(regionsJ->DescriptorRawData());\n+      const typename MatcherT::ScalarT * tabJ = NULL;\n+      if(regions_countJ > 0)",
        "path": "src/openMVG/matching_image_collection/Matcher_Regions_AllInMemory.cpp",
        "position": 19,
        "original_position": 19,
        "commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "original_commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "While not consider\n\n```\nconst typename MatcherT::ScalarT * tabJ = NULL;\nif(regions_countJ == 0)\n  continue;\n```\n",
        "created_at": "2015-05-25T19:22:48Z",
        "updated_at": "2015-05-25T19:22:48Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/310#discussion_r30992093",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/310",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30992093"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/310#discussion_r30992093"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/310"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30992164",
        "pull_request_review_id": null,
        "id": 30992164,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTkyMTY0",
        "diff_hunk": "@@ -149,7 +151,7 @@ void Template_Matcher(\n         ++my_progress_bar;\n         if (!vec_FilteredMatches.empty())\n         {\n-          map_PutativesMatches.insert( make_pair( make_pair(I,J), vec_FilteredMatches ));\n+          map_PutativesMatches.insert( make_pair( make_pair(I,J), std::move(vec_FilteredMatches) ));",
        "path": "src/openMVG/matching_image_collection/Matcher_Regions_AllInMemory.cpp",
        "position": 29,
        "original_position": 29,
        "commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "original_commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I should consider the move instruction in other place:\nhttps://github.com/openMVG/openMVG/blob/develop/src/openMVG/matching_image_collection/Matcher_Regions_AllInMemory.cpp#L152\n",
        "created_at": "2015-05-25T19:25:00Z",
        "updated_at": "2015-05-25T19:25:00Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/310#discussion_r30992164",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/310",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30992164"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/310#discussion_r30992164"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/310"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30992595",
        "pull_request_review_id": null,
        "id": 30992595,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTkyNTk1",
        "diff_hunk": "@@ -98,8 +98,9 @@ void Template_Matcher(\n     const features::Regions *regionsI = regions_perImage.at(I).get();\n     const size_t regions_countI = regionsI->RegionCount();\n     const std::vector<PointFeature> pointFeaturesI = regionsI->GetRegionsPositions();\n-    const typename MatcherT::ScalarT * tabI =\n-      reinterpret_cast<const typename MatcherT::ScalarT *>(regionsI->DescriptorRawData());\n+    const typename MatcherT::ScalarT * tabI = NULL;\n+    if(regions_countI > 0)",
        "path": "src/openMVG/matching_image_collection/Matcher_Regions_AllInMemory.cpp",
        "position": 7,
        "original_position": 7,
        "commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "original_commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "user": {
            "login": "rhiestan",
            "id": 10052044,
            "node_id": "MDQ6VXNlcjEwMDUyMDQ0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10052044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rhiestan",
            "html_url": "https://github.com/rhiestan",
            "followers_url": "https://api.github.com/users/rhiestan/followers",
            "following_url": "https://api.github.com/users/rhiestan/following{/other_user}",
            "gists_url": "https://api.github.com/users/rhiestan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rhiestan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rhiestan/subscriptions",
            "organizations_url": "https://api.github.com/users/rhiestan/orgs",
            "repos_url": "https://api.github.com/users/rhiestan/repos",
            "events_url": "https://api.github.com/users/rhiestan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rhiestan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, you are right, this is better.\n",
        "created_at": "2015-05-25T19:42:45Z",
        "updated_at": "2015-05-25T19:42:45Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/310#discussion_r30992595",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/310",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30992595"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/310#discussion_r30992595"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/310"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30992695",
        "pull_request_review_id": null,
        "id": 30992695,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTkyNjk1",
        "diff_hunk": "@@ -149,7 +151,7 @@ void Template_Matcher(\n         ++my_progress_bar;\n         if (!vec_FilteredMatches.empty())\n         {\n-          map_PutativesMatches.insert( make_pair( make_pair(I,J), vec_FilteredMatches ));\n+          map_PutativesMatches.insert( make_pair( make_pair(I,J), std::move(vec_FilteredMatches) ));",
        "path": "src/openMVG/matching_image_collection/Matcher_Regions_AllInMemory.cpp",
        "position": 29,
        "original_position": 29,
        "commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "original_commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "user": {
            "login": "rhiestan",
            "id": 10052044,
            "node_id": "MDQ6VXNlcjEwMDUyMDQ0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10052044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rhiestan",
            "html_url": "https://github.com/rhiestan",
            "followers_url": "https://api.github.com/users/rhiestan/followers",
            "following_url": "https://api.github.com/users/rhiestan/following{/other_user}",
            "gists_url": "https://api.github.com/users/rhiestan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rhiestan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rhiestan/subscriptions",
            "organizations_url": "https://api.github.com/users/rhiestan/orgs",
            "repos_url": "https://api.github.com/users/rhiestan/repos",
            "events_url": "https://api.github.com/users/rhiestan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rhiestan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Where do you mean? The link points to the change I already made.\n",
        "created_at": "2015-05-25T19:45:57Z",
        "updated_at": "2015-05-25T19:45:57Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/310#discussion_r30992695",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/310",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30992695"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/310#discussion_r30992695"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/310"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30993789",
        "pull_request_review_id": null,
        "id": 30993789,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTkzNzg5",
        "diff_hunk": "@@ -149,7 +151,7 @@ void Template_Matcher(\n         ++my_progress_bar;\n         if (!vec_FilteredMatches.empty())\n         {\n-          map_PutativesMatches.insert( make_pair( make_pair(I,J), vec_FilteredMatches ));\n+          map_PutativesMatches.insert( make_pair( make_pair(I,J), std::move(vec_FilteredMatches) ));",
        "path": "src/openMVG/matching_image_collection/Matcher_Regions_AllInMemory.cpp",
        "position": 29,
        "original_position": 29,
        "commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "original_commit_id": "9b1f11719d1e13b9fe59e08917649ac054b663b6",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're right, sorry.\n",
        "created_at": "2015-05-25T20:34:19Z",
        "updated_at": "2015-05-25T20:34:19Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/310#discussion_r30993789",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/310",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/30993789"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/310#discussion_r30993789"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/310"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35543481",
        "pull_request_review_id": null,
        "id": 35543481,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTQzNDgx",
        "diff_hunk": "@@ -36,11 +36,6 @@ string(REGEX MATCH \"define[ \\t]+EIGEN_MINOR_VERSION[ \\t]+([0-9]+)\" _eigen_minor_\n set(EIGEN_MINOR_VERSION \"${CMAKE_MATCH_1}\")\n set(EIGEN_VERSION_NUMBER ${EIGEN_WORLD_VERSION}.${EIGEN_MAJOR_VERSION}.${EIGEN_MINOR_VERSION})\n \n-# if the mercurial program is absent, this will leave the EIGEN_HG_CHANGESET string empty,\n-# but won't stop CMake.\n-execute_process(COMMAND hg tip -R ${CMAKE_SOURCE_DIR} OUTPUT_VARIABLE EIGEN_HGTIP_OUTPUT)",
        "path": "src/third_party/eigen/CMakeLists.txt",
        "position": 6,
        "original_position": 6,
        "commit_id": "20b3ac8d8f620e882ef78091988df967b16d7363",
        "original_commit_id": "1d4f9c8254165813033254c7e80935b1c38765ce",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think the ${CMAKE_SOURCE_DIR} should be replaced by ${CMAKE_CURRENT_SOURCE_DIR }\n",
        "created_at": "2015-07-27T14:47:48Z",
        "updated_at": "2015-07-27T15:23:33Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/343#discussion_r35543481",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/343",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35543481"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/343#discussion_r35543481"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/343"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35731855",
        "pull_request_review_id": null,
        "id": 35731855,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzMxODU1",
        "diff_hunk": "@@ -1,4 +1,4 @@\n \n-UNIT_TEST(openMVG_graph connectedComponent \"lemon\")\n-UNIT_TEST(openMVG_graph triplet_finder \"lemon\")\n+UNIT_TEST(openMVG_graph connectedComponent \"\")",
        "path": "src/openMVG/graph/CMakeLists.txt",
        "position": 4,
        "original_position": 4,
        "commit_id": "a20c1d51f2e4658169f529e814f3ed02f37a5d66",
        "original_commit_id": "3e46c98d73950afc4ed3024a9cfd48aa5e017ea2",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "strange that lemon is not longer required...\n",
        "created_at": "2015-07-29T06:51:22Z",
        "updated_at": "2015-07-31T20:34:52Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/346#discussion_r35731855",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35731855"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/346#discussion_r35731855"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35734844",
        "pull_request_review_id": null,
        "id": 35734844,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzM0ODQ0",
        "diff_hunk": "@@ -1,4 +1,4 @@\n \n-UNIT_TEST(openMVG_graph connectedComponent \"lemon\")\n-UNIT_TEST(openMVG_graph triplet_finder \"lemon\")\n+UNIT_TEST(openMVG_graph connectedComponent \"\")",
        "path": "src/openMVG/graph/CMakeLists.txt",
        "position": 4,
        "original_position": 4,
        "commit_id": "a20c1d51f2e4658169f529e814f3ed02f37a5d66",
        "original_commit_id": "3e46c98d73950afc4ed3024a9cfd48aa5e017ea2",
        "user": {
            "login": "cbalint13",
            "id": 3974360,
            "node_id": "MDQ6VXNlcjM5NzQzNjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3974360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cbalint13",
            "html_url": "https://github.com/cbalint13",
            "followers_url": "https://api.github.com/users/cbalint13/followers",
            "following_url": "https://api.github.com/users/cbalint13/following{/other_user}",
            "gists_url": "https://api.github.com/users/cbalint13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cbalint13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cbalint13/subscriptions",
            "organizations_url": "https://api.github.com/users/cbalint13/orgs",
            "repos_url": "https://api.github.com/users/cbalint13/repos",
            "events_url": "https://api.github.com/users/cbalint13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cbalint13/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@pmoulon ,\n\nI notice that, BOOST replaced it but traces are still present, please check:\nfind src/ -type f -exec grep -H 'lemon/' {} \\; | grep -v third_party\n\nIf agree, to be 'correct' i leave LEMON for now just like it was, i believe we should clean up LEMON in another PR.\n\n--------------<<<------------\nLets see some examples:\n\nA) BOOST replaces just fine:\nsrc/openMVG/multiview/rotation_averaging_l1.cpp\n\nB) boost does not replaces at all:\nsrc/openMVG/graph/graph.hpp\n-------------->>>--------------\n",
        "created_at": "2015-07-29T07:44:51Z",
        "updated_at": "2015-07-31T20:34:52Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/346#discussion_r35734844",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/346",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35734844"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/346#discussion_r35734844"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35757880",
        "pull_request_review_id": null,
        "id": 35757880,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzU3ODgw",
        "diff_hunk": "@@ -246,17 +230,151 @@ ADD_DEFINITIONS(-DEIGEN_MPL2_ONLY)\n # - external if CERES_DIR_HINTS and FIND_PACKAGE return a valid Ceres setup\n # ==============================================================================\n FIND_PACKAGE(Ceres QUIET HINTS ${CERES_DIR_HINTS})\n-IF(Ceres_FOUND)\n-   MESSAGE(\"CERES FOUND\")\n-ELSE()\n-  MESSAGE(\"CERES NOT FOUND\")\n+IF(NOT Ceres_FOUND)\n   SET(OpenMVG_USE_INTERNAL_CERES ON)\n   SET(CERES_INCLUDE_DIRS\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/include\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/internal/ceres/miniglog\n     ${PROJECT_BINARY_DIR}/third_party/ceres-solver/config)\n+    FILE(READ \"${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/VERSION\" CERES_CONFIG)\n+    STRING(REGEX REPLACE \"version ([0-9.]+).*\" \"\\\\1\" CERES_VERSION ${CERES_CONFIG})\n   SET(CERES_LIBRARIES ceres cxsparse)\n-ENDIF(Ceres_FOUND)\n+ENDIF()\n+\n+# ==============================================================================\n+# Flann\n+# ==============================================================================\n+# - internal by default (flann),\n+# - external if FLANN_DIR_HINTS and a valid Flann setup is found\n+# ==============================================================================\n+FIND_PATH(FLANN_INCLUDE_DIRS flann.hpp ${FLANN_DIR_HINTS})",
        "path": "src/CMakeLists.txt",
        "position": null,
        "original_position": 124,
        "commit_id": "a20c1d51f2e4658169f529e814f3ed02f37a5d66",
        "original_commit_id": "3e46c98d73950afc4ed3024a9cfd48aa5e017ea2",
        "user": {
            "login": "simogasp",
            "id": 1331744,
            "node_id": "MDQ6VXNlcjEzMzE3NDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1331744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simogasp",
            "html_url": "https://github.com/simogasp",
            "followers_url": "https://api.github.com/users/simogasp/followers",
            "following_url": "https://api.github.com/users/simogasp/following{/other_user}",
            "gists_url": "https://api.github.com/users/simogasp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simogasp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simogasp/subscriptions",
            "organizations_url": "https://api.github.com/users/simogasp/orgs",
            "repos_url": "https://api.github.com/users/simogasp/repos",
            "events_url": "https://api.github.com/users/simogasp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simogasp/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'am not an expert but isn't it better to pass through a `find_package()` instead of looking for the `.h` of each library inside its `LIBNAME_DIR_HINTS`? It seems to me that this can work only if the library that you are looking for are installed in the usual system directories (eg /usr/lib): when u later call `FIND_LIBRARY(LIBNAME_LIBRARY NAMES libname)` you don't provide any other directory in which to look for. If the library is installed in a non system path there's no way it could look into it.\nFor example, if I have installed flann in some directory in my home `/home/simone/my/personal/flann/install/path/` then according to this version I should pass `FLANN_DIR_HINTS=/home/simone/my/personal/flann/install/path/include/flann` (where the `flann.hpp` is installed) but then the `FIND_LIBRARY(FLANN_LIBRARY NAMES flann_cpp)` will have no clue that the .so are placed somewhere inside `/home/simone/my/personal/flann/install/path/lib`.\n",
        "created_at": "2015-07-29T13:26:39Z",
        "updated_at": "2015-07-31T20:34:52Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/346#discussion_r35757880",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/346",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35757880"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/346#discussion_r35757880"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35767171",
        "pull_request_review_id": null,
        "id": 35767171,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzY3MTcx",
        "diff_hunk": "@@ -246,17 +230,151 @@ ADD_DEFINITIONS(-DEIGEN_MPL2_ONLY)\n # - external if CERES_DIR_HINTS and FIND_PACKAGE return a valid Ceres setup\n # ==============================================================================\n FIND_PACKAGE(Ceres QUIET HINTS ${CERES_DIR_HINTS})\n-IF(Ceres_FOUND)\n-   MESSAGE(\"CERES FOUND\")\n-ELSE()\n-  MESSAGE(\"CERES NOT FOUND\")\n+IF(NOT Ceres_FOUND)\n   SET(OpenMVG_USE_INTERNAL_CERES ON)\n   SET(CERES_INCLUDE_DIRS\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/include\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/internal/ceres/miniglog\n     ${PROJECT_BINARY_DIR}/third_party/ceres-solver/config)\n+    FILE(READ \"${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/VERSION\" CERES_CONFIG)\n+    STRING(REGEX REPLACE \"version ([0-9.]+).*\" \"\\\\1\" CERES_VERSION ${CERES_CONFIG})\n   SET(CERES_LIBRARIES ceres cxsparse)\n-ENDIF(Ceres_FOUND)\n+ENDIF()\n+\n+# ==============================================================================\n+# Flann\n+# ==============================================================================\n+# - internal by default (flann),\n+# - external if FLANN_DIR_HINTS and a valid Flann setup is found\n+# ==============================================================================\n+FIND_PATH(FLANN_INCLUDE_DIRS flann.hpp ${FLANN_DIR_HINTS})",
        "path": "src/CMakeLists.txt",
        "position": null,
        "original_position": 124,
        "commit_id": "a20c1d51f2e4658169f529e814f3ed02f37a5d66",
        "original_commit_id": "3e46c98d73950afc4ed3024a9cfd48aa5e017ea2",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@simogasp @cbalint13 \nThis is a first draft, perhaps some Find_packageX can be added in src/cmakeFindModules and make this CMakeLists.txt file more clear.\n",
        "created_at": "2015-07-29T14:41:37Z",
        "updated_at": "2015-07-31T20:34:52Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/346#discussion_r35767171",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35767171"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/346#discussion_r35767171"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35772839",
        "pull_request_review_id": null,
        "id": 35772839,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzcyODM5",
        "diff_hunk": "@@ -246,17 +230,151 @@ ADD_DEFINITIONS(-DEIGEN_MPL2_ONLY)\n # - external if CERES_DIR_HINTS and FIND_PACKAGE return a valid Ceres setup\n # ==============================================================================\n FIND_PACKAGE(Ceres QUIET HINTS ${CERES_DIR_HINTS})\n-IF(Ceres_FOUND)\n-   MESSAGE(\"CERES FOUND\")\n-ELSE()\n-  MESSAGE(\"CERES NOT FOUND\")\n+IF(NOT Ceres_FOUND)\n   SET(OpenMVG_USE_INTERNAL_CERES ON)\n   SET(CERES_INCLUDE_DIRS\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/include\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/internal/ceres/miniglog\n     ${PROJECT_BINARY_DIR}/third_party/ceres-solver/config)\n+    FILE(READ \"${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/VERSION\" CERES_CONFIG)\n+    STRING(REGEX REPLACE \"version ([0-9.]+).*\" \"\\\\1\" CERES_VERSION ${CERES_CONFIG})\n   SET(CERES_LIBRARIES ceres cxsparse)\n-ENDIF(Ceres_FOUND)\n+ENDIF()\n+\n+# ==============================================================================\n+# Flann\n+# ==============================================================================\n+# - internal by default (flann),\n+# - external if FLANN_DIR_HINTS and a valid Flann setup is found\n+# ==============================================================================\n+FIND_PATH(FLANN_INCLUDE_DIRS flann.hpp ${FLANN_DIR_HINTS})",
        "path": "src/CMakeLists.txt",
        "position": null,
        "original_position": 124,
        "commit_id": "a20c1d51f2e4658169f529e814f3ed02f37a5d66",
        "original_commit_id": "3e46c98d73950afc4ed3024a9cfd48aa5e017ea2",
        "user": {
            "login": "cbalint13",
            "id": 3974360,
            "node_id": "MDQ6VXNlcjM5NzQzNjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3974360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cbalint13",
            "html_url": "https://github.com/cbalint13",
            "followers_url": "https://api.github.com/users/cbalint13/followers",
            "following_url": "https://api.github.com/users/cbalint13/following{/other_user}",
            "gists_url": "https://api.github.com/users/cbalint13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cbalint13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cbalint13/subscriptions",
            "organizations_url": "https://api.github.com/users/cbalint13/orgs",
            "repos_url": "https://api.github.com/users/cbalint13/repos",
            "events_url": "https://api.github.com/users/cbalint13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cbalint13/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@simogasp , @pmoulon \n- There is no native find_package() for clp, coinutils, osi, lemon, flann.\n- Yes LIBNAME_DIR_HINTS tell /hints where headers are. Here i could use additional PATH_SUFFIXES (that can lookup all standard system include paths too) but then i am afraid it will find _always_ find the header files, so better give it by _exact_ way or use internal one.\n- For the \".so\" FIND_LIBRARY() will found them by looking up all your standard  $LD_LIBRARY_PATH on the system. Yes he has \"clues\" so no need to specify an exact location for libs too. If libs are not in LD_LIBRARY_PATH than there is a terrible situation not only finding the libs but then using them by runtime.\n\n-----<<<---\n\nNow that these are more clear, let me further propose variants:\n1. Leave it just how is it now with find_library() & find_path() tandem.\n2. Do \"Find_packageX.cmake\" for each (will relay on proposal no1 indeed).\n3. Use special cmake's FindPkgConfig & Pkg_Check_Modules(Clp clp).\n\n-----<<<----\n- For No.3 proposal Clp, CoinUtils, Osi and Lemon seems to have the 'pkg-config' style thing. \n\n$ rpm -ql coin-or-Clp-devel | grep .pc\n/usr/lib64/pkgconfig/clp.pc\n/usr/lib64/pkgconfig/osi-clp.pc\n- Now, a lookup for such package would look like few lines:\n\n// require pkg-config tool.\nINCLUDE(FindPkgConfig REQUIRED)\n// search Clp\nIF(PKG_CONFIG_FOUND)\n    INCLUDE(FindPkgConfig)\n    PKG_CHECK_MODULES(Clp clp)\nENDIF()\n- After these lines ${CLP_INCLUDE_DIRS} #{CLP_LIBRARIES} are ready to consume.\n\nI'll vote No.3 if do not mind to bring additional pkg-config dependency here, and with this i believe we consumed all ideas, at least on my side.\n\nThanks !\n",
        "created_at": "2015-07-29T15:27:42Z",
        "updated_at": "2015-07-31T20:34:52Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/346#discussion_r35772839",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/346",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35772839"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/346#discussion_r35772839"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35778808",
        "pull_request_review_id": null,
        "id": 35778808,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Nzc4ODA4",
        "diff_hunk": "@@ -246,17 +230,151 @@ ADD_DEFINITIONS(-DEIGEN_MPL2_ONLY)\n # - external if CERES_DIR_HINTS and FIND_PACKAGE return a valid Ceres setup\n # ==============================================================================\n FIND_PACKAGE(Ceres QUIET HINTS ${CERES_DIR_HINTS})\n-IF(Ceres_FOUND)\n-   MESSAGE(\"CERES FOUND\")\n-ELSE()\n-  MESSAGE(\"CERES NOT FOUND\")\n+IF(NOT Ceres_FOUND)\n   SET(OpenMVG_USE_INTERNAL_CERES ON)\n   SET(CERES_INCLUDE_DIRS\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/include\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/internal/ceres/miniglog\n     ${PROJECT_BINARY_DIR}/third_party/ceres-solver/config)\n+    FILE(READ \"${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/VERSION\" CERES_CONFIG)\n+    STRING(REGEX REPLACE \"version ([0-9.]+).*\" \"\\\\1\" CERES_VERSION ${CERES_CONFIG})\n   SET(CERES_LIBRARIES ceres cxsparse)\n-ENDIF(Ceres_FOUND)\n+ENDIF()\n+\n+# ==============================================================================\n+# Flann\n+# ==============================================================================\n+# - internal by default (flann),\n+# - external if FLANN_DIR_HINTS and a valid Flann setup is found\n+# ==============================================================================\n+FIND_PATH(FLANN_INCLUDE_DIRS flann.hpp ${FLANN_DIR_HINTS})",
        "path": "src/CMakeLists.txt",
        "position": null,
        "original_position": 124,
        "commit_id": "a20c1d51f2e4658169f529e814f3ed02f37a5d66",
        "original_commit_id": "3e46c98d73950afc4ed3024a9cfd48aa5e017ea2",
        "user": {
            "login": "simogasp",
            "id": 1331744,
            "node_id": "MDQ6VXNlcjEzMzE3NDQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1331744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simogasp",
            "html_url": "https://github.com/simogasp",
            "followers_url": "https://api.github.com/users/simogasp/followers",
            "following_url": "https://api.github.com/users/simogasp/following{/other_user}",
            "gists_url": "https://api.github.com/users/simogasp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simogasp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simogasp/subscriptions",
            "organizations_url": "https://api.github.com/users/simogasp/orgs",
            "repos_url": "https://api.github.com/users/simogasp/repos",
            "events_url": "https://api.github.com/users/simogasp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simogasp/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@cbalint13 Thanks, I've learnt something new about `FIND_LIBRARY()` :-)\nI think 2) for the lib having some ''official'' `FindLibname.cmake` and 3) for the others should be fine. Or, at least, it makes sense to me :-)\n",
        "created_at": "2015-07-29T16:19:02Z",
        "updated_at": "2015-07-31T20:34:52Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/346#discussion_r35778808",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/346",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35778808"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/346#discussion_r35778808"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35780793",
        "pull_request_review_id": null,
        "id": 35780793,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzgwNzkz",
        "diff_hunk": "@@ -246,17 +230,151 @@ ADD_DEFINITIONS(-DEIGEN_MPL2_ONLY)\n # - external if CERES_DIR_HINTS and FIND_PACKAGE return a valid Ceres setup\n # ==============================================================================\n FIND_PACKAGE(Ceres QUIET HINTS ${CERES_DIR_HINTS})\n-IF(Ceres_FOUND)\n-   MESSAGE(\"CERES FOUND\")\n-ELSE()\n-  MESSAGE(\"CERES NOT FOUND\")\n+IF(NOT Ceres_FOUND)\n   SET(OpenMVG_USE_INTERNAL_CERES ON)\n   SET(CERES_INCLUDE_DIRS\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/include\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/internal/ceres/miniglog\n     ${PROJECT_BINARY_DIR}/third_party/ceres-solver/config)\n+    FILE(READ \"${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/VERSION\" CERES_CONFIG)\n+    STRING(REGEX REPLACE \"version ([0-9.]+).*\" \"\\\\1\" CERES_VERSION ${CERES_CONFIG})\n   SET(CERES_LIBRARIES ceres cxsparse)\n-ENDIF(Ceres_FOUND)\n+ENDIF()\n+\n+# ==============================================================================\n+# Flann\n+# ==============================================================================\n+# - internal by default (flann),\n+# - external if FLANN_DIR_HINTS and a valid Flann setup is found\n+# ==============================================================================\n+FIND_PATH(FLANN_INCLUDE_DIRS flann.hpp ${FLANN_DIR_HINTS})",
        "path": "src/CMakeLists.txt",
        "position": null,
        "original_position": 124,
        "commit_id": "a20c1d51f2e4658169f529e814f3ed02f37a5d66",
        "original_commit_id": "3e46c98d73950afc4ed3024a9cfd48aa5e017ea2",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think FLANN is exporting/installing also a .pc file.\nDo you know if FindPkgConfig is working directly on windows or if something have to be configured?\n",
        "created_at": "2015-07-29T16:35:11Z",
        "updated_at": "2015-07-31T20:34:52Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/346#discussion_r35780793",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35780793"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/346#discussion_r35780793"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35781642",
        "pull_request_review_id": null,
        "id": 35781642,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzgxNjQy",
        "diff_hunk": "@@ -246,17 +230,151 @@ ADD_DEFINITIONS(-DEIGEN_MPL2_ONLY)\n # - external if CERES_DIR_HINTS and FIND_PACKAGE return a valid Ceres setup\n # ==============================================================================\n FIND_PACKAGE(Ceres QUIET HINTS ${CERES_DIR_HINTS})\n-IF(Ceres_FOUND)\n-   MESSAGE(\"CERES FOUND\")\n-ELSE()\n-  MESSAGE(\"CERES NOT FOUND\")\n+IF(NOT Ceres_FOUND)\n   SET(OpenMVG_USE_INTERNAL_CERES ON)\n   SET(CERES_INCLUDE_DIRS\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/include\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/internal/ceres/miniglog\n     ${PROJECT_BINARY_DIR}/third_party/ceres-solver/config)\n+    FILE(READ \"${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/VERSION\" CERES_CONFIG)\n+    STRING(REGEX REPLACE \"version ([0-9.]+).*\" \"\\\\1\" CERES_VERSION ${CERES_CONFIG})\n   SET(CERES_LIBRARIES ceres cxsparse)\n-ENDIF(Ceres_FOUND)\n+ENDIF()\n+\n+# ==============================================================================\n+# Flann\n+# ==============================================================================\n+# - internal by default (flann),\n+# - external if FLANN_DIR_HINTS and a valid Flann setup is found\n+# ==============================================================================\n+FIND_PATH(FLANN_INCLUDE_DIRS flann.hpp ${FLANN_DIR_HINTS})",
        "path": "src/CMakeLists.txt",
        "position": null,
        "original_position": 124,
        "commit_id": "a20c1d51f2e4658169f529e814f3ed02f37a5d66",
        "original_commit_id": "3e46c98d73950afc4ed3024a9cfd48aa5e017ea2",
        "user": {
            "login": "cbalint13",
            "id": 3974360,
            "node_id": "MDQ6VXNlcjM5NzQzNjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3974360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cbalint13",
            "html_url": "https://github.com/cbalint13",
            "followers_url": "https://api.github.com/users/cbalint13/followers",
            "following_url": "https://api.github.com/users/cbalint13/following{/other_user}",
            "gists_url": "https://api.github.com/users/cbalint13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cbalint13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cbalint13/subscriptions",
            "organizations_url": "https://api.github.com/users/cbalint13/orgs",
            "repos_url": "https://api.github.com/users/cbalint13/repos",
            "events_url": "https://api.github.com/users/cbalint13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cbalint13/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@simogasp , @pmoulon \n\nI agree with Simone,\n- Lets have single FindLibname.cmake as an option for others (that does not have even pkg-config ways), perhaps a nice parametrizable & reusable generic one.\n- In our case of Clp, Osi, CoinUtils, Lemon and even for Flann as i've checked now all have official pkg-config handlers so we could exploit cmake internal pkg-config lookup routines.\n\nLets see Pierre what would do, if he agrees to i refactor this PR asap.\n",
        "created_at": "2015-07-29T16:42:56Z",
        "updated_at": "2015-07-31T20:34:52Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/346#discussion_r35781642",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/346",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35781642"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/346#discussion_r35781642"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35782600",
        "pull_request_review_id": null,
        "id": 35782600,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzgyNjAw",
        "diff_hunk": "@@ -246,17 +230,151 @@ ADD_DEFINITIONS(-DEIGEN_MPL2_ONLY)\n # - external if CERES_DIR_HINTS and FIND_PACKAGE return a valid Ceres setup\n # ==============================================================================\n FIND_PACKAGE(Ceres QUIET HINTS ${CERES_DIR_HINTS})\n-IF(Ceres_FOUND)\n-   MESSAGE(\"CERES FOUND\")\n-ELSE()\n-  MESSAGE(\"CERES NOT FOUND\")\n+IF(NOT Ceres_FOUND)\n   SET(OpenMVG_USE_INTERNAL_CERES ON)\n   SET(CERES_INCLUDE_DIRS\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/include\n     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/internal/ceres/miniglog\n     ${PROJECT_BINARY_DIR}/third_party/ceres-solver/config)\n+    FILE(READ \"${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/VERSION\" CERES_CONFIG)\n+    STRING(REGEX REPLACE \"version ([0-9.]+).*\" \"\\\\1\" CERES_VERSION ${CERES_CONFIG})\n   SET(CERES_LIBRARIES ceres cxsparse)\n-ENDIF(Ceres_FOUND)\n+ENDIF()\n+\n+# ==============================================================================\n+# Flann\n+# ==============================================================================\n+# - internal by default (flann),\n+# - external if FLANN_DIR_HINTS and a valid Flann setup is found\n+# ==============================================================================\n+FIND_PATH(FLANN_INCLUDE_DIRS flann.hpp ${FLANN_DIR_HINTS})",
        "path": "src/CMakeLists.txt",
        "position": null,
        "original_position": 124,
        "commit_id": "a20c1d51f2e4658169f529e814f3ed02f37a5d66",
        "original_commit_id": "3e46c98d73950afc4ed3024a9cfd48aa5e017ea2",
        "user": {
            "login": "pmoulon",
            "id": 3235050,
            "node_id": "MDQ6VXNlcjMyMzUwNTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3235050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmoulon",
            "html_url": "https://github.com/pmoulon",
            "followers_url": "https://api.github.com/users/pmoulon/followers",
            "following_url": "https://api.github.com/users/pmoulon/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmoulon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmoulon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmoulon/subscriptions",
            "organizations_url": "https://api.github.com/users/pmoulon/orgs",
            "repos_url": "https://api.github.com/users/pmoulon/repos",
            "events_url": "https://api.github.com/users/pmoulon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmoulon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's have FindX.cmake,\nI think it's more clean and it creates new FindX.cmake file that could be used by the community.\nThose cmake files can use FindPkgConfig or basic FIND_LIBRARY code (depending of the user needs).\nBTW, the VERSION number display for each 3rd party library was a really good idea.\n\nI don't know if Clp, Osi, CoinUtils should be merged in only one FINDX.cmake file or if we need check for the three and deal with perhaps a missing one...\n",
        "created_at": "2015-07-29T16:50:57Z",
        "updated_at": "2015-07-31T20:34:52Z",
        "html_url": "https://github.com/openMVG/openMVG/pull/346#discussion_r35782600",
        "pull_request_url": "https://api.github.com/repos/openMVG/openMVG/pulls/346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/comments/35782600"
            },
            "html": {
                "href": "https://github.com/openMVG/openMVG/pull/346#discussion_r35782600"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/openMVG/openMVG/pulls/346"
            }
        }
    }
]