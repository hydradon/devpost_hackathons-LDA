[
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/366159282",
        "pull_request_review_id": 342299617,
        "id": 366159282,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1OTI4Mg==",
        "diff_hunk": "@@ -0,0 +1,33 @@\n+#include \"block.hpp\"\n+\n+Bloock::Bloock(std::string prevHash, std::string seedHash, int64_t height) :",
        "path": "bookchain-miner/src/block.cpp",
        "position": null,
        "original_position": 3,
        "commit_id": "823da3341086b1542ff5cce472621027f7abe5ce",
        "original_commit_id": "5b59a92b5fda64a57c0858546181ed521de164fb",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Any particular reason for omitting the hash of the block itself?",
        "created_at": "2020-01-14T05:36:26Z",
        "updated_at": "2020-01-14T08:07:57Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/2#discussion_r366159282",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/366159282"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/2#discussion_r366159282"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/366164429",
        "pull_request_review_id": 342306054,
        "id": 366164429,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2NDQyOQ==",
        "diff_hunk": "@@ -0,0 +1,33 @@\n+#include \"block.hpp\"\n+\n+Bloock::Bloock(std::string prevHash, std::string seedHash, int64_t height) :",
        "path": "bookchain-miner/src/block.cpp",
        "position": null,
        "original_position": 3,
        "commit_id": "823da3341086b1542ff5cce472621027f7abe5ce",
        "original_commit_id": "5b59a92b5fda64a57c0858546181ed521de164fb",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If you add the hash of the block into the block the hash of the block will change, resulting in an infinite loop.\r\n\r\nI think it comes down to whether the hash is of the block object itself or the data arranged in such a way, and how we want to deal with that. I was thinking since we were in C++ the Bloock could be the actual storage as well. But it might also make sense to store it in a struct inside the class.\r\n\r\nActually yeah, I'll update it to look like that.",
        "created_at": "2020-01-14T06:03:41Z",
        "updated_at": "2020-01-14T08:07:57Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/2#discussion_r366164429",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/2",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/366164429"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/2#discussion_r366164429"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/2"
            }
        },
        "in_reply_to_id": 366159282
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/366172147",
        "pull_request_review_id": 342315885,
        "id": 366172147,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE3MjE0Nw==",
        "diff_hunk": "@@ -0,0 +1,33 @@\n+#include \"block.hpp\"\n+\n+Bloock::Bloock(std::string prevHash, std::string seedHash, int64_t height) :",
        "path": "bookchain-miner/src/block.cpp",
        "position": null,
        "original_position": 3,
        "commit_id": "823da3341086b1542ff5cce472621027f7abe5ce",
        "original_commit_id": "5b59a92b5fda64a57c0858546181ed521de164fb",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah I see what you mean.  Thought we might do it like how we did it in the hackathon where the hash of a block is hash(prevBlockHash+data+nonce) so the hash of a particular block is independent of itself.  Not sure what the convention is here though.",
        "created_at": "2020-01-14T06:40:48Z",
        "updated_at": "2020-01-14T08:07:57Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/2#discussion_r366172147",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/366172147"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/2#discussion_r366172147"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/2"
            }
        },
        "in_reply_to_id": 366159282
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/366177825",
        "pull_request_review_id": 342322827,
        "id": 366177825,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE3NzgyNQ==",
        "diff_hunk": "@@ -0,0 +1,33 @@\n+#include \"block.hpp\"\n+\n+Bloock::Bloock(std::string prevHash, std::string seedHash, int64_t height) :",
        "path": "bookchain-miner/src/block.cpp",
        "position": null,
        "original_position": 3,
        "commit_id": "823da3341086b1542ff5cce472621027f7abe5ce",
        "original_commit_id": "5b59a92b5fda64a57c0858546181ed521de164fb",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think we should take advantage of the fact that in C++ we can store it already packed, having to set up the block structure each time you want to hash will lead to bugs and code duplication I feel.\r\n\r\nI've updated it with a sub-block style thing that's kinda the best of both worlds.",
        "created_at": "2020-01-14T07:03:31Z",
        "updated_at": "2020-01-14T08:07:57Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/2#discussion_r366177825",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/2",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/366177825"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/2#discussion_r366177825"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/2"
            }
        },
        "in_reply_to_id": 366159282
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/366179157",
        "pull_request_review_id": 342324544,
        "id": 366179157,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE3OTE1Nw==",
        "diff_hunk": "@@ -0,0 +1,33 @@\n+#include \"block.hpp\"\n+\n+Bloock::Bloock(std::string prevHash, std::string seedHash, int64_t height) :",
        "path": "bookchain-miner/src/block.cpp",
        "position": null,
        "original_position": 3,
        "commit_id": "823da3341086b1542ff5cce472621027f7abe5ce",
        "original_commit_id": "5b59a92b5fda64a57c0858546181ed521de164fb",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ya that makes sense, sounds good \ud83d\udc4d ",
        "created_at": "2020-01-14T07:08:54Z",
        "updated_at": "2020-01-14T08:07:57Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/2#discussion_r366179157",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/366179157"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/2#discussion_r366179157"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/2"
            }
        },
        "in_reply_to_id": 366159282
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/368408394",
        "pull_request_review_id": 345128199,
        "id": 368408394,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQwODM5NA==",
        "diff_hunk": "@@ -0,0 +1,50 @@\n+#include \"block.hpp\"\n+#include \"utils.hpp\"\n+#include <fstream>\n+#include <iostream>\n+#include <vector>\n+\n+namespace bookchain {\n+\n+void saveChain(std::vector<Bloock> bloockChain, std::string filename) {\n+    std::ofstream blockchainFile(filename, std::ios::out | std::ios::binary);\n+\n+    for (size_t i = 0; i < bloockChain.size(); ++i) {\n+        blockchainFile.write(reinterpret_cast<char*>(&bloockChain[i]), sizeof(bloockChain[i]));\n+    }\n+\n+    blockchainFile.close();\n+}\n+\n+std::vector<Bloock> getFullChain(std::string filename) {\n+    std::ifstream blockchainFile(filename, std::ios::in | std::ios::binary);\n+    std::vector<Bloock> bloockChain;\n+\n+    if (blockchainFile.fail()) {\n+        std::cout << \"This is the darkest timeline\" << std::endl;\n+    }\n+    blockchainFile.seekg(0);\n+\n+    Bloock bloock = {};\n+    while (blockchainFile.read(reinterpret_cast<char*>(&bloock), sizeof(bloock))) {\n+        bloockChain.push_back(bloock);\n+    }\n+\n+    return bloockChain;\n+}\n+\n+// std::vector<Bloock> getBlockByHeight(std::string filename) {",
        "path": "bookchain-miner/src/storage.cpp",
        "position": null,
        "original_position": 36,
        "commit_id": "0de0e4daf70ee6ba452e2d2601fe9b99272eeb34",
        "original_commit_id": "2cdb59d4c6ad1f2747dfc77043c7e016bba72aed",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Function name doesn't match what the code is doing unless I'm missing something.  Also seems a bit odd to return a vector for getting a block by height.\r\n\r\nMaybe this was meant to be removed since it's commented out or function name wasn't changed?",
        "created_at": "2020-01-20T08:01:40Z",
        "updated_at": "2020-01-20T18:17:58Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/4#discussion_r368408394",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/4",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/368408394"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/4#discussion_r368408394"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/368409123",
        "pull_request_review_id": 345129241,
        "id": 368409123,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQwOTEyMw==",
        "diff_hunk": "@@ -1,20 +1,29 @@\n #pragma once\n #include <string>\n \n-constexpr size_t kilobyte = 1 * 1024;\n+constexpr size_t hashLength = 20;\n+constexpr size_t hashBufferLength = hashLength + 1;  // Saving room for the null byte\n+constexpr size_t megabyte = 1 * 1024 * 1024;",
        "path": "bookchain-miner/src/block.hpp",
        "position": 7,
        "original_position": 7,
        "commit_id": "0de0e4daf70ee6ba452e2d2601fe9b99272eeb34",
        "original_commit_id": "2cdb59d4c6ad1f2747dfc77043c7e016bba72aed",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For my own education can you explain what the `1 *` is for?",
        "created_at": "2020-01-20T08:04:08Z",
        "updated_at": "2020-01-20T18:17:58Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/4#discussion_r368409123",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/4",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/368409123"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/4#discussion_r368409123"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/368676502",
        "pull_request_review_id": 345472165,
        "id": 368676502,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3NjUwMg==",
        "diff_hunk": "@@ -0,0 +1,50 @@\n+#include \"block.hpp\"\n+#include \"utils.hpp\"\n+#include <fstream>\n+#include <iostream>\n+#include <vector>\n+\n+namespace bookchain {\n+\n+void saveChain(std::vector<Bloock> bloockChain, std::string filename) {\n+    std::ofstream blockchainFile(filename, std::ios::out | std::ios::binary);\n+\n+    for (size_t i = 0; i < bloockChain.size(); ++i) {\n+        blockchainFile.write(reinterpret_cast<char*>(&bloockChain[i]), sizeof(bloockChain[i]));\n+    }\n+\n+    blockchainFile.close();\n+}\n+\n+std::vector<Bloock> getFullChain(std::string filename) {\n+    std::ifstream blockchainFile(filename, std::ios::in | std::ios::binary);\n+    std::vector<Bloock> bloockChain;\n+\n+    if (blockchainFile.fail()) {\n+        std::cout << \"This is the darkest timeline\" << std::endl;\n+    }\n+    blockchainFile.seekg(0);\n+\n+    Bloock bloock = {};\n+    while (blockchainFile.read(reinterpret_cast<char*>(&bloock), sizeof(bloock))) {\n+        bloockChain.push_back(bloock);\n+    }\n+\n+    return bloockChain;\n+}\n+\n+// std::vector<Bloock> getBlockByHeight(std::string filename) {",
        "path": "bookchain-miner/src/storage.cpp",
        "position": null,
        "original_position": 36,
        "commit_id": "0de0e4daf70ee6ba452e2d2601fe9b99272eeb34",
        "original_commit_id": "2cdb59d4c6ad1f2747dfc77043c7e016bba72aed",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh yeah, it was meant to be removed, my bad. Fixed.",
        "created_at": "2020-01-20T18:14:01Z",
        "updated_at": "2020-01-20T18:17:58Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/4#discussion_r368676502",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/4",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/368676502"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/4#discussion_r368676502"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/4"
            }
        },
        "in_reply_to_id": 368408394
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/368677323",
        "pull_request_review_id": 345473145,
        "id": 368677323,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3NzMyMw==",
        "diff_hunk": "@@ -1,20 +1,29 @@\n #pragma once\n #include <string>\n \n-constexpr size_t kilobyte = 1 * 1024;\n+constexpr size_t hashLength = 20;\n+constexpr size_t hashBufferLength = hashLength + 1;  // Saving room for the null byte\n+constexpr size_t megabyte = 1 * 1024 * 1024;",
        "path": "bookchain-miner/src/block.hpp",
        "position": 7,
        "original_position": 7,
        "commit_id": "0de0e4daf70ee6ba452e2d2601fe9b99272eeb34",
        "original_commit_id": "2cdb59d4c6ad1f2747dfc77043c7e016bba72aed",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For human reference lol. In my mind it's easier to do the math and slightly more explicit to label the byte there to get the full megabyte.\r\n1 byte * 1024 = kilobyte;\r\nkilobyte * 1024 = megabyte",
        "created_at": "2020-01-20T18:16:54Z",
        "updated_at": "2020-01-20T18:17:58Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/4#discussion_r368677323",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/4",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/368677323"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/4#discussion_r368677323"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/4"
            }
        },
        "in_reply_to_id": 368409123
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/373837317",
        "pull_request_review_id": 351934373,
        "id": 373837317,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgzNzMxNw==",
        "diff_hunk": "@@ -13,32 +13,36 @@ else()\n endif()\n \n \n-# JSON library dependency\n+# NLohmann JSON dependency\n set( JSON_BuildTests OFF CACHE INTERNAL \"\" )\n set( JSON_Install OFF CACHE INTERNAL \"\" )\n add_subdirectory( thirdparty/nlohmann_json )\n \n \n+# Oat++ Dependency\n+find_package( oatpp 1.0.0 REQUIRED )",
        "path": "bookchain-miner/CMakeLists.txt",
        "position": null,
        "original_position": 12,
        "commit_id": "7f085b15eb830dd391ff75de79e5a8817aba8bcf",
        "original_commit_id": "b6d7c6875b33be384321fb16e25bf9de2231e7fb",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "[Looks like](https://lgtm.com/projects/g/ErisMik/BookChain/logs/rev/pr-d2db788552cae16abbfdf24ef219eff46bf6a295/lang:cpp/stage:Build%20merge_8035873adf1efff8230ef070bdcb2c5547ac4e69) you may need to specify a Findoatpp.cmake so CMake can find an oat config.\r\n\r\nLooks like it is failing on finding an oat config \"oatppConfig.cmake\" or \"oatpp-config.cmake\" in the build.",
        "created_at": "2020-02-02T11:11:50Z",
        "updated_at": "2020-02-03T21:54:03Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/7#discussion_r373837317",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/7",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/373837317"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/7#discussion_r373837317"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/373873269",
        "pull_request_review_id": 351965811,
        "id": 373873269,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg3MzI2OQ==",
        "diff_hunk": "@@ -13,32 +13,36 @@ else()\n endif()\n \n \n-# JSON library dependency\n+# NLohmann JSON dependency\n set( JSON_BuildTests OFF CACHE INTERNAL \"\" )\n set( JSON_Install OFF CACHE INTERNAL \"\" )\n add_subdirectory( thirdparty/nlohmann_json )\n \n \n+# Oat++ Dependency\n+find_package( oatpp 1.0.0 REQUIRED )",
        "path": "bookchain-miner/CMakeLists.txt",
        "position": null,
        "original_position": 12,
        "commit_id": "7f085b15eb830dd391ff75de79e5a8817aba8bcf",
        "original_commit_id": "b6d7c6875b33be384321fb16e25bf9de2231e7fb",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think the issue is not the the find-config is missing but that LGTM can't install the package and then cmake fails to find it (and gives that error message)\r\n\r\nI need to add a LGTM conf file that will install the deps for us",
        "created_at": "2020-02-02T20:38:58Z",
        "updated_at": "2020-02-03T21:54:03Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/7#discussion_r373873269",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/7",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/373873269"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/7#discussion_r373873269"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/7"
            }
        },
        "in_reply_to_id": 373837317
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/374347113",
        "pull_request_review_id": 352570572,
        "id": 374347113,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM0NzExMw==",
        "diff_hunk": "@@ -13,32 +13,36 @@ else()\n endif()\n \n \n-# JSON library dependency\n+# NLohmann JSON dependency\n set( JSON_BuildTests OFF CACHE INTERNAL \"\" )\n set( JSON_Install OFF CACHE INTERNAL \"\" )\n add_subdirectory( thirdparty/nlohmann_json )\n \n \n+# Oat++ Dependency\n+find_package( oatpp 1.0.0 REQUIRED )",
        "path": "bookchain-miner/CMakeLists.txt",
        "position": null,
        "original_position": 12,
        "commit_id": "7f085b15eb830dd391ff75de79e5a8817aba8bcf",
        "original_commit_id": "b6d7c6875b33be384321fb16e25bf9de2231e7fb",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Alright, I've updated the CMAKE to pull in oatpp and build it if it can't find it.\r\nThis needed a newer version of CMAKE which is not in our docker base image, so cmake needs to be built from scratch.\r\nSo now builds from scratch now take AGES but \u00af\\\\\\_(\u30c4)\\_/\u00af",
        "created_at": "2020-02-03T21:20:43Z",
        "updated_at": "2020-02-03T21:54:03Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/7#discussion_r374347113",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/7",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/374347113"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/7#discussion_r374347113"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/7"
            }
        },
        "in_reply_to_id": 373837317
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375491782",
        "pull_request_review_id": 354019847,
        "id": 375491782,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ5MTc4Mg==",
        "diff_hunk": "@@ -9,27 +8,14 @@ namespace bookchain::http {\n /* Begin DTO code-generation */\n #include OATPP_CODEGEN_BEGIN(DTO)\n \n-class BasicMessageDto : public oatpp::data::mapping::type::Object {\n-    DTO_INIT(BasicMessageDto, Object)\n+class HelloMessageDto : public oatpp::data::mapping::type::Object {\n+    DTO_INIT(HelloMessageDto, Object)\n \n-    DTO_FIELD(Int32, statusCode);\n-    DTO_FIELD(String, message);\n-};\n-\n-class BlockDto : public oatpp::data::mapping::type::Object {",
        "path": "bookchain-miner/src/http/dtos/dtos.hpp",
        "position": 20,
        "original_position": 20,
        "commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "original_commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do we even need this file now that this is moved to blockdtos.hpp?",
        "created_at": "2020-02-05T20:31:27Z",
        "updated_at": "2020-02-05T20:31:27Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375491782",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/8",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375491782"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375491782"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375494195",
        "pull_request_review_id": 354022982,
        "id": 375494195,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ5NDE5NQ==",
        "diff_hunk": "@@ -0,0 +1,27 @@\n+#pragma once\n+\n+#include <oatpp/core/macro/codegen.hpp>\n+#include <oatpp/parser/json/mapping/ObjectMapper.hpp>\n+\n+namespace bookchain::http {\n+\n+/* Begin DTO code-generation */\n+#include OATPP_CODEGEN_BEGIN(DTO)\n+\n+class PeerLinkDto : public oatpp::data::mapping::type::Object {",
        "path": "bookchain-miner/src/http/dtos/peerdtos.hpp",
        "position": 11,
        "original_position": 11,
        "commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "original_commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you explain the logic behind separating peers into 2 separate DTOs?",
        "created_at": "2020-02-05T20:36:47Z",
        "updated_at": "2020-02-05T20:36:47Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375494195",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/8",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375494195"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375494195"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375497827",
        "pull_request_review_id": 354027682,
        "id": 375497827,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ5NzgyNw==",
        "diff_hunk": "@@ -43,5 +46,35 @@ int main(int /*argc*/, const char* /*argv*/[]) {\n     std::cout << bookchain::utils::hexifystring(fifthBlock.blockHash()) << std::endl;\n     std::cout << bookchain::utils::hexifystring(bloockchain.bloock(testBlockHeight).blockHash()) << std::endl;\n \n-    bookchain::http::startMinerHttpServer();\n+    std::cout << \"Miner thread stopped\" << std::endl;\n+\n+    std::cout << \"Looping!\" << std::endl;\n+    bookchain::PeersList peersList;\n+    while (true) {",
        "path": "bookchain-miner/src/main.cpp",
        "position": 39,
        "original_position": 39,
        "commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "original_commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For now this is just testing and peering would be in a separate thread from the miner (probably the Node thread) correct?",
        "created_at": "2020-02-05T20:45:02Z",
        "updated_at": "2020-02-05T20:45:02Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375497827",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/8",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375497827"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375497827"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375499634",
        "pull_request_review_id": 354029989,
        "id": 375499634,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ5OTYzNA==",
        "diff_hunk": "@@ -0,0 +1,45 @@\n+#pragma once\n+\n+#include <memory>\n+#include <mutex>\n+#include <queue>\n+\n+namespace bookchain {\n+\n+template <typename T>\n+class ThreadsafeQueue {\n+public:\n+    void push(T& element);\n+    T pop();\n+\n+    bool empty();\n+\n+private:\n+    std::queue<T> _queue;\n+    std::mutex _queueMutex;\n+};\n+\n+template <typename T>\n+using sharedTSQueue = std::shared_ptr<ThreadsafeQueue<T>>;\n+\n+template <typename T>\n+void ThreadsafeQueue<T>::push(T& element) {\n+    std::lock_guard<std::mutex> guard(this->_queueMutex);",
        "path": "bookchain-miner/src/queue.hpp",
        "position": 27,
        "original_position": 27,
        "commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "original_commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Til you don't need to manually release mutexes in c++ :+1:\r\n\r\nThis language is so different in industry vs academics lol",
        "created_at": "2020-02-05T20:49:03Z",
        "updated_at": "2020-02-05T20:49:03Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375499634",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/8",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375499634"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375499634"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375501406",
        "pull_request_review_id": 354032157,
        "id": 375501406,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwMTQwNg==",
        "diff_hunk": "@@ -18,7 +18,7 @@ void purgeChain(const std::string& filename) {\n     blockchainFile.close();\n }\n \n-void dumpChain(std::vector<Bloock> bloockChain, const std::string& filename) {\n+void dumpChain(std::vector<Bloock>& bloockChain, const std::string& filename) {",
        "path": "bookchain-miner/src/storage.cpp",
        "position": 5,
        "original_position": 5,
        "commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "original_commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "user": {
            "login": "MuchToKnow",
            "id": 10458306,
            "node_id": "MDQ6VXNlcjEwNDU4MzA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10458306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MuchToKnow",
            "html_url": "https://github.com/MuchToKnow",
            "followers_url": "https://api.github.com/users/MuchToKnow/followers",
            "following_url": "https://api.github.com/users/MuchToKnow/following{/other_user}",
            "gists_url": "https://api.github.com/users/MuchToKnow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MuchToKnow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MuchToKnow/subscriptions",
            "organizations_url": "https://api.github.com/users/MuchToKnow/orgs",
            "repos_url": "https://api.github.com/users/MuchToKnow/repos",
            "events_url": "https://api.github.com/users/MuchToKnow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MuchToKnow/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do we need a function to load a blockchain from file?",
        "created_at": "2020-02-05T20:52:51Z",
        "updated_at": "2020-02-05T20:52:51Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375501406",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/8",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375501406"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375501406"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375507109",
        "pull_request_review_id": 354039456,
        "id": 375507109,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwNzEwOQ==",
        "diff_hunk": "@@ -9,27 +8,14 @@ namespace bookchain::http {\n /* Begin DTO code-generation */\n #include OATPP_CODEGEN_BEGIN(DTO)\n \n-class BasicMessageDto : public oatpp::data::mapping::type::Object {\n-    DTO_INIT(BasicMessageDto, Object)\n+class HelloMessageDto : public oatpp::data::mapping::type::Object {\n+    DTO_INIT(HelloMessageDto, Object)\n \n-    DTO_FIELD(Int32, statusCode);\n-    DTO_FIELD(String, message);\n-};\n-\n-class BlockDto : public oatpp::data::mapping::type::Object {",
        "path": "bookchain-miner/src/http/dtos/dtos.hpp",
        "position": 20,
        "original_position": 20,
        "commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "original_commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I was keeping it for the general dtos, I have a feeling we will have things to put here. Also good for testing for now.",
        "created_at": "2020-02-05T21:05:18Z",
        "updated_at": "2020-02-05T21:05:18Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375507109",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/8",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375507109"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375507109"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/8"
            }
        },
        "in_reply_to_id": 375491782
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375507923",
        "pull_request_review_id": 354040511,
        "id": 375507923,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwNzkyMw==",
        "diff_hunk": "@@ -0,0 +1,27 @@\n+#pragma once\n+\n+#include <oatpp/core/macro/codegen.hpp>\n+#include <oatpp/parser/json/mapping/ObjectMapper.hpp>\n+\n+namespace bookchain::http {\n+\n+/* Begin DTO code-generation */\n+#include OATPP_CODEGEN_BEGIN(DTO)\n+\n+class PeerLinkDto : public oatpp::data::mapping::type::Object {",
        "path": "bookchain-miner/src/http/dtos/peerdtos.hpp",
        "position": 11,
        "original_position": 11,
        "commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "original_commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "One is for linking one is the actual data. So the PeerLinkDto will be used to syncing up /linking two nodes, whereas the PeerDto represents an actual peer object and is used to transmit peer data (for the whole peers list)",
        "created_at": "2020-02-05T21:07:04Z",
        "updated_at": "2020-02-05T21:07:04Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375507923",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/8",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375507923"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375507923"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/8"
            }
        },
        "in_reply_to_id": 375494195
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375508213",
        "pull_request_review_id": 354040909,
        "id": 375508213,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwODIxMw==",
        "diff_hunk": "@@ -43,5 +46,35 @@ int main(int /*argc*/, const char* /*argv*/[]) {\n     std::cout << bookchain::utils::hexifystring(fifthBlock.blockHash()) << std::endl;\n     std::cout << bookchain::utils::hexifystring(bloockchain.bloock(testBlockHeight).blockHash()) << std::endl;\n \n-    bookchain::http::startMinerHttpServer();\n+    std::cout << \"Miner thread stopped\" << std::endl;\n+\n+    std::cout << \"Looping!\" << std::endl;\n+    bookchain::PeersList peersList;\n+    while (true) {",
        "path": "bookchain-miner/src/main.cpp",
        "position": 39,
        "original_position": 39,
        "commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "original_commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Absolutely! This is literally just a smoke test function right now.",
        "created_at": "2020-02-05T21:07:44Z",
        "updated_at": "2020-02-05T21:07:45Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375508213",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/8",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375508213"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375508213"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/8"
            }
        },
        "in_reply_to_id": 375497827
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375508886",
        "pull_request_review_id": 354041796,
        "id": 375508886,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwODg4Ng==",
        "diff_hunk": "@@ -0,0 +1,45 @@\n+#pragma once\n+\n+#include <memory>\n+#include <mutex>\n+#include <queue>\n+\n+namespace bookchain {\n+\n+template <typename T>\n+class ThreadsafeQueue {\n+public:\n+    void push(T& element);\n+    T pop();\n+\n+    bool empty();\n+\n+private:\n+    std::queue<T> _queue;\n+    std::mutex _queueMutex;\n+};\n+\n+template <typename T>\n+using sharedTSQueue = std::shared_ptr<ThreadsafeQueue<T>>;\n+\n+template <typename T>\n+void ThreadsafeQueue<T>::push(T& element) {\n+    std::lock_guard<std::mutex> guard(this->_queueMutex);",
        "path": "bookchain-miner/src/queue.hpp",
        "position": 27,
        "original_position": 27,
        "commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "original_commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it's cause in academics they typically use C or like C style C++. Once you start to actual use the modern C++ features that separate it from C things become much nicer.",
        "created_at": "2020-02-05T21:09:16Z",
        "updated_at": "2020-02-05T21:09:17Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375508886",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/8",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375508886"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375508886"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/8"
            }
        },
        "in_reply_to_id": 375499634
    },
    {
        "url": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375509285",
        "pull_request_review_id": 354042290,
        "id": 375509285,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwOTI4NQ==",
        "diff_hunk": "@@ -18,7 +18,7 @@ void purgeChain(const std::string& filename) {\n     blockchainFile.close();\n }\n \n-void dumpChain(std::vector<Bloock> bloockChain, const std::string& filename) {\n+void dumpChain(std::vector<Bloock>& bloockChain, const std::string& filename) {",
        "path": "bookchain-miner/src/storage.cpp",
        "position": 5,
        "original_position": 5,
        "commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "original_commit_id": "8354ed06cedc11bb562f181bd3a3b836ab3f2217",
        "user": {
            "login": "ErisMik",
            "id": 7675918,
            "node_id": "MDQ6VXNlcjc2NzU5MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7675918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ErisMik",
            "html_url": "https://github.com/ErisMik",
            "followers_url": "https://api.github.com/users/ErisMik/followers",
            "following_url": "https://api.github.com/users/ErisMik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErisMik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ErisMik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErisMik/subscriptions",
            "organizations_url": "https://api.github.com/users/ErisMik/orgs",
            "repos_url": "https://api.github.com/users/ErisMik/repos",
            "events_url": "https://api.github.com/users/ErisMik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ErisMik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We might, and it's already in there: `std::vector<Bloock> getChain(const std::string& filename)`",
        "created_at": "2020-02-05T21:10:14Z",
        "updated_at": "2020-02-05T21:10:19Z",
        "html_url": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375509285",
        "pull_request_url": "https://api.github.com/repos/ErisMik/BookChain/pulls/8",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/comments/375509285"
            },
            "html": {
                "href": "https://github.com/ErisMik/BookChain/pull/8#discussion_r375509285"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/ErisMik/BookChain/pulls/8"
            }
        },
        "in_reply_to_id": 375501406
    }
]