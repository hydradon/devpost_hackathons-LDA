[
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/169199279",
        "pull_request_review_id": 97687053,
        "id": 169199279,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTE5OTI3OQ==",
        "diff_hunk": "@@ -0,0 +1,80 @@\n+from pyXain import pyXain\n+import os\n+\n+class TestPyXain(object):\n+    \"\"\"Test class for pyXain, run using pytest\"\"\"\n+\n+    def test_init(self):\n+        pyx = pyXain()\n+        assert(True)",
        "path": "node_client/pyXain/test/test_pyXain.py",
        "position": null,
        "original_position": 9,
        "commit_id": "0916e3321bd5382a463bd0991252cffff164e750",
        "original_commit_id": "daa5d9eb87443bf6647f7629296d11401742dd05",
        "user": {
            "login": "SaulAryehKohn",
            "id": 7569274,
            "node_id": "MDQ6VXNlcjc1NjkyNzQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7569274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SaulAryehKohn",
            "html_url": "https://github.com/SaulAryehKohn",
            "followers_url": "https://api.github.com/users/SaulAryehKohn/followers",
            "following_url": "https://api.github.com/users/SaulAryehKohn/following{/other_user}",
            "gists_url": "https://api.github.com/users/SaulAryehKohn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SaulAryehKohn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SaulAryehKohn/subscriptions",
            "organizations_url": "https://api.github.com/users/SaulAryehKohn/orgs",
            "repos_url": "https://api.github.com/users/SaulAryehKohn/repos",
            "events_url": "https://api.github.com/users/SaulAryehKohn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SaulAryehKohn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This sort of  `assert` isn't needed -- if it's gonna error, it'll error.",
        "created_at": "2018-02-20T01:18:45Z",
        "updated_at": "2018-02-20T01:31:32Z",
        "html_url": "https://github.com/arXain/arXain/pull/22#discussion_r169199279",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/22",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/169199279"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/22#discussion_r169199279"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/22"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/169199389",
        "pull_request_review_id": 97687053,
        "id": 169199389,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTE5OTM4OQ==",
        "diff_hunk": "@@ -0,0 +1,80 @@\n+from pyXain import pyXain\n+import os\n+\n+class TestPyXain(object):\n+    \"\"\"Test class for pyXain, run using pytest\"\"\"\n+\n+    def test_init(self):\n+        pyx = pyXain()\n+        assert(True)\n+\n+    def test_init_arxain(self):\n+        pyx = pyXain()\n+        results = pyx.init_arxain()\n+\n+        assert(results['Success'] == True)\n+\n+    def test_init_author(self):\n+        pyx = pyXain()\n+        result = pyx.init_author('test_author')\n+\n+        assert(result['Success'] == True)\n+\n+    def test_submit_manuscript(self):\n+        pyx = pyXain()\n+\n+        # Get the test pdf in the folder\n+        curr_dir = os.path.dirname(os.path.abspath(__file__))\n+        result = pyx.submit_manuscript('test_author', 'test_paper', os.path.join(curr_dir, 'test-paper'))\n+\n+        assert(result['Success'] == True)\n+\n+    def test_submit_revision(self):\n+        pyx = pyXain()\n+\n+        # Get the test pdf in the folder\n+        curr_dir = os.path.dirname(os.path.abspath(__file__))\n+        result = pyx.submit_revision('test_author', 'test_paper', os.path.join(curr_dir, 'test-paper'))\n+\n+        assert(result['Success'] == True)\n+\n+    def test_submit_comment(self):\n+        pyx = pyXain()\n+\n+        # Get the test pdf in the folder\n+        curr_dir = os.path.dirname(os.path.abspath(__file__))\n+        result = pyx.submit_comment('test_author', 'test_paper', os.path.join(curr_dir, 'test-comment'))\n+\n+        assert(result['Success'] == True)\n+\n+    def test_check_author_valid(self):\n+        pyx = pyXain()\n+\n+        # Check a valid author\n+        result_valid = pyx.check_author('test_author')\n+\n+        assert(result_valid['Success'] == True)\n+\n+    def test_check_author_invalid(self):\n+        pyx = pyXain()\n+\n+        # Check an invalid author\n+        result_false = pyx.check_author('NotAnAuthor!')\n+\n+        assert(result_false['Success'] == False)",
        "path": "node_client/pyXain/test/test_pyXain.py",
        "position": null,
        "original_position": 64,
        "commit_id": "0916e3321bd5382a463bd0991252cffff164e750",
        "original_commit_id": "daa5d9eb87443bf6647f7629296d11401742dd05",
        "user": {
            "login": "SaulAryehKohn",
            "id": 7569274,
            "node_id": "MDQ6VXNlcjc1NjkyNzQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7569274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SaulAryehKohn",
            "html_url": "https://github.com/SaulAryehKohn",
            "followers_url": "https://api.github.com/users/SaulAryehKohn/followers",
            "following_url": "https://api.github.com/users/SaulAryehKohn/following{/other_user}",
            "gists_url": "https://api.github.com/users/SaulAryehKohn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SaulAryehKohn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SaulAryehKohn/subscriptions",
            "organizations_url": "https://api.github.com/users/SaulAryehKohn/orgs",
            "repos_url": "https://api.github.com/users/SaulAryehKohn/repos",
            "events_url": "https://api.github.com/users/SaulAryehKohn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SaulAryehKohn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "took me a second to do an \"Oh, I get it\". One line comment for the logic here?",
        "created_at": "2018-02-20T01:20:05Z",
        "updated_at": "2018-02-20T01:31:32Z",
        "html_url": "https://github.com/arXain/arXain/pull/22#discussion_r169199389",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/22",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/169199389"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/22#discussion_r169199389"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/22"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/169199620",
        "pull_request_review_id": 97687053,
        "id": 169199620,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTE5OTYyMA==",
        "diff_hunk": "@@ -0,0 +1,80 @@\n+from pyXain import pyXain\n+import os\n+",
        "path": "node_client/pyXain/test/test_pyXain.py",
        "position": 3,
        "original_position": 3,
        "commit_id": "0916e3321bd5382a463bd0991252cffff164e750",
        "original_commit_id": "daa5d9eb87443bf6647f7629296d11401742dd05",
        "user": {
            "login": "SaulAryehKohn",
            "id": 7569274,
            "node_id": "MDQ6VXNlcjc1NjkyNzQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7569274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SaulAryehKohn",
            "html_url": "https://github.com/SaulAryehKohn",
            "followers_url": "https://api.github.com/users/SaulAryehKohn/followers",
            "following_url": "https://api.github.com/users/SaulAryehKohn/following{/other_user}",
            "gists_url": "https://api.github.com/users/SaulAryehKohn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SaulAryehKohn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SaulAryehKohn/subscriptions",
            "organizations_url": "https://api.github.com/users/SaulAryehKohn/orgs",
            "repos_url": "https://api.github.com/users/SaulAryehKohn/repos",
            "events_url": "https://api.github.com/users/SaulAryehKohn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SaulAryehKohn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "getting `TestPyXain` to inherit from `unittest.TestCase` enables some more functionality like `self.assertTrue(result)`, but that can be addressed in a future PR.",
        "created_at": "2018-02-20T01:22:31Z",
        "updated_at": "2018-02-20T01:31:32Z",
        "html_url": "https://github.com/arXain/arXain/pull/22#discussion_r169199620",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/22",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/169199620"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/22#discussion_r169199620"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/22"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/169200506",
        "pull_request_review_id": 97688391,
        "id": 169200506,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTIwMDUwNg==",
        "diff_hunk": "@@ -0,0 +1,80 @@\n+from pyXain import pyXain\n+import os\n+\n+class TestPyXain(object):\n+    \"\"\"Test class for pyXain, run using pytest\"\"\"\n+\n+    def test_init(self):\n+        pyx = pyXain()\n+        assert(True)",
        "path": "node_client/pyXain/test/test_pyXain.py",
        "position": null,
        "original_position": 9,
        "commit_id": "0916e3321bd5382a463bd0991252cffff164e750",
        "original_commit_id": "daa5d9eb87443bf6647f7629296d11401742dd05",
        "user": {
            "login": "david-hopper",
            "id": 5224068,
            "node_id": "MDQ6VXNlcjUyMjQwNjg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5224068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david-hopper",
            "html_url": "https://github.com/david-hopper",
            "followers_url": "https://api.github.com/users/david-hopper/followers",
            "following_url": "https://api.github.com/users/david-hopper/following{/other_user}",
            "gists_url": "https://api.github.com/users/david-hopper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david-hopper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david-hopper/subscriptions",
            "organizations_url": "https://api.github.com/users/david-hopper/orgs",
            "repos_url": "https://api.github.com/users/david-hopper/repos",
            "events_url": "https://api.github.com/users/david-hopper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david-hopper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Gotcha, I switched it and added a comment outlining this is testing the class construction.",
        "created_at": "2018-02-20T01:32:28Z",
        "updated_at": "2018-02-20T01:32:28Z",
        "html_url": "https://github.com/arXain/arXain/pull/22#discussion_r169200506",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/22",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/169200506"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/22#discussion_r169200506"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/22"
            }
        },
        "in_reply_to_id": 169199279
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/169200556",
        "pull_request_review_id": 97688448,
        "id": 169200556,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTIwMDU1Ng==",
        "diff_hunk": "@@ -0,0 +1,80 @@\n+from pyXain import pyXain\n+import os\n+\n+class TestPyXain(object):\n+    \"\"\"Test class for pyXain, run using pytest\"\"\"\n+\n+    def test_init(self):\n+        pyx = pyXain()\n+        assert(True)\n+\n+    def test_init_arxain(self):\n+        pyx = pyXain()\n+        results = pyx.init_arxain()\n+\n+        assert(results['Success'] == True)\n+\n+    def test_init_author(self):\n+        pyx = pyXain()\n+        result = pyx.init_author('test_author')\n+\n+        assert(result['Success'] == True)\n+\n+    def test_submit_manuscript(self):\n+        pyx = pyXain()\n+\n+        # Get the test pdf in the folder\n+        curr_dir = os.path.dirname(os.path.abspath(__file__))\n+        result = pyx.submit_manuscript('test_author', 'test_paper', os.path.join(curr_dir, 'test-paper'))\n+\n+        assert(result['Success'] == True)\n+\n+    def test_submit_revision(self):\n+        pyx = pyXain()\n+\n+        # Get the test pdf in the folder\n+        curr_dir = os.path.dirname(os.path.abspath(__file__))\n+        result = pyx.submit_revision('test_author', 'test_paper', os.path.join(curr_dir, 'test-paper'))\n+\n+        assert(result['Success'] == True)\n+\n+    def test_submit_comment(self):\n+        pyx = pyXain()\n+\n+        # Get the test pdf in the folder\n+        curr_dir = os.path.dirname(os.path.abspath(__file__))\n+        result = pyx.submit_comment('test_author', 'test_paper', os.path.join(curr_dir, 'test-comment'))\n+\n+        assert(result['Success'] == True)\n+\n+    def test_check_author_valid(self):\n+        pyx = pyXain()\n+\n+        # Check a valid author\n+        result_valid = pyx.check_author('test_author')\n+\n+        assert(result_valid['Success'] == True)\n+\n+    def test_check_author_invalid(self):\n+        pyx = pyXain()\n+\n+        # Check an invalid author\n+        result_false = pyx.check_author('NotAnAuthor!')\n+\n+        assert(result_false['Success'] == False)",
        "path": "node_client/pyXain/test/test_pyXain.py",
        "position": null,
        "original_position": 64,
        "commit_id": "0916e3321bd5382a463bd0991252cffff164e750",
        "original_commit_id": "daa5d9eb87443bf6647f7629296d11401742dd05",
        "user": {
            "login": "david-hopper",
            "id": 5224068,
            "node_id": "MDQ6VXNlcjUyMjQwNjg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5224068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david-hopper",
            "html_url": "https://github.com/david-hopper",
            "followers_url": "https://api.github.com/users/david-hopper/followers",
            "following_url": "https://api.github.com/users/david-hopper/following{/other_user}",
            "gists_url": "https://api.github.com/users/david-hopper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david-hopper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david-hopper/subscriptions",
            "organizations_url": "https://api.github.com/users/david-hopper/orgs",
            "repos_url": "https://api.github.com/users/david-hopper/repos",
            "events_url": "https://api.github.com/users/david-hopper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david-hopper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Comment added that this is testing for a false to be returned as it is part of the check_author behavior.",
        "created_at": "2018-02-20T01:33:09Z",
        "updated_at": "2018-02-20T01:33:09Z",
        "html_url": "https://github.com/arXain/arXain/pull/22#discussion_r169200556",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/22",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/169200556"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/22#discussion_r169200556"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/22"
            }
        },
        "in_reply_to_id": 169199389
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/171300231",
        "pull_request_review_id": 100128506,
        "id": 171300231,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTMwMDIzMQ==",
        "diff_hunk": "@@ -208,19 +210,29 @@ def submit_manuscript(self, author_id, paper_id, paper_directory):\n         author_check = self.check_author(author_id)\n         if not author_check['Success'] :\n             output = {}\n-            output['Succcess'] = False\n+            output['Success'] = False",
        "path": "node_client/pyXain/pyXain/pyXain.py",
        "position": 16,
        "original_position": 16,
        "commit_id": "f33d4475cbc74ebc3c43c9ade5208c7482113d9d",
        "original_commit_id": "f33d4475cbc74ebc3c43c9ade5208c7482113d9d",
        "user": {
            "login": "SaulAryehKohn",
            "id": 7569274,
            "node_id": "MDQ6VXNlcjc1NjkyNzQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7569274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SaulAryehKohn",
            "html_url": "https://github.com/SaulAryehKohn",
            "followers_url": "https://api.github.com/users/SaulAryehKohn/followers",
            "following_url": "https://api.github.com/users/SaulAryehKohn/following{/other_user}",
            "gists_url": "https://api.github.com/users/SaulAryehKohn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SaulAryehKohn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SaulAryehKohn/subscriptions",
            "organizations_url": "https://api.github.com/users/SaulAryehKohn/orgs",
            "repos_url": "https://api.github.com/users/SaulAryehKohn/repos",
            "events_url": "https://api.github.com/users/SaulAryehKohn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SaulAryehKohn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Noooo was this what was going wrong in that test? Too many c's?",
        "created_at": "2018-02-28T16:20:18Z",
        "updated_at": "2018-02-28T16:23:29Z",
        "html_url": "https://github.com/arXain/arXain/pull/23#discussion_r171300231",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/23",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/171300231"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/23#discussion_r171300231"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/171300831",
        "pull_request_review_id": 100128506,
        "id": 171300831,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTMwMDgzMQ==",
        "diff_hunk": "@@ -384,7 +407,14 @@ def submit_comment(self, author_id, paper_id, comment_directory):\n         # large directory. More recent versions have this, but I haven't tried building\n         # them from source to try out. This should be remedied in the future.\n         try :\n-            reply = self.api.add(version_path, recursive=True)\n+            # go-ipfs api v0.4.7 has a bug that prevents recursively adding directories.",
        "path": "node_client/pyXain/pyXain/pyXain.py",
        "position": 53,
        "original_position": 123,
        "commit_id": "f33d4475cbc74ebc3c43c9ade5208c7482113d9d",
        "original_commit_id": "f33d4475cbc74ebc3c43c9ade5208c7482113d9d",
        "user": {
            "login": "SaulAryehKohn",
            "id": 7569274,
            "node_id": "MDQ6VXNlcjc1NjkyNzQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7569274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SaulAryehKohn",
            "html_url": "https://github.com/SaulAryehKohn",
            "followers_url": "https://api.github.com/users/SaulAryehKohn/followers",
            "following_url": "https://api.github.com/users/SaulAryehKohn/following{/other_user}",
            "gists_url": "https://api.github.com/users/SaulAryehKohn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SaulAryehKohn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SaulAryehKohn/subscriptions",
            "organizations_url": "https://api.github.com/users/SaulAryehKohn/orgs",
            "repos_url": "https://api.github.com/users/SaulAryehKohn/repos",
            "events_url": "https://api.github.com/users/SaulAryehKohn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SaulAryehKohn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why does this comment+functionality occur in two places? Can it be made into its own function?",
        "created_at": "2018-02-28T16:22:02Z",
        "updated_at": "2018-02-28T16:23:29Z",
        "html_url": "https://github.com/arXain/arXain/pull/23#discussion_r171300831",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/23",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/171300831"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/23#discussion_r171300831"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/23"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/171305198",
        "pull_request_review_id": 100134309,
        "id": 171305198,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTMwNTE5OA==",
        "diff_hunk": "@@ -208,19 +210,29 @@ def submit_manuscript(self, author_id, paper_id, paper_directory):\n         author_check = self.check_author(author_id)\n         if not author_check['Success'] :\n             output = {}\n-            output['Succcess'] = False\n+            output['Success'] = False",
        "path": "node_client/pyXain/pyXain/pyXain.py",
        "position": 16,
        "original_position": 16,
        "commit_id": "f33d4475cbc74ebc3c43c9ade5208c7482113d9d",
        "original_commit_id": "f33d4475cbc74ebc3c43c9ade5208c7482113d9d",
        "user": {
            "login": "david-hopper",
            "id": 5224068,
            "node_id": "MDQ6VXNlcjUyMjQwNjg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5224068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david-hopper",
            "html_url": "https://github.com/david-hopper",
            "followers_url": "https://api.github.com/users/david-hopper/followers",
            "following_url": "https://api.github.com/users/david-hopper/following{/other_user}",
            "gists_url": "https://api.github.com/users/david-hopper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david-hopper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david-hopper/subscriptions",
            "organizations_url": "https://api.github.com/users/david-hopper/orgs",
            "repos_url": "https://api.github.com/users/david-hopper/repos",
            "events_url": "https://api.github.com/users/david-hopper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david-hopper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes it was, there was a key error that lead me to it. -_-",
        "created_at": "2018-02-28T16:34:36Z",
        "updated_at": "2018-02-28T16:34:36Z",
        "html_url": "https://github.com/arXain/arXain/pull/23#discussion_r171305198",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/23",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/171305198"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/23#discussion_r171305198"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/23"
            }
        },
        "in_reply_to_id": 171300231
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/171306001",
        "pull_request_review_id": 100135263,
        "id": 171306001,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTMwNjAwMQ==",
        "diff_hunk": "@@ -384,7 +407,14 @@ def submit_comment(self, author_id, paper_id, comment_directory):\n         # large directory. More recent versions have this, but I haven't tried building\n         # them from source to try out. This should be remedied in the future.\n         try :\n-            reply = self.api.add(version_path, recursive=True)\n+            # go-ipfs api v0.4.7 has a bug that prevents recursively adding directories.",
        "path": "node_client/pyXain/pyXain/pyXain.py",
        "position": 53,
        "original_position": 123,
        "commit_id": "f33d4475cbc74ebc3c43c9ade5208c7482113d9d",
        "original_commit_id": "f33d4475cbc74ebc3c43c9ade5208c7482113d9d",
        "user": {
            "login": "david-hopper",
            "id": 5224068,
            "node_id": "MDQ6VXNlcjUyMjQwNjg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5224068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david-hopper",
            "html_url": "https://github.com/david-hopper",
            "followers_url": "https://api.github.com/users/david-hopper/followers",
            "following_url": "https://api.github.com/users/david-hopper/following{/other_user}",
            "gists_url": "https://api.github.com/users/david-hopper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david-hopper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david-hopper/subscriptions",
            "organizations_url": "https://api.github.com/users/david-hopper/orgs",
            "repos_url": "https://api.github.com/users/david-hopper/repos",
            "events_url": "https://api.github.com/users/david-hopper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david-hopper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There is a lot of code redundancy in the submit_manuscript, submit_revision, and submit_comment that I want to eliminate in a future PR. I could add that to this one though as it is probably something I'll work on next.",
        "created_at": "2018-02-28T16:36:58Z",
        "updated_at": "2018-02-28T16:36:58Z",
        "html_url": "https://github.com/arXain/arXain/pull/23#discussion_r171306001",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/23",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/171306001"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/23#discussion_r171306001"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/23"
            }
        },
        "in_reply_to_id": 171300831
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/171313676",
        "pull_request_review_id": 100144341,
        "id": 171313676,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTMxMzY3Ng==",
        "diff_hunk": "@@ -384,7 +407,14 @@ def submit_comment(self, author_id, paper_id, comment_directory):\n         # large directory. More recent versions have this, but I haven't tried building\n         # them from source to try out. This should be remedied in the future.\n         try :\n-            reply = self.api.add(version_path, recursive=True)\n+            # go-ipfs api v0.4.7 has a bug that prevents recursively adding directories.",
        "path": "node_client/pyXain/pyXain/pyXain.py",
        "position": 53,
        "original_position": 123,
        "commit_id": "f33d4475cbc74ebc3c43c9ade5208c7482113d9d",
        "original_commit_id": "f33d4475cbc74ebc3c43c9ade5208c7482113d9d",
        "user": {
            "login": "SaulAryehKohn",
            "id": 7569274,
            "node_id": "MDQ6VXNlcjc1NjkyNzQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7569274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SaulAryehKohn",
            "html_url": "https://github.com/SaulAryehKohn",
            "followers_url": "https://api.github.com/users/SaulAryehKohn/followers",
            "following_url": "https://api.github.com/users/SaulAryehKohn/following{/other_user}",
            "gists_url": "https://api.github.com/users/SaulAryehKohn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SaulAryehKohn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SaulAryehKohn/subscriptions",
            "organizations_url": "https://api.github.com/users/SaulAryehKohn/orgs",
            "repos_url": "https://api.github.com/users/SaulAryehKohn/repos",
            "events_url": "https://api.github.com/users/SaulAryehKohn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SaulAryehKohn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK",
        "created_at": "2018-02-28T16:58:39Z",
        "updated_at": "2018-02-28T16:58:39Z",
        "html_url": "https://github.com/arXain/arXain/pull/23#discussion_r171313676",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/23",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/171313676"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/23#discussion_r171313676"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/23"
            }
        },
        "in_reply_to_id": 171300831
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/172315875",
        "pull_request_review_id": 101312222,
        "id": 172315875,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjMxNTg3NQ==",
        "diff_hunk": "@@ -78,3 +74,47 @@ def submit_comment():\n @app.route('/pin/manuscript', methods=[\"GET\"])\n def pin_manuscript():\n     pass\n+\n+@app.route('/upload/file', methods=['GET','POST'])\n+def upload_file():\n+    if request.method == 'POST':\n+        print(request.files)\n+        # check if the post request has the file part\n+        if 'paper' not in request.files:\n+            flash('No file part')\n+            file_present = False\n+        file = request.files['paper']\n+        # if user does not select file, browser also\n+        # submit a empty part without filename\n+        if file.filename == '':\n+            flash('No selected file')\n+            file_present = False\n+        if file and allowed_file(file.filename):\n+            #make an upload dir if it doesn't exist\n+            folder = pyx.arxain_path+'/upload'\n+            if not os.path.exists(folder):\n+                    os.makedirs(folder)\n+            #delete files already in upload folder\n+            for the_file in os.listdir(folder):\n+                file_path = os.path.join(folder, the_file)\n+                try:\n+                    if os.path.isfile(file_path):\n+                        os.unlink(file_path)\n+                except Exception as e:",
        "path": "node_client/node/node/node.py",
        "position": 50,
        "original_position": 50,
        "commit_id": "1563e38519c88deed1e95be12de60d77cde6f2b3",
        "original_commit_id": "d796398aa765027b75dc90f43e1055fbdecca3fe",
        "user": {
            "login": "SaulAryehKohn",
            "id": 7569274,
            "node_id": "MDQ6VXNlcjc1NjkyNzQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7569274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SaulAryehKohn",
            "html_url": "https://github.com/SaulAryehKohn",
            "followers_url": "https://api.github.com/users/SaulAryehKohn/followers",
            "following_url": "https://api.github.com/users/SaulAryehKohn/following{/other_user}",
            "gists_url": "https://api.github.com/users/SaulAryehKohn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SaulAryehKohn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SaulAryehKohn/subscriptions",
            "organizations_url": "https://api.github.com/users/SaulAryehKohn/orgs",
            "repos_url": "https://api.github.com/users/SaulAryehKohn/repos",
            "events_url": "https://api.github.com/users/SaulAryehKohn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SaulAryehKohn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can we find a specific `Exception` for this (probably an `IOError`, but not sure)? It will help with future debugging and testing.",
        "created_at": "2018-03-05T20:18:25Z",
        "updated_at": "2018-03-06T00:21:08Z",
        "html_url": "https://github.com/arXain/arXain/pull/32#discussion_r172315875",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/32",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/172315875"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/32#discussion_r172315875"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/172318487",
        "pull_request_review_id": 101315557,
        "id": 172318487,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjMxODQ4Nw==",
        "diff_hunk": "@@ -78,3 +74,47 @@ def submit_comment():\n @app.route('/pin/manuscript', methods=[\"GET\"])\n def pin_manuscript():\n     pass\n+\n+@app.route('/upload/file', methods=['GET','POST'])\n+def upload_file():\n+    if request.method == 'POST':\n+        print(request.files)\n+        # check if the post request has the file part\n+        if 'paper' not in request.files:\n+            flash('No file part')\n+            file_present = False\n+        file = request.files['paper']\n+        # if user does not select file, browser also\n+        # submit a empty part without filename\n+        if file.filename == '':\n+            flash('No selected file')\n+            file_present = False\n+        if file and allowed_file(file.filename):\n+            #make an upload dir if it doesn't exist\n+            folder = pyx.arxain_path+'/upload'\n+            if not os.path.exists(folder):\n+                    os.makedirs(folder)\n+            #delete files already in upload folder\n+            for the_file in os.listdir(folder):\n+                file_path = os.path.join(folder, the_file)\n+                try:\n+                    if os.path.isfile(file_path):\n+                        os.unlink(file_path)\n+                except Exception as e:",
        "path": "node_client/node/node/node.py",
        "position": 50,
        "original_position": 50,
        "commit_id": "1563e38519c88deed1e95be12de60d77cde6f2b3",
        "original_commit_id": "d796398aa765027b75dc90f43e1055fbdecca3fe",
        "user": {
            "login": "david-hopper",
            "id": 5224068,
            "node_id": "MDQ6VXNlcjUyMjQwNjg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5224068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david-hopper",
            "html_url": "https://github.com/david-hopper",
            "followers_url": "https://api.github.com/users/david-hopper/followers",
            "following_url": "https://api.github.com/users/david-hopper/following{/other_user}",
            "gists_url": "https://api.github.com/users/david-hopper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david-hopper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david-hopper/subscriptions",
            "organizations_url": "https://api.github.com/users/david-hopper/orgs",
            "repos_url": "https://api.github.com/users/david-hopper/repos",
            "events_url": "https://api.github.com/users/david-hopper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david-hopper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This was code written by @bhaney that I moved from pyXain to node, and am a little un-sure about what could go wrong here so hopefully he can help out on this. This is also stuff that will only really be necessary for when we have people use our own server as this is a post-method handling the uploading of a pdf which we don't need if the user is running a local node.",
        "created_at": "2018-03-05T20:29:21Z",
        "updated_at": "2018-03-06T00:21:08Z",
        "html_url": "https://github.com/arXain/arXain/pull/32#discussion_r172318487",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/32",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/172318487"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/32#discussion_r172318487"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/32"
            }
        },
        "in_reply_to_id": 172315875
    },
    {
        "url": "https://api.github.com/repos/arXain/arXain/pulls/comments/172321405",
        "pull_request_review_id": 101319069,
        "id": 172321405,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjMyMTQwNQ==",
        "diff_hunk": "@@ -78,3 +74,47 @@ def submit_comment():\n @app.route('/pin/manuscript', methods=[\"GET\"])\n def pin_manuscript():\n     pass\n+\n+@app.route('/upload/file', methods=['GET','POST'])\n+def upload_file():\n+    if request.method == 'POST':\n+        print(request.files)\n+        # check if the post request has the file part\n+        if 'paper' not in request.files:\n+            flash('No file part')\n+            file_present = False\n+        file = request.files['paper']\n+        # if user does not select file, browser also\n+        # submit a empty part without filename\n+        if file.filename == '':\n+            flash('No selected file')\n+            file_present = False\n+        if file and allowed_file(file.filename):\n+            #make an upload dir if it doesn't exist\n+            folder = pyx.arxain_path+'/upload'\n+            if not os.path.exists(folder):\n+                    os.makedirs(folder)\n+            #delete files already in upload folder\n+            for the_file in os.listdir(folder):\n+                file_path = os.path.join(folder, the_file)\n+                try:\n+                    if os.path.isfile(file_path):\n+                        os.unlink(file_path)\n+                except Exception as e:",
        "path": "node_client/node/node/node.py",
        "position": 50,
        "original_position": 50,
        "commit_id": "1563e38519c88deed1e95be12de60d77cde6f2b3",
        "original_commit_id": "d796398aa765027b75dc90f43e1055fbdecca3fe",
        "user": {
            "login": "mistry",
            "id": 7244333,
            "node_id": "MDQ6VXNlcjcyNDQzMzM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7244333?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mistry",
            "html_url": "https://github.com/mistry",
            "followers_url": "https://api.github.com/users/mistry/followers",
            "following_url": "https://api.github.com/users/mistry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mistry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mistry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mistry/subscriptions",
            "organizations_url": "https://api.github.com/users/mistry/orgs",
            "repos_url": "https://api.github.com/users/mistry/repos",
            "events_url": "https://api.github.com/users/mistry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mistry/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "so right now the contract\r\n>an author cannot revise their own paper\r\n\r\nAn author can revise their paper (right?, we want to be able to submit new versions)\r\n\r\n>a non-author cannot revise someone else's paper\r\n\r\nSo right now the contract allows the submitter to add other authors. They can revise the paper too. But these are the only people\r\n\r\n>revisions had to actually be revisions\r\n\r\nYea, this is also in the contract. It has to be a different paper IPFS hash\r\n",
        "created_at": "2018-03-05T20:41:09Z",
        "updated_at": "2018-03-06T00:21:08Z",
        "html_url": "https://github.com/arXain/arXain/pull/32#discussion_r172321405",
        "pull_request_url": "https://api.github.com/repos/arXain/arXain/pulls/32",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/comments/172321405"
            },
            "html": {
                "href": "https://github.com/arXain/arXain/pull/32#discussion_r172321405"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/arXain/arXain/pulls/32"
            }
        },
        "in_reply_to_id": 172315875
    }
]