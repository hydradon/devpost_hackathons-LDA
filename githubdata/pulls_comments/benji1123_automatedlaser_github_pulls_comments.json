[
    {
        "url": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/comments/324431021",
        "pull_request_review_id": 288328671,
        "id": 324431021,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDQzMTAyMQ==",
        "diff_hunk": "@@ -0,0 +1,186 @@\n+#include <Stepper.h>\n+#include <SPI.h>\n+#include <SD.h>\n+\n+// Stepper Motor Info\n+const int stepsPerRevolution = 32;\n+Stepper xStepper(stepsPerRevolution, 6, 8, 7, 9);\n+Stepper yStepper(stepsPerRevolution, 2, 4, 3, 5);\n+const float StepInc = 1;\n+const float stepsPerDegree = 5.689;\n+const byte speed = 50;\n+\n+// Starting Angles\n+const float X0 = 90;  // left/right angle\n+const float Y0 = 90;  // up/down angle\n+\n+// Current Angles\n+float X = X0;\n+float Y = Y0;\n+\n+// Upcoming Angles\n+float nextX, nextY;\n+\n+// SD & File Stuff\n+const byte csPin = 10;\n+char fileName[] = \"code.txt\";\n+\n+// Laser Pin\n+const byte laserPin = A0;\n+\n+// Input Serial Timing\n+unsigned long timer = 0;\n+unsigned int timeout = 10000;\n+\n+File codeFile;\n+\n+void setup() {\n+  pinMode(laserPin, OUTPUT); // laser pin (using an analog input as a digital output)\n+\n+  Serial.begin(9600); // Start Serial Communication\n+\n+  Serial.print(\"Loading SD card... \");\n+  if (!SD.begin(csPin)) {\n+    Serial.println(\"Error!\");\n+    while (1) {\n+      Serial.println(\"FUCK\");",
        "path": "laser.ino",
        "position": 46,
        "original_position": 46,
        "commit_id": "5fb7e3a1657880825418bb1e4036f2b3a3fff0d0",
        "original_commit_id": "5fb7e3a1657880825418bb1e4036f2b3a3fff0d0",
        "user": {
            "login": "benji1123",
            "id": 22989543,
            "node_id": "MDQ6VXNlcjIyOTg5NTQz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/22989543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benji1123",
            "html_url": "https://github.com/benji1123",
            "followers_url": "https://api.github.com/users/benji1123/followers",
            "following_url": "https://api.github.com/users/benji1123/following{/other_user}",
            "gists_url": "https://api.github.com/users/benji1123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benji1123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benji1123/subscriptions",
            "organizations_url": "https://api.github.com/users/benji1123/orgs",
            "repos_url": "https://api.github.com/users/benji1123/repos",
            "events_url": "https://api.github.com/users/benji1123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benji1123/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "maybe not a good idea ;)",
        "created_at": "2019-09-14T17:13:22Z",
        "updated_at": "2019-09-14T17:13:22Z",
        "html_url": "https://github.com/benji1123/AutomatedLaser/pull/1#discussion_r324431021",
        "pull_request_url": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/1",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/comments/324431021"
            },
            "html": {
                "href": "https://github.com/benji1123/AutomatedLaser/pull/1#discussion_r324431021"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/comments/324431071",
        "pull_request_review_id": 288328737,
        "id": 324431071,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDQzMTA3MQ==",
        "diff_hunk": "@@ -0,0 +1,186 @@\n+#include <Stepper.h>\n+#include <SPI.h>\n+#include <SD.h>\n+\n+// Stepper Motor Info\n+const int stepsPerRevolution = 32;\n+Stepper xStepper(stepsPerRevolution, 6, 8, 7, 9);\n+Stepper yStepper(stepsPerRevolution, 2, 4, 3, 5);\n+const float StepInc = 1;\n+const float stepsPerDegree = 5.689;\n+const byte speed = 50;\n+\n+// Starting Angles\n+const float X0 = 90;  // left/right angle\n+const float Y0 = 90;  // up/down angle\n+\n+// Current Angles\n+float X = X0;\n+float Y = Y0;\n+\n+// Upcoming Angles\n+float nextX, nextY;\n+\n+// SD & File Stuff\n+const byte csPin = 10;\n+char fileName[] = \"code.txt\";\n+\n+// Laser Pin\n+const byte laserPin = A0;\n+\n+// Input Serial Timing\n+unsigned long timer = 0;\n+unsigned int timeout = 10000;\n+\n+File codeFile;\n+\n+void setup() {\n+  pinMode(laserPin, OUTPUT); // laser pin (using an analog input as a digital output)\n+\n+  Serial.begin(9600); // Start Serial Communication\n+\n+  Serial.print(\"Loading SD card... \");\n+  if (!SD.begin(csPin)) {\n+    Serial.println(\"Error!\");\n+    while (1) {\n+      Serial.println(\"FUCK\");\n+      delay(1000);\n+    }\n+  }\n+  Serial.println(\"Done.\");\n+\n+  codeFile = SD.open(fileName);\n+\n+  // file doesn't exist, wait for transmission\n+  if (!codeFile) {\n+    Serial.println(\"No file, waiting for serial transmission...\");\n+    while (!Serial.available()) {} // wait until serial begins\n+    // once transmission begins, start timer\n+    timer = millis();\n+    while (abs(millis() - timer) < timeout) { // less than \"timeout\" milliseconds passed\n+      if (Serial.available()) {\n+        codeFile = SD.open(fileName, FILE_WRITE);\n+        timer = millis(); // reset timer\n+        codeFile.print(Serial.readString());\n+        Serial.println(\"Line written\");\n+        codeFile.close();\n+      }\n+    }\n+  }\n+\n+  codeFile = SD.open(fileName);\n+\n+  Serial.print(\"Home: \");\n+  Serial.print(X);\n+  Serial.print(\", \");\n+  Serial.println(Y);\n+\n+  // Set the stepper motor speeds\n+  xStepper.setSpeed(speed);\n+  yStepper.setSpeed(speed);\n+\n+  delay(2000);\n+\n+  if (codeFile) {   // file opened successfully\n+    while (codeFile.available()) {\n+      String line = \"\";\n+      while (codeFile.peek() != '\\n') // read until the end of the line\n+        line.concat(char(codeFile.read()));",
        "path": "laser.ino",
        "position": 88,
        "original_position": 88,
        "commit_id": "5fb7e3a1657880825418bb1e4036f2b3a3fff0d0",
        "original_commit_id": "5fb7e3a1657880825418bb1e4036f2b3a3fff0d0",
        "user": {
            "login": "benji1123",
            "id": 22989543,
            "node_id": "MDQ6VXNlcjIyOTg5NTQz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/22989543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benji1123",
            "html_url": "https://github.com/benji1123",
            "followers_url": "https://api.github.com/users/benji1123/followers",
            "following_url": "https://api.github.com/users/benji1123/following{/other_user}",
            "gists_url": "https://api.github.com/users/benji1123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benji1123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benji1123/subscriptions",
            "organizations_url": "https://api.github.com/users/benji1123/orgs",
            "repos_url": "https://api.github.com/users/benji1123/repos",
            "events_url": "https://api.github.com/users/benji1123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benji1123/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "char by char, nice",
        "created_at": "2019-09-14T17:15:07Z",
        "updated_at": "2019-09-14T17:15:07Z",
        "html_url": "https://github.com/benji1123/AutomatedLaser/pull/1#discussion_r324431071",
        "pull_request_url": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/1",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/comments/324431071"
            },
            "html": {
                "href": "https://github.com/benji1123/AutomatedLaser/pull/1#discussion_r324431071"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/comments/324431128",
        "pull_request_review_id": 288328807,
        "id": 324431128,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDQzMTEyOA==",
        "diff_hunk": "@@ -0,0 +1,186 @@\n+#include <Stepper.h>\n+#include <SPI.h>\n+#include <SD.h>\n+\n+// Stepper Motor Info\n+const int stepsPerRevolution = 32;\n+Stepper xStepper(stepsPerRevolution, 6, 8, 7, 9);\n+Stepper yStepper(stepsPerRevolution, 2, 4, 3, 5);\n+const float StepInc = 1;\n+const float stepsPerDegree = 5.689;\n+const byte speed = 50;\n+\n+// Starting Angles\n+const float X0 = 90;  // left/right angle\n+const float Y0 = 90;  // up/down angle\n+\n+// Current Angles\n+float X = X0;\n+float Y = Y0;\n+\n+// Upcoming Angles\n+float nextX, nextY;\n+\n+// SD & File Stuff\n+const byte csPin = 10;\n+char fileName[] = \"code.txt\";\n+\n+// Laser Pin\n+const byte laserPin = A0;\n+\n+// Input Serial Timing\n+unsigned long timer = 0;\n+unsigned int timeout = 10000;\n+\n+File codeFile;\n+\n+void setup() {\n+  pinMode(laserPin, OUTPUT); // laser pin (using an analog input as a digital output)\n+\n+  Serial.begin(9600); // Start Serial Communication\n+\n+  Serial.print(\"Loading SD card... \");\n+  if (!SD.begin(csPin)) {\n+    Serial.println(\"Error!\");\n+    while (1) {\n+      Serial.println(\"FUCK\");\n+      delay(1000);\n+    }\n+  }\n+  Serial.println(\"Done.\");\n+\n+  codeFile = SD.open(fileName);\n+\n+  // file doesn't exist, wait for transmission\n+  if (!codeFile) {\n+    Serial.println(\"No file, waiting for serial transmission...\");\n+    while (!Serial.available()) {} // wait until serial begins\n+    // once transmission begins, start timer\n+    timer = millis();\n+    while (abs(millis() - timer) < timeout) { // less than \"timeout\" milliseconds passed\n+      if (Serial.available()) {\n+        codeFile = SD.open(fileName, FILE_WRITE);\n+        timer = millis(); // reset timer\n+        codeFile.print(Serial.readString());\n+        Serial.println(\"Line written\");\n+        codeFile.close();\n+      }\n+    }\n+  }\n+\n+  codeFile = SD.open(fileName);\n+\n+  Serial.print(\"Home: \");\n+  Serial.print(X);\n+  Serial.print(\", \");\n+  Serial.println(Y);\n+\n+  // Set the stepper motor speeds\n+  xStepper.setSpeed(speed);\n+  yStepper.setSpeed(speed);\n+\n+  delay(2000);\n+\n+  if (codeFile) {   // file opened successfully\n+    while (codeFile.available()) {\n+      String line = \"\";\n+      while (codeFile.peek() != '\\n') // read until the end of the line\n+        line.concat(char(codeFile.read()));\n+\n+      codeFile.read();  // flush the new-line character\n+\n+      if (line.charAt(0) == 'X') { // Movement Instruction\n+        nextX = line.substring(line.indexOf('X') + 1, line.indexOf('Y')).toFloat();\n+        nextY = line.substring(line.indexOf('Y') + 1).toFloat();\n+        moveTo(nextX, nextY);\n+      }\n+      else if (line.charAt(0) == 'P') { // Laser on/off command\n+        if (line.charAt(1) == '0') { // Laser off\n+          Serial.println(\"Laser OFF\");\n+          digitalWrite(laserPin, LOW);\n+        }\n+        else if (line.charAt(1) == '1') { // Laser on\n+          Serial.println(\"Laser ON\");\n+          digitalWrite(laserPin, HIGH);\n+        }\n+      }\n+      else if (line.charAt(0) == 'D') { // Delete file after drawing\n+        codeFile.close();\n+        SD.remove(fileName);\n+        Serial.println(\"File deleted.\");\n+        moveTo(X0, Y0);\n+        freewheel();\n+        while(1){}\n+      }\n+      else {\n+        Serial.print(\"Unknown command\");\n+      }\n+    }\n+    codeFile.close();\n+  }\n+  else {\n+    Serial.println(\"Error opening instruction file!\");\n+    while (1) {\n+    }\n+  }\n+\n+  moveTo(X0, Y0); // home\n+  freewheel();    // disable holding torque\n+}\n+\n+void loop()\n+{\n+\n+}\n+\n+// Move to specified angles (a, b)\n+void moveTo(float a, float b) {\n+  Serial.print(\"Going to \");\n+  Serial.print(a);\n+  Serial.print(\", \");\n+  Serial.println(b);",
        "path": "laser.ino",
        "position": 141,
        "original_position": 141,
        "commit_id": "5fb7e3a1657880825418bb1e4036f2b3a3fff0d0",
        "original_commit_id": "5fb7e3a1657880825418bb1e4036f2b3a3fff0d0",
        "user": {
            "login": "benji1123",
            "id": 22989543,
            "node_id": "MDQ6VXNlcjIyOTg5NTQz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/22989543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benji1123",
            "html_url": "https://github.com/benji1123",
            "followers_url": "https://api.github.com/users/benji1123/followers",
            "following_url": "https://api.github.com/users/benji1123/following{/other_user}",
            "gists_url": "https://api.github.com/users/benji1123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benji1123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benji1123/subscriptions",
            "organizations_url": "https://api.github.com/users/benji1123/orgs",
            "repos_url": "https://api.github.com/users/benji1123/repos",
            "events_url": "https://api.github.com/users/benji1123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benji1123/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hmm",
        "created_at": "2019-09-14T17:16:49Z",
        "updated_at": "2019-09-14T17:17:08Z",
        "html_url": "https://github.com/benji1123/AutomatedLaser/pull/1#discussion_r324431128",
        "pull_request_url": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/1",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/comments/324431128"
            },
            "html": {
                "href": "https://github.com/benji1123/AutomatedLaser/pull/1#discussion_r324431128"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/benji1123/AutomatedLaser/pulls/1"
            }
        }
    }
]