[
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109348158",
        "pull_request_review_id": 30443233,
        "id": 109348158,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTM0ODE1OA==",
        "diff_hunk": "@@ -2,53 +2,26 @@ package main\n \n import (\n \t\"fmt\"\n-\t\"os\"\n-\n-\t\"github.com/clarifai/clarifai-go\"",
        "path": "main.go",
        "position": 6,
        "original_position": 6,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just wondering why we are not using this library?",
        "created_at": "2017-04-03T06:44:42Z",
        "updated_at": "2017-04-03T06:45:25Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109348158",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109348158"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109348158"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109348669",
        "pull_request_review_id": 30443794,
        "id": 109348669,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTM0ODY2OQ==",
        "diff_hunk": "@@ -8,20 +8,26 @@ import (\n \t\"net/http\"\n \t\"bytes\"\n \t\"strings\"\n-\n-\t\"github.com/clarifai/clarifai-go\"\n \t\"github.com/gin-gonic/gin\"\n+\t\"os\"\n+\t\"net/url\"\n )\n \n const (\n \tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"",
        "path": "server.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe we should use /v2/token in order to keep consistent. We probably don't want to use two versions of API",
        "created_at": "2017-04-03T06:49:36Z",
        "updated_at": "2017-04-03T06:49:36Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109348669",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109348669"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109348669"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109350605",
        "pull_request_review_id": 30445912,
        "id": 109350605,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTM1MDYwNQ==",
        "diff_hunk": "@@ -202,20 +188,63 @@ func getRequestBody(input string) (*http.Request, error) {\n \tinputs = append(inputs, data)\n \treqBody := RequestBody{inputs}\n \tfmt.Print(reqBody)\n-\t//reqBodyBytes, err := json.Marshal(reqBody)\n-\t//if err != nil {\n-\t\t//return nil, err\n-\t//}\n \n \tb := new(bytes.Buffer)\n-  err := json.NewEncoder(b).Encode(reqBody)\n+\terr := json.NewEncoder(b).Encode(reqBody)\n \treq, err := http.NewRequest(\"POST\", clarifaiApi, b)\n \tfmt.Print(req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\treq.Header.Add(\"Authorization\", `Bearer ThzzqYyVARtJdLbTQDwfRpa1FOk8w6`)\n+\treq.Header.Add(\"Authorization\", `Bearer ` + clarifai_token.Token)\n \treq.Header.Add(\"Content-Type\", `application/json`)\n \treturn req, nil\n }\n+\n+func getAccesToken() AccessToken {\n+\tCLARIFAI_ID := os.Getenv(\"CLARIFAI_CLIENT_ID\")\n+\tCLARIFAI_SECRET_KEY := os.Getenv(\"CLARIFAI_SECRET_KEY\")\n+\n+\tresponseData := authRequest(CLARIFAI_ID, CLARIFAI_SECRET_KEY)\n+\tvar token AccessToken\n+\trawIn := json.RawMessage(responseData)\n+\n+\tbytes, err := rawIn.MarshalJSON()\n+\tif err != nil {\n+\t\tfmt.Print(\"\\nERROR Parsing authentication response\")\n+\t\tpanic(err)\n+\t}\n+\n+\terr = json.Unmarshal(bytes, &token)\n+\tif err != nil {\n+\t\tfmt.Print(\"\\nERROR Parsing authentication json string\")\n+\t\tpanic(err)\n+\t}\n+\tfmt.Print(\"\\nRESULTS: \")\n+\tfmt.Print(token.Token)\n+\tfmt.Print(token.ExpiresIn)\n+\n+\treturn token\n+}\n+\n+func authRequest(CLIENT_ID string, SECRET_KEY string) []byte {\n+\n+\tresp, err := http.PostForm(clarifyAuth, url.Values{\"grant_type\": {\"client_credentials\"},\n+\t\t\"client_id\": { CLIENT_ID },\n+\t\t\"client_secret\": { SECRET_KEY } })\n+\n+\tfmt.Print(\"\\nAuthentication Request constructed and sent\")\n+\n+\tif err != nil {\n+\t\tpanic(err)",
        "path": "server.go",
        "position": 152,
        "original_position": 152,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm ok with using panic for now. But if we want our project to be production quality, we probably want to avoid using panic. A better way will be throw an error_code with an error_msg. Then the client side is expected to handle it",
        "created_at": "2017-04-03T07:06:50Z",
        "updated_at": "2017-04-03T07:06:50Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109350605",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109350605"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109350605"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109352359",
        "pull_request_review_id": 30447900,
        "id": 109352359,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTM1MjM1OQ==",
        "diff_hunk": "@@ -8,20 +8,26 @@ import (\n \t\"net/http\"\n \t\"bytes\"\n \t\"strings\"\n-\n-\t\"github.com/clarifai/clarifai-go\"\n \t\"github.com/gin-gonic/gin\"\n+\t\"os\"\n+\t\"net/url\"\n )\n \n const (\n \tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n )\n \n type Server struct {\n \tapp    *gin.Engine\n-\tclient *clarifai.Client\n }\n \n+type AccessToken struct {\n+\tToken string `json:\"access_token\"`\n+\tExpiresIn int `json:\"expires_in\"`",
        "path": "server.go",
        "position": 23,
        "original_position": 23,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`ExpiresIn` is not used? It seems like each time we make a call to `clarifaiApi` we will use the client credentials to generate new access_token. So the token is just a one-time thing. I think just the Token is enough for us",
        "created_at": "2017-04-03T07:21:11Z",
        "updated_at": "2017-04-03T07:21:11Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109352359",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109352359"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109352359"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109352733",
        "pull_request_review_id": 30448229,
        "id": 109352733,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTM1MjczMw==",
        "diff_hunk": "@@ -202,20 +188,63 @@ func getRequestBody(input string) (*http.Request, error) {\n \tinputs = append(inputs, data)\n \treqBody := RequestBody{inputs}\n \tfmt.Print(reqBody)\n-\t//reqBodyBytes, err := json.Marshal(reqBody)\n-\t//if err != nil {\n-\t\t//return nil, err\n-\t//}\n \n \tb := new(bytes.Buffer)\n-  err := json.NewEncoder(b).Encode(reqBody)\n+\terr := json.NewEncoder(b).Encode(reqBody)\n \treq, err := http.NewRequest(\"POST\", clarifaiApi, b)\n \tfmt.Print(req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\treq.Header.Add(\"Authorization\", `Bearer ThzzqYyVARtJdLbTQDwfRpa1FOk8w6`)\n+\treq.Header.Add(\"Authorization\", `Bearer ` + clarifai_token.Token)\n \treq.Header.Add(\"Content-Type\", `application/json`)\n \treturn req, nil\n }\n+\n+func getAccesToken() AccessToken {",
        "path": "server.go",
        "position": 117,
        "original_position": 117,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "As mentioned before, since we probably only need Token, `getAccessToken` can be merged with `authRequest` into one function that is just to get the Token",
        "created_at": "2017-04-03T07:23:32Z",
        "updated_at": "2017-04-03T07:23:32Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109352733",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109352733"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109352733"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109354223",
        "pull_request_review_id": 30449732,
        "id": 109354223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTM1NDIyMw==",
        "diff_hunk": "@@ -202,20 +188,63 @@ func getRequestBody(input string) (*http.Request, error) {\n \tinputs = append(inputs, data)\n \treqBody := RequestBody{inputs}\n \tfmt.Print(reqBody)\n-\t//reqBodyBytes, err := json.Marshal(reqBody)\n-\t//if err != nil {\n-\t\t//return nil, err\n-\t//}\n \n \tb := new(bytes.Buffer)\n-  err := json.NewEncoder(b).Encode(reqBody)\n+\terr := json.NewEncoder(b).Encode(reqBody)\n \treq, err := http.NewRequest(\"POST\", clarifaiApi, b)\n \tfmt.Print(req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\treq.Header.Add(\"Authorization\", `Bearer ThzzqYyVARtJdLbTQDwfRpa1FOk8w6`)\n+\treq.Header.Add(\"Authorization\", `Bearer ` + clarifai_token.Token)\n \treq.Header.Add(\"Content-Type\", `application/json`)\n \treturn req, nil\n }\n+\n+func getAccesToken() AccessToken {\n+\tCLARIFAI_ID := os.Getenv(\"CLARIFAI_CLIENT_ID\")\n+\tCLARIFAI_SECRET_KEY := os.Getenv(\"CLARIFAI_SECRET_KEY\")\n+\n+\tresponseData := authRequest(CLARIFAI_ID, CLARIFAI_SECRET_KEY)\n+\tvar token AccessToken\n+\trawIn := json.RawMessage(responseData)\n+\n+\tbytes, err := rawIn.MarshalJSON()\n+\tif err != nil {\n+\t\tfmt.Print(\"\\nERROR Parsing authentication response\")\n+\t\tpanic(err)\n+\t}\n+\n+\terr = json.Unmarshal(bytes, &token)\n+\tif err != nil {\n+\t\tfmt.Print(\"\\nERROR Parsing authentication json string\")\n+\t\tpanic(err)\n+\t}\n+\tfmt.Print(\"\\nRESULTS: \")\n+\tfmt.Print(token.Token)\n+\tfmt.Print(token.ExpiresIn)\n+\n+\treturn token\n+}\n+\n+func authRequest(CLIENT_ID string, SECRET_KEY string) []byte {\n+\n+\tresp, err := http.PostForm(clarifyAuth, url.Values{\"grant_type\": {\"client_credentials\"},\n+\t\t\"client_id\": { CLIENT_ID },\n+\t\t\"client_secret\": { SECRET_KEY } })\n+\n+\tfmt.Print(\"\\nAuthentication Request constructed and sent\")\n+\n+\tif err != nil {\n+\t\tpanic(err)",
        "path": "server.go",
        "position": 152,
        "original_position": 152,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "eladmica",
            "id": 9302865,
            "node_id": "MDQ6VXNlcjkzMDI4NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/9302865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eladmica",
            "html_url": "https://github.com/eladmica",
            "followers_url": "https://api.github.com/users/eladmica/followers",
            "following_url": "https://api.github.com/users/eladmica/following{/other_user}",
            "gists_url": "https://api.github.com/users/eladmica/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eladmica/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eladmica/subscriptions",
            "organizations_url": "https://api.github.com/users/eladmica/orgs",
            "repos_url": "https://api.github.com/users/eladmica/repos",
            "events_url": "https://api.github.com/users/eladmica/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eladmica/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "^ You are right, but this is not an error caused by the user. If this happens there's nothing the user can do, as our app is literally not usable (we can't do anything without an access token to clarifai). We can throw a 500 internal error msg but.. we probably shouldn't even reach this situation in the first place.\r\n\r\n@DariaSova I have a couple questions:\r\n\r\n1 - Why do we generate an access token per request? I thought this token should be global to our server, and every request will use this same token until it expires\r\n\r\n2 - How's the expiration works with this token? Does it expire after some number of requests requests? After some time? We should probably have some kind of an alerting mechanism that will notify us when the token is about to expire, so we can avoid this situation.\r\n\r\nGreat job with this PR btw! Getting things going",
        "created_at": "2017-04-03T07:34:07Z",
        "updated_at": "2017-04-03T07:34:46Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109354223",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109354223"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109354223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109350605
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562258",
        "pull_request_review_id": 30672408,
        "id": 109562258,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU2MjI1OA==",
        "diff_hunk": "@@ -2,53 +2,26 @@ package main\n \n import (\n \t\"fmt\"\n-\t\"os\"\n-\n-\t\"github.com/clarifai/clarifai-go\"",
        "path": "main.go",
        "position": 6,
        "original_position": 6,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "DariaSova",
            "id": 10904238,
            "node_id": "MDQ6VXNlcjEwOTA0MjM4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10904238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DariaSova",
            "html_url": "https://github.com/DariaSova",
            "followers_url": "https://api.github.com/users/DariaSova/followers",
            "following_url": "https://api.github.com/users/DariaSova/following{/other_user}",
            "gists_url": "https://api.github.com/users/DariaSova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DariaSova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DariaSova/subscriptions",
            "organizations_url": "https://api.github.com/users/DariaSova/orgs",
            "repos_url": "https://api.github.com/users/DariaSova/repos",
            "events_url": "https://api.github.com/users/DariaSova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DariaSova/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@tomyang729  We never used it, so I am not sure why it was in the code, but initially we were gonna use it and then we figured that we can just use the API directly, because the library is poorly documented and it hasn't been updated for a while. I think it's even better, less dependancies, since we only hit one end point",
        "created_at": "2017-04-04T01:43:13Z",
        "updated_at": "2017-04-04T01:43:13Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562258",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562258"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562258"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109348158
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562296",
        "pull_request_review_id": 30672446,
        "id": 109562296,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU2MjI5Ng==",
        "diff_hunk": "@@ -8,20 +8,26 @@ import (\n \t\"net/http\"\n \t\"bytes\"\n \t\"strings\"\n-\n-\t\"github.com/clarifai/clarifai-go\"\n \t\"github.com/gin-gonic/gin\"\n+\t\"os\"\n+\t\"net/url\"\n )\n \n const (\n \tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"",
        "path": "server.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "DariaSova",
            "id": 10904238,
            "node_id": "MDQ6VXNlcjEwOTA0MjM4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10904238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DariaSova",
            "html_url": "https://github.com/DariaSova",
            "followers_url": "https://api.github.com/users/DariaSova/followers",
            "following_url": "https://api.github.com/users/DariaSova/following{/other_user}",
            "gists_url": "https://api.github.com/users/DariaSova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DariaSova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DariaSova/subscriptions",
            "organizations_url": "https://api.github.com/users/DariaSova/orgs",
            "repos_url": "https://api.github.com/users/DariaSova/repos",
            "events_url": "https://api.github.com/users/DariaSova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DariaSova/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "that's a good point! i missed this, will change!",
        "created_at": "2017-04-04T01:43:41Z",
        "updated_at": "2017-04-04T01:43:41Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562296",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562296"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562296"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109348669
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562565",
        "pull_request_review_id": 30672715,
        "id": 109562565,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU2MjU2NQ==",
        "diff_hunk": "@@ -202,20 +188,63 @@ func getRequestBody(input string) (*http.Request, error) {\n \tinputs = append(inputs, data)\n \treqBody := RequestBody{inputs}\n \tfmt.Print(reqBody)\n-\t//reqBodyBytes, err := json.Marshal(reqBody)\n-\t//if err != nil {\n-\t\t//return nil, err\n-\t//}\n \n \tb := new(bytes.Buffer)\n-  err := json.NewEncoder(b).Encode(reqBody)\n+\terr := json.NewEncoder(b).Encode(reqBody)\n \treq, err := http.NewRequest(\"POST\", clarifaiApi, b)\n \tfmt.Print(req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\treq.Header.Add(\"Authorization\", `Bearer ThzzqYyVARtJdLbTQDwfRpa1FOk8w6`)\n+\treq.Header.Add(\"Authorization\", `Bearer ` + clarifai_token.Token)\n \treq.Header.Add(\"Content-Type\", `application/json`)\n \treturn req, nil\n }\n+\n+func getAccesToken() AccessToken {\n+\tCLARIFAI_ID := os.Getenv(\"CLARIFAI_CLIENT_ID\")\n+\tCLARIFAI_SECRET_KEY := os.Getenv(\"CLARIFAI_SECRET_KEY\")\n+\n+\tresponseData := authRequest(CLARIFAI_ID, CLARIFAI_SECRET_KEY)\n+\tvar token AccessToken\n+\trawIn := json.RawMessage(responseData)\n+\n+\tbytes, err := rawIn.MarshalJSON()\n+\tif err != nil {\n+\t\tfmt.Print(\"\\nERROR Parsing authentication response\")\n+\t\tpanic(err)\n+\t}\n+\n+\terr = json.Unmarshal(bytes, &token)\n+\tif err != nil {\n+\t\tfmt.Print(\"\\nERROR Parsing authentication json string\")\n+\t\tpanic(err)\n+\t}\n+\tfmt.Print(\"\\nRESULTS: \")\n+\tfmt.Print(token.Token)\n+\tfmt.Print(token.ExpiresIn)\n+\n+\treturn token\n+}\n+\n+func authRequest(CLIENT_ID string, SECRET_KEY string) []byte {\n+\n+\tresp, err := http.PostForm(clarifyAuth, url.Values{\"grant_type\": {\"client_credentials\"},\n+\t\t\"client_id\": { CLIENT_ID },\n+\t\t\"client_secret\": { SECRET_KEY } })\n+\n+\tfmt.Print(\"\\nAuthentication Request constructed and sent\")\n+\n+\tif err != nil {\n+\t\tpanic(err)",
        "path": "server.go",
        "position": 152,
        "original_position": 152,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "DariaSova",
            "id": 10904238,
            "node_id": "MDQ6VXNlcjEwOTA0MjM4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10904238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DariaSova",
            "html_url": "https://github.com/DariaSova",
            "followers_url": "https://api.github.com/users/DariaSova/followers",
            "following_url": "https://api.github.com/users/DariaSova/following{/other_user}",
            "gists_url": "https://api.github.com/users/DariaSova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DariaSova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DariaSova/subscriptions",
            "organizations_url": "https://api.github.com/users/DariaSova/orgs",
            "repos_url": "https://api.github.com/users/DariaSova/repos",
            "events_url": "https://api.github.com/users/DariaSova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DariaSova/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@eladmica \r\nanswering your questions:\r\nYah, ideally we shouldn't. But before it was hardcoded so this is kind of the first step to move away from that. API token expires in certain amount of minutes, that's why I made a struct that gets the token and it's expiration time. So, ideally, we should be requesting a new token once existing one expires, but i haven't implemented that logic yet, so for now it requests it with every API call (although it seems to return the same token while it's valid)",
        "created_at": "2017-04-04T01:46:58Z",
        "updated_at": "2017-04-04T01:46:58Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562565",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562565"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562565"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109350605
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562672",
        "pull_request_review_id": 30672815,
        "id": 109562672,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU2MjY3Mg==",
        "diff_hunk": "@@ -8,20 +8,26 @@ import (\n \t\"net/http\"\n \t\"bytes\"\n \t\"strings\"\n-\n-\t\"github.com/clarifai/clarifai-go\"\n \t\"github.com/gin-gonic/gin\"\n+\t\"os\"\n+\t\"net/url\"\n )\n \n const (\n \tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n )\n \n type Server struct {\n \tapp    *gin.Engine\n-\tclient *clarifai.Client\n }\n \n+type AccessToken struct {\n+\tToken string `json:\"access_token\"`\n+\tExpiresIn int `json:\"expires_in\"`",
        "path": "server.go",
        "position": 23,
        "original_position": 23,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "DariaSova",
            "id": 10904238,
            "node_id": "MDQ6VXNlcjEwOTA0MjM4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10904238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DariaSova",
            "html_url": "https://github.com/DariaSova",
            "followers_url": "https://api.github.com/users/DariaSova/followers",
            "following_url": "https://api.github.com/users/DariaSova/following{/other_user}",
            "gists_url": "https://api.github.com/users/DariaSova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DariaSova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DariaSova/subscriptions",
            "organizations_url": "https://api.github.com/users/DariaSova/orgs",
            "repos_url": "https://api.github.com/users/DariaSova/repos",
            "events_url": "https://api.github.com/users/DariaSova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DariaSova/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "As I mentioned above, it is not used yet, but it will be, so I just decided to get all the information we need for future logic, later on, we should only request the token after expires_in time passes",
        "created_at": "2017-04-04T01:48:14Z",
        "updated_at": "2017-04-04T01:48:14Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562672",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562672"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562672"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109352359
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562918",
        "pull_request_review_id": 30673057,
        "id": 109562918,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU2MjkxOA==",
        "diff_hunk": "@@ -202,20 +188,63 @@ func getRequestBody(input string) (*http.Request, error) {\n \tinputs = append(inputs, data)\n \treqBody := RequestBody{inputs}\n \tfmt.Print(reqBody)\n-\t//reqBodyBytes, err := json.Marshal(reqBody)\n-\t//if err != nil {\n-\t\t//return nil, err\n-\t//}\n \n \tb := new(bytes.Buffer)\n-  err := json.NewEncoder(b).Encode(reqBody)\n+\terr := json.NewEncoder(b).Encode(reqBody)\n \treq, err := http.NewRequest(\"POST\", clarifaiApi, b)\n \tfmt.Print(req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\treq.Header.Add(\"Authorization\", `Bearer ThzzqYyVARtJdLbTQDwfRpa1FOk8w6`)\n+\treq.Header.Add(\"Authorization\", `Bearer ` + clarifai_token.Token)\n \treq.Header.Add(\"Content-Type\", `application/json`)\n \treturn req, nil\n }\n+\n+func getAccesToken() AccessToken {",
        "path": "server.go",
        "position": 117,
        "original_position": 117,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "DariaSova",
            "id": 10904238,
            "node_id": "MDQ6VXNlcjEwOTA0MjM4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10904238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DariaSova",
            "html_url": "https://github.com/DariaSova",
            "followers_url": "https://api.github.com/users/DariaSova/followers",
            "following_url": "https://api.github.com/users/DariaSova/following{/other_user}",
            "gists_url": "https://api.github.com/users/DariaSova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DariaSova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DariaSova/subscriptions",
            "organizations_url": "https://api.github.com/users/DariaSova/orgs",
            "repos_url": "https://api.github.com/users/DariaSova/repos",
            "events_url": "https://api.github.com/users/DariaSova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DariaSova/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The function will be too big imo, I like having the smaller function possible doing one thing, then it's easier to test and modify code, so here one makes request, the other extracts the data we need\r\n",
        "created_at": "2017-04-04T01:50:59Z",
        "updated_at": "2017-04-04T01:50:59Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562918",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562918"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562918"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109352733
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562971",
        "pull_request_review_id": 30673103,
        "id": 109562971,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU2Mjk3MQ==",
        "diff_hunk": "@@ -202,20 +188,63 @@ func getRequestBody(input string) (*http.Request, error) {\n \tinputs = append(inputs, data)\n \treqBody := RequestBody{inputs}\n \tfmt.Print(reqBody)\n-\t//reqBodyBytes, err := json.Marshal(reqBody)\n-\t//if err != nil {\n-\t\t//return nil, err\n-\t//}\n \n \tb := new(bytes.Buffer)\n-  err := json.NewEncoder(b).Encode(reqBody)\n+\terr := json.NewEncoder(b).Encode(reqBody)\n \treq, err := http.NewRequest(\"POST\", clarifaiApi, b)\n \tfmt.Print(req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\treq.Header.Add(\"Authorization\", `Bearer ThzzqYyVARtJdLbTQDwfRpa1FOk8w6`)\n+\treq.Header.Add(\"Authorization\", `Bearer ` + clarifai_token.Token)\n \treq.Header.Add(\"Content-Type\", `application/json`)\n \treturn req, nil\n }\n+\n+func getAccesToken() AccessToken {\n+\tCLARIFAI_ID := os.Getenv(\"CLARIFAI_CLIENT_ID\")\n+\tCLARIFAI_SECRET_KEY := os.Getenv(\"CLARIFAI_SECRET_KEY\")\n+\n+\tresponseData := authRequest(CLARIFAI_ID, CLARIFAI_SECRET_KEY)\n+\tvar token AccessToken\n+\trawIn := json.RawMessage(responseData)\n+\n+\tbytes, err := rawIn.MarshalJSON()\n+\tif err != nil {\n+\t\tfmt.Print(\"\\nERROR Parsing authentication response\")\n+\t\tpanic(err)\n+\t}\n+\n+\terr = json.Unmarshal(bytes, &token)\n+\tif err != nil {\n+\t\tfmt.Print(\"\\nERROR Parsing authentication json string\")\n+\t\tpanic(err)\n+\t}\n+\tfmt.Print(\"\\nRESULTS: \")\n+\tfmt.Print(token.Token)\n+\tfmt.Print(token.ExpiresIn)\n+\n+\treturn token\n+}\n+\n+func authRequest(CLIENT_ID string, SECRET_KEY string) []byte {\n+\n+\tresp, err := http.PostForm(clarifyAuth, url.Values{\"grant_type\": {\"client_credentials\"},\n+\t\t\"client_id\": { CLIENT_ID },\n+\t\t\"client_secret\": { SECRET_KEY } })\n+\n+\tfmt.Print(\"\\nAuthentication Request constructed and sent\")\n+\n+\tif err != nil {\n+\t\tpanic(err)",
        "path": "server.go",
        "position": 152,
        "original_position": 152,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "DariaSova",
            "id": 10904238,
            "node_id": "MDQ6VXNlcjEwOTA0MjM4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10904238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DariaSova",
            "html_url": "https://github.com/DariaSova",
            "followers_url": "https://api.github.com/users/DariaSova/followers",
            "following_url": "https://api.github.com/users/DariaSova/following{/other_user}",
            "gists_url": "https://api.github.com/users/DariaSova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DariaSova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DariaSova/subscriptions",
            "organizations_url": "https://api.github.com/users/DariaSova/orgs",
            "repos_url": "https://api.github.com/users/DariaSova/repos",
            "events_url": "https://api.github.com/users/DariaSova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DariaSova/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "also @tomyang729 agreed, i think we need a better logging system too\r\n",
        "created_at": "2017-04-04T01:51:29Z",
        "updated_at": "2017-04-04T01:51:29Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562971",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109562971"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109562971"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109350605
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109568647",
        "pull_request_review_id": 30678751,
        "id": 109568647,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU2ODY0Nw==",
        "diff_hunk": "@@ -202,20 +188,63 @@ func getRequestBody(input string) (*http.Request, error) {\n \tinputs = append(inputs, data)\n \treqBody := RequestBody{inputs}\n \tfmt.Print(reqBody)\n-\t//reqBodyBytes, err := json.Marshal(reqBody)\n-\t//if err != nil {\n-\t\t//return nil, err\n-\t//}\n \n \tb := new(bytes.Buffer)\n-  err := json.NewEncoder(b).Encode(reqBody)\n+\terr := json.NewEncoder(b).Encode(reqBody)\n \treq, err := http.NewRequest(\"POST\", clarifaiApi, b)\n \tfmt.Print(req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\treq.Header.Add(\"Authorization\", `Bearer ThzzqYyVARtJdLbTQDwfRpa1FOk8w6`)\n+\treq.Header.Add(\"Authorization\", `Bearer ` + clarifai_token.Token)\n \treq.Header.Add(\"Content-Type\", `application/json`)\n \treturn req, nil\n }\n+\n+func getAccesToken() AccessToken {",
        "path": "server.go",
        "position": 117,
        "original_position": 117,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah since we need token and other stuff. I'm fine with separate them into multiple functions",
        "created_at": "2017-04-04T02:59:22Z",
        "updated_at": "2017-04-04T02:59:22Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109568647",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109568647"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109568647"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109352733
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109568173",
        "pull_request_review_id": 30678303,
        "id": 109568173,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU2ODE3Mw==",
        "diff_hunk": "@@ -8,20 +8,26 @@ import (\n \t\"net/http\"\n \t\"bytes\"\n \t\"strings\"\n-\n-\t\"github.com/clarifai/clarifai-go\"\n \t\"github.com/gin-gonic/gin\"\n+\t\"os\"\n+\t\"net/url\"\n )\n \n const (\n \tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n )\n \n type Server struct {\n \tapp    *gin.Engine\n-\tclient *clarifai.Client\n }\n \n+type AccessToken struct {\n+\tToken string `json:\"access_token\"`\n+\tExpiresIn int `json:\"expires_in\"`",
        "path": "server.go",
        "position": 23,
        "original_position": 23,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see. Sorry, that's my bad. Yah we should only request new token when the old one is about to expire, as it doesn't make sense to make extra calls for new token per request",
        "created_at": "2017-04-04T02:53:54Z",
        "updated_at": "2017-04-04T03:00:48Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109568173",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109568173"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109568173"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109352359
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109571017",
        "pull_request_review_id": 30681053,
        "id": 109571017,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU3MTAxNw==",
        "diff_hunk": "@@ -8,20 +8,26 @@ import (\n \t\"net/http\"\n \t\"bytes\"\n \t\"strings\"\n-\n-\t\"github.com/clarifai/clarifai-go\"\n \t\"github.com/gin-gonic/gin\"\n+\t\"os\"\n+\t\"net/url\"\n )\n \n const (\n \tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"",
        "path": "server.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "DariaSova",
            "id": 10904238,
            "node_id": "MDQ6VXNlcjEwOTA0MjM4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10904238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DariaSova",
            "html_url": "https://github.com/DariaSova",
            "followers_url": "https://api.github.com/users/DariaSova/followers",
            "following_url": "https://api.github.com/users/DariaSova/following{/other_user}",
            "gists_url": "https://api.github.com/users/DariaSova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DariaSova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DariaSova/subscriptions",
            "organizations_url": "https://api.github.com/users/DariaSova/orgs",
            "repos_url": "https://api.github.com/users/DariaSova/repos",
            "events_url": "https://api.github.com/users/DariaSova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DariaSova/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oh just looked it up, there is no end point \"https://api.clarifai.com/v2/token\" yet so they suggest using v1 for now",
        "created_at": "2017-04-04T03:31:46Z",
        "updated_at": "2017-04-04T03:31:47Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109571017",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109571017"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109571017"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109348669
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109572568",
        "pull_request_review_id": 30682701,
        "id": 109572568,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU3MjU2OA==",
        "diff_hunk": "@@ -202,20 +188,63 @@ func getRequestBody(input string) (*http.Request, error) {\n \tinputs = append(inputs, data)\n \treqBody := RequestBody{inputs}\n \tfmt.Print(reqBody)\n-\t//reqBodyBytes, err := json.Marshal(reqBody)\n-\t//if err != nil {\n-\t\t//return nil, err\n-\t//}\n \n \tb := new(bytes.Buffer)\n-  err := json.NewEncoder(b).Encode(reqBody)\n+\terr := json.NewEncoder(b).Encode(reqBody)\n \treq, err := http.NewRequest(\"POST\", clarifaiApi, b)\n \tfmt.Print(req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\treq.Header.Add(\"Authorization\", `Bearer ThzzqYyVARtJdLbTQDwfRpa1FOk8w6`)\n+\treq.Header.Add(\"Authorization\", `Bearer ` + clarifai_token.Token)\n \treq.Header.Add(\"Content-Type\", `application/json`)\n \treturn req, nil\n }\n+\n+func getAccesToken() AccessToken {\n+\tCLARIFAI_ID := os.Getenv(\"CLARIFAI_CLIENT_ID\")\n+\tCLARIFAI_SECRET_KEY := os.Getenv(\"CLARIFAI_SECRET_KEY\")\n+\n+\tresponseData := authRequest(CLARIFAI_ID, CLARIFAI_SECRET_KEY)\n+\tvar token AccessToken\n+\trawIn := json.RawMessage(responseData)\n+\n+\tbytes, err := rawIn.MarshalJSON()\n+\tif err != nil {\n+\t\tfmt.Print(\"\\nERROR Parsing authentication response\")\n+\t\tpanic(err)\n+\t}\n+\n+\terr = json.Unmarshal(bytes, &token)\n+\tif err != nil {\n+\t\tfmt.Print(\"\\nERROR Parsing authentication json string\")\n+\t\tpanic(err)\n+\t}\n+\tfmt.Print(\"\\nRESULTS: \")\n+\tfmt.Print(token.Token)\n+\tfmt.Print(token.ExpiresIn)\n+\n+\treturn token\n+}\n+\n+func authRequest(CLIENT_ID string, SECRET_KEY string) []byte {\n+\n+\tresp, err := http.PostForm(clarifyAuth, url.Values{\"grant_type\": {\"client_credentials\"},\n+\t\t\"client_id\": { CLIENT_ID },\n+\t\t\"client_secret\": { SECRET_KEY } })\n+\n+\tfmt.Print(\"\\nAuthentication Request constructed and sent\")\n+\n+\tif err != nil {\n+\t\tpanic(err)",
        "path": "server.go",
        "position": 152,
        "original_position": 152,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "eladmica",
            "id": 9302865,
            "node_id": "MDQ6VXNlcjkzMDI4NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/9302865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eladmica",
            "html_url": "https://github.com/eladmica",
            "followers_url": "https://api.github.com/users/eladmica/followers",
            "following_url": "https://api.github.com/users/eladmica/following{/other_user}",
            "gists_url": "https://api.github.com/users/eladmica/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eladmica/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eladmica/subscriptions",
            "organizations_url": "https://api.github.com/users/eladmica/orgs",
            "repos_url": "https://api.github.com/users/eladmica/repos",
            "events_url": "https://api.github.com/users/eladmica/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eladmica/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ohhh nice - i though we have to renew it manually by creating an account after it expires",
        "created_at": "2017-04-04T03:53:23Z",
        "updated_at": "2017-04-04T03:53:23Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109572568",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109572568"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109572568"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109350605
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109826949",
        "pull_request_review_id": 30953187,
        "id": 109826949,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTgyNjk0OQ==",
        "diff_hunk": "@@ -8,20 +8,26 @@ import (\n \t\"net/http\"\n \t\"bytes\"\n \t\"strings\"\n-\n-\t\"github.com/clarifai/clarifai-go\"\n \t\"github.com/gin-gonic/gin\"\n+\t\"os\"\n+\t\"net/url\"\n )\n \n const (\n \tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"",
        "path": "server.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's wired. As I saw they use v2 to get access_token in the guide example\r\n `curl -X POST \\\r\n    -u \"$CLARIFAI_APP_ID:$CLARIFAI_APP_SECRET\" \\\r\n    -d \"grant_type=client_credentials\" \\\r\n    https://api.clarifai.com/v2/token`\r\nAnd all the other api endpoints use v2",
        "created_at": "2017-04-05T04:08:14Z",
        "updated_at": "2017-04-05T04:08:14Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109826949",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109826949"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109826949"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109348669
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109827047",
        "pull_request_review_id": 30953279,
        "id": 109827047,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTgyNzA0Nw==",
        "diff_hunk": "@@ -8,20 +8,26 @@ import (\n \t\"net/http\"\n \t\"bytes\"\n \t\"strings\"\n-\n-\t\"github.com/clarifai/clarifai-go\"\n \t\"github.com/gin-gonic/gin\"\n+\t\"os\"\n+\t\"net/url\"\n )\n \n const (\n \tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"",
        "path": "server.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see the reason now. The current API is in v2, see https://developer.clarifai.com/guide/ . And the old v1 is referenced here https://developer.clarifai.com/guide-v1/ . I think we should stick with v2",
        "created_at": "2017-04-05T04:10:05Z",
        "updated_at": "2017-04-05T04:10:05Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109827047",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109827047"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109827047"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109348669
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109827188",
        "pull_request_review_id": 30953420,
        "id": 109827188,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTgyNzE4OA==",
        "diff_hunk": "@@ -8,20 +8,26 @@ import (\n \t\"net/http\"\n \t\"bytes\"\n \t\"strings\"\n-\n-\t\"github.com/clarifai/clarifai-go\"\n \t\"github.com/gin-gonic/gin\"\n+\t\"os\"\n+\t\"net/url\"\n )\n \n const (\n \tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"",
        "path": "server.go",
        "position": 13,
        "original_position": 13,
        "commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "original_commit_id": "d929e54f4fe849668d6eae6c7a36636fd4901d33",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Other than this small change I'm good with merging. Sorry for coming back and forth. I was a bit picky \ud83d\ude06 \r\n\ud83d\udc4d ",
        "created_at": "2017-04-05T04:12:05Z",
        "updated_at": "2017-04-05T04:12:05Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109827188",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/37",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/109827188"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/37#discussion_r109827188"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/37"
            }
        },
        "in_reply_to_id": 109348669
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110587869",
        "pull_request_review_id": 31769982,
        "id": 110587869,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDU4Nzg2OQ==",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"net/http\"\n+\t\"net/url\"\n+\t\"os\"\n+\t\"sort\"\n+\t\"strings\"\n+)\n+\n+const (\n+\tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n+\tminValue    = 0.72\n+\tmaxTags     = 10\n+)\n+\n+type ClarifaiClient struct {\n+\tToken  string\n+\tExpiry int\n+\tAccess bool\n+}\n+\n+type ClarifyTag struct {\n+\tName  string  `json:\"name\"`\n+\tValue float64 `json:\"value\"`\n+}\n+\n+func NewClarifaiClient() *ClarifaiClient {\n+\treturn &ClarifaiClient{\n+\t\tAccess: false,\n+\t}\n+}\n+\n+// Check whether the client still has access rights to Clarifai\n+func (client *ClarifaiClient) isAccess() bool {\n+\tif !client.Access || client.Expiry <= 0 {\n+\t\tclient.Access = false\n+\t\treturn false\n+\t}\n+\treturn true\n+}\n+\n+// Refresh the access token\n+func (client *ClarifaiClient) RefreshAccesToken() {\n+\tCLARIFAI_ID := os.Getenv(\"CLARIFAI_CLIENT_ID\")\n+\tCLARIFAI_SECRET_KEY := os.Getenv(\"CLARIFAI_SECRET_KEY\")\n+\n+\tresponseData := authRequest(CLARIFAI_ID, CLARIFAI_SECRET_KEY)\n+\tvar token struct {",
        "path": "clarifai.go",
        "position": 54,
        "original_position": 54,
        "commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "original_commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this a short-hand for `type Token struct {...}` and instantiate Token? Just wondering what's the difference and when should we use it",
        "created_at": "2017-04-10T07:24:02Z",
        "updated_at": "2017-04-10T07:24:03Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110587869",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/41",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110587869"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110587869"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/41"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110590087",
        "pull_request_review_id": 31772389,
        "id": 110590087,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDU5MDA4Nw==",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"net/http\"\n+\t\"net/url\"\n+\t\"os\"\n+\t\"sort\"\n+\t\"strings\"\n+)\n+\n+const (\n+\tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n+\tminValue    = 0.72\n+\tmaxTags     = 10\n+)\n+\n+type ClarifaiClient struct {\n+\tToken  string\n+\tExpiry int\n+\tAccess bool\n+}\n+\n+type ClarifyTag struct {\n+\tName  string  `json:\"name\"`\n+\tValue float64 `json:\"value\"`\n+}\n+\n+func NewClarifaiClient() *ClarifaiClient {\n+\treturn &ClarifaiClient{\n+\t\tAccess: false,\n+\t}\n+}\n+\n+// Check whether the client still has access rights to Clarifai\n+func (client *ClarifaiClient) isAccess() bool {\n+\tif !client.Access || client.Expiry <= 0 {\n+\t\tclient.Access = false\n+\t\treturn false\n+\t}\n+\treturn true\n+}\n+\n+// Refresh the access token\n+func (client *ClarifaiClient) RefreshAccesToken() {\n+\tCLARIFAI_ID := os.Getenv(\"CLARIFAI_CLIENT_ID\")\n+\tCLARIFAI_SECRET_KEY := os.Getenv(\"CLARIFAI_SECRET_KEY\")\n+\n+\tresponseData := authRequest(CLARIFAI_ID, CLARIFAI_SECRET_KEY)\n+\tvar token struct {\n+\t\t//type AccessToken struct {\n+\t\tToken  string `json:\"access_token\"`\n+\t\tExpiry int    `json:\"expires_in\"`\n+\t\t//}\n+\t}\n+\trawIn := json.RawMessage(responseData)\n+\n+\tb, err := rawIn.MarshalJSON()\n+\tif err != nil {\n+\t\tfmt.Println(\"ERROR Parsing authentication response\")\n+\t\tpanic(err)\n+\t}\n+\n+\terr = json.Unmarshal(b, &token)\n+\tif err != nil {\n+\t\tfmt.Println(\"ERROR Parsing authentication json string\")\n+\t\tpanic(err)\n+\t}\n+\n+\tfmt.Printf(\"Token: %v\\n\", token.Token)\n+\tfmt.Printf(\"Expiry: %v\\n\", token.Expiry)\n+\n+\tclient.Token = token.Token\n+\tclient.Expiry = token.Expiry\n+\tclient.Access = true\n+\n+}\n+\n+func authRequest(CLIENT_ID string, SECRET_KEY string) []byte {\n+\tresp, err := http.PostForm(clarifyAuth, url.Values{\"grant_type\": {\"client_credentials\"},\n+\t\t\"client_id\":     {CLIENT_ID},\n+\t\t\"client_secret\": {SECRET_KEY}})\n+\n+\tfmt.Print(\"\\nAuthentication Request constructed and sent\")\n+\n+\tif err != nil {\n+\t\tpanic(err)",
        "path": "clarifai.go",
        "position": 91,
        "original_position": 91,
        "commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "original_commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe we can handle this error in a more gentle way. Like log the error into console and return this error message or an error code so that the caller can catch it and added this error to response",
        "created_at": "2017-04-10T07:38:29Z",
        "updated_at": "2017-04-10T07:38:29Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110590087",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/41",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110590087"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110590087"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/41"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110590840",
        "pull_request_review_id": 31773171,
        "id": 110590840,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDU5MDg0MA==",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"net/http\"\n+\t\"net/url\"\n+\t\"os\"\n+\t\"sort\"\n+\t\"strings\"\n+)\n+\n+const (\n+\tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n+\tminValue    = 0.72\n+\tmaxTags     = 10\n+)\n+\n+type ClarifaiClient struct {\n+\tToken  string\n+\tExpiry int\n+\tAccess bool",
        "path": "clarifai.go",
        "position": 25,
        "original_position": 25,
        "commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "original_commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What is `Access` for? From my understanding, the accessibility only depends on if the token is expired or not",
        "created_at": "2017-04-10T07:42:44Z",
        "updated_at": "2017-04-10T07:44:18Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110590840",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/41",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110590840"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110590840"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/41"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110591288",
        "pull_request_review_id": 31773647,
        "id": 110591288,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDU5MTI4OA==",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"net/http\"\n+\t\"net/url\"\n+\t\"os\"\n+\t\"sort\"\n+\t\"strings\"\n+)\n+\n+const (\n+\tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n+\tminValue    = 0.72\n+\tmaxTags     = 10\n+)\n+\n+type ClarifaiClient struct {\n+\tToken  string\n+\tExpiry int\n+\tAccess bool\n+}\n+\n+type ClarifyTag struct {\n+\tName  string  `json:\"name\"`\n+\tValue float64 `json:\"value\"`\n+}\n+\n+func NewClarifaiClient() *ClarifaiClient {\n+\treturn &ClarifaiClient{\n+\t\tAccess: false,\n+\t}\n+}\n+\n+// Check whether the client still has access rights to Clarifai\n+func (client *ClarifaiClient) isAccess() bool {\n+\tif !client.Access || client.Expiry <= 0 {\n+\t\tclient.Access = false\n+\t\treturn false\n+\t}\n+\treturn true\n+}\n+\n+// Refresh the access token\n+func (client *ClarifaiClient) RefreshAccesToken() {\n+\tCLARIFAI_ID := os.Getenv(\"CLARIFAI_CLIENT_ID\")\n+\tCLARIFAI_SECRET_KEY := os.Getenv(\"CLARIFAI_SECRET_KEY\")\n+\n+\tresponseData := authRequest(CLARIFAI_ID, CLARIFAI_SECRET_KEY)\n+\tvar token struct {",
        "path": "clarifai.go",
        "position": 54,
        "original_position": 54,
        "commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "original_commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "user": {
            "login": "eladmica",
            "id": 9302865,
            "node_id": "MDQ6VXNlcjkzMDI4NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/9302865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eladmica",
            "html_url": "https://github.com/eladmica",
            "followers_url": "https://api.github.com/users/eladmica/followers",
            "following_url": "https://api.github.com/users/eladmica/following{/other_user}",
            "gists_url": "https://api.github.com/users/eladmica/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eladmica/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eladmica/subscriptions",
            "organizations_url": "https://api.github.com/users/eladmica/orgs",
            "repos_url": "https://api.github.com/users/eladmica/repos",
            "events_url": "https://api.github.com/users/eladmica/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eladmica/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "umm not quite, It's just a local struct used to Unmarshal the json response. We don't have a global Token struct anymore (the information it used to contain is now part of the ClarifaiClient struct)",
        "created_at": "2017-04-10T07:45:27Z",
        "updated_at": "2017-04-10T07:45:27Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110591288",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/41",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110591288"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110591288"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/41"
            }
        },
        "in_reply_to_id": 110587869
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110591495",
        "pull_request_review_id": 31773854,
        "id": 110591495,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDU5MTQ5NQ==",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"net/http\"\n+\t\"net/url\"\n+\t\"os\"\n+\t\"sort\"\n+\t\"strings\"\n+)\n+\n+const (\n+\tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n+\tminValue    = 0.72\n+\tmaxTags     = 10\n+)\n+\n+type ClarifaiClient struct {\n+\tToken  string\n+\tExpiry int\n+\tAccess bool\n+}\n+\n+type ClarifyTag struct {\n+\tName  string  `json:\"name\"`\n+\tValue float64 `json:\"value\"`\n+}\n+\n+func NewClarifaiClient() *ClarifaiClient {\n+\treturn &ClarifaiClient{\n+\t\tAccess: false,\n+\t}\n+}\n+\n+// Check whether the client still has access rights to Clarifai\n+func (client *ClarifaiClient) isAccess() bool {\n+\tif !client.Access || client.Expiry <= 0 {\n+\t\tclient.Access = false\n+\t\treturn false\n+\t}\n+\treturn true\n+}\n+\n+// Refresh the access token\n+func (client *ClarifaiClient) RefreshAccesToken() {\n+\tCLARIFAI_ID := os.Getenv(\"CLARIFAI_CLIENT_ID\")\n+\tCLARIFAI_SECRET_KEY := os.Getenv(\"CLARIFAI_SECRET_KEY\")\n+\n+\tresponseData := authRequest(CLARIFAI_ID, CLARIFAI_SECRET_KEY)\n+\tvar token struct {\n+\t\t//type AccessToken struct {\n+\t\tToken  string `json:\"access_token\"`\n+\t\tExpiry int    `json:\"expires_in\"`\n+\t\t//}\n+\t}\n+\trawIn := json.RawMessage(responseData)\n+\n+\tb, err := rawIn.MarshalJSON()\n+\tif err != nil {\n+\t\tfmt.Println(\"ERROR Parsing authentication response\")\n+\t\tpanic(err)\n+\t}\n+\n+\terr = json.Unmarshal(b, &token)\n+\tif err != nil {\n+\t\tfmt.Println(\"ERROR Parsing authentication json string\")\n+\t\tpanic(err)\n+\t}\n+\n+\tfmt.Printf(\"Token: %v\\n\", token.Token)\n+\tfmt.Printf(\"Expiry: %v\\n\", token.Expiry)\n+\n+\tclient.Token = token.Token\n+\tclient.Expiry = token.Expiry\n+\tclient.Access = true\n+\n+}\n+\n+func authRequest(CLIENT_ID string, SECRET_KEY string) []byte {\n+\tresp, err := http.PostForm(clarifyAuth, url.Values{\"grant_type\": {\"client_credentials\"},\n+\t\t\"client_id\":     {CLIENT_ID},\n+\t\t\"client_secret\": {SECRET_KEY}})\n+\n+\tfmt.Print(\"\\nAuthentication Request constructed and sent\")\n+\n+\tif err != nil {\n+\t\tpanic(err)",
        "path": "clarifai.go",
        "position": 91,
        "original_position": 91,
        "commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "original_commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "user": {
            "login": "eladmica",
            "id": 9302865,
            "node_id": "MDQ6VXNlcjkzMDI4NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/9302865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eladmica",
            "html_url": "https://github.com/eladmica",
            "followers_url": "https://api.github.com/users/eladmica/followers",
            "following_url": "https://api.github.com/users/eladmica/following{/other_user}",
            "gists_url": "https://api.github.com/users/eladmica/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eladmica/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eladmica/subscriptions",
            "organizations_url": "https://api.github.com/users/eladmica/orgs",
            "repos_url": "https://api.github.com/users/eladmica/repos",
            "events_url": "https://api.github.com/users/eladmica/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eladmica/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, I didn't really touch the existing code that wasn't part of the refactoring. We can do that later (we have some issue tickets open for that)",
        "created_at": "2017-04-10T07:46:52Z",
        "updated_at": "2017-04-10T07:46:52Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110591495",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/41",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110591495"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110591495"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/41"
            }
        },
        "in_reply_to_id": 110590087
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110591872",
        "pull_request_review_id": 31774256,
        "id": 110591872,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDU5MTg3Mg==",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"net/http\"\n+\t\"net/url\"\n+\t\"os\"\n+\t\"sort\"\n+\t\"strings\"\n+)\n+\n+const (\n+\tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n+\tminValue    = 0.72\n+\tmaxTags     = 10\n+)\n+\n+type ClarifaiClient struct {\n+\tToken  string\n+\tExpiry int\n+\tAccess bool",
        "path": "clarifai.go",
        "position": 25,
        "original_position": 25,
        "commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "original_commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "user": {
            "login": "eladmica",
            "id": 9302865,
            "node_id": "MDQ6VXNlcjkzMDI4NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/9302865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eladmica",
            "html_url": "https://github.com/eladmica",
            "followers_url": "https://api.github.com/users/eladmica/followers",
            "following_url": "https://api.github.com/users/eladmica/following{/other_user}",
            "gists_url": "https://api.github.com/users/eladmica/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eladmica/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eladmica/subscriptions",
            "organizations_url": "https://api.github.com/users/eladmica/orgs",
            "repos_url": "https://api.github.com/users/eladmica/repos",
            "events_url": "https://api.github.com/users/eladmica/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eladmica/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Access is just a flag that signals whether the client still has access to the api. I just put it there for now, but this is still a work-in-progress (we need to write something that monitors the expiration and requests a renewal only when needed)",
        "created_at": "2017-04-10T07:49:18Z",
        "updated_at": "2017-04-10T07:49:18Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110591872",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/41",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110591872"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110591872"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/41"
            }
        },
        "in_reply_to_id": 110590840
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110708915",
        "pull_request_review_id": 31900700,
        "id": 110708915,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDcwODkxNQ==",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"net/http\"\n+\t\"net/url\"\n+\t\"os\"\n+\t\"sort\"\n+\t\"strings\"\n+)\n+\n+const (\n+\tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n+\tminValue    = 0.72\n+\tmaxTags     = 10\n+)\n+\n+type ClarifaiClient struct {\n+\tToken  string\n+\tExpiry int\n+\tAccess bool\n+}\n+\n+type ClarifyTag struct {\n+\tName  string  `json:\"name\"`\n+\tValue float64 `json:\"value\"`\n+}\n+\n+func NewClarifaiClient() *ClarifaiClient {\n+\treturn &ClarifaiClient{\n+\t\tAccess: false,\n+\t}\n+}\n+\n+// Check whether the client still has access rights to Clarifai\n+func (client *ClarifaiClient) isAccess() bool {\n+\tif !client.Access || client.Expiry <= 0 {",
        "path": "clarifai.go",
        "position": 41,
        "original_position": 41,
        "commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "original_commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "user": {
            "login": "DariaSova",
            "id": 10904238,
            "node_id": "MDQ6VXNlcjEwOTA0MjM4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10904238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DariaSova",
            "html_url": "https://github.com/DariaSova",
            "followers_url": "https://api.github.com/users/DariaSova/followers",
            "following_url": "https://api.github.com/users/DariaSova/following{/other_user}",
            "gists_url": "https://api.github.com/users/DariaSova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DariaSova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DariaSova/subscriptions",
            "organizations_url": "https://api.github.com/users/DariaSova/orgs",
            "repos_url": "https://api.github.com/users/DariaSova/repos",
            "events_url": "https://api.github.com/users/DariaSova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DariaSova/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm a bit confused, how is this checking when it expires? We get back X minutes, so in X minutes it's expires, so we have to check time.now + X minutes if that passes, then we need a new token, isn't it?",
        "created_at": "2017-04-10T17:02:28Z",
        "updated_at": "2017-04-10T17:02:34Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110708915",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/41",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110708915"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110708915"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/41"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110714269",
        "pull_request_review_id": 31906628,
        "id": 110714269,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDcxNDI2OQ==",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"net/http\"\n+\t\"net/url\"\n+\t\"os\"\n+\t\"sort\"\n+\t\"strings\"\n+)\n+\n+const (\n+\tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n+\tminValue    = 0.72\n+\tmaxTags     = 10\n+)\n+\n+type ClarifaiClient struct {\n+\tToken  string\n+\tExpiry int\n+\tAccess bool\n+}\n+\n+type ClarifyTag struct {\n+\tName  string  `json:\"name\"`\n+\tValue float64 `json:\"value\"`\n+}\n+\n+func NewClarifaiClient() *ClarifaiClient {\n+\treturn &ClarifaiClient{\n+\t\tAccess: false,\n+\t}\n+}\n+\n+// Check whether the client still has access rights to Clarifai\n+func (client *ClarifaiClient) isAccess() bool {\n+\tif !client.Access || client.Expiry <= 0 {",
        "path": "clarifai.go",
        "position": 41,
        "original_position": 41,
        "commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "original_commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "user": {
            "login": "eladmica",
            "id": 9302865,
            "node_id": "MDQ6VXNlcjkzMDI4NjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/9302865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eladmica",
            "html_url": "https://github.com/eladmica",
            "followers_url": "https://api.github.com/users/eladmica/followers",
            "following_url": "https://api.github.com/users/eladmica/following{/other_user}",
            "gists_url": "https://api.github.com/users/eladmica/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eladmica/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eladmica/subscriptions",
            "organizations_url": "https://api.github.com/users/eladmica/orgs",
            "repos_url": "https://api.github.com/users/eladmica/repos",
            "events_url": "https://api.github.com/users/eladmica/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eladmica/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "it's not, as i said this is still a work-in-progress. I was already tired of all the refactoring so I just put it there to get the idea across :). And yeah we can do that, but ideally i would like to remove all that from the request and have a function that does that automatically",
        "created_at": "2017-04-10T17:27:04Z",
        "updated_at": "2017-04-10T17:27:04Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110714269",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/41",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110714269"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110714269"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/41"
            }
        },
        "in_reply_to_id": 110708915
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110724148",
        "pull_request_review_id": 31917222,
        "id": 110724148,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDcyNDE0OA==",
        "diff_hunk": "@@ -0,0 +1,245 @@\n+package main\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"net/http\"\n+\t\"net/url\"\n+\t\"os\"\n+\t\"sort\"\n+\t\"strings\"\n+)\n+\n+const (\n+\tclarifaiApi = \"https://api.clarifai.com/v2/models/aaa03c23b3724a16a56b629203edc62c/outputs\"\n+\tclarifyAuth = \"https://api.clarifai.com/v1/token\"\n+\tminValue    = 0.72\n+\tmaxTags     = 10\n+)\n+\n+type ClarifaiClient struct {\n+\tToken  string\n+\tExpiry int\n+\tAccess bool",
        "path": "clarifai.go",
        "position": 25,
        "original_position": 25,
        "commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "original_commit_id": "c2c63974686340b0b147baeecdc0de8db5a4e42b",
        "user": {
            "login": "tomyang729",
            "id": 15700985,
            "node_id": "MDQ6VXNlcjE1NzAwOTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15700985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomyang729",
            "html_url": "https://github.com/tomyang729",
            "followers_url": "https://api.github.com/users/tomyang729/followers",
            "following_url": "https://api.github.com/users/tomyang729/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomyang729/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomyang729/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomyang729/subscriptions",
            "organizations_url": "https://api.github.com/users/tomyang729/orgs",
            "repos_url": "https://api.github.com/users/tomyang729/repos",
            "events_url": "https://api.github.com/users/tomyang729/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomyang729/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see. I was about to ask why that `isAccess()` is not used \ud83d\ude06  But still, I don't think we need the `Access`. `isAccess()` is just to check if the token expired or not and it will be the predicate to indicate when we need to refresh the token\r\nBut as you said, you're still working on it, we can change it later",
        "created_at": "2017-04-10T18:08:55Z",
        "updated_at": "2017-04-10T18:11:22Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110724148",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/41",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/110724148"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/41#discussion_r110724148"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/41"
            }
        },
        "in_reply_to_id": 110590840
    },
    {
        "url": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/111257803",
        "pull_request_review_id": 32491229,
        "id": 111257803,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTI1NzgwMw==",
        "diff_hunk": "@@ -2,6 +2,9 @@\n /node_modules\n /bin\n \n+# git-crypt\n+tegGenKey",
        "path": ".gitignore",
        "position": 5,
        "original_position": 5,
        "commit_id": "aef8fcd69d95d5c901dde5bccf4c899fda3ac087",
        "original_commit_id": "9db35b2a48dcd87f9971a3af199a8e7b0be6d281",
        "user": {
            "login": "DariaSova",
            "id": 10904238,
            "node_id": "MDQ6VXNlcjEwOTA0MjM4",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10904238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DariaSova",
            "html_url": "https://github.com/DariaSova",
            "followers_url": "https://api.github.com/users/DariaSova/followers",
            "following_url": "https://api.github.com/users/DariaSova/following{/other_user}",
            "gists_url": "https://api.github.com/users/DariaSova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DariaSova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DariaSova/subscriptions",
            "organizations_url": "https://api.github.com/users/DariaSova/orgs",
            "repos_url": "https://api.github.com/users/DariaSova/repos",
            "events_url": "https://api.github.com/users/DariaSova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DariaSova/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "the key file should not be in the directory, so i don't think this is necessary. Usually you only want to share this with the developers and they store it where they want, a lot of people have a separate folder with keys for different projects ",
        "created_at": "2017-04-12T20:54:19Z",
        "updated_at": "2017-04-18T03:09:02Z",
        "html_url": "https://github.com/DariaSova/TagGen/pull/42#discussion_r111257803",
        "pull_request_url": "https://api.github.com/repos/DariaSova/TagGen/pulls/42",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/comments/111257803"
            },
            "html": {
                "href": "https://github.com/DariaSova/TagGen/pull/42#discussion_r111257803"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/DariaSova/TagGen/pulls/42"
            }
        }
    }
]