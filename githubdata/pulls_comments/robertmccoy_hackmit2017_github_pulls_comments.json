[
    {
        "url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139828631",
        "pull_request_review_id": 63815578,
        "id": 139828631,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTgyODYzMQ==",
        "diff_hunk": "@@ -1,14 +1,43 @@\n import cv2\n \n-cap = cv2.VideoCapture('ENTER VIDEO NAME HERE')\n-count = 0\n-while cap.isOpened():\n-    ret, frame = cap.read()\n-    cv2.imshow('window-name', frame)\n-    cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n-    count = count + 1\n-    if cv2.waitKey(10) & 0xFF == ord('q'):\n-        break\n-\n-cap.release()\n-cap.destroyAllWindows()\n+\n+def get_frames_entire_video(video_name):\n+    cap = cv2.VideoCapture(video_name)\n+    count = 0\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        cv2.imshow('window-name', frame)\n+        cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n+        count = count + 1\n+        if cv2.waitKey(10) & 0xFF == ord('q'):\n+            break\n+    cap.release()\n+    cap.destroyAllWindows()\n+\n+\n+def get_frames_of_all_letters(video_name, input_list):\n+    cap = cv2.VideoCapture(video_name)\n+\n+    frame_count = 1\n+    list_count = 0\n+    current_letter = input_list[0][0]\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        if input_list[list_count][1] <= frame_count <= input_list[list_count][2]:\n+            try:\n+                cv2.imwrite('test_frame%d_%s.jpg' % (frame_count, current_letter), frame)\n+                if frame_count == input_list[list_count][2]:\n+                    list_count += 1\n+                    current_letter = input_list[list_count][0]\n+            except IndexError:\n+                break",
        "path": "Python/Video_Processing/GetFrames.py",
        "position": null,
        "original_position": 45,
        "commit_id": "e2f023aee9d428eebadddbb7d13cdac74ac85c3e",
        "original_commit_id": "61bc4c9315d97fe7736c5a7219d33b43f5728864",
        "user": {
            "login": "RobertMcCoy",
            "id": 2020529,
            "node_id": "MDQ6VXNlcjIwMjA1Mjk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2020529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RobertMcCoy",
            "html_url": "https://github.com/RobertMcCoy",
            "followers_url": "https://api.github.com/users/RobertMcCoy/followers",
            "following_url": "https://api.github.com/users/RobertMcCoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/RobertMcCoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RobertMcCoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RobertMcCoy/subscriptions",
            "organizations_url": "https://api.github.com/users/RobertMcCoy/orgs",
            "repos_url": "https://api.github.com/users/RobertMcCoy/repos",
            "events_url": "https://api.github.com/users/RobertMcCoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RobertMcCoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Add error log to console so we know if the program has not output all of the frames",
        "created_at": "2017-09-19T21:55:12Z",
        "updated_at": "2017-09-19T22:31:09Z",
        "html_url": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139828631",
        "pull_request_url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139828631"
            },
            "html": {
                "href": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139828631"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139829146",
        "pull_request_review_id": 63815578,
        "id": 139829146,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTgyOTE0Ng==",
        "diff_hunk": "@@ -1,14 +1,43 @@\n import cv2\n \n-cap = cv2.VideoCapture('ENTER VIDEO NAME HERE')\n-count = 0\n-while cap.isOpened():\n-    ret, frame = cap.read()\n-    cv2.imshow('window-name', frame)\n-    cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n-    count = count + 1\n-    if cv2.waitKey(10) & 0xFF == ord('q'):\n-        break\n-\n-cap.release()\n-cap.destroyAllWindows()\n+\n+def get_frames_entire_video(video_name):\n+    cap = cv2.VideoCapture(video_name)\n+    count = 0\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        cv2.imshow('window-name', frame)\n+        cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n+        count = count + 1\n+        if cv2.waitKey(10) & 0xFF == ord('q'):\n+            break\n+    cap.release()\n+    cap.destroyAllWindows()\n+\n+\n+def get_frames_of_all_letters(video_name, input_list):\n+    cap = cv2.VideoCapture(video_name)\n+\n+    frame_count = 1\n+    list_count = 0\n+    current_letter = input_list[0][0]\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        if input_list[list_count][1] <= frame_count <= input_list[list_count][2]:\n+            try:\n+                cv2.imwrite('test_frame%d_%s.jpg' % (frame_count, current_letter), frame)",
        "path": "Python/Video_Processing/GetFrames.py",
        "position": null,
        "original_position": 40,
        "commit_id": "e2f023aee9d428eebadddbb7d13cdac74ac85c3e",
        "original_commit_id": "61bc4c9315d97fe7736c5a7219d33b43f5728864",
        "user": {
            "login": "RobertMcCoy",
            "id": 2020529,
            "node_id": "MDQ6VXNlcjIwMjA1Mjk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2020529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RobertMcCoy",
            "html_url": "https://github.com/RobertMcCoy",
            "followers_url": "https://api.github.com/users/RobertMcCoy/followers",
            "following_url": "https://api.github.com/users/RobertMcCoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/RobertMcCoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RobertMcCoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RobertMcCoy/subscriptions",
            "organizations_url": "https://api.github.com/users/RobertMcCoy/orgs",
            "repos_url": "https://api.github.com/users/RobertMcCoy/repos",
            "events_url": "https://api.github.com/users/RobertMcCoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RobertMcCoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "write to directory for the letter we are currently on, change name to match {<letter>\\<tranlator>_<c or d>_<frame>.png}",
        "created_at": "2017-09-19T21:57:35Z",
        "updated_at": "2017-09-19T22:31:09Z",
        "html_url": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139829146",
        "pull_request_url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139829146"
            },
            "html": {
                "href": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139829146"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139829382",
        "pull_request_review_id": 63815578,
        "id": 139829382,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTgyOTM4Mg==",
        "diff_hunk": "@@ -1,14 +1,43 @@\n import cv2\n \n-cap = cv2.VideoCapture('ENTER VIDEO NAME HERE')\n-count = 0\n-while cap.isOpened():\n-    ret, frame = cap.read()\n-    cv2.imshow('window-name', frame)\n-    cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n-    count = count + 1\n-    if cv2.waitKey(10) & 0xFF == ord('q'):\n-        break\n-\n-cap.release()\n-cap.destroyAllWindows()\n+\n+def get_frames_entire_video(video_name):\n+    cap = cv2.VideoCapture(video_name)\n+    count = 0\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        cv2.imshow('window-name', frame)\n+        cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n+        count = count + 1\n+        if cv2.waitKey(10) & 0xFF == ord('q'):\n+            break\n+    cap.release()\n+    cap.destroyAllWindows()\n+\n+\n+def get_frames_of_all_letters(video_name, input_list):\n+    cap = cv2.VideoCapture(video_name)\n+\n+    frame_count = 1\n+    list_count = 0\n+    current_letter = input_list[0][0]\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        if input_list[list_count][1] <= frame_count <= input_list[list_count][2]:\n+            try:\n+                cv2.imwrite('test_frame%d_%s.jpg' % (frame_count, current_letter), frame)\n+                if frame_count == input_list[list_count][2]:\n+                    list_count += 1\n+                    current_letter = input_list[list_count][0]\n+            except IndexError:\n+                break\n+        frame_count += 1\n+        print(frame_count)\n+        if cv2.waitKey(1) & 0xFF == ord('q') or not ret:\n+            break",
        "path": "Python/Video_Processing/GetFrames.py",
        "position": null,
        "original_position": 49,
        "commit_id": "e2f023aee9d428eebadddbb7d13cdac74ac85c3e",
        "original_commit_id": "61bc4c9315d97fe7736c5a7219d33b43f5728864",
        "user": {
            "login": "RobertMcCoy",
            "id": 2020529,
            "node_id": "MDQ6VXNlcjIwMjA1Mjk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2020529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RobertMcCoy",
            "html_url": "https://github.com/RobertMcCoy",
            "followers_url": "https://api.github.com/users/RobertMcCoy/followers",
            "following_url": "https://api.github.com/users/RobertMcCoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/RobertMcCoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RobertMcCoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RobertMcCoy/subscriptions",
            "organizations_url": "https://api.github.com/users/RobertMcCoy/orgs",
            "repos_url": "https://api.github.com/users/RobertMcCoy/repos",
            "events_url": "https://api.github.com/users/RobertMcCoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RobertMcCoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should this be moved up in case if the end of video is reached?",
        "created_at": "2017-09-19T21:58:40Z",
        "updated_at": "2017-09-19T22:31:09Z",
        "html_url": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139829382",
        "pull_request_url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139829382"
            },
            "html": {
                "href": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139829382"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139830252",
        "pull_request_review_id": 63817343,
        "id": 139830252,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTgzMDI1Mg==",
        "diff_hunk": "@@ -1,14 +1,43 @@\n import cv2\n \n-cap = cv2.VideoCapture('ENTER VIDEO NAME HERE')\n-count = 0\n-while cap.isOpened():\n-    ret, frame = cap.read()\n-    cv2.imshow('window-name', frame)\n-    cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n-    count = count + 1\n-    if cv2.waitKey(10) & 0xFF == ord('q'):\n-        break\n-\n-cap.release()\n-cap.destroyAllWindows()\n+\n+def get_frames_entire_video(video_name):\n+    cap = cv2.VideoCapture(video_name)\n+    count = 0\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        cv2.imshow('window-name', frame)\n+        cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n+        count = count + 1\n+        if cv2.waitKey(10) & 0xFF == ord('q'):\n+            break\n+    cap.release()\n+    cap.destroyAllWindows()\n+\n+\n+def get_frames_of_all_letters(video_name, input_list):\n+    cap = cv2.VideoCapture(video_name)\n+\n+    frame_count = 1\n+    list_count = 0\n+    current_letter = input_list[0][0]\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        if input_list[list_count][1] <= frame_count <= input_list[list_count][2]:\n+            try:\n+                cv2.imwrite('test_frame%d_%s.jpg' % (frame_count, current_letter), frame)",
        "path": "Python/Video_Processing/GetFrames.py",
        "position": null,
        "original_position": 40,
        "commit_id": "e2f023aee9d428eebadddbb7d13cdac74ac85c3e",
        "original_commit_id": "61bc4c9315d97fe7736c5a7219d33b43f5728864",
        "user": {
            "login": "dmeredith96",
            "id": 15249821,
            "node_id": "MDQ6VXNlcjE1MjQ5ODIx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15249821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmeredith96",
            "html_url": "https://github.com/dmeredith96",
            "followers_url": "https://api.github.com/users/dmeredith96/followers",
            "following_url": "https://api.github.com/users/dmeredith96/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmeredith96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmeredith96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmeredith96/subscriptions",
            "organizations_url": "https://api.github.com/users/dmeredith96/orgs",
            "repos_url": "https://api.github.com/users/dmeredith96/repos",
            "events_url": "https://api.github.com/users/dmeredith96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmeredith96/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So example being 'A/07_1.jpg', A being the letter, 07 being the translator number, and 01 being the frame?",
        "created_at": "2017-09-19T22:03:19Z",
        "updated_at": "2017-09-19T22:31:09Z",
        "html_url": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139830252",
        "pull_request_url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139830252"
            },
            "html": {
                "href": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139830252"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7"
            }
        },
        "in_reply_to_id": 139829146
    },
    {
        "url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139831079",
        "pull_request_review_id": 63818306,
        "id": 139831079,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTgzMTA3OQ==",
        "diff_hunk": "@@ -1,14 +1,43 @@\n import cv2\n \n-cap = cv2.VideoCapture('ENTER VIDEO NAME HERE')\n-count = 0\n-while cap.isOpened():\n-    ret, frame = cap.read()\n-    cv2.imshow('window-name', frame)\n-    cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n-    count = count + 1\n-    if cv2.waitKey(10) & 0xFF == ord('q'):\n-        break\n-\n-cap.release()\n-cap.destroyAllWindows()\n+\n+def get_frames_entire_video(video_name):\n+    cap = cv2.VideoCapture(video_name)\n+    count = 0\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        cv2.imshow('window-name', frame)\n+        cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n+        count = count + 1\n+        if cv2.waitKey(10) & 0xFF == ord('q'):\n+            break\n+    cap.release()\n+    cap.destroyAllWindows()\n+\n+\n+def get_frames_of_all_letters(video_name, input_list):\n+    cap = cv2.VideoCapture(video_name)\n+\n+    frame_count = 1\n+    list_count = 0\n+    current_letter = input_list[0][0]\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        if input_list[list_count][1] <= frame_count <= input_list[list_count][2]:\n+            try:\n+                cv2.imwrite('test_frame%d_%s.jpg' % (frame_count, current_letter), frame)",
        "path": "Python/Video_Processing/GetFrames.py",
        "position": null,
        "original_position": 40,
        "commit_id": "e2f023aee9d428eebadddbb7d13cdac74ac85c3e",
        "original_commit_id": "61bc4c9315d97fe7736c5a7219d33b43f5728864",
        "user": {
            "login": "RobertMcCoy",
            "id": 2020529,
            "node_id": "MDQ6VXNlcjIwMjA1Mjk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2020529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RobertMcCoy",
            "html_url": "https://github.com/RobertMcCoy",
            "followers_url": "https://api.github.com/users/RobertMcCoy/followers",
            "following_url": "https://api.github.com/users/RobertMcCoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/RobertMcCoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RobertMcCoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RobertMcCoy/subscriptions",
            "organizations_url": "https://api.github.com/users/RobertMcCoy/orgs",
            "repos_url": "https://api.github.com/users/RobertMcCoy/repos",
            "events_url": "https://api.github.com/users/RobertMcCoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RobertMcCoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "A/07_C_001.jpg (where C is the C/D on video descriptor) - this is so that when splitting data for train/test there isn't overlap between any videos next time when manually split",
        "created_at": "2017-09-19T22:07:59Z",
        "updated_at": "2017-09-19T22:31:09Z",
        "html_url": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139831079",
        "pull_request_url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139831079"
            },
            "html": {
                "href": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139831079"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7"
            }
        },
        "in_reply_to_id": 139829146
    },
    {
        "url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139833617",
        "pull_request_review_id": 63821276,
        "id": 139833617,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTgzMzYxNw==",
        "diff_hunk": "@@ -1,14 +1,43 @@\n import cv2\n \n-cap = cv2.VideoCapture('ENTER VIDEO NAME HERE')\n-count = 0\n-while cap.isOpened():\n-    ret, frame = cap.read()\n-    cv2.imshow('window-name', frame)\n-    cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n-    count = count + 1\n-    if cv2.waitKey(10) & 0xFF == ord('q'):\n-        break\n-\n-cap.release()\n-cap.destroyAllWindows()\n+\n+def get_frames_entire_video(video_name):\n+    cap = cv2.VideoCapture(video_name)\n+    count = 0\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        cv2.imshow('window-name', frame)\n+        cv2.imwrite(\"VIDEO_NAME/frame%d.jpg\" % count, frame)\n+        count = count + 1\n+        if cv2.waitKey(10) & 0xFF == ord('q'):\n+            break\n+    cap.release()\n+    cap.destroyAllWindows()\n+\n+\n+def get_frames_of_all_letters(video_name, input_list):\n+    cap = cv2.VideoCapture(video_name)\n+\n+    frame_count = 1\n+    list_count = 0\n+    current_letter = input_list[0][0]\n+    while cap.isOpened():\n+        ret, frame = cap.read()\n+        if input_list[list_count][1] <= frame_count <= input_list[list_count][2]:\n+            try:\n+                cv2.imwrite('test_frame%d_%s.jpg' % (frame_count, current_letter), frame)\n+                if frame_count == input_list[list_count][2]:\n+                    list_count += 1\n+                    current_letter = input_list[list_count][0]\n+            except IndexError:\n+                break\n+        frame_count += 1\n+        print(frame_count)\n+        if cv2.waitKey(1) & 0xFF == ord('q') or not ret:\n+            break\n+    cap.release()\n+    print('end of function')\n+\n+\n+# get_frames_of_all_letters('SampleVideo_1280x720_2mb.mp4', [('a', 10, 50)])",
        "path": "Python/Video_Processing/GetFrames.py",
        "position": null,
        "original_position": 54,
        "commit_id": "e2f023aee9d428eebadddbb7d13cdac74ac85c3e",
        "original_commit_id": "61bc4c9315d97fe7736c5a7219d33b43f5728864",
        "user": {
            "login": "chadwell1028",
            "id": 5809978,
            "node_id": "MDQ6VXNlcjU4MDk5Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5809978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chadwell1028",
            "html_url": "https://github.com/chadwell1028",
            "followers_url": "https://api.github.com/users/chadwell1028/followers",
            "following_url": "https://api.github.com/users/chadwell1028/following{/other_user}",
            "gists_url": "https://api.github.com/users/chadwell1028/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chadwell1028/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chadwell1028/subscriptions",
            "organizations_url": "https://api.github.com/users/chadwell1028/orgs",
            "repos_url": "https://api.github.com/users/chadwell1028/repos",
            "events_url": "https://api.github.com/users/chadwell1028/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chadwell1028/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You sure we don't want to do:\r\n\r\nsome_dictionary = {\r\n    'a': [10,50]\r\n}\r\n\r\nget_frames_of_all_letters('SampleVideo_1280x720_2mb.mp4', some_dictionary)\r\n\r\nyou could use that later to get the seconds like this:\r\n\r\nsome_dictionary['a'][0] and some_dictionary['a'][1]\r\n\r\nI think that would make things simpler later on?\r\n",
        "created_at": "2017-09-19T22:23:08Z",
        "updated_at": "2017-09-19T22:31:09Z",
        "html_url": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139833617",
        "pull_request_url": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/comments/139833617"
            },
            "html": {
                "href": "https://github.com/RobertMcCoy/HackMIT2017/pull/7#discussion_r139833617"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/RobertMcCoy/HackMIT2017/pulls/7"
            }
        }
    }
]