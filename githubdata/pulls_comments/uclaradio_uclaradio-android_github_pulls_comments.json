[
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791428",
        "pull_request_review_id": 119645507,
        "id": 187791428,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTQyOA==",
        "diff_hunk": "@@ -0,0 +1,147 @@\n+package com.uclaradio.uclaradio.activities;\n+\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.ServiceConnection;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Color;\n+import android.graphics.Point;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.graphics.drawable.ColorDrawable;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.os.IBinder;\n+import android.support.design.widget.TabLayout;\n+import android.support.v4.view.ViewPager;\n+import android.support.v7.app.ActionBar;\n+import android.support.v7.app.AppCompatActivity;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.Display;\n+import android.widget.ImageView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.fragments.about.AboutFragment;\n+import com.uclaradio.uclaradio.fragments.djs.DJsFragment;\n+import com.uclaradio.uclaradio.fragments.schedule.ScheduleFragment;\n+import com.uclaradio.uclaradio.fragments.streaming.StreamingFragment;\n+import com.uclaradio.uclaradio.R;\n+import com.uclaradio.uclaradio.activities.tabpager.TabPager;\n+import com.uclaradio.uclaradio.stream.StreamService;\n+\n+public class MainActivity extends AppCompatActivity\n+        implements StreamingFragment.OnFragmentInteractionListener,\n+        ScheduleFragment.OnFragmentInteractionListener,\n+        DJsFragment.OnFragmentInteractionListener,\n+        AboutFragment.OnFragmentInteractionListener {\n+\n+  public static final int SERVICE_ID = 41243;",
        "path": "app/src/main/java/com/uclaradio/uclaradio/activities/MainActivity.java",
        "position": null,
        "original_position": 40,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should be an XML resource",
        "created_at": "2018-05-13T07:35:46Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791428",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791428"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791428"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791468",
        "pull_request_review_id": 119645507,
        "id": 187791468,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTQ2OA==",
        "diff_hunk": "@@ -0,0 +1,147 @@\n+package com.uclaradio.uclaradio.activities;\n+\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.ServiceConnection;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Color;\n+import android.graphics.Point;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.graphics.drawable.ColorDrawable;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.os.IBinder;\n+import android.support.design.widget.TabLayout;\n+import android.support.v4.view.ViewPager;\n+import android.support.v7.app.ActionBar;\n+import android.support.v7.app.AppCompatActivity;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.Display;\n+import android.widget.ImageView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.fragments.about.AboutFragment;\n+import com.uclaradio.uclaradio.fragments.djs.DJsFragment;\n+import com.uclaradio.uclaradio.fragments.schedule.ScheduleFragment;\n+import com.uclaradio.uclaradio.fragments.streaming.StreamingFragment;\n+import com.uclaradio.uclaradio.R;\n+import com.uclaradio.uclaradio.activities.tabpager.TabPager;\n+import com.uclaradio.uclaradio.stream.StreamService;\n+\n+public class MainActivity extends AppCompatActivity\n+        implements StreamingFragment.OnFragmentInteractionListener,\n+        ScheduleFragment.OnFragmentInteractionListener,\n+        DJsFragment.OnFragmentInteractionListener,\n+        AboutFragment.OnFragmentInteractionListener {\n+\n+  public static final int SERVICE_ID = 41243;\n+\n+  public static StreamService stream;\n+  private boolean bound = false;\n+\n+  @Override\n+  protected void onCreate(Bundle savedInstanceState) {\n+    super.onCreate(savedInstanceState);\n+    setContentView(R.layout.activity_main);\n+\n+    initializeActionBar();\n+  }\n+\n+  @Override\n+  protected void onStart() {\n+    super.onStart();\n+\n+    Intent intent = new Intent(this, StreamService.class);\n+    bindService(intent, connection, Context.BIND_AUTO_CREATE);\n+  }\n+\n+  @Override\n+  protected void onStop() {\n+    Log.d(\"Service\", \"Stopped\");\n+    super.onStop();\n+  }\n+\n+  @Override\n+  protected void onDestroy() {\n+    unbindService(connection);\n+    bound = false;\n+    stream.stopForeground(true);\n+    stream.stopSelf();\n+    Log.d(\"Service\", \"Destroying stream...\");\n+    super.onDestroy();\n+  }\n+\n+  @Override\n+  public void onFragmentInteraction(Uri uri) {\n+  }\n+\n+  private void initializeActionBar() {\n+    Display display = getWindowManager().getDefaultDisplay();\n+    Point size = new Point();\n+    display.getSize(size);\n+    int width = size.x;\n+\n+    int actionBarHeight = 0;\n+    TypedValue tv = new TypedValue();\n+    if (getTheme().resolveAttribute(android.R.attr.actionBarSize, tv, true)) {\n+      actionBarHeight = TypedValue.complexToDimensionPixelSize(tv.data, getResources().getDisplayMetrics());\n+    }\n+\n+    android.support.v7.app.ActionBar actionBar = getSupportActionBar();\n+    Bitmap background = BitmapFactory.decodeResource(getResources(), R.drawable.background);\n+    BitmapDrawable background_drawable = new BitmapDrawable(Bitmap.createScaledBitmap(background, width * 4, actionBarHeight * 4, false));\n+    background_drawable.setTileModeX(android.graphics.Shader.TileMode.REPEAT);\n+//    actionBar.setBackgroundDrawable(background_drawable);\n+    int color = Color.parseColor(\"#80333333\");",
        "path": "app/src/main/java/com/uclaradio/uclaradio/activities/MainActivity.java",
        "position": null,
        "original_position": 98,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Custom color goes in values/colors.xml resource file ",
        "created_at": "2018-05-13T07:37:18Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791468",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791468"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791468"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791536",
        "pull_request_review_id": 119645507,
        "id": 187791536,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTUzNg==",
        "diff_hunk": "@@ -0,0 +1,91 @@\n+package com.uclaradio.uclaradio.activities;\n+\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.net.wifi.WifiInfo;\n+import android.net.wifi.WifiManager;\n+import android.os.Bundle;\n+import android.provider.Settings;\n+import android.support.v4.content.LocalBroadcastManager;\n+import android.support.v7.app.AlertDialog;\n+import android.support.v7.app.AppCompatActivity;\n+import android.util.Log;\n+\n+import com.uclaradio.uclaradio.R;\n+import com.uclaradio.uclaradio.stream.StreamService;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+public class SplashActivity extends AppCompatActivity {\n+\n+    private boolean shouldStopService = false;\n+\n+    // For now, networks that block the stream are hardcoded into a list. In the future, though,\n+    //  it will be more efficient and flexible to determine the block automatically.\n+    public static ArrayList<String> badWifis\n+            = new ArrayList<>(Arrays.asList(\n+            \"\\\"UCLA_WEB\\\"\", \"\\\"UCLA_WEB_RES\\\"\"",
        "path": "app/src/main/java/com/uclaradio/uclaradio/activities/SplashActivity.java",
        "position": null,
        "original_position": 31,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Resource file\r\n\r\nAlso -- the stream doesn't work on these wifis because UCLA_WEB_* blocks all ports except for http/https. Other schools do this too, so it may be worth trying to do some sort of ping to a non-http/https server and see if the local network is blocking ports",
        "created_at": "2018-05-13T07:40:08Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791536",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791536"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791536"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791579",
        "pull_request_review_id": 119645507,
        "id": 187791579,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTU3OQ==",
        "diff_hunk": "@@ -74,7 +73,7 @@ public void onDetach() {\n     }\n \n     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n-        ImageButton fbk = getView().findViewById(R.id.button1);\n+        ImageButton fbk = view.findViewById(R.id.button1);\n         fbk.setOnClickListener(new View.OnClickListener() {\n             public void onClick(View v) {\n                 Uri uri = Uri.parse(\"https://www.facebook.com/UCLARadio/?fref=ts\");",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/about/AboutFragment.java",
        "position": null,
        "original_position": 40,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should also be in resource xml (string)",
        "created_at": "2018-05-13T07:41:27Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791579",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791579"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791579"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791584",
        "pull_request_review_id": 119645507,
        "id": 187791584,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTU4NA==",
        "diff_hunk": "@@ -74,7 +73,7 @@ public void onDetach() {\n     }\n \n     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n-        ImageButton fbk = getView().findViewById(R.id.button1);\n+        ImageButton fbk = view.findViewById(R.id.button1);\n         fbk.setOnClickListener(new View.OnClickListener() {\n             public void onClick(View v) {\n                 Uri uri = Uri.parse(\"https://www.facebook.com/UCLARadio/?fref=ts\");",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/about/AboutFragment.java",
        "position": null,
        "original_position": 40,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "along with the other stuff on the about page",
        "created_at": "2018-05-13T07:41:42Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791584",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791584"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791584"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        },
        "in_reply_to_id": 187791579
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791659",
        "pull_request_review_id": 119645507,
        "id": 187791659,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTY1OQ==",
        "diff_hunk": "@@ -31,17 +32,21 @@\n  * create an instance of this fragment.\n  */\n public class DJsFragment extends Fragment {\n-    // TODO: Rename parameter arguments, choose names that match\n-\n-    private RadioPlatform platform;\n     private RecyclerView recyclerView;\n \n+    private ContentLoadingProgressBar djsProgress;\n+\n     // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n     private static final String ARG_PARAM1 = \"param1\";\n     private static final String ARG_PARAM2 = \"param2\";\n \n-    // TODO: Rename and change types of parameters\n+    private final int numberOfCols = 2;\n+\n+    // These aren't being used anywhere, but I don't want to delete some of the boilerplate\n+    //  in case it comes in handy later",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/djs/DJsFragment.java",
        "position": null,
        "original_position": 41,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Deleting parameter stuff for now would clean up the code a fair amount though -- we always have git to look back at old code in case we do want to send parameters",
        "created_at": "2018-05-13T07:43:57Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791659",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791659"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791659"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791666",
        "pull_request_review_id": 119645507,
        "id": 187791666,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTY2Ng==",
        "diff_hunk": "@@ -110,45 +115,53 @@ public void onDetach() {\n \n     @Override\n     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n-        recyclerView = getView().findViewById(R.id.dj_ids_rv);\n-        final int numberOfCols = 2;\n+        recyclerView = view.findViewById(R.id.dj_ids_rv);\n         recyclerView.setLayoutManager(new GridLayoutManager(getActivity(), numberOfCols));\n+        djsProgress = view.findViewById(R.id.djs_progress);\n+        djsProgress.show();\n \n+        getDjs();\n+    }\n \n+    private void getDjs() {\n         Retrofit retrofit = new Retrofit.Builder()\n-                .addConverterFactory(GsonConverterFactory.create())\n-                .baseUrl(\"https://uclaradio.com/\")\n-                .build();\n+        .addConverterFactory(GsonConverterFactory.create())\n+        .baseUrl(\"https://uclaradio.com/\")",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/djs/DJsFragment.java",
        "position": null,
        "original_position": 86,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "string resource",
        "created_at": "2018-05-13T07:44:10Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791666",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791666"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791666"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791697",
        "pull_request_review_id": 119645507,
        "id": 187791697,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTY5Nw==",
        "diff_hunk": "@@ -110,45 +115,53 @@ public void onDetach() {\n \n     @Override\n     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n-        recyclerView = getView().findViewById(R.id.dj_ids_rv);\n-        final int numberOfCols = 2;\n+        recyclerView = view.findViewById(R.id.dj_ids_rv);\n         recyclerView.setLayoutManager(new GridLayoutManager(getActivity(), numberOfCols));\n+        djsProgress = view.findViewById(R.id.djs_progress);\n+        djsProgress.show();\n \n+        getDjs();\n+    }\n \n+    private void getDjs() {\n         Retrofit retrofit = new Retrofit.Builder()\n-                .addConverterFactory(GsonConverterFactory.create())\n-                .baseUrl(\"https://uclaradio.com/\")\n-                .build();\n+        .addConverterFactory(GsonConverterFactory.create())\n+        .baseUrl(\"https://uclaradio.com/\")\n+        .build();\n \n-        platform = retrofit.create(RadioPlatform.class);\n+        RadioPlatform platform = retrofit.create(RadioPlatform.class);\n \n         platform.getDjs()\n                 .enqueue(new Callback<DjList>() {\n                     @Override\n                     public void onResponse(Call<DjList> call, Response<DjList> response) {\n                         if (response.isSuccessful()) {\n-                            LinearLayoutManager linearLayoutManager =\n-                                    new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false);\n-                            recyclerView.setLayoutManager(new GridLayoutManager(getContext(), numberOfCols));\n-                            DjAdapter adapter = new DjAdapter(response.body().getDjList());\n+//                            LinearLayoutManager manager =\n+//                                    new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false);\n+                            GridLayoutManager manager =\n+                                    new GridLayoutManager(getContext(), numberOfCols, LinearLayoutManager.VERTICAL, false);\n+                            recyclerView.setLayoutManager(manager);\n+                            DjAdapter adapter = new DjAdapter(response.body().getDjList(), getContext());\n                             recyclerView.setAdapter(adapter);\n                             for (DjData dj : response.body().getDjList()) {\n                                 Log.d(\"TAG\", \"DJ NAME IS: \" + dj.getUsername());\n                             }\n+                            djsProgress.hide();\n                         } else {\n                             Log.e(\"TAG\", \"HERE FAILED\");\n+                            getDjs();\n                         }\n                     }\n \n                     @Override\n                     public void onFailure(Call<DjList> call, Throwable t) {\n                         Log.e(\"TAG\", \"FAILED TO MAKE API CALL\");\n+                        getDjs();",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/djs/DJsFragment.java",
        "position": null,
        "original_position": 121,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this could infinite loop w/o any wait time -- maybe add a sleep so that it polls at a slower rate, in the worse case?",
        "created_at": "2018-05-13T07:45:25Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791697",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791697"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791697"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791753",
        "pull_request_review_id": 119645507,
        "id": 187791753,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTc1Mw==",
        "diff_hunk": "@@ -0,0 +1,280 @@\n+package com.uclaradio.uclaradio.fragments.schedule;\n+\n+import android.annotation.SuppressLint;\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.res.Resources;\n+import android.support.design.widget.BottomSheetDialog;\n+import android.support.v7.widget.RecyclerView;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Callback;\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.R;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+public class ScheduleAdapter extends RecyclerView.Adapter<ScheduleAdapter.ViewHolder> {\n+\n+  private List<ScheduleData> items;\n+  private HashMap<String, Integer> dayToNum = new HashMap<>();\n+  private HashMap<String, String> dayToLongDay = new HashMap<>();\n+\n+  private Context context;\n+  private Resources resources;\n+\n+  private String baseUrl;\n+\n+  private int convertDayToNum(String day) {\n+    return dayToNum.get(day);\n+  }\n+\n+  ScheduleAdapter(List<ScheduleData> items, Context appContext) {\n+    context = appContext;\n+    resources = context.getResources();\n+    baseUrl = resources.getString(R.string.website);\n+\n+    dayToNum.put(\"Sun\",0); dayToLongDay.put(\"Sun\", resources.getStringArray(R.array.days_of_week)[0]);",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/schedule/ScheduleAdapter.java",
        "position": null,
        "original_position": 49,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this block of code could be simplified to use an array list of \"sun\", mon\", \"tue\", ... and a for loop",
        "created_at": "2018-05-13T07:47:06Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791753",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791753"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791753"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791776",
        "pull_request_review_id": 119645507,
        "id": 187791776,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTc3Ng==",
        "diff_hunk": "@@ -0,0 +1,280 @@\n+package com.uclaradio.uclaradio.fragments.schedule;\n+\n+import android.annotation.SuppressLint;\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.res.Resources;\n+import android.support.design.widget.BottomSheetDialog;\n+import android.support.v7.widget.RecyclerView;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Callback;\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.R;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+public class ScheduleAdapter extends RecyclerView.Adapter<ScheduleAdapter.ViewHolder> {\n+\n+  private List<ScheduleData> items;\n+  private HashMap<String, Integer> dayToNum = new HashMap<>();\n+  private HashMap<String, String> dayToLongDay = new HashMap<>();\n+\n+  private Context context;\n+  private Resources resources;\n+\n+  private String baseUrl;\n+\n+  private int convertDayToNum(String day) {\n+    return dayToNum.get(day);\n+  }\n+\n+  ScheduleAdapter(List<ScheduleData> items, Context appContext) {\n+    context = appContext;\n+    resources = context.getResources();\n+    baseUrl = resources.getString(R.string.website);\n+\n+    dayToNum.put(\"Sun\",0); dayToLongDay.put(\"Sun\", resources.getStringArray(R.array.days_of_week)[0]);\n+    dayToNum.put(\"Mon\",1); dayToLongDay.put(\"Mon\", resources.getStringArray(R.array.days_of_week)[1]);\n+    dayToNum.put(\"Tue\",2); dayToLongDay.put(\"Tue\", resources.getStringArray(R.array.days_of_week)[2]);\n+    dayToNum.put(\"Wed\",3); dayToLongDay.put(\"Wed\", resources.getStringArray(R.array.days_of_week)[3]);\n+    dayToNum.put(\"Thu\",4); dayToLongDay.put(\"Thu\", resources.getStringArray(R.array.days_of_week)[4]);\n+    dayToNum.put(\"Fri\",5); dayToLongDay.put(\"Fri\", resources.getStringArray(R.array.days_of_week)[5]);\n+    dayToNum.put(\"Sat\",6); dayToLongDay.put(\"Sat\", resources.getStringArray(R.array.days_of_week)[6]);\n+\n+    Comparator<ScheduleData> dateComparator = new Comparator<ScheduleData>() {\n+      @Override\n+      public int compare(ScheduleData a, ScheduleData b) {\n+        Integer aDay = convertDayToNum(a.getDay());\n+        Integer bDay = convertDayToNum(b.getDay());\n+        Integer dayComp = aDay.compareTo(bDay);\n+        if (dayComp != 0) {\n+          return dayComp;\n+        }\n+        else {\n+          @SuppressLint(\"SimpleDateFormat\")\n+          SimpleDateFormat sdf = new SimpleDateFormat(\"hhaa\"); //hourAM/PM\n+          try {\n+            Date aTime = sdf.parse(a.getTime().toUpperCase());\n+            Log.d(\"aTime\", aTime.toString());\n+            Date bTime = sdf.parse(b.getTime().toUpperCase());\n+            Log.d(\"bTime\", bTime.toString());\n+\n+            return aTime.compareTo(bTime);\n+          } catch (ParseException ex) {\n+              Log.e(\"ERROR\", ex.getMessage());\n+              return a.getTime().compareTo(b.getTime());\n+          }\n+        }\n+      }\n+    };\n+    Collections.sort(items, dateComparator);\n+\n+    for (int i = 0; i < items.size(); i++) {\n+      ScheduleData item = items.get(i);\n+      // Some trickery going on here\n+      if (i % 2 == 1 && (items.get(i-1) != null && !item.getDay().equals(items.get(i-1).getDay()))) {",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/schedule/ScheduleAdapter.java",
        "position": null,
        "original_position": 88,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Add a comment for what exactly is going here",
        "created_at": "2018-05-13T07:47:54Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791776",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791776"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791776"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791787",
        "pull_request_review_id": 119645507,
        "id": 187791787,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTc4Nw==",
        "diff_hunk": "@@ -0,0 +1,280 @@\n+package com.uclaradio.uclaradio.fragments.schedule;\n+\n+import android.annotation.SuppressLint;\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.res.Resources;\n+import android.support.design.widget.BottomSheetDialog;\n+import android.support.v7.widget.RecyclerView;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Callback;\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.R;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+public class ScheduleAdapter extends RecyclerView.Adapter<ScheduleAdapter.ViewHolder> {\n+\n+  private List<ScheduleData> items;\n+  private HashMap<String, Integer> dayToNum = new HashMap<>();\n+  private HashMap<String, String> dayToLongDay = new HashMap<>();\n+\n+  private Context context;\n+  private Resources resources;\n+\n+  private String baseUrl;\n+\n+  private int convertDayToNum(String day) {\n+    return dayToNum.get(day);\n+  }\n+\n+  ScheduleAdapter(List<ScheduleData> items, Context appContext) {\n+    context = appContext;\n+    resources = context.getResources();\n+    baseUrl = resources.getString(R.string.website);\n+\n+    dayToNum.put(\"Sun\",0); dayToLongDay.put(\"Sun\", resources.getStringArray(R.array.days_of_week)[0]);\n+    dayToNum.put(\"Mon\",1); dayToLongDay.put(\"Mon\", resources.getStringArray(R.array.days_of_week)[1]);\n+    dayToNum.put(\"Tue\",2); dayToLongDay.put(\"Tue\", resources.getStringArray(R.array.days_of_week)[2]);\n+    dayToNum.put(\"Wed\",3); dayToLongDay.put(\"Wed\", resources.getStringArray(R.array.days_of_week)[3]);\n+    dayToNum.put(\"Thu\",4); dayToLongDay.put(\"Thu\", resources.getStringArray(R.array.days_of_week)[4]);\n+    dayToNum.put(\"Fri\",5); dayToLongDay.put(\"Fri\", resources.getStringArray(R.array.days_of_week)[5]);\n+    dayToNum.put(\"Sat\",6); dayToLongDay.put(\"Sat\", resources.getStringArray(R.array.days_of_week)[6]);\n+\n+    Comparator<ScheduleData> dateComparator = new Comparator<ScheduleData>() {\n+      @Override\n+      public int compare(ScheduleData a, ScheduleData b) {\n+        Integer aDay = convertDayToNum(a.getDay());\n+        Integer bDay = convertDayToNum(b.getDay());\n+        Integer dayComp = aDay.compareTo(bDay);\n+        if (dayComp != 0) {\n+          return dayComp;\n+        }\n+        else {\n+          @SuppressLint(\"SimpleDateFormat\")\n+          SimpleDateFormat sdf = new SimpleDateFormat(\"hhaa\"); //hourAM/PM\n+          try {\n+            Date aTime = sdf.parse(a.getTime().toUpperCase());\n+            Log.d(\"aTime\", aTime.toString());\n+            Date bTime = sdf.parse(b.getTime().toUpperCase());\n+            Log.d(\"bTime\", bTime.toString());\n+\n+            return aTime.compareTo(bTime);\n+          } catch (ParseException ex) {\n+              Log.e(\"ERROR\", ex.getMessage());\n+              return a.getTime().compareTo(b.getTime());\n+          }\n+        }\n+      }\n+    };\n+    Collections.sort(items, dateComparator);\n+\n+    for (int i = 0; i < items.size(); i++) {\n+      ScheduleData item = items.get(i);\n+      // Some trickery going on here\n+      if (i % 2 == 1 && (items.get(i-1) != null && !item.getDay().equals(items.get(i-1).getDay()))) {\n+        items.add(i, null);\n+      }\n+    }\n+\n+    this.items = items;\n+  }\n+\n+  @Override\n+  public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n+    View itemView = LayoutInflater.from(parent.getContext())\n+//                    .inflate(R.layout.schedule_item, parent, false);\n+                    .inflate(R.layout.schedule_item_new, parent, false);\n+    final ViewHolder holder = new ViewHolder(itemView);\n+    itemView.setOnClickListener(new View.OnClickListener() {\n+      @SuppressLint(\"SetTextI18n\")\n+      @Override\n+      public void onClick(View view) {\n+        int position = holder.getAdapterPosition();\n+        ScheduleData show = items.get(position);\n+        if (show == null) return;\n+        BottomSheetDialog dialog = new BottomSheetDialog(context);\n+        @SuppressLint(\"InflateParams\")\n+        View sheetView = ((Activity) context).getLayoutInflater()\n+                .inflate(R.layout.show_bottom_sheet_layout, null);\n+\n+        ImageView showImage = sheetView.findViewById(R.id.show_image);\n+\n+        TextView showTitle = sheetView.findViewById(R.id.show_title);\n+        TextView showGenre = sheetView.findViewById(R.id.show_genre);\n+        TextView showTime  = sheetView.findViewById(R.id.show_time);\n+        TextView showDjs   = sheetView.findViewById(R.id.show_djs);\n+        TextView showBlurb = sheetView.findViewById(R.id.show_blurb);\n+\n+\n+        String imageUrl = baseUrl + show.getPictureUrl();\n+        if (show.getPictureUrl() == null)\n+          imageUrl = baseUrl + \"/img/radio.png\";\n+        Picasso.get()\n+                .load(imageUrl)\n+                .resize(250, 250)\n+                .into(showImage);\n+        showTitle.setText(show.getTitle());\n+        showTime.setText(resources.getString(R.string.time_and_day, dayToLongDay.get(show.getDay()), show.getTime()));\n+//        showTime.setText(dayToLongDay.get(show.getDay()) + \"s at \" + show.getTime());\n+\n+        if (show.getGenre() == null)\n+          showGenre.setVisibility(View.GONE);\n+        else\n+          showGenre.setText(show.getGenre());\n+\n+        if (show.getBlurb() == null)\n+          showBlurb.setVisibility(View.GONE);\n+        else\n+          showBlurb.setText(show.getBlurb());\n+\n+        showDjs.setText(show.getDjs());\n+\n+        dialog.setContentView(sheetView);\n+        dialog.show();\n+      }\n+    });\n+\n+    return holder;\n+  }\n+\n+  @Override\n+  public void onBindViewHolder(ViewHolder holder, int position) {\n+    holder.setIsRecyclable(false);\n+    int pos = holder.getAdapterPosition();\n+    ScheduleData item = items.get(pos);\n+    if (item == null) return;\n+    StringBuilder builder = new StringBuilder();\n+    holder.text_day.setText(dayToLongDay.get(item.getDay()));\n+    builder.append(item.getTime()).append(\": \")\n+            .append(item.getTitle()).append(\" | \")\n+            .append(item.getDjs());\n+    holder.text_details.setText(builder.toString());\n+\n+    if (pos == 0\n+            || items.get(pos-1) == null\n+            || !item.getDay().equals(items.get(pos-1).getDay())) {\n+      holder.text_day.setVisibility(View.VISIBLE);\n+      item.setIsNewDay(true);\n+    }\n+\n+    if (pos > 0\n+            && (items.get(pos-1) != null && items.get(pos-1).isOnNewDay())) {\n+        holder.text_day.setVisibility(View.INVISIBLE);\n+    }\n+\n+    String imageUrl = baseUrl + item.getPictureUrl();\n+    if (item.getPictureUrl() == null)\n+      imageUrl = baseUrl + \"/img/radio.png\";\n+    Log.d(\"TAG\", \"ALBUM IMAGE URL: \" + imageUrl);\n+\n+    Picasso.get()\n+            .load(imageUrl)\n+            .resize(dpToPx(250), dpToPx(250))\n+            .into(holder.image_show, new Callback() {\n+              @Override\n+              public void onSuccess() {}\n+\n+              @Override\n+              public void onError(Exception e) {\n+                Log.e(\"Picasso\", \"Error in Picasso!\");\n+                e.printStackTrace();\n+              }\n+            });\n+  }\n+\n+  //region Old onBindViewHolder",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/schedule/ScheduleAdapter.java",
        "position": null,
        "original_position": 199,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this commented out code still needed in the near future?",
        "created_at": "2018-05-13T07:48:27Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791787",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791787"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791787"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791807",
        "pull_request_review_id": 119645507,
        "id": 187791807,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTgwNw==",
        "diff_hunk": "@@ -30,16 +32,18 @@\n  * create an instance of this fragment.\n  */\n public class ScheduleFragment extends Fragment {\n-    // TODO: Rename parameter arguments, choose names that match\n     // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n     private static final String ARG_PARAM1 = \"param1\";\n     private static final String ARG_PARAM2 = \"param2\";\n \n-    private RadioPlatform platform;\n     private RecyclerView recyclerView;\n \n-    // TODO: Rename and change types of parameters\n+    private ContentLoadingProgressBar scheduleProgress;\n+\n+    // Again, don't want to remove boilerplate so leaving this stuff here",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/schedule/ScheduleFragment.java",
        "position": null,
        "original_position": 38,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "same comment as above ^^",
        "created_at": "2018-05-13T07:49:20Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791807",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791807"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791807"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791816",
        "pull_request_review_id": 119645507,
        "id": 187791816,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTgxNg==",
        "diff_hunk": "@@ -0,0 +1,308 @@\n+package com.uclaradio.uclaradio.fragments.streaming;\n+\n+import android.Manifest;\n+import android.animation.ArgbEvaluator;\n+import android.animation.ValueAnimator;\n+import android.app.AlertDialog;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.content.pm.PackageManager;\n+import android.content.res.ColorStateList;\n+import android.graphics.Color;\n+import android.graphics.PorterDuff;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.net.Uri;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.design.widget.FloatingActionButton;\n+import android.support.v4.app.ActivityCompat;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.content.ContextCompat;\n+import android.support.v4.widget.ContentLoadingProgressBar;\n+import android.support.v7.graphics.Palette;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.activities.MainActivity;\n+import com.uclaradio.uclaradio.R;\n+\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Activities that contain this fragment must implement the\n+ * {@link StreamingFragment.OnFragmentInteractionListener} interface\n+ * to handle interaction events.\n+ * Use the {@link StreamingFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class StreamingFragment extends Fragment {\n+  private FloatingActionButton playPauseBtn;\n+\n+  private TextView showTitleTv;\n+  private ImageView showArtIv;\n+\n+  private ContentLoadingProgressBar showArtProgress;\n+\n+  private final Intent callIntent = new Intent(Intent.ACTION_CALL);\n+\n+  private static final int REQUEST_PHONE_CALL = 982;",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/streaming/StreamingFragment.java",
        "position": null,
        "original_position": 59,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "resource xml",
        "created_at": "2018-05-13T07:49:44Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791816",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791816"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791816"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791846",
        "pull_request_review_id": 119645507,
        "id": 187791846,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTg0Ng==",
        "diff_hunk": "@@ -0,0 +1,308 @@\n+package com.uclaradio.uclaradio.fragments.streaming;\n+\n+import android.Manifest;\n+import android.animation.ArgbEvaluator;\n+import android.animation.ValueAnimator;\n+import android.app.AlertDialog;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.content.pm.PackageManager;\n+import android.content.res.ColorStateList;\n+import android.graphics.Color;\n+import android.graphics.PorterDuff;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.net.Uri;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.design.widget.FloatingActionButton;\n+import android.support.v4.app.ActivityCompat;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.content.ContextCompat;\n+import android.support.v4.widget.ContentLoadingProgressBar;\n+import android.support.v7.graphics.Palette;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.activities.MainActivity;\n+import com.uclaradio.uclaradio.R;\n+\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Activities that contain this fragment must implement the\n+ * {@link StreamingFragment.OnFragmentInteractionListener} interface\n+ * to handle interaction events.\n+ * Use the {@link StreamingFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class StreamingFragment extends Fragment {\n+  private FloatingActionButton playPauseBtn;\n+\n+  private TextView showTitleTv;\n+  private ImageView showArtIv;\n+\n+  private ContentLoadingProgressBar showArtProgress;\n+\n+  private final Intent callIntent = new Intent(Intent.ACTION_CALL);\n+\n+  private static final int REQUEST_PHONE_CALL = 982;\n+\n+  private OnFragmentInteractionListener mListener;\n+\n+  public StreamingFragment() {\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public static StreamingFragment newInstance() {\n+    StreamingFragment fragment = new StreamingFragment();\n+    Bundle args = new Bundle();\n+    fragment.setArguments(args);\n+\n+    return fragment;\n+  }\n+\n+  @Override\n+  public void onCreate(Bundle savedInstanceState) {\n+    super.onCreate(savedInstanceState);\n+  }\n+\n+  @Override\n+  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                           Bundle savedInstanceState) {\n+    return inflater.inflate(R.layout.fragment_streaming, container, false);\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public void onButtonPressed(Uri uri) {\n+    if (mListener != null) {\n+      mListener.onFragmentInteraction(uri);\n+    }\n+  }\n+\n+  @Override\n+  public void onAttach(Context context) {\n+    super.onAttach(context);\n+    if (context instanceof OnFragmentInteractionListener) {\n+      mListener = (OnFragmentInteractionListener) context;\n+    } else {\n+      throw new RuntimeException(context.toString()\n+              + \" must implement OnFragmentInteractionListener\");\n+    }\n+  }\n+\n+  @Override\n+  public void onDetach() {\n+    super.onDetach();\n+    mListener = null;\n+    getContext().unregisterReceiver(showUpdateReceiver);\n+    getContext().unregisterReceiver(toggleReceiver);\n+    getContext().unregisterReceiver(connRestReceiver);\n+    getContext().unregisterReceiver(connErrReceiver);\n+  }\n+\n+  @Override\n+  public void onRequestPermissionsResult(int requestCode,\n+                                         @NonNull String permissions[],\n+                                         @NonNull int grantResults[]) {\n+      switch (requestCode) {\n+        case REQUEST_PHONE_CALL:\n+          if (grantResults.length > 0) {\n+            if (grantResults[0] == PackageManager.PERMISSION_GRANTED)\n+              startActivity(callIntent);\n+            else if (grantResults[0] == PackageManager.PERMISSION_DENIED) {\n+              if (!shouldShowRequestPermissionRationale(permissions[0]))\n+              {\n+                new AlertDialog.Builder(getContext())\n+                        .setTitle(R.string.calling_disabled)\n+                        .setMessage(R.string.no_perms_dialog)\n+                        .setPositiveButton(\"OK\", null)\n+                        .create().show();\n+              }\n+            }\n+          }\n+          break;\n+        default:\n+          // Do nothing\n+      }\n+  }\n+\n+  // Only updates the current playing show whenever the view is created--obviously will\n+  //  not update if the show changes while the app is still open.\n+  public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n+    playPauseBtn = view.findViewById(R.id.playpause_btn);\n+    showArtIv = view.findViewById(R.id.show_art_img);\n+    showTitleTv = view.findViewById(R.id.show_title_text);\n+    Button onAirCallBtn = view.findViewById(R.id.on_air_btn);\n+    Button requestCallBtn = view.findViewById(R.id.request_call_btn);\n+    showArtProgress = view.findViewById(R.id.show_art_progress);\n+    showArtProgress.show();\n+    final MainActivity mainActivity = (MainActivity) getActivity();\n+\n+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP)\n+      playPauseBtn.setStateListAnimator(null);\n+\n+    getContext().registerReceiver(showUpdateReceiver,\n+            new IntentFilter(getString(R.string.update_show_info_intent)));\n+\n+    playPauseBtn.setOnClickListener(new View.OnClickListener() {\n+      public void onClick(View v) {\n+        if (!mainActivity.isBound()) {\n+          Log.d(\"Service\", \"Not yet bound\");\n+          return;\n+        }\n+        if (MainActivity.stream == null) {\n+          Log.d(\"Service\", \"Stream is null...\");",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/streaming/StreamingFragment.java",
        "position": null,
        "original_position": 165,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Give the user an alert -- a null stream would mean that the stream controls do nothing",
        "created_at": "2018-05-13T07:50:51Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791846",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791846"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791846"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791851",
        "pull_request_review_id": 119645507,
        "id": 187791851,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTg1MQ==",
        "diff_hunk": "@@ -0,0 +1,308 @@\n+package com.uclaradio.uclaradio.fragments.streaming;\n+\n+import android.Manifest;\n+import android.animation.ArgbEvaluator;\n+import android.animation.ValueAnimator;\n+import android.app.AlertDialog;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.content.pm.PackageManager;\n+import android.content.res.ColorStateList;\n+import android.graphics.Color;\n+import android.graphics.PorterDuff;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.net.Uri;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.design.widget.FloatingActionButton;\n+import android.support.v4.app.ActivityCompat;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.content.ContextCompat;\n+import android.support.v4.widget.ContentLoadingProgressBar;\n+import android.support.v7.graphics.Palette;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.activities.MainActivity;\n+import com.uclaradio.uclaradio.R;\n+\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Activities that contain this fragment must implement the\n+ * {@link StreamingFragment.OnFragmentInteractionListener} interface\n+ * to handle interaction events.\n+ * Use the {@link StreamingFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class StreamingFragment extends Fragment {\n+  private FloatingActionButton playPauseBtn;\n+\n+  private TextView showTitleTv;\n+  private ImageView showArtIv;\n+\n+  private ContentLoadingProgressBar showArtProgress;\n+\n+  private final Intent callIntent = new Intent(Intent.ACTION_CALL);\n+\n+  private static final int REQUEST_PHONE_CALL = 982;\n+\n+  private OnFragmentInteractionListener mListener;\n+\n+  public StreamingFragment() {\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public static StreamingFragment newInstance() {\n+    StreamingFragment fragment = new StreamingFragment();\n+    Bundle args = new Bundle();\n+    fragment.setArguments(args);\n+\n+    return fragment;\n+  }\n+\n+  @Override\n+  public void onCreate(Bundle savedInstanceState) {\n+    super.onCreate(savedInstanceState);\n+  }\n+\n+  @Override\n+  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                           Bundle savedInstanceState) {\n+    return inflater.inflate(R.layout.fragment_streaming, container, false);\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public void onButtonPressed(Uri uri) {\n+    if (mListener != null) {\n+      mListener.onFragmentInteraction(uri);\n+    }\n+  }\n+\n+  @Override\n+  public void onAttach(Context context) {\n+    super.onAttach(context);\n+    if (context instanceof OnFragmentInteractionListener) {\n+      mListener = (OnFragmentInteractionListener) context;\n+    } else {\n+      throw new RuntimeException(context.toString()\n+              + \" must implement OnFragmentInteractionListener\");\n+    }\n+  }\n+\n+  @Override\n+  public void onDetach() {\n+    super.onDetach();\n+    mListener = null;\n+    getContext().unregisterReceiver(showUpdateReceiver);\n+    getContext().unregisterReceiver(toggleReceiver);\n+    getContext().unregisterReceiver(connRestReceiver);\n+    getContext().unregisterReceiver(connErrReceiver);\n+  }\n+\n+  @Override\n+  public void onRequestPermissionsResult(int requestCode,\n+                                         @NonNull String permissions[],\n+                                         @NonNull int grantResults[]) {\n+      switch (requestCode) {\n+        case REQUEST_PHONE_CALL:\n+          if (grantResults.length > 0) {\n+            if (grantResults[0] == PackageManager.PERMISSION_GRANTED)\n+              startActivity(callIntent);\n+            else if (grantResults[0] == PackageManager.PERMISSION_DENIED) {\n+              if (!shouldShowRequestPermissionRationale(permissions[0]))\n+              {\n+                new AlertDialog.Builder(getContext())\n+                        .setTitle(R.string.calling_disabled)\n+                        .setMessage(R.string.no_perms_dialog)\n+                        .setPositiveButton(\"OK\", null)\n+                        .create().show();\n+              }\n+            }\n+          }\n+          break;\n+        default:\n+          // Do nothing\n+      }\n+  }\n+\n+  // Only updates the current playing show whenever the view is created--obviously will\n+  //  not update if the show changes while the app is still open.\n+  public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n+    playPauseBtn = view.findViewById(R.id.playpause_btn);\n+    showArtIv = view.findViewById(R.id.show_art_img);\n+    showTitleTv = view.findViewById(R.id.show_title_text);\n+    Button onAirCallBtn = view.findViewById(R.id.on_air_btn);\n+    Button requestCallBtn = view.findViewById(R.id.request_call_btn);\n+    showArtProgress = view.findViewById(R.id.show_art_progress);\n+    showArtProgress.show();\n+    final MainActivity mainActivity = (MainActivity) getActivity();\n+\n+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP)\n+      playPauseBtn.setStateListAnimator(null);\n+\n+    getContext().registerReceiver(showUpdateReceiver,\n+            new IntentFilter(getString(R.string.update_show_info_intent)));\n+\n+    playPauseBtn.setOnClickListener(new View.OnClickListener() {\n+      public void onClick(View v) {\n+        if (!mainActivity.isBound()) {\n+          Log.d(\"Service\", \"Not yet bound\");\n+          return;\n+        }\n+        if (MainActivity.stream == null) {\n+          Log.d(\"Service\", \"Stream is null...\");\n+          return;\n+        }\n+//        if (MainActivity.stream.isPlaying())\n+//          ((ImageButton) v).setImageResource(android.R.drawable.ic_media_play);\n+//        else\n+//          ((ImageButton) v).setImageResource(android.R.drawable.ic_media_pause);\n+//        MainActivity.stream.toggle();\n+        getContext().sendBroadcast(new Intent(getString(R.string.play_pause_intent)));\n+      }\n+    });\n+\n+    onAirCallBtn.setOnClickListener(new View.OnClickListener() {\n+      @Override\n+      public void onClick(View v) {\n+          callIntent.setData(Uri.parse(\"tel:3107949348\"));",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/streaming/StreamingFragment.java",
        "position": null,
        "original_position": 180,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "resource",
        "created_at": "2018-05-13T07:51:01Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791851",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791851"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791851"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791854",
        "pull_request_review_id": 119645507,
        "id": 187791854,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTg1NA==",
        "diff_hunk": "@@ -0,0 +1,308 @@\n+package com.uclaradio.uclaradio.fragments.streaming;\n+\n+import android.Manifest;\n+import android.animation.ArgbEvaluator;\n+import android.animation.ValueAnimator;\n+import android.app.AlertDialog;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.content.pm.PackageManager;\n+import android.content.res.ColorStateList;\n+import android.graphics.Color;\n+import android.graphics.PorterDuff;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.net.Uri;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.design.widget.FloatingActionButton;\n+import android.support.v4.app.ActivityCompat;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.content.ContextCompat;\n+import android.support.v4.widget.ContentLoadingProgressBar;\n+import android.support.v7.graphics.Palette;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.activities.MainActivity;\n+import com.uclaradio.uclaradio.R;\n+\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Activities that contain this fragment must implement the\n+ * {@link StreamingFragment.OnFragmentInteractionListener} interface\n+ * to handle interaction events.\n+ * Use the {@link StreamingFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class StreamingFragment extends Fragment {\n+  private FloatingActionButton playPauseBtn;\n+\n+  private TextView showTitleTv;\n+  private ImageView showArtIv;\n+\n+  private ContentLoadingProgressBar showArtProgress;\n+\n+  private final Intent callIntent = new Intent(Intent.ACTION_CALL);\n+\n+  private static final int REQUEST_PHONE_CALL = 982;\n+\n+  private OnFragmentInteractionListener mListener;\n+\n+  public StreamingFragment() {\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public static StreamingFragment newInstance() {\n+    StreamingFragment fragment = new StreamingFragment();\n+    Bundle args = new Bundle();\n+    fragment.setArguments(args);\n+\n+    return fragment;\n+  }\n+\n+  @Override\n+  public void onCreate(Bundle savedInstanceState) {\n+    super.onCreate(savedInstanceState);\n+  }\n+\n+  @Override\n+  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                           Bundle savedInstanceState) {\n+    return inflater.inflate(R.layout.fragment_streaming, container, false);\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public void onButtonPressed(Uri uri) {\n+    if (mListener != null) {\n+      mListener.onFragmentInteraction(uri);\n+    }\n+  }\n+\n+  @Override\n+  public void onAttach(Context context) {\n+    super.onAttach(context);\n+    if (context instanceof OnFragmentInteractionListener) {\n+      mListener = (OnFragmentInteractionListener) context;\n+    } else {\n+      throw new RuntimeException(context.toString()\n+              + \" must implement OnFragmentInteractionListener\");\n+    }\n+  }\n+\n+  @Override\n+  public void onDetach() {\n+    super.onDetach();\n+    mListener = null;\n+    getContext().unregisterReceiver(showUpdateReceiver);\n+    getContext().unregisterReceiver(toggleReceiver);\n+    getContext().unregisterReceiver(connRestReceiver);\n+    getContext().unregisterReceiver(connErrReceiver);\n+  }\n+\n+  @Override\n+  public void onRequestPermissionsResult(int requestCode,\n+                                         @NonNull String permissions[],\n+                                         @NonNull int grantResults[]) {\n+      switch (requestCode) {\n+        case REQUEST_PHONE_CALL:\n+          if (grantResults.length > 0) {\n+            if (grantResults[0] == PackageManager.PERMISSION_GRANTED)\n+              startActivity(callIntent);\n+            else if (grantResults[0] == PackageManager.PERMISSION_DENIED) {\n+              if (!shouldShowRequestPermissionRationale(permissions[0]))\n+              {\n+                new AlertDialog.Builder(getContext())\n+                        .setTitle(R.string.calling_disabled)\n+                        .setMessage(R.string.no_perms_dialog)\n+                        .setPositiveButton(\"OK\", null)\n+                        .create().show();\n+              }\n+            }\n+          }\n+          break;\n+        default:\n+          // Do nothing\n+      }\n+  }\n+\n+  // Only updates the current playing show whenever the view is created--obviously will\n+  //  not update if the show changes while the app is still open.\n+  public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n+    playPauseBtn = view.findViewById(R.id.playpause_btn);\n+    showArtIv = view.findViewById(R.id.show_art_img);\n+    showTitleTv = view.findViewById(R.id.show_title_text);\n+    Button onAirCallBtn = view.findViewById(R.id.on_air_btn);\n+    Button requestCallBtn = view.findViewById(R.id.request_call_btn);\n+    showArtProgress = view.findViewById(R.id.show_art_progress);\n+    showArtProgress.show();\n+    final MainActivity mainActivity = (MainActivity) getActivity();\n+\n+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP)\n+      playPauseBtn.setStateListAnimator(null);\n+\n+    getContext().registerReceiver(showUpdateReceiver,\n+            new IntentFilter(getString(R.string.update_show_info_intent)));\n+\n+    playPauseBtn.setOnClickListener(new View.OnClickListener() {\n+      public void onClick(View v) {\n+        if (!mainActivity.isBound()) {\n+          Log.d(\"Service\", \"Not yet bound\");\n+          return;\n+        }\n+        if (MainActivity.stream == null) {\n+          Log.d(\"Service\", \"Stream is null...\");\n+          return;\n+        }\n+//        if (MainActivity.stream.isPlaying())\n+//          ((ImageButton) v).setImageResource(android.R.drawable.ic_media_play);\n+//        else\n+//          ((ImageButton) v).setImageResource(android.R.drawable.ic_media_pause);\n+//        MainActivity.stream.toggle();\n+        getContext().sendBroadcast(new Intent(getString(R.string.play_pause_intent)));\n+      }\n+    });\n+\n+    onAirCallBtn.setOnClickListener(new View.OnClickListener() {\n+      @Override\n+      public void onClick(View v) {\n+          callIntent.setData(Uri.parse(\"tel:3107949348\"));\n+          if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CALL_PHONE)\n+                    != PackageManager.PERMISSION_GRANTED)\n+            requestPermissions(new String[]{Manifest.permission.CALL_PHONE}, REQUEST_PHONE_CALL);\n+          else startActivity(callIntent);\n+      }\n+    });\n+\n+    requestCallBtn.setOnClickListener(new View.OnClickListener() {\n+      @Override\n+      public void onClick(View v) {\n+        callIntent.setData(Uri.parse(\"tel:3108259999\"));",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/streaming/StreamingFragment.java",
        "position": null,
        "original_position": 191,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "^",
        "created_at": "2018-05-13T07:51:07Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791854",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791854"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791854"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791905",
        "pull_request_review_id": 119645507,
        "id": 187791905,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTkwNQ==",
        "diff_hunk": "@@ -0,0 +1,308 @@\n+package com.uclaradio.uclaradio.fragments.streaming;\n+\n+import android.Manifest;\n+import android.animation.ArgbEvaluator;\n+import android.animation.ValueAnimator;\n+import android.app.AlertDialog;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.content.pm.PackageManager;\n+import android.content.res.ColorStateList;\n+import android.graphics.Color;\n+import android.graphics.PorterDuff;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.net.Uri;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.design.widget.FloatingActionButton;\n+import android.support.v4.app.ActivityCompat;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.content.ContextCompat;\n+import android.support.v4.widget.ContentLoadingProgressBar;\n+import android.support.v7.graphics.Palette;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.activities.MainActivity;\n+import com.uclaradio.uclaradio.R;\n+\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Activities that contain this fragment must implement the\n+ * {@link StreamingFragment.OnFragmentInteractionListener} interface\n+ * to handle interaction events.\n+ * Use the {@link StreamingFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class StreamingFragment extends Fragment {\n+  private FloatingActionButton playPauseBtn;\n+\n+  private TextView showTitleTv;\n+  private ImageView showArtIv;\n+\n+  private ContentLoadingProgressBar showArtProgress;\n+\n+  private final Intent callIntent = new Intent(Intent.ACTION_CALL);\n+\n+  private static final int REQUEST_PHONE_CALL = 982;\n+\n+  private OnFragmentInteractionListener mListener;\n+\n+  public StreamingFragment() {\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public static StreamingFragment newInstance() {\n+    StreamingFragment fragment = new StreamingFragment();\n+    Bundle args = new Bundle();\n+    fragment.setArguments(args);\n+\n+    return fragment;\n+  }\n+\n+  @Override\n+  public void onCreate(Bundle savedInstanceState) {\n+    super.onCreate(savedInstanceState);\n+  }\n+\n+  @Override\n+  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                           Bundle savedInstanceState) {\n+    return inflater.inflate(R.layout.fragment_streaming, container, false);\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public void onButtonPressed(Uri uri) {\n+    if (mListener != null) {\n+      mListener.onFragmentInteraction(uri);\n+    }\n+  }\n+\n+  @Override\n+  public void onAttach(Context context) {\n+    super.onAttach(context);\n+    if (context instanceof OnFragmentInteractionListener) {\n+      mListener = (OnFragmentInteractionListener) context;\n+    } else {\n+      throw new RuntimeException(context.toString()\n+              + \" must implement OnFragmentInteractionListener\");\n+    }\n+  }\n+\n+  @Override\n+  public void onDetach() {\n+    super.onDetach();\n+    mListener = null;\n+    getContext().unregisterReceiver(showUpdateReceiver);\n+    getContext().unregisterReceiver(toggleReceiver);\n+    getContext().unregisterReceiver(connRestReceiver);\n+    getContext().unregisterReceiver(connErrReceiver);\n+  }\n+\n+  @Override\n+  public void onRequestPermissionsResult(int requestCode,\n+                                         @NonNull String permissions[],\n+                                         @NonNull int grantResults[]) {\n+      switch (requestCode) {\n+        case REQUEST_PHONE_CALL:\n+          if (grantResults.length > 0) {\n+            if (grantResults[0] == PackageManager.PERMISSION_GRANTED)\n+              startActivity(callIntent);\n+            else if (grantResults[0] == PackageManager.PERMISSION_DENIED) {\n+              if (!shouldShowRequestPermissionRationale(permissions[0]))\n+              {\n+                new AlertDialog.Builder(getContext())\n+                        .setTitle(R.string.calling_disabled)\n+                        .setMessage(R.string.no_perms_dialog)\n+                        .setPositiveButton(\"OK\", null)\n+                        .create().show();\n+              }\n+            }\n+          }\n+          break;\n+        default:\n+          // Do nothing\n+      }\n+  }\n+\n+  // Only updates the current playing show whenever the view is created--obviously will\n+  //  not update if the show changes while the app is still open.\n+  public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n+    playPauseBtn = view.findViewById(R.id.playpause_btn);\n+    showArtIv = view.findViewById(R.id.show_art_img);\n+    showTitleTv = view.findViewById(R.id.show_title_text);\n+    Button onAirCallBtn = view.findViewById(R.id.on_air_btn);\n+    Button requestCallBtn = view.findViewById(R.id.request_call_btn);\n+    showArtProgress = view.findViewById(R.id.show_art_progress);\n+    showArtProgress.show();\n+    final MainActivity mainActivity = (MainActivity) getActivity();\n+\n+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP)\n+      playPauseBtn.setStateListAnimator(null);\n+\n+    getContext().registerReceiver(showUpdateReceiver,\n+            new IntentFilter(getString(R.string.update_show_info_intent)));\n+\n+    playPauseBtn.setOnClickListener(new View.OnClickListener() {\n+      public void onClick(View v) {\n+        if (!mainActivity.isBound()) {\n+          Log.d(\"Service\", \"Not yet bound\");\n+          return;\n+        }\n+        if (MainActivity.stream == null) {\n+          Log.d(\"Service\", \"Stream is null...\");\n+          return;\n+        }\n+//        if (MainActivity.stream.isPlaying())\n+//          ((ImageButton) v).setImageResource(android.R.drawable.ic_media_play);\n+//        else\n+//          ((ImageButton) v).setImageResource(android.R.drawable.ic_media_pause);\n+//        MainActivity.stream.toggle();\n+        getContext().sendBroadcast(new Intent(getString(R.string.play_pause_intent)));\n+      }\n+    });\n+\n+    onAirCallBtn.setOnClickListener(new View.OnClickListener() {\n+      @Override\n+      public void onClick(View v) {\n+          callIntent.setData(Uri.parse(\"tel:3107949348\"));\n+          if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CALL_PHONE)\n+                    != PackageManager.PERMISSION_GRANTED)\n+            requestPermissions(new String[]{Manifest.permission.CALL_PHONE}, REQUEST_PHONE_CALL);\n+          else startActivity(callIntent);\n+      }\n+    });\n+\n+    requestCallBtn.setOnClickListener(new View.OnClickListener() {\n+      @Override\n+      public void onClick(View v) {\n+        callIntent.setData(Uri.parse(\"tel:3108259999\"));\n+        if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CALL_PHONE)\n+                != PackageManager.PERMISSION_GRANTED)\n+          ActivityCompat.requestPermissions(getActivity(),\n+                  new String[]{Manifest.permission.CALL_PHONE}, REQUEST_PHONE_CALL);\n+        else startActivity(callIntent);\n+      }\n+    });\n+\n+    getContext().registerReceiver(connErrReceiver,\n+            new IntentFilter(getString(R.string.connection_error)));\n+    getContext().registerReceiver(connRestReceiver,\n+            new IntentFilter(getString(R.string.connection_restored)));\n+    getContext().registerReceiver(toggleReceiver,\n+            new IntentFilter(getString(R.string.play_pause_intent)));\n+  }\n+\n+  public interface OnFragmentInteractionListener {\n+    void onFragmentInteraction(Uri uri);\n+  }\n+\n+  private BroadcastReceiver showUpdateReceiver = new BroadcastReceiver() {\n+    @Override\n+    public void onReceive(final Context context, Intent intent) {\n+        showTitleTv.setText(intent.getStringExtra(getString(R.string.extra_showTitle)));\n+        Picasso.get()\n+                .load(intent.getStringExtra(getString(R.string.extra_showArtUrl)))\n+                .into(showArtIv, new com.squareup.picasso.Callback() {\n+                  @Override\n+                  public void onSuccess() {\n+                      if (showArtProgress != null) showArtProgress.hide();\n+\n+                      TypedValue value = new TypedValue();\n+                      context.getTheme().resolveAttribute(R.attr.colorAccent, value, true);\n+\n+                      Palette color = Palette\n+                              .from(((BitmapDrawable) showArtIv.getDrawable()).getBitmap())\n+                              .generate();\n+\n+                      int newBgColor = color.getVibrantColor(value.data);\n+                      int newFgColor = color.getDarkVibrantColor(Color.parseColor(\"#FFFFFF\"));",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/streaming/StreamingFragment.java",
        "position": null,
        "original_position": 231,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@color/white",
        "created_at": "2018-05-13T07:52:16Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791905",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791905"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791905"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791909",
        "pull_request_review_id": 119645507,
        "id": 187791909,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTkwOQ==",
        "diff_hunk": "@@ -0,0 +1,308 @@\n+package com.uclaradio.uclaradio.fragments.streaming;\n+\n+import android.Manifest;\n+import android.animation.ArgbEvaluator;\n+import android.animation.ValueAnimator;\n+import android.app.AlertDialog;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.content.pm.PackageManager;\n+import android.content.res.ColorStateList;\n+import android.graphics.Color;\n+import android.graphics.PorterDuff;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.net.Uri;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.design.widget.FloatingActionButton;\n+import android.support.v4.app.ActivityCompat;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.content.ContextCompat;\n+import android.support.v4.widget.ContentLoadingProgressBar;\n+import android.support.v7.graphics.Palette;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.activities.MainActivity;\n+import com.uclaradio.uclaradio.R;\n+\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Activities that contain this fragment must implement the\n+ * {@link StreamingFragment.OnFragmentInteractionListener} interface\n+ * to handle interaction events.\n+ * Use the {@link StreamingFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class StreamingFragment extends Fragment {\n+  private FloatingActionButton playPauseBtn;\n+\n+  private TextView showTitleTv;\n+  private ImageView showArtIv;\n+\n+  private ContentLoadingProgressBar showArtProgress;\n+\n+  private final Intent callIntent = new Intent(Intent.ACTION_CALL);\n+\n+  private static final int REQUEST_PHONE_CALL = 982;\n+\n+  private OnFragmentInteractionListener mListener;\n+\n+  public StreamingFragment() {\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public static StreamingFragment newInstance() {\n+    StreamingFragment fragment = new StreamingFragment();\n+    Bundle args = new Bundle();\n+    fragment.setArguments(args);\n+\n+    return fragment;\n+  }\n+\n+  @Override\n+  public void onCreate(Bundle savedInstanceState) {\n+    super.onCreate(savedInstanceState);\n+  }\n+\n+  @Override\n+  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                           Bundle savedInstanceState) {\n+    return inflater.inflate(R.layout.fragment_streaming, container, false);\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public void onButtonPressed(Uri uri) {\n+    if (mListener != null) {\n+      mListener.onFragmentInteraction(uri);\n+    }\n+  }\n+\n+  @Override\n+  public void onAttach(Context context) {\n+    super.onAttach(context);\n+    if (context instanceof OnFragmentInteractionListener) {\n+      mListener = (OnFragmentInteractionListener) context;\n+    } else {\n+      throw new RuntimeException(context.toString()\n+              + \" must implement OnFragmentInteractionListener\");\n+    }\n+  }\n+\n+  @Override\n+  public void onDetach() {\n+    super.onDetach();\n+    mListener = null;\n+    getContext().unregisterReceiver(showUpdateReceiver);\n+    getContext().unregisterReceiver(toggleReceiver);\n+    getContext().unregisterReceiver(connRestReceiver);\n+    getContext().unregisterReceiver(connErrReceiver);\n+  }\n+\n+  @Override\n+  public void onRequestPermissionsResult(int requestCode,\n+                                         @NonNull String permissions[],\n+                                         @NonNull int grantResults[]) {\n+      switch (requestCode) {\n+        case REQUEST_PHONE_CALL:\n+          if (grantResults.length > 0) {\n+            if (grantResults[0] == PackageManager.PERMISSION_GRANTED)\n+              startActivity(callIntent);\n+            else if (grantResults[0] == PackageManager.PERMISSION_DENIED) {\n+              if (!shouldShowRequestPermissionRationale(permissions[0]))\n+              {\n+                new AlertDialog.Builder(getContext())\n+                        .setTitle(R.string.calling_disabled)\n+                        .setMessage(R.string.no_perms_dialog)\n+                        .setPositiveButton(\"OK\", null)\n+                        .create().show();\n+              }\n+            }\n+          }\n+          break;\n+        default:\n+          // Do nothing\n+      }\n+  }\n+\n+  // Only updates the current playing show whenever the view is created--obviously will\n+  //  not update if the show changes while the app is still open.\n+  public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n+    playPauseBtn = view.findViewById(R.id.playpause_btn);\n+    showArtIv = view.findViewById(R.id.show_art_img);\n+    showTitleTv = view.findViewById(R.id.show_title_text);\n+    Button onAirCallBtn = view.findViewById(R.id.on_air_btn);\n+    Button requestCallBtn = view.findViewById(R.id.request_call_btn);\n+    showArtProgress = view.findViewById(R.id.show_art_progress);\n+    showArtProgress.show();\n+    final MainActivity mainActivity = (MainActivity) getActivity();\n+\n+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP)\n+      playPauseBtn.setStateListAnimator(null);\n+\n+    getContext().registerReceiver(showUpdateReceiver,\n+            new IntentFilter(getString(R.string.update_show_info_intent)));\n+\n+    playPauseBtn.setOnClickListener(new View.OnClickListener() {\n+      public void onClick(View v) {\n+        if (!mainActivity.isBound()) {\n+          Log.d(\"Service\", \"Not yet bound\");\n+          return;\n+        }\n+        if (MainActivity.stream == null) {\n+          Log.d(\"Service\", \"Stream is null...\");\n+          return;\n+        }\n+//        if (MainActivity.stream.isPlaying())\n+//          ((ImageButton) v).setImageResource(android.R.drawable.ic_media_play);\n+//        else\n+//          ((ImageButton) v).setImageResource(android.R.drawable.ic_media_pause);\n+//        MainActivity.stream.toggle();\n+        getContext().sendBroadcast(new Intent(getString(R.string.play_pause_intent)));\n+      }\n+    });\n+\n+    onAirCallBtn.setOnClickListener(new View.OnClickListener() {\n+      @Override\n+      public void onClick(View v) {\n+          callIntent.setData(Uri.parse(\"tel:3107949348\"));\n+          if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CALL_PHONE)\n+                    != PackageManager.PERMISSION_GRANTED)\n+            requestPermissions(new String[]{Manifest.permission.CALL_PHONE}, REQUEST_PHONE_CALL);\n+          else startActivity(callIntent);\n+      }\n+    });\n+\n+    requestCallBtn.setOnClickListener(new View.OnClickListener() {\n+      @Override\n+      public void onClick(View v) {\n+        callIntent.setData(Uri.parse(\"tel:3108259999\"));\n+        if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CALL_PHONE)\n+                != PackageManager.PERMISSION_GRANTED)\n+          ActivityCompat.requestPermissions(getActivity(),\n+                  new String[]{Manifest.permission.CALL_PHONE}, REQUEST_PHONE_CALL);\n+        else startActivity(callIntent);\n+      }\n+    });\n+\n+    getContext().registerReceiver(connErrReceiver,\n+            new IntentFilter(getString(R.string.connection_error)));\n+    getContext().registerReceiver(connRestReceiver,\n+            new IntentFilter(getString(R.string.connection_restored)));\n+    getContext().registerReceiver(toggleReceiver,\n+            new IntentFilter(getString(R.string.play_pause_intent)));\n+  }\n+\n+  public interface OnFragmentInteractionListener {\n+    void onFragmentInteraction(Uri uri);\n+  }\n+\n+  private BroadcastReceiver showUpdateReceiver = new BroadcastReceiver() {\n+    @Override\n+    public void onReceive(final Context context, Intent intent) {\n+        showTitleTv.setText(intent.getStringExtra(getString(R.string.extra_showTitle)));\n+        Picasso.get()\n+                .load(intent.getStringExtra(getString(R.string.extra_showArtUrl)))\n+                .into(showArtIv, new com.squareup.picasso.Callback() {\n+                  @Override\n+                  public void onSuccess() {\n+                      if (showArtProgress != null) showArtProgress.hide();\n+\n+                      TypedValue value = new TypedValue();\n+                      context.getTheme().resolveAttribute(R.attr.colorAccent, value, true);\n+\n+                      Palette color = Palette\n+                              .from(((BitmapDrawable) showArtIv.getDrawable()).getBitmap())\n+                              .generate();\n+\n+                      int newBgColor = color.getVibrantColor(value.data);\n+                      int newFgColor = color.getDarkVibrantColor(Color.parseColor(\"#FFFFFF\"));\n+//                      int newColor = bgSwatch != null ? bgSwatch.getRgb() : value.data;\n+                      ValueAnimator bgAnim = new ValueAnimator();\n+                      // Background tint list should never be null, so this is f\n+                      //noinspection ConstantConditions\n+                      bgAnim.setIntValues(\n+                              playPauseBtn.getBackgroundTintList().getDefaultColor(),\n+                              newBgColor\n+                      );\n+                      bgAnim.setEvaluator(new ArgbEvaluator());\n+\n+                      bgAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n+                        @Override\n+                        public void onAnimationUpdate(ValueAnimator valueAnimator) {\n+                          playPauseBtn.setBackgroundTintList(\n+                                  ColorStateList.valueOf((int) valueAnimator.getAnimatedValue())\n+                          );\n+                        }\n+                      });\n+                      playPauseBtn.getDrawable().mutate().setColorFilter(newFgColor, PorterDuff.Mode.SRC_IN);\n+\n+                      bgAnim.setDuration(500);\n+                        bgAnim.start();\n+                  }\n+\n+                  @Override\n+                  public void onError(Exception e) {\n+                      Log.e(\"Picasso\", \"Error in Picasso!\");\n+                      e.printStackTrace();\n+                  }\n+                });\n+    }\n+  };\n+\n+  private void togglePlayButton() {\n+    if (MainActivity.stream != null && MainActivity.stream.isPlaying())\n+      playPauseBtn.setImageResource(R.drawable.baseline_pause_white_48);\n+    else\n+      playPauseBtn.setImageResource(R.drawable.baseline_play_arrow_white_48);\n+    if (showArtIv.getDrawable() != null) {\n+      Palette color = Palette\n+              .from(((BitmapDrawable) showArtIv.getDrawable()).getBitmap())\n+              .generate();\n+      int newFgColor = color.getDarkVibrantColor(Color.parseColor(\"#FFFFFF\"));",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/streaming/StreamingFragment.java",
        "position": null,
        "original_position": 274,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "^",
        "created_at": "2018-05-13T07:52:24Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791909",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791909"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791909"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791912",
        "pull_request_review_id": 119645507,
        "id": 187791912,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTkxMg==",
        "diff_hunk": "@@ -0,0 +1,308 @@\n+package com.uclaradio.uclaradio.fragments.streaming;\n+\n+import android.Manifest;\n+import android.animation.ArgbEvaluator;\n+import android.animation.ValueAnimator;\n+import android.app.AlertDialog;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.content.pm.PackageManager;\n+import android.content.res.ColorStateList;\n+import android.graphics.Color;\n+import android.graphics.PorterDuff;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.net.Uri;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.design.widget.FloatingActionButton;\n+import android.support.v4.app.ActivityCompat;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.content.ContextCompat;\n+import android.support.v4.widget.ContentLoadingProgressBar;\n+import android.support.v7.graphics.Palette;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.activities.MainActivity;\n+import com.uclaradio.uclaradio.R;\n+\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Activities that contain this fragment must implement the\n+ * {@link StreamingFragment.OnFragmentInteractionListener} interface\n+ * to handle interaction events.\n+ * Use the {@link StreamingFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class StreamingFragment extends Fragment {\n+  private FloatingActionButton playPauseBtn;\n+\n+  private TextView showTitleTv;\n+  private ImageView showArtIv;\n+\n+  private ContentLoadingProgressBar showArtProgress;\n+\n+  private final Intent callIntent = new Intent(Intent.ACTION_CALL);\n+\n+  private static final int REQUEST_PHONE_CALL = 982;\n+\n+  private OnFragmentInteractionListener mListener;\n+\n+  public StreamingFragment() {\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public static StreamingFragment newInstance() {\n+    StreamingFragment fragment = new StreamingFragment();\n+    Bundle args = new Bundle();\n+    fragment.setArguments(args);\n+\n+    return fragment;\n+  }\n+\n+  @Override\n+  public void onCreate(Bundle savedInstanceState) {\n+    super.onCreate(savedInstanceState);\n+  }\n+\n+  @Override\n+  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                           Bundle savedInstanceState) {\n+    return inflater.inflate(R.layout.fragment_streaming, container, false);\n+  }\n+\n+  @SuppressWarnings(\"unused\")\n+  public void onButtonPressed(Uri uri) {\n+    if (mListener != null) {\n+      mListener.onFragmentInteraction(uri);\n+    }\n+  }\n+\n+  @Override\n+  public void onAttach(Context context) {\n+    super.onAttach(context);\n+    if (context instanceof OnFragmentInteractionListener) {\n+      mListener = (OnFragmentInteractionListener) context;\n+    } else {\n+      throw new RuntimeException(context.toString()\n+              + \" must implement OnFragmentInteractionListener\");\n+    }\n+  }\n+\n+  @Override\n+  public void onDetach() {\n+    super.onDetach();\n+    mListener = null;\n+    getContext().unregisterReceiver(showUpdateReceiver);\n+    getContext().unregisterReceiver(toggleReceiver);\n+    getContext().unregisterReceiver(connRestReceiver);\n+    getContext().unregisterReceiver(connErrReceiver);\n+  }\n+\n+  @Override\n+  public void onRequestPermissionsResult(int requestCode,\n+                                         @NonNull String permissions[],\n+                                         @NonNull int grantResults[]) {\n+      switch (requestCode) {\n+        case REQUEST_PHONE_CALL:\n+          if (grantResults.length > 0) {\n+            if (grantResults[0] == PackageManager.PERMISSION_GRANTED)\n+              startActivity(callIntent);\n+            else if (grantResults[0] == PackageManager.PERMISSION_DENIED) {\n+              if (!shouldShowRequestPermissionRationale(permissions[0]))\n+              {\n+                new AlertDialog.Builder(getContext())\n+                        .setTitle(R.string.calling_disabled)\n+                        .setMessage(R.string.no_perms_dialog)\n+                        .setPositiveButton(\"OK\", null)\n+                        .create().show();\n+              }\n+            }\n+          }\n+          break;\n+        default:\n+          // Do nothing\n+      }\n+  }\n+\n+  // Only updates the current playing show whenever the view is created--obviously will\n+  //  not update if the show changes while the app is still open.\n+  public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n+    playPauseBtn = view.findViewById(R.id.playpause_btn);\n+    showArtIv = view.findViewById(R.id.show_art_img);\n+    showTitleTv = view.findViewById(R.id.show_title_text);\n+    Button onAirCallBtn = view.findViewById(R.id.on_air_btn);\n+    Button requestCallBtn = view.findViewById(R.id.request_call_btn);\n+    showArtProgress = view.findViewById(R.id.show_art_progress);\n+    showArtProgress.show();\n+    final MainActivity mainActivity = (MainActivity) getActivity();\n+\n+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP)\n+      playPauseBtn.setStateListAnimator(null);\n+\n+    getContext().registerReceiver(showUpdateReceiver,\n+            new IntentFilter(getString(R.string.update_show_info_intent)));\n+\n+    playPauseBtn.setOnClickListener(new View.OnClickListener() {\n+      public void onClick(View v) {\n+        if (!mainActivity.isBound()) {\n+          Log.d(\"Service\", \"Not yet bound\");\n+          return;\n+        }\n+        if (MainActivity.stream == null) {\n+          Log.d(\"Service\", \"Stream is null...\");\n+          return;\n+        }\n+//        if (MainActivity.stream.isPlaying())\n+//          ((ImageButton) v).setImageResource(android.R.drawable.ic_media_play);\n+//        else\n+//          ((ImageButton) v).setImageResource(android.R.drawable.ic_media_pause);\n+//        MainActivity.stream.toggle();\n+        getContext().sendBroadcast(new Intent(getString(R.string.play_pause_intent)));\n+      }\n+    });\n+\n+    onAirCallBtn.setOnClickListener(new View.OnClickListener() {\n+      @Override\n+      public void onClick(View v) {\n+          callIntent.setData(Uri.parse(\"tel:3107949348\"));\n+          if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CALL_PHONE)\n+                    != PackageManager.PERMISSION_GRANTED)\n+            requestPermissions(new String[]{Manifest.permission.CALL_PHONE}, REQUEST_PHONE_CALL);\n+          else startActivity(callIntent);\n+      }\n+    });\n+\n+    requestCallBtn.setOnClickListener(new View.OnClickListener() {\n+      @Override\n+      public void onClick(View v) {\n+        callIntent.setData(Uri.parse(\"tel:3108259999\"));\n+        if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CALL_PHONE)\n+                != PackageManager.PERMISSION_GRANTED)\n+          ActivityCompat.requestPermissions(getActivity(),\n+                  new String[]{Manifest.permission.CALL_PHONE}, REQUEST_PHONE_CALL);\n+        else startActivity(callIntent);\n+      }\n+    });\n+\n+    getContext().registerReceiver(connErrReceiver,\n+            new IntentFilter(getString(R.string.connection_error)));\n+    getContext().registerReceiver(connRestReceiver,\n+            new IntentFilter(getString(R.string.connection_restored)));\n+    getContext().registerReceiver(toggleReceiver,\n+            new IntentFilter(getString(R.string.play_pause_intent)));\n+  }\n+\n+  public interface OnFragmentInteractionListener {\n+    void onFragmentInteraction(Uri uri);\n+  }\n+\n+  private BroadcastReceiver showUpdateReceiver = new BroadcastReceiver() {\n+    @Override\n+    public void onReceive(final Context context, Intent intent) {\n+        showTitleTv.setText(intent.getStringExtra(getString(R.string.extra_showTitle)));\n+        Picasso.get()\n+                .load(intent.getStringExtra(getString(R.string.extra_showArtUrl)))\n+                .into(showArtIv, new com.squareup.picasso.Callback() {\n+                  @Override\n+                  public void onSuccess() {\n+                      if (showArtProgress != null) showArtProgress.hide();\n+\n+                      TypedValue value = new TypedValue();\n+                      context.getTheme().resolveAttribute(R.attr.colorAccent, value, true);\n+\n+                      Palette color = Palette\n+                              .from(((BitmapDrawable) showArtIv.getDrawable()).getBitmap())\n+                              .generate();\n+\n+                      int newBgColor = color.getVibrantColor(value.data);\n+                      int newFgColor = color.getDarkVibrantColor(Color.parseColor(\"#FFFFFF\"));\n+//                      int newColor = bgSwatch != null ? bgSwatch.getRgb() : value.data;\n+                      ValueAnimator bgAnim = new ValueAnimator();\n+                      // Background tint list should never be null, so this is f\n+                      //noinspection ConstantConditions\n+                      bgAnim.setIntValues(\n+                              playPauseBtn.getBackgroundTintList().getDefaultColor(),\n+                              newBgColor\n+                      );\n+                      bgAnim.setEvaluator(new ArgbEvaluator());\n+\n+                      bgAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n+                        @Override\n+                        public void onAnimationUpdate(ValueAnimator valueAnimator) {\n+                          playPauseBtn.setBackgroundTintList(\n+                                  ColorStateList.valueOf((int) valueAnimator.getAnimatedValue())\n+                          );\n+                        }\n+                      });\n+                      playPauseBtn.getDrawable().mutate().setColorFilter(newFgColor, PorterDuff.Mode.SRC_IN);\n+\n+                      bgAnim.setDuration(500);\n+                        bgAnim.start();\n+                  }\n+\n+                  @Override\n+                  public void onError(Exception e) {\n+                      Log.e(\"Picasso\", \"Error in Picasso!\");\n+                      e.printStackTrace();\n+                  }\n+                });\n+    }\n+  };\n+\n+  private void togglePlayButton() {\n+    if (MainActivity.stream != null && MainActivity.stream.isPlaying())\n+      playPauseBtn.setImageResource(R.drawable.baseline_pause_white_48);\n+    else\n+      playPauseBtn.setImageResource(R.drawable.baseline_play_arrow_white_48);\n+    if (showArtIv.getDrawable() != null) {\n+      Palette color = Palette\n+              .from(((BitmapDrawable) showArtIv.getDrawable()).getBitmap())\n+              .generate();\n+      int newFgColor = color.getDarkVibrantColor(Color.parseColor(\"#FFFFFF\"));\n+      playPauseBtn.getDrawable().mutate().setColorFilter(newFgColor, PorterDuff.Mode.SRC_IN);\n+    }\n+  }\n+\n+  private BroadcastReceiver toggleReceiver = new BroadcastReceiver() {\n+    @Override\n+    public void onReceive(Context context, Intent intent) {\n+        togglePlayButton();\n+    }\n+  };\n+\n+  private BroadcastReceiver connErrReceiver = new BroadcastReceiver() {\n+    @Override\n+    public void onReceive(Context context, Intent intent) {\n+        playPauseBtn.setImageResource(R.drawable.baseline_error_outline_white_48);\n+        if (showArtIv.getDrawable() != null) {\n+          Palette color = Palette\n+                  .from(((BitmapDrawable) showArtIv.getDrawable()).getBitmap())\n+                  .generate();\n+          int newFgColor = color.getDarkVibrantColor(Color.parseColor(\"#FFFFFF\"));",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/streaming/StreamingFragment.java",
        "position": null,
        "original_position": 294,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "^",
        "created_at": "2018-05-13T07:52:30Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791912",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791912"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791912"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791919",
        "pull_request_review_id": 119645507,
        "id": 187791919,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTkxOQ==",
        "diff_hunk": "@@ -0,0 +1,367 @@\n+package com.uclaradio.uclaradio.stream;\n+\n+import android.app.Notification;\n+import android.app.NotificationChannel;\n+import android.app.NotificationManager;\n+import android.app.PendingIntent;\n+import android.app.Service;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.drawable.Drawable;\n+import android.media.AudioManager;\n+import android.media.MediaPlayer;\n+import android.os.Binder;\n+import android.os.Build;\n+import android.os.IBinder;\n+import android.support.annotation.Nullable;\n+import android.support.v4.app.NotificationCompat;\n+import android.support.v4.content.LocalBroadcastManager;\n+import android.support.v7.graphics.Palette;\n+import android.util.Log;\n+import android.util.TypedValue;\n+\n+import com.squareup.picasso.Picasso;\n+import com.squareup.picasso.Target;\n+import com.uclaradio.uclaradio.activities.MainActivity;\n+import com.uclaradio.uclaradio.activities.PreSplashActivity;\n+import com.uclaradio.uclaradio.activities.SplashActivity;\n+import com.uclaradio.uclaradio.fragments.schedule.ScheduleData;\n+import com.uclaradio.uclaradio.R;\n+import com.uclaradio.uclaradio.interfaces.RadioPlatform;\n+\n+import java.io.IOException;\n+import java.util.Calendar;\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+import retrofit2.Callback;\n+import retrofit2.Response;\n+import retrofit2.Retrofit;\n+import retrofit2.converter.gson.GsonConverterFactory;\n+\n+public class StreamService extends Service implements MediaPlayer.OnPreparedListener {\n+    private static final String STREAM_URL = \"http://uclaradio.com:8000/;\";\n+    public  static final String BROADCAST_ACTION = \"com.uclaradio.uclaradio.BROADCAST_COMPLETE\";\n+    private static final String CHANNEL_ID = \"com.uclaradio.uclaradio.notificationChannelId124813759\";",
        "path": "app/src/main/java/com/uclaradio/uclaradio/stream/StreamService.java",
        "position": null,
        "original_position": 49,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "all should be string resources (xml)",
        "created_at": "2018-05-13T07:52:48Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791919",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791919"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791919"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791932",
        "pull_request_review_id": 119645507,
        "id": 187791932,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc5MTkzMg==",
        "diff_hunk": "@@ -0,0 +1,367 @@\n+package com.uclaradio.uclaradio.stream;\n+\n+import android.app.Notification;\n+import android.app.NotificationChannel;\n+import android.app.NotificationManager;\n+import android.app.PendingIntent;\n+import android.app.Service;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.drawable.Drawable;\n+import android.media.AudioManager;\n+import android.media.MediaPlayer;\n+import android.os.Binder;\n+import android.os.Build;\n+import android.os.IBinder;\n+import android.support.annotation.Nullable;\n+import android.support.v4.app.NotificationCompat;\n+import android.support.v4.content.LocalBroadcastManager;\n+import android.support.v7.graphics.Palette;\n+import android.util.Log;\n+import android.util.TypedValue;\n+\n+import com.squareup.picasso.Picasso;\n+import com.squareup.picasso.Target;\n+import com.uclaradio.uclaradio.activities.MainActivity;\n+import com.uclaradio.uclaradio.activities.PreSplashActivity;\n+import com.uclaradio.uclaradio.activities.SplashActivity;\n+import com.uclaradio.uclaradio.fragments.schedule.ScheduleData;\n+import com.uclaradio.uclaradio.R;\n+import com.uclaradio.uclaradio.interfaces.RadioPlatform;\n+\n+import java.io.IOException;\n+import java.util.Calendar;\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+import retrofit2.Callback;\n+import retrofit2.Response;\n+import retrofit2.Retrofit;\n+import retrofit2.converter.gson.GsonConverterFactory;\n+\n+public class StreamService extends Service implements MediaPlayer.OnPreparedListener {\n+    private static final String STREAM_URL = \"http://uclaradio.com:8000/;\";\n+    public  static final String BROADCAST_ACTION = \"com.uclaradio.uclaradio.BROADCAST_COMPLETE\";\n+    private static final String CHANNEL_ID = \"com.uclaradio.uclaradio.notificationChannelId124813759\";\n+\n+    private Bitmap showArt;\n+    private String showArtUrl;\n+    private String showTitle;\n+\n+    private boolean startUp = true;\n+\n+    final Target[] notificationTarget = new Target[1];\n+\n+    private MediaPlayer stream;\n+    private final IBinder binder = new LocalBinder();\n+\n+    @Nullable\n+    @Override\n+    public IBinder onBind(Intent intent) {\n+        return binder;\n+    }\n+\n+    @Override\n+    public int onStartCommand(@Nullable Intent intent, int flags, int startId) {\n+        showArt = BitmapFactory.decodeResource(getResources(), R.drawable.logo);\n+        showArtUrl = getString(R.string.website) + \"/img/radio.png\";\n+        showTitle = getString(R.string.loading_show);\n+        initStream();\n+        registerReceiver(toggleReceiver, new IntentFilter(getString(R.string.play_pause_intent)));\n+        registerReceiver(connErrReceiver, new IntentFilter(getString(R.string.connection_error)));\n+        registerReceiver(connRestReceiver, new IntentFilter(getString(R.string.connection_restored)));\n+        checkCurrentTime();\n+        Log.d(\"Service\", \"Started!\");\n+\n+        return START_STICKY;\n+    }\n+\n+    @Override\n+    public void onPrepared(MediaPlayer mediaPlayer) {\n+        Log.d(\"Service\", \"Prepared!\");\n+        Intent prepared = new Intent(BROADCAST_ACTION);\n+        LocalBroadcastManager.getInstance(this).sendBroadcast(prepared);\n+        if (startUp) toggle();\n+        toggle(); // If the stream cuts out and reconnects, toggle to reset state\n+        sendBroadcast(new Intent(getString(R.string.connection_restored)));\n+        startUp = false;\n+    }\n+\n+    @Override\n+    public void onDestroy() {\n+        stream.stop();\n+        stream.release();\n+        unregisterReceiver(toggleReceiver);\n+        unregisterReceiver(connErrReceiver);\n+        unregisterReceiver(connRestReceiver);\n+        Log.d(\"Service\", \"Destroyed\");\n+\n+        super.onDestroy();\n+    }\n+\n+    public void play() {\n+        stream.start();\n+    }\n+\n+    public void pause() { stream.pause(); }\n+\n+    public void toggle() {\n+        if (isPlaying()) pause();\n+        else play();\n+    }\n+\n+    public boolean isPlaying() {\n+        try {\n+            return stream.isPlaying();\n+        } catch (IllegalStateException ex) {\n+            Log.e(\"Service\", \"Trying to call isPlaying() on an uninitialized MediaPlayer.\");\n+            ex.printStackTrace();\n+            return isPlaying();\n+        } catch (NullPointerException ex) {\n+            Log.e(\"Service\", \"Trying to call isPlaying() on a null reference.\");\n+            ex.printStackTrace();\n+            initStream();\n+            return isPlaying();\n+        }\n+    }\n+\n+    private void initStream() {\n+        stream = new MediaPlayer();\n+        stream.setAudioStreamType(AudioManager.STREAM_MUSIC);\n+        try {\n+            stream.setDataSource(STREAM_URL);\n+            Log.d(\"MediaPlayer\", \"Set data source\");\n+        } catch (IOException ex) {\n+            Log.e(\"MediaPlayerErr\", ex.getMessage());\n+        } catch (IllegalArgumentException ex) {\n+            Log.e(\"MediaPlayerErr\", ex.getMessage());\n+        }\n+        stream.setOnPreparedListener(this);\n+        stream.setLooping(false);\n+        stream.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {\n+            @Override\n+            public void onCompletion(MediaPlayer mediaPlayer) {\n+                Log.d(\"Service\", \"Stream stopped. Reconnecting...\");\n+                sendBroadcast(new Intent(getString(R.string.connection_error)));\n+                stream.reset();\n+                initStream();\n+//                sendBroadcast(new Intent(getString(R.string.play_pause_intent)));\n+            }\n+        });\n+        stream.setOnErrorListener(new MediaPlayer.OnErrorListener() {",
        "path": "app/src/main/java/com/uclaradio/uclaradio/stream/StreamService.java",
        "position": 202,
        "original_position": 155,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "comran",
            "id": 19298617,
            "node_id": "MDQ6VXNlcjE5Mjk4NjE3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/19298617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/comran",
            "html_url": "https://github.com/comran",
            "followers_url": "https://api.github.com/users/comran/followers",
            "following_url": "https://api.github.com/users/comran/following{/other_user}",
            "gists_url": "https://api.github.com/users/comran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/comran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comran/subscriptions",
            "organizations_url": "https://api.github.com/users/comran/orgs",
            "repos_url": "https://api.github.com/users/comran/repos",
            "events_url": "https://api.github.com/users/comran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/comran/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Report stream errors to the user as well",
        "created_at": "2018-05-13T07:53:14Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791932",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187791932"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187791932"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811607",
        "pull_request_review_id": 119664940,
        "id": 187811607,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMTYwNw==",
        "diff_hunk": "@@ -0,0 +1,147 @@\n+package com.uclaradio.uclaradio.activities;\n+\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.ServiceConnection;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Color;\n+import android.graphics.Point;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.graphics.drawable.ColorDrawable;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.os.IBinder;\n+import android.support.design.widget.TabLayout;\n+import android.support.v4.view.ViewPager;\n+import android.support.v7.app.ActionBar;\n+import android.support.v7.app.AppCompatActivity;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.Display;\n+import android.widget.ImageView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.fragments.about.AboutFragment;\n+import com.uclaradio.uclaradio.fragments.djs.DJsFragment;\n+import com.uclaradio.uclaradio.fragments.schedule.ScheduleFragment;\n+import com.uclaradio.uclaradio.fragments.streaming.StreamingFragment;\n+import com.uclaradio.uclaradio.R;\n+import com.uclaradio.uclaradio.activities.tabpager.TabPager;\n+import com.uclaradio.uclaradio.stream.StreamService;\n+\n+public class MainActivity extends AppCompatActivity\n+        implements StreamingFragment.OnFragmentInteractionListener,\n+        ScheduleFragment.OnFragmentInteractionListener,\n+        DJsFragment.OnFragmentInteractionListener,\n+        AboutFragment.OnFragmentInteractionListener {\n+\n+  public static final int SERVICE_ID = 41243;",
        "path": "app/src/main/java/com/uclaradio/uclaradio/activities/MainActivity.java",
        "position": null,
        "original_position": 40,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "arjunr00",
            "id": 30734384,
            "node_id": "MDQ6VXNlcjMwNzM0Mzg0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/30734384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arjunr00",
            "html_url": "https://github.com/arjunr00",
            "followers_url": "https://api.github.com/users/arjunr00/followers",
            "following_url": "https://api.github.com/users/arjunr00/following{/other_user}",
            "gists_url": "https://api.github.com/users/arjunr00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arjunr00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arjunr00/subscriptions",
            "organizations_url": "https://api.github.com/users/arjunr00/orgs",
            "repos_url": "https://api.github.com/users/arjunr00/repos",
            "events_url": "https://api.github.com/users/arjunr00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arjunr00/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-13T19:50:08Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811607",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811607"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811607"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        },
        "in_reply_to_id": 187791428
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811609",
        "pull_request_review_id": 119664942,
        "id": 187811609,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMTYwOQ==",
        "diff_hunk": "@@ -0,0 +1,147 @@\n+package com.uclaradio.uclaradio.activities;\n+\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.ServiceConnection;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Color;\n+import android.graphics.Point;\n+import android.graphics.drawable.BitmapDrawable;\n+import android.graphics.drawable.ColorDrawable;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.os.IBinder;\n+import android.support.design.widget.TabLayout;\n+import android.support.v4.view.ViewPager;\n+import android.support.v7.app.ActionBar;\n+import android.support.v7.app.AppCompatActivity;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.Display;\n+import android.widget.ImageView;\n+\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.fragments.about.AboutFragment;\n+import com.uclaradio.uclaradio.fragments.djs.DJsFragment;\n+import com.uclaradio.uclaradio.fragments.schedule.ScheduleFragment;\n+import com.uclaradio.uclaradio.fragments.streaming.StreamingFragment;\n+import com.uclaradio.uclaradio.R;\n+import com.uclaradio.uclaradio.activities.tabpager.TabPager;\n+import com.uclaradio.uclaradio.stream.StreamService;\n+\n+public class MainActivity extends AppCompatActivity\n+        implements StreamingFragment.OnFragmentInteractionListener,\n+        ScheduleFragment.OnFragmentInteractionListener,\n+        DJsFragment.OnFragmentInteractionListener,\n+        AboutFragment.OnFragmentInteractionListener {\n+\n+  public static final int SERVICE_ID = 41243;\n+\n+  public static StreamService stream;\n+  private boolean bound = false;\n+\n+  @Override\n+  protected void onCreate(Bundle savedInstanceState) {\n+    super.onCreate(savedInstanceState);\n+    setContentView(R.layout.activity_main);\n+\n+    initializeActionBar();\n+  }\n+\n+  @Override\n+  protected void onStart() {\n+    super.onStart();\n+\n+    Intent intent = new Intent(this, StreamService.class);\n+    bindService(intent, connection, Context.BIND_AUTO_CREATE);\n+  }\n+\n+  @Override\n+  protected void onStop() {\n+    Log.d(\"Service\", \"Stopped\");\n+    super.onStop();\n+  }\n+\n+  @Override\n+  protected void onDestroy() {\n+    unbindService(connection);\n+    bound = false;\n+    stream.stopForeground(true);\n+    stream.stopSelf();\n+    Log.d(\"Service\", \"Destroying stream...\");\n+    super.onDestroy();\n+  }\n+\n+  @Override\n+  public void onFragmentInteraction(Uri uri) {\n+  }\n+\n+  private void initializeActionBar() {\n+    Display display = getWindowManager().getDefaultDisplay();\n+    Point size = new Point();\n+    display.getSize(size);\n+    int width = size.x;\n+\n+    int actionBarHeight = 0;\n+    TypedValue tv = new TypedValue();\n+    if (getTheme().resolveAttribute(android.R.attr.actionBarSize, tv, true)) {\n+      actionBarHeight = TypedValue.complexToDimensionPixelSize(tv.data, getResources().getDisplayMetrics());\n+    }\n+\n+    android.support.v7.app.ActionBar actionBar = getSupportActionBar();\n+    Bitmap background = BitmapFactory.decodeResource(getResources(), R.drawable.background);\n+    BitmapDrawable background_drawable = new BitmapDrawable(Bitmap.createScaledBitmap(background, width * 4, actionBarHeight * 4, false));\n+    background_drawable.setTileModeX(android.graphics.Shader.TileMode.REPEAT);\n+//    actionBar.setBackgroundDrawable(background_drawable);\n+    int color = Color.parseColor(\"#80333333\");",
        "path": "app/src/main/java/com/uclaradio/uclaradio/activities/MainActivity.java",
        "position": null,
        "original_position": 98,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "arjunr00",
            "id": 30734384,
            "node_id": "MDQ6VXNlcjMwNzM0Mzg0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/30734384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arjunr00",
            "html_url": "https://github.com/arjunr00",
            "followers_url": "https://api.github.com/users/arjunr00/followers",
            "following_url": "https://api.github.com/users/arjunr00/following{/other_user}",
            "gists_url": "https://api.github.com/users/arjunr00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arjunr00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arjunr00/subscriptions",
            "organizations_url": "https://api.github.com/users/arjunr00/orgs",
            "repos_url": "https://api.github.com/users/arjunr00/repos",
            "events_url": "https://api.github.com/users/arjunr00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arjunr00/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-13T19:50:12Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811609",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811609"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811609"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        },
        "in_reply_to_id": 187791468
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811615",
        "pull_request_review_id": 119664948,
        "id": 187811615,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMTYxNQ==",
        "diff_hunk": "@@ -0,0 +1,91 @@\n+package com.uclaradio.uclaradio.activities;\n+\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.net.wifi.WifiInfo;\n+import android.net.wifi.WifiManager;\n+import android.os.Bundle;\n+import android.provider.Settings;\n+import android.support.v4.content.LocalBroadcastManager;\n+import android.support.v7.app.AlertDialog;\n+import android.support.v7.app.AppCompatActivity;\n+import android.util.Log;\n+\n+import com.uclaradio.uclaradio.R;\n+import com.uclaradio.uclaradio.stream.StreamService;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+public class SplashActivity extends AppCompatActivity {\n+\n+    private boolean shouldStopService = false;\n+\n+    // For now, networks that block the stream are hardcoded into a list. In the future, though,\n+    //  it will be more efficient and flexible to determine the block automatically.\n+    public static ArrayList<String> badWifis\n+            = new ArrayList<>(Arrays.asList(\n+            \"\\\"UCLA_WEB\\\"\", \"\\\"UCLA_WEB_RES\\\"\"",
        "path": "app/src/main/java/com/uclaradio/uclaradio/activities/SplashActivity.java",
        "position": null,
        "original_position": 31,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "arjunr00",
            "id": 30734384,
            "node_id": "MDQ6VXNlcjMwNzM0Mzg0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/30734384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arjunr00",
            "html_url": "https://github.com/arjunr00",
            "followers_url": "https://api.github.com/users/arjunr00/followers",
            "following_url": "https://api.github.com/users/arjunr00/following{/other_user}",
            "gists_url": "https://api.github.com/users/arjunr00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arjunr00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arjunr00/subscriptions",
            "organizations_url": "https://api.github.com/users/arjunr00/orgs",
            "repos_url": "https://api.github.com/users/arjunr00/repos",
            "events_url": "https://api.github.com/users/arjunr00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arjunr00/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Moved into resource, will work on a ping thing soon.",
        "created_at": "2018-05-13T19:50:15Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811615",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811615"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811615"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        },
        "in_reply_to_id": 187791536
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811616",
        "pull_request_review_id": 119664949,
        "id": 187811616,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMTYxNg==",
        "diff_hunk": "@@ -74,7 +73,7 @@ public void onDetach() {\n     }\n \n     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n-        ImageButton fbk = getView().findViewById(R.id.button1);\n+        ImageButton fbk = view.findViewById(R.id.button1);\n         fbk.setOnClickListener(new View.OnClickListener() {\n             public void onClick(View v) {\n                 Uri uri = Uri.parse(\"https://www.facebook.com/UCLARadio/?fref=ts\");",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/about/AboutFragment.java",
        "position": null,
        "original_position": 40,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "arjunr00",
            "id": 30734384,
            "node_id": "MDQ6VXNlcjMwNzM0Mzg0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/30734384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arjunr00",
            "html_url": "https://github.com/arjunr00",
            "followers_url": "https://api.github.com/users/arjunr00/followers",
            "following_url": "https://api.github.com/users/arjunr00/following{/other_user}",
            "gists_url": "https://api.github.com/users/arjunr00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arjunr00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arjunr00/subscriptions",
            "organizations_url": "https://api.github.com/users/arjunr00/orgs",
            "repos_url": "https://api.github.com/users/arjunr00/repos",
            "events_url": "https://api.github.com/users/arjunr00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arjunr00/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-13T19:50:19Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811616",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811616"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811616"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        },
        "in_reply_to_id": 187791579
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811618",
        "pull_request_review_id": 119664951,
        "id": 187811618,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMTYxOA==",
        "diff_hunk": "@@ -31,17 +32,21 @@\n  * create an instance of this fragment.\n  */\n public class DJsFragment extends Fragment {\n-    // TODO: Rename parameter arguments, choose names that match\n-\n-    private RadioPlatform platform;\n     private RecyclerView recyclerView;\n \n+    private ContentLoadingProgressBar djsProgress;\n+\n     // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n     private static final String ARG_PARAM1 = \"param1\";\n     private static final String ARG_PARAM2 = \"param2\";\n \n-    // TODO: Rename and change types of parameters\n+    private final int numberOfCols = 2;\n+\n+    // These aren't being used anywhere, but I don't want to delete some of the boilerplate\n+    //  in case it comes in handy later",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/djs/DJsFragment.java",
        "position": null,
        "original_position": 41,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "arjunr00",
            "id": 30734384,
            "node_id": "MDQ6VXNlcjMwNzM0Mzg0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/30734384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arjunr00",
            "html_url": "https://github.com/arjunr00",
            "followers_url": "https://api.github.com/users/arjunr00/followers",
            "following_url": "https://api.github.com/users/arjunr00/following{/other_user}",
            "gists_url": "https://api.github.com/users/arjunr00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arjunr00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arjunr00/subscriptions",
            "organizations_url": "https://api.github.com/users/arjunr00/orgs",
            "repos_url": "https://api.github.com/users/arjunr00/repos",
            "events_url": "https://api.github.com/users/arjunr00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arjunr00/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-13T19:50:23Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811618",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811618"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811618"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        },
        "in_reply_to_id": 187791659
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811619",
        "pull_request_review_id": 119664952,
        "id": 187811619,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMTYxOQ==",
        "diff_hunk": "@@ -110,45 +115,53 @@ public void onDetach() {\n \n     @Override\n     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n-        recyclerView = getView().findViewById(R.id.dj_ids_rv);\n-        final int numberOfCols = 2;\n+        recyclerView = view.findViewById(R.id.dj_ids_rv);\n         recyclerView.setLayoutManager(new GridLayoutManager(getActivity(), numberOfCols));\n+        djsProgress = view.findViewById(R.id.djs_progress);\n+        djsProgress.show();\n \n+        getDjs();\n+    }\n \n+    private void getDjs() {\n         Retrofit retrofit = new Retrofit.Builder()\n-                .addConverterFactory(GsonConverterFactory.create())\n-                .baseUrl(\"https://uclaradio.com/\")\n-                .build();\n+        .addConverterFactory(GsonConverterFactory.create())\n+        .baseUrl(\"https://uclaradio.com/\")",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/djs/DJsFragment.java",
        "position": null,
        "original_position": 86,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "arjunr00",
            "id": 30734384,
            "node_id": "MDQ6VXNlcjMwNzM0Mzg0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/30734384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arjunr00",
            "html_url": "https://github.com/arjunr00",
            "followers_url": "https://api.github.com/users/arjunr00/followers",
            "following_url": "https://api.github.com/users/arjunr00/following{/other_user}",
            "gists_url": "https://api.github.com/users/arjunr00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arjunr00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arjunr00/subscriptions",
            "organizations_url": "https://api.github.com/users/arjunr00/orgs",
            "repos_url": "https://api.github.com/users/arjunr00/repos",
            "events_url": "https://api.github.com/users/arjunr00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arjunr00/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-13T19:50:25Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811619",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811619"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811619"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        },
        "in_reply_to_id": 187791666
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811620",
        "pull_request_review_id": 119664953,
        "id": 187811620,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMTYyMA==",
        "diff_hunk": "@@ -110,45 +115,53 @@ public void onDetach() {\n \n     @Override\n     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n-        recyclerView = getView().findViewById(R.id.dj_ids_rv);\n-        final int numberOfCols = 2;\n+        recyclerView = view.findViewById(R.id.dj_ids_rv);\n         recyclerView.setLayoutManager(new GridLayoutManager(getActivity(), numberOfCols));\n+        djsProgress = view.findViewById(R.id.djs_progress);\n+        djsProgress.show();\n \n+        getDjs();\n+    }\n \n+    private void getDjs() {\n         Retrofit retrofit = new Retrofit.Builder()\n-                .addConverterFactory(GsonConverterFactory.create())\n-                .baseUrl(\"https://uclaradio.com/\")\n-                .build();\n+        .addConverterFactory(GsonConverterFactory.create())\n+        .baseUrl(\"https://uclaradio.com/\")\n+        .build();\n \n-        platform = retrofit.create(RadioPlatform.class);\n+        RadioPlatform platform = retrofit.create(RadioPlatform.class);\n \n         platform.getDjs()\n                 .enqueue(new Callback<DjList>() {\n                     @Override\n                     public void onResponse(Call<DjList> call, Response<DjList> response) {\n                         if (response.isSuccessful()) {\n-                            LinearLayoutManager linearLayoutManager =\n-                                    new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false);\n-                            recyclerView.setLayoutManager(new GridLayoutManager(getContext(), numberOfCols));\n-                            DjAdapter adapter = new DjAdapter(response.body().getDjList());\n+//                            LinearLayoutManager manager =\n+//                                    new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false);\n+                            GridLayoutManager manager =\n+                                    new GridLayoutManager(getContext(), numberOfCols, LinearLayoutManager.VERTICAL, false);\n+                            recyclerView.setLayoutManager(manager);\n+                            DjAdapter adapter = new DjAdapter(response.body().getDjList(), getContext());\n                             recyclerView.setAdapter(adapter);\n                             for (DjData dj : response.body().getDjList()) {\n                                 Log.d(\"TAG\", \"DJ NAME IS: \" + dj.getUsername());\n                             }\n+                            djsProgress.hide();\n                         } else {\n                             Log.e(\"TAG\", \"HERE FAILED\");\n+                            getDjs();\n                         }\n                     }\n \n                     @Override\n                     public void onFailure(Call<DjList> call, Throwable t) {\n                         Log.e(\"TAG\", \"FAILED TO MAKE API CALL\");\n+                        getDjs();",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/djs/DJsFragment.java",
        "position": null,
        "original_position": 121,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "arjunr00",
            "id": 30734384,
            "node_id": "MDQ6VXNlcjMwNzM0Mzg0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/30734384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arjunr00",
            "html_url": "https://github.com/arjunr00",
            "followers_url": "https://api.github.com/users/arjunr00/followers",
            "following_url": "https://api.github.com/users/arjunr00/following{/other_user}",
            "gists_url": "https://api.github.com/users/arjunr00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arjunr00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arjunr00/subscriptions",
            "organizations_url": "https://api.github.com/users/arjunr00/orgs",
            "repos_url": "https://api.github.com/users/arjunr00/repos",
            "events_url": "https://api.github.com/users/arjunr00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arjunr00/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Now runs in a delayed Handler whose delay doubles each time it's run.",
        "created_at": "2018-05-13T19:50:27Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811620",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811620"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811620"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        },
        "in_reply_to_id": 187791697
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811623",
        "pull_request_review_id": 119664957,
        "id": 187811623,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMTYyMw==",
        "diff_hunk": "@@ -0,0 +1,280 @@\n+package com.uclaradio.uclaradio.fragments.schedule;\n+\n+import android.annotation.SuppressLint;\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.res.Resources;\n+import android.support.design.widget.BottomSheetDialog;\n+import android.support.v7.widget.RecyclerView;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Callback;\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.R;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+public class ScheduleAdapter extends RecyclerView.Adapter<ScheduleAdapter.ViewHolder> {\n+\n+  private List<ScheduleData> items;\n+  private HashMap<String, Integer> dayToNum = new HashMap<>();\n+  private HashMap<String, String> dayToLongDay = new HashMap<>();\n+\n+  private Context context;\n+  private Resources resources;\n+\n+  private String baseUrl;\n+\n+  private int convertDayToNum(String day) {\n+    return dayToNum.get(day);\n+  }\n+\n+  ScheduleAdapter(List<ScheduleData> items, Context appContext) {\n+    context = appContext;\n+    resources = context.getResources();\n+    baseUrl = resources.getString(R.string.website);\n+\n+    dayToNum.put(\"Sun\",0); dayToLongDay.put(\"Sun\", resources.getStringArray(R.array.days_of_week)[0]);",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/schedule/ScheduleAdapter.java",
        "position": null,
        "original_position": 49,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "arjunr00",
            "id": 30734384,
            "node_id": "MDQ6VXNlcjMwNzM0Mzg0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/30734384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arjunr00",
            "html_url": "https://github.com/arjunr00",
            "followers_url": "https://api.github.com/users/arjunr00/followers",
            "following_url": "https://api.github.com/users/arjunr00/following{/other_user}",
            "gists_url": "https://api.github.com/users/arjunr00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arjunr00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arjunr00/subscriptions",
            "organizations_url": "https://api.github.com/users/arjunr00/orgs",
            "repos_url": "https://api.github.com/users/arjunr00/repos",
            "events_url": "https://api.github.com/users/arjunr00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arjunr00/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-13T19:50:29Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811623",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811623"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811623"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        },
        "in_reply_to_id": 187791753
    },
    {
        "url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811630",
        "pull_request_review_id": 119664960,
        "id": 187811630,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMTYzMA==",
        "diff_hunk": "@@ -0,0 +1,280 @@\n+package com.uclaradio.uclaradio.fragments.schedule;\n+\n+import android.annotation.SuppressLint;\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.res.Resources;\n+import android.support.design.widget.BottomSheetDialog;\n+import android.support.v7.widget.RecyclerView;\n+import android.util.Log;\n+import android.util.TypedValue;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.squareup.picasso.Callback;\n+import com.squareup.picasso.Picasso;\n+import com.uclaradio.uclaradio.R;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+public class ScheduleAdapter extends RecyclerView.Adapter<ScheduleAdapter.ViewHolder> {\n+\n+  private List<ScheduleData> items;\n+  private HashMap<String, Integer> dayToNum = new HashMap<>();\n+  private HashMap<String, String> dayToLongDay = new HashMap<>();\n+\n+  private Context context;\n+  private Resources resources;\n+\n+  private String baseUrl;\n+\n+  private int convertDayToNum(String day) {\n+    return dayToNum.get(day);\n+  }\n+\n+  ScheduleAdapter(List<ScheduleData> items, Context appContext) {\n+    context = appContext;\n+    resources = context.getResources();\n+    baseUrl = resources.getString(R.string.website);\n+\n+    dayToNum.put(\"Sun\",0); dayToLongDay.put(\"Sun\", resources.getStringArray(R.array.days_of_week)[0]);\n+    dayToNum.put(\"Mon\",1); dayToLongDay.put(\"Mon\", resources.getStringArray(R.array.days_of_week)[1]);\n+    dayToNum.put(\"Tue\",2); dayToLongDay.put(\"Tue\", resources.getStringArray(R.array.days_of_week)[2]);\n+    dayToNum.put(\"Wed\",3); dayToLongDay.put(\"Wed\", resources.getStringArray(R.array.days_of_week)[3]);\n+    dayToNum.put(\"Thu\",4); dayToLongDay.put(\"Thu\", resources.getStringArray(R.array.days_of_week)[4]);\n+    dayToNum.put(\"Fri\",5); dayToLongDay.put(\"Fri\", resources.getStringArray(R.array.days_of_week)[5]);\n+    dayToNum.put(\"Sat\",6); dayToLongDay.put(\"Sat\", resources.getStringArray(R.array.days_of_week)[6]);\n+\n+    Comparator<ScheduleData> dateComparator = new Comparator<ScheduleData>() {\n+      @Override\n+      public int compare(ScheduleData a, ScheduleData b) {\n+        Integer aDay = convertDayToNum(a.getDay());\n+        Integer bDay = convertDayToNum(b.getDay());\n+        Integer dayComp = aDay.compareTo(bDay);\n+        if (dayComp != 0) {\n+          return dayComp;\n+        }\n+        else {\n+          @SuppressLint(\"SimpleDateFormat\")\n+          SimpleDateFormat sdf = new SimpleDateFormat(\"hhaa\"); //hourAM/PM\n+          try {\n+            Date aTime = sdf.parse(a.getTime().toUpperCase());\n+            Log.d(\"aTime\", aTime.toString());\n+            Date bTime = sdf.parse(b.getTime().toUpperCase());\n+            Log.d(\"bTime\", bTime.toString());\n+\n+            return aTime.compareTo(bTime);\n+          } catch (ParseException ex) {\n+              Log.e(\"ERROR\", ex.getMessage());\n+              return a.getTime().compareTo(b.getTime());\n+          }\n+        }\n+      }\n+    };\n+    Collections.sort(items, dateComparator);\n+\n+    for (int i = 0; i < items.size(); i++) {\n+      ScheduleData item = items.get(i);\n+      // Some trickery going on here\n+      if (i % 2 == 1 && (items.get(i-1) != null && !item.getDay().equals(items.get(i-1).getDay()))) {",
        "path": "app/src/main/java/com/uclaradio/uclaradio/fragments/schedule/ScheduleAdapter.java",
        "position": null,
        "original_position": 88,
        "commit_id": "8bed7c01fa604d759ca45f8f1032317afa97b9a2",
        "original_commit_id": "22be295d110544d51e04a33c257725ec2ea1f7f8",
        "user": {
            "login": "arjunr00",
            "id": 30734384,
            "node_id": "MDQ6VXNlcjMwNzM0Mzg0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/30734384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arjunr00",
            "html_url": "https://github.com/arjunr00",
            "followers_url": "https://api.github.com/users/arjunr00/followers",
            "following_url": "https://api.github.com/users/arjunr00/following{/other_user}",
            "gists_url": "https://api.github.com/users/arjunr00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arjunr00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arjunr00/subscriptions",
            "organizations_url": "https://api.github.com/users/arjunr00/orgs",
            "repos_url": "https://api.github.com/users/arjunr00/repos",
            "events_url": "https://api.github.com/users/arjunr00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arjunr00/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.",
        "created_at": "2018-05-13T19:50:36Z",
        "updated_at": "2018-05-16T00:00:41Z",
        "html_url": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811630",
        "pull_request_url": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/comments/187811630"
            },
            "html": {
                "href": "https://github.com/uclaradio/uclaradio-android/pull/7#discussion_r187811630"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/uclaradio/uclaradio-android/pulls/7"
            }
        },
        "in_reply_to_id": 187791776
    }
]