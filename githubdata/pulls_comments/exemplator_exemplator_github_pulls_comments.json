[
    {
        "url": "https://api.github.com/repos/exemplator/exemplator/pulls/comments/87698866",
        "pull_request_review_id": 8303281,
        "id": 87698866,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3Njk4ODY2",
        "diff_hunk": "@@ -82,6 +82,12 @@ public JavaParser(CompilationUnit cu) {\n                 .findAny()\n                 .isPresent();\n \n+        if (cu.toString().contains(\"package com.donnfelker.android.bootstrap.core;\\n\" +",
        "path": "src/main/java/xyz/exemplator/exemplator/parser/java/JavaParser.java",
        "position": 4,
        "original_position": 4,
        "commit_id": "4fbacbb89cc1e464f00d38406323ca2709972a8f",
        "original_commit_id": "4fbacbb89cc1e464f00d38406323ca2709972a8f",
        "user": {
            "login": "LeanderK",
            "id": 2179853,
            "node_id": "MDQ6VXNlcjIxNzk4NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2179853?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LeanderK",
            "html_url": "https://github.com/LeanderK",
            "followers_url": "https://api.github.com/users/LeanderK/followers",
            "following_url": "https://api.github.com/users/LeanderK/following{/other_user}",
            "gists_url": "https://api.github.com/users/LeanderK/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LeanderK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LeanderK/subscriptions",
            "organizations_url": "https://api.github.com/users/LeanderK/orgs",
            "repos_url": "https://api.github.com/users/LeanderK/repos",
            "events_url": "https://api.github.com/users/LeanderK/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LeanderK/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why is this merged?\n",
        "created_at": "2016-11-12T19:38:50Z",
        "updated_at": "2016-11-12T19:41:38Z",
        "html_url": "https://github.com/exemplator/exemplator/pull/17#discussion_r87698866",
        "pull_request_url": "https://api.github.com/repos/exemplator/exemplator/pulls/17",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/exemplator/exemplator/pulls/comments/87698866"
            },
            "html": {
                "href": "https://github.com/exemplator/exemplator/pull/17#discussion_r87698866"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/exemplator/exemplator/pulls/17"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/exemplator/exemplator/pulls/comments/87698882",
        "pull_request_review_id": 8303281,
        "id": 87698882,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3Njk4ODgy",
        "diff_hunk": "@@ -176,18 +125,84 @@ public UsageFinder(CompilationUnit cu, TypeDeclaration type, Command command, bo\n                 BlockStmt finallyBlock = tryStmt.getFinallyBlock();\n                 if (finallyBlock != null) {\n                     usages.addAll(getUsagesForBlock(finallyBlock, fieldQualifiers, identifierOnlyEnabled, localVars, local, localVarsBlocking));\n-\n                 }\n+            } else if (statement instanceof ReturnStmt) {\n+                Expression expression = ((ReturnStmt) statement).getExpr();\n+                handleMethodExpression(fieldQualifiers, identifierOnlyEnabled, inheritedLocalVars, localVars, localVarsBlocking, usages, expression);\n+                continue;\n             }\n         }\n         return usages;\n     }\n \n+    private void handleMethodExpressionStmt(Set<LeftQualifier> fieldQualifiers, boolean identifierOnlyEnabled, Set<LeftQualifier> inheritedLocalVars, Set<LeftQualifier> localVars, Set<LeftQualifier> localVarsBlocking, List<Selection> usages, ExpressionStmt statement) {\n+        handleMethodExpression(fieldQualifiers, identifierOnlyEnabled, inheritedLocalVars, localVars, localVarsBlocking, usages, statement.getExpression());\n+    }\n+\n+    private void handleMethodExpression(Set<LeftQualifier> fieldQualifiers, boolean identifierOnlyEnabled, Set<LeftQualifier> inheritedLocalVars, Set<LeftQualifier> localVars, Set<LeftQualifier> localVarsBlocking, List<Selection> usages, Expression expression) {",
        "path": "src/main/java/xyz/exemplator/exemplator/parser/java/UsageFinder.java",
        "position": 81,
        "original_position": 81,
        "commit_id": "4fbacbb89cc1e464f00d38406323ca2709972a8f",
        "original_commit_id": "4fbacbb89cc1e464f00d38406323ca2709972a8f",
        "user": {
            "login": "LeanderK",
            "id": 2179853,
            "node_id": "MDQ6VXNlcjIxNzk4NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2179853?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LeanderK",
            "html_url": "https://github.com/LeanderK",
            "followers_url": "https://api.github.com/users/LeanderK/followers",
            "following_url": "https://api.github.com/users/LeanderK/following{/other_user}",
            "gists_url": "https://api.github.com/users/LeanderK/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LeanderK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LeanderK/subscriptions",
            "organizations_url": "https://api.github.com/users/LeanderK/orgs",
            "repos_url": "https://api.github.com/users/LeanderK/repos",
            "events_url": "https://api.github.com/users/LeanderK/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LeanderK/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "i don't like the method, it should not return void but a Set of Selections\n",
        "created_at": "2016-11-12T19:40:01Z",
        "updated_at": "2016-11-12T19:49:49Z",
        "html_url": "https://github.com/exemplator/exemplator/pull/17#discussion_r87698882",
        "pull_request_url": "https://api.github.com/repos/exemplator/exemplator/pulls/17",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/exemplator/exemplator/pulls/comments/87698882"
            },
            "html": {
                "href": "https://github.com/exemplator/exemplator/pull/17#discussion_r87698882"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/exemplator/exemplator/pulls/17"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/exemplator/exemplator/pulls/comments/87701916",
        "pull_request_review_id": 8306000,
        "id": 87701916,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAxOTE2",
        "diff_hunk": "@@ -82,6 +82,12 @@ public JavaParser(CompilationUnit cu) {\n                 .findAny()\n                 .isPresent();\n \n+        if (cu.toString().contains(\"package com.donnfelker.android.bootstrap.core;\\n\" +",
        "path": "src/main/java/xyz/exemplator/exemplator/parser/java/JavaParser.java",
        "position": 4,
        "original_position": 4,
        "commit_id": "4fbacbb89cc1e464f00d38406323ca2709972a8f",
        "original_commit_id": "4fbacbb89cc1e464f00d38406323ca2709972a8f",
        "user": {
            "login": "LeanderK",
            "id": 2179853,
            "node_id": "MDQ6VXNlcjIxNzk4NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2179853?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LeanderK",
            "html_url": "https://github.com/LeanderK",
            "followers_url": "https://api.github.com/users/LeanderK/followers",
            "following_url": "https://api.github.com/users/LeanderK/following{/other_user}",
            "gists_url": "https://api.github.com/users/LeanderK/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LeanderK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LeanderK/subscriptions",
            "organizations_url": "https://api.github.com/users/LeanderK/orgs",
            "repos_url": "https://api.github.com/users/LeanderK/repos",
            "events_url": "https://api.github.com/users/LeanderK/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LeanderK/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ah, you deleted it in the master\n",
        "created_at": "2016-11-12T22:51:51Z",
        "updated_at": "2016-11-12T22:51:51Z",
        "html_url": "https://github.com/exemplator/exemplator/pull/17#discussion_r87701916",
        "pull_request_url": "https://api.github.com/repos/exemplator/exemplator/pulls/17",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/exemplator/exemplator/pulls/comments/87701916"
            },
            "html": {
                "href": "https://github.com/exemplator/exemplator/pull/17#discussion_r87701916"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/exemplator/exemplator/pulls/17"
            }
        },
        "in_reply_to_id": 87698866
    },
    {
        "url": "https://api.github.com/repos/exemplator/exemplator/pulls/comments/87702396",
        "pull_request_review_id": 8306436,
        "id": 87702396,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzAyMzk2",
        "diff_hunk": "@@ -176,18 +125,84 @@ public UsageFinder(CompilationUnit cu, TypeDeclaration type, Command command, bo\n                 BlockStmt finallyBlock = tryStmt.getFinallyBlock();\n                 if (finallyBlock != null) {\n                     usages.addAll(getUsagesForBlock(finallyBlock, fieldQualifiers, identifierOnlyEnabled, localVars, local, localVarsBlocking));\n-\n                 }\n+            } else if (statement instanceof ReturnStmt) {\n+                Expression expression = ((ReturnStmt) statement).getExpr();\n+                handleMethodExpression(fieldQualifiers, identifierOnlyEnabled, inheritedLocalVars, localVars, localVarsBlocking, usages, expression);\n+                continue;\n             }\n         }\n         return usages;\n     }\n \n+    private void handleMethodExpressionStmt(Set<LeftQualifier> fieldQualifiers, boolean identifierOnlyEnabled, Set<LeftQualifier> inheritedLocalVars, Set<LeftQualifier> localVars, Set<LeftQualifier> localVarsBlocking, List<Selection> usages, ExpressionStmt statement) {\n+        handleMethodExpression(fieldQualifiers, identifierOnlyEnabled, inheritedLocalVars, localVars, localVarsBlocking, usages, statement.getExpression());\n+    }\n+\n+    private void handleMethodExpression(Set<LeftQualifier> fieldQualifiers, boolean identifierOnlyEnabled, Set<LeftQualifier> inheritedLocalVars, Set<LeftQualifier> localVars, Set<LeftQualifier> localVarsBlocking, List<Selection> usages, Expression expression) {",
        "path": "src/main/java/xyz/exemplator/exemplator/parser/java/UsageFinder.java",
        "position": 81,
        "original_position": 81,
        "commit_id": "4fbacbb89cc1e464f00d38406323ca2709972a8f",
        "original_commit_id": "4fbacbb89cc1e464f00d38406323ca2709972a8f",
        "user": {
            "login": "jundl77",
            "id": 3936594,
            "node_id": "MDQ6VXNlcjM5MzY1OTQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3936594?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jundl77",
            "html_url": "https://github.com/jundl77",
            "followers_url": "https://api.github.com/users/jundl77/followers",
            "following_url": "https://api.github.com/users/jundl77/following{/other_user}",
            "gists_url": "https://api.github.com/users/jundl77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jundl77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jundl77/subscriptions",
            "organizations_url": "https://api.github.com/users/jundl77/orgs",
            "repos_url": "https://api.github.com/users/jundl77/repos",
            "events_url": "https://api.github.com/users/jundl77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jundl77/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "you can change it\n",
        "created_at": "2016-11-12T23:31:38Z",
        "updated_at": "2016-11-12T23:31:38Z",
        "html_url": "https://github.com/exemplator/exemplator/pull/17#discussion_r87702396",
        "pull_request_url": "https://api.github.com/repos/exemplator/exemplator/pulls/17",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/exemplator/exemplator/pulls/comments/87702396"
            },
            "html": {
                "href": "https://github.com/exemplator/exemplator/pull/17#discussion_r87702396"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/exemplator/exemplator/pulls/17"
            }
        },
        "in_reply_to_id": 87698882
    },
    {
        "url": "https://api.github.com/repos/exemplator/exemplator/pulls/comments/87709112",
        "pull_request_review_id": 8312351,
        "id": 87709112,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3NzA5MTEy",
        "diff_hunk": "@@ -176,18 +125,84 @@ public UsageFinder(CompilationUnit cu, TypeDeclaration type, Command command, bo\n                 BlockStmt finallyBlock = tryStmt.getFinallyBlock();\n                 if (finallyBlock != null) {\n                     usages.addAll(getUsagesForBlock(finallyBlock, fieldQualifiers, identifierOnlyEnabled, localVars, local, localVarsBlocking));\n-\n                 }\n+            } else if (statement instanceof ReturnStmt) {\n+                Expression expression = ((ReturnStmt) statement).getExpr();\n+                handleMethodExpression(fieldQualifiers, identifierOnlyEnabled, inheritedLocalVars, localVars, localVarsBlocking, usages, expression);\n+                continue;\n             }\n         }\n         return usages;\n     }\n \n+    private void handleMethodExpressionStmt(Set<LeftQualifier> fieldQualifiers, boolean identifierOnlyEnabled, Set<LeftQualifier> inheritedLocalVars, Set<LeftQualifier> localVars, Set<LeftQualifier> localVarsBlocking, List<Selection> usages, ExpressionStmt statement) {\n+        handleMethodExpression(fieldQualifiers, identifierOnlyEnabled, inheritedLocalVars, localVars, localVarsBlocking, usages, statement.getExpression());\n+    }\n+\n+    private void handleMethodExpression(Set<LeftQualifier> fieldQualifiers, boolean identifierOnlyEnabled, Set<LeftQualifier> inheritedLocalVars, Set<LeftQualifier> localVars, Set<LeftQualifier> localVarsBlocking, List<Selection> usages, Expression expression) {",
        "path": "src/main/java/xyz/exemplator/exemplator/parser/java/UsageFinder.java",
        "position": 81,
        "original_position": 81,
        "commit_id": "4fbacbb89cc1e464f00d38406323ca2709972a8f",
        "original_commit_id": "4fbacbb89cc1e464f00d38406323ca2709972a8f",
        "user": {
            "login": "LeanderK",
            "id": 2179853,
            "node_id": "MDQ6VXNlcjIxNzk4NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2179853?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LeanderK",
            "html_url": "https://github.com/LeanderK",
            "followers_url": "https://api.github.com/users/LeanderK/followers",
            "following_url": "https://api.github.com/users/LeanderK/following{/other_user}",
            "gists_url": "https://api.github.com/users/LeanderK/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LeanderK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LeanderK/subscriptions",
            "organizations_url": "https://api.github.com/users/LeanderK/orgs",
            "repos_url": "https://api.github.com/users/LeanderK/repos",
            "events_url": "https://api.github.com/users/LeanderK/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LeanderK/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this is your job if you introduced the method\n",
        "created_at": "2016-11-13T09:43:43Z",
        "updated_at": "2016-11-13T09:43:43Z",
        "html_url": "https://github.com/exemplator/exemplator/pull/17#discussion_r87709112",
        "pull_request_url": "https://api.github.com/repos/exemplator/exemplator/pulls/17",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/exemplator/exemplator/pulls/comments/87709112"
            },
            "html": {
                "href": "https://github.com/exemplator/exemplator/pull/17#discussion_r87709112"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/exemplator/exemplator/pulls/17"
            }
        },
        "in_reply_to_id": 87698882
    }
]