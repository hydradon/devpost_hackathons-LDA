[
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/155128773",
        "pull_request_review_id": 81396291,
        "id": 155128773,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTEyODc3Mw==",
        "diff_hunk": "@@ -1,2 +1,22 @@\n-# numpy_stubs\n-Experimental typing stubs for NumPy\n+# numpy_stubs: experimental typing stubs for NumPy\n+\n+This repository exists for developing [PEP 484](https://www.python.org/dev/peps/pep-0484/)\n+compatible typing annotations for NumPy.",
        "path": "README.md",
        "position": null,
        "original_position": 6,
        "commit_id": "6bbf1d21dba22d715a0e6a51b5f4d954542e7f47",
        "original_commit_id": "d206ed15c3dadb878652cb0bbe53f8701affaf43",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Might be nice to link `NumPy`, even though everyone knows what it is",
        "created_at": "2017-12-06T01:53:58Z",
        "updated_at": "2017-12-06T02:03:52Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/1#discussion_r155128773",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/1",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/155128773"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/1#discussion_r155128773"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/155628013",
        "pull_request_review_id": 81979322,
        "id": 155628013,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTYyODAxMw==",
        "diff_hunk": "@@ -0,0 +1,12 @@\n+# very simple, just enough to start running tests\n+\n+class ndarray: pass\n+\n+class dtype: pass\n+\n+def array(\n+    object : object,",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 8,
        "commit_id": "59612876dc64018ed5b13d611f55b82af486c473",
        "original_commit_id": "cd73c4ebaad3c4a7eb18bc517282f9a5b2e42995",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nit: PEP8 suggests not using a space before `:`",
        "created_at": "2017-12-07T20:11:43Z",
        "updated_at": "2018-01-16T07:52:39Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r155628013",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/155628013"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r155628013"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/155628347",
        "pull_request_review_id": 81979322,
        "id": 155628347,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTYyODM0Nw==",
        "diff_hunk": "@@ -0,0 +1,12 @@\n+# very simple, just enough to start running tests\n+",
        "path": "numpy/__init__.pyi",
        "position": 2,
        "original_position": 2,
        "commit_id": "59612876dc64018ed5b13d611f55b82af486c473",
        "original_commit_id": "cd73c4ebaad3c4a7eb18bc517282f9a5b2e42995",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should add annotations `def __getattr__(name) -> Any: ...` to the module and `def __getattr__(self, name) -> Any: ...` to `ndarray`/`dtype` to mark them as flexibly typed.",
        "created_at": "2017-12-07T20:13:17Z",
        "updated_at": "2018-01-16T07:52:39Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r155628347",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/155628347"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r155628347"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/155630121",
        "pull_request_review_id": 81981672,
        "id": 155630121,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTYzMDEyMQ==",
        "diff_hunk": "@@ -0,0 +1,12 @@\n+# very simple, just enough to start running tests\n+\n+class ndarray: pass\n+\n+class dtype: pass\n+\n+def array(\n+    object : object,",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 8,
        "commit_id": "59612876dc64018ed5b13d611f55b82af486c473",
        "original_commit_id": "cd73c4ebaad3c4a7eb18bc517282f9a5b2e42995",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, it does? Shoot, I've been doing that wrong everywhere in my own code.",
        "created_at": "2017-12-07T20:20:51Z",
        "updated_at": "2018-01-16T07:52:39Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r155630121",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/155630121"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r155630121"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4"
            }
        },
        "in_reply_to_id": 155628013
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/155632172",
        "pull_request_review_id": 81984016,
        "id": 155632172,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTYzMjE3Mg==",
        "diff_hunk": "@@ -0,0 +1,12 @@\n+# very simple, just enough to start running tests\n+\n+class ndarray: pass\n+\n+class dtype: pass\n+\n+def array(\n+    object : object,",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 8,
        "commit_id": "59612876dc64018ed5b13d611f55b82af486c473",
        "original_commit_id": "cd73c4ebaad3c4a7eb18bc517282f9a5b2e42995",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "See \"Function annotations\" under http://legacy.python.org/dev/peps/pep-0008/#other-recommendations",
        "created_at": "2017-12-07T20:29:09Z",
        "updated_at": "2018-01-16T07:52:39Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r155632172",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/155632172"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r155632172"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4"
            }
        },
        "in_reply_to_id": 155628013
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/156550360",
        "pull_request_review_id": 83045958,
        "id": 156550360,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjU1MDM2MA==",
        "diff_hunk": "@@ -0,0 +1,12 @@\n+# very simple, just enough to start running tests\n+",
        "path": "numpy/__init__.pyi",
        "position": 2,
        "original_position": 2,
        "commit_id": "59612876dc64018ed5b13d611f55b82af486c473",
        "original_commit_id": "cd73c4ebaad3c4a7eb18bc517282f9a5b2e42995",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not sure what you mean about adding it to the module. Is that supported in type stubs? It's certain not supported in normal python,\r\n\r\nI think best to leave them absent anyway, so that adding tests forces us to define the missing fields, rather than things passing silently",
        "created_at": "2017-12-13T02:24:14Z",
        "updated_at": "2018-01-16T07:52:39Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r156550360",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/156550360"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r156550360"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4"
            }
        },
        "in_reply_to_id": 155628347
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/156554520",
        "pull_request_review_id": 83050644,
        "id": 156554520,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjU1NDUyMA==",
        "diff_hunk": "@@ -0,0 +1,12 @@\n+# very simple, just enough to start running tests\n+",
        "path": "numpy/__init__.pyi",
        "position": 2,
        "original_position": 2,
        "commit_id": "59612876dc64018ed5b13d611f55b82af486c473",
        "original_commit_id": "cd73c4ebaad3c4a7eb18bc517282f9a5b2e42995",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Well, OK, we can leave it out for now. It is indeed valid in stub files (only).",
        "created_at": "2017-12-13T03:02:29Z",
        "updated_at": "2018-01-16T07:52:39Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r156554520",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/156554520"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/4#discussion_r156554520"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/4"
            }
        },
        "in_reply_to_id": 155628347
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168937168",
        "pull_request_review_id": 97389309,
        "id": 168937168,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzNzE2OA==",
        "diff_hunk": "@@ -13,6 +13,6 @@\n     # PEP 561 requires these\n     install_requires=['numpy~=1.13.0'],",
        "path": "setup.py",
        "position": null,
        "original_position": 11,
        "commit_id": "bd71995c5f822bce30cdd93d262c3b6c71f596f9",
        "original_commit_id": "efc4bd86adaa5ee7f906352b0f48604a78337537",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "shall we update this to 1.14.0?",
        "created_at": "2018-02-18T01:04:20Z",
        "updated_at": "2018-02-18T01:16:02Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/8#discussion_r168937168",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/8",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168937168"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/8#discussion_r168937168"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168937331",
        "pull_request_review_id": 97389475,
        "id": 168937331,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzNzMzMQ==",
        "diff_hunk": "@@ -1,7 +1,7 @@\n from setuptools import setup, find_packages\n \n setup(\n-    name='numpy_stubs',\n+    name='numpy-stubs',",
        "path": "setup.py",
        "position": 5,
        "original_position": 5,
        "commit_id": "bd71995c5f822bce30cdd93d262c3b6c71f596f9",
        "original_commit_id": "bd71995c5f822bce30cdd93d262c3b6c71f596f9",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see that PEP 561 changed it's guidelines here. I suppose we should also rename this repository?",
        "created_at": "2018-02-18T01:17:59Z",
        "updated_at": "2018-02-18T01:17:59Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/8#discussion_r168937331",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/8",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168937331"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/8#discussion_r168937331"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168967869",
        "pull_request_review_id": 97418584,
        "id": 168967869,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODk2Nzg2OQ==",
        "diff_hunk": "@@ -1,7 +1,7 @@\n from setuptools import setup, find_packages\n \n setup(\n-    name='numpy_stubs',\n+    name='numpy-stubs',",
        "path": "setup.py",
        "position": 5,
        "original_position": 5,
        "commit_id": "bd71995c5f822bce30cdd93d262c3b6c71f596f9",
        "original_commit_id": "bd71995c5f822bce30cdd93d262c3b6c71f596f9",
        "user": {
            "login": "ethanhs",
            "id": 9504279,
            "node_id": "MDQ6VXNlcjk1MDQyNzk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9504279?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethanhs",
            "html_url": "https://github.com/ethanhs",
            "followers_url": "https://api.github.com/users/ethanhs/followers",
            "following_url": "https://api.github.com/users/ethanhs/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethanhs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethanhs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethanhs/subscriptions",
            "organizations_url": "https://api.github.com/users/ethanhs/orgs",
            "repos_url": "https://api.github.com/users/ethanhs/repos",
            "events_url": "https://api.github.com/users/ethanhs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethanhs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This name (the distribution name) doesn't impact PEP 561 compliance. The *package name* is the real decider; when this repo starts using my PEP 561 implementation in mypy, it will need to rename the `numpy` package to `numpy-stubs`, and make according changes. Happy to do those changes when it is time.",
        "created_at": "2018-02-18T22:18:04Z",
        "updated_at": "2018-02-18T22:18:04Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/8#discussion_r168967869",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168967869"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/8#discussion_r168967869"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/8"
            }
        },
        "in_reply_to_id": 168937331
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168937429",
        "pull_request_review_id": 97389565,
        "id": 168937429,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzNzQyOQ==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype\n+\n+    str: builtins.str",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 32,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've segregated this here so that the other `str`s don't need to have `builtins.str` here (see https://github.com/python/mypy/issues/3775).",
        "created_at": "2018-02-18T01:24:08Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168937429",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168937429"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168937429"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938177",
        "pull_request_review_id": 97390372,
        "id": 168938177,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODE3Nw==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 13,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Entries in `descr` can only be three element tuples, with the last item indicating a shape, e.g., \r\n```\r\n>>> np.dtype([('x', 'f4'), ('y', np.float32), ('z', 'f4', (2,2))]).descr\r\n[('x', '<f4'), ('y', '<f4'), ('z', '<f4', (2, 2))]\r\n```",
        "created_at": "2018-02-18T02:27:08Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938177",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938177"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938177"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938263",
        "pull_request_review_id": 97390372,
        "id": 168938263,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODI2Mw==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 14,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It looks like the final `title` field can have any type, so it should probably be keyed as `Any` instead of `str`: https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.dtype.fields.html#numpy.dtype.fields",
        "created_at": "2018-02-18T02:33:36Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938263",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938263"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938263"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938409",
        "pull_request_review_id": 97390372,
        "id": 168938409,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODQwOQ==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype\n+\n+    str: builtins.str",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 32,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please add this as a comment in the code",
        "created_at": "2018-02-18T02:42:01Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938409",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938409"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938409"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        },
        "in_reply_to_id": 168937429
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938420",
        "pull_request_review_id": 97390372,
        "id": 168938420,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODQyMA==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 30,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "please keep the space after `:` per pep8. This should be `new_order: str = ...`",
        "created_at": "2018-02-18T02:42:37Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938420",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938420"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938420"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938425",
        "pull_request_review_id": 97390372,
        "id": 168938425,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODQyNQ==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 30,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "please keep the space after `:` per pep8. This should be:\r\n\r\n    new_order: str = ...",
        "created_at": "2018-02-18T02:42:55Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938425",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938425"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938425"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938464",
        "pull_request_review_id": 97390372,
        "id": 168938464,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODQ2NA==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 28,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It isn't documented, but `metadata` is also used out in the wild (e.g., by h5py). It should be `Optional[Mapping]`.",
        "created_at": "2018-02-18T02:46:41Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938464",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938464"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938464"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938510",
        "pull_request_review_id": 97390372,
        "id": 168938510,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODUxMA==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype\n+\n+    str: builtins.str\n+    type: builtins.type\n+\n+    @property\n+    def base(self) -> dtype: ...",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 36,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is there a reason why this is a property vs. an attribute for everything else? Does mypy care about the difference?",
        "created_at": "2018-02-18T02:48:03Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938510",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938510"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938510"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938523",
        "pull_request_review_id": 97390372,
        "id": 168938523,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODUyMw==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype\n+\n+    str: builtins.str\n+    type: builtins.type\n+\n+    @property\n+    def base(self) -> dtype: ...\n+\n+\n+_dtype = dtype      # for ndarray type\n+\n+\n+class flagsobj:",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 42,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`flagsobj` is not exposed by NumPy's public API, so let's give it a private name (`_flagsobj`?)",
        "created_at": "2018-02-18T02:49:11Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938523",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938523"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938523"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938571",
        "pull_request_review_id": 97390372,
        "id": 168938571,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODU3MQ==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype\n+\n+    str: builtins.str\n+    type: builtins.type\n+\n+    @property\n+    def base(self) -> dtype: ...\n+\n+\n+_dtype = dtype      # for ndarray type",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 39,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Give this a name like `_dtype_class` to make it a little clearer what it is?",
        "created_at": "2018-02-18T02:54:26Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938571",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938571"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938571"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938574",
        "pull_request_review_id": 97390372,
        "id": 168938574,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODU3NA==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype\n+\n+    str: builtins.str\n+    type: builtins.type\n+\n+    @property\n+    def base(self) -> dtype: ...\n+\n+\n+_dtype = dtype      # for ndarray type\n+\n+\n+class flagsobj:\n+    aligned: bool\n+    behaved: bool\n+    c_contiguous: bool\n+    carray: bool\n+    contiguous: bool\n+    f_contiguous: bool\n+    farray: bool\n+    fnc: bool\n+    forc: bool\n+    fortran: bool\n+    num: bool\n+    owndata: bool\n+    updateifcopy: bool\n+    writeable: bool\n+    writebackifcopy: bool\n+\n+    def __getitem__(self, key: str) -> bool: ...\n+    def __setitem__(self, key: str, value: bool) -> None: ...\n+\n+\n+class flatiter:\n+    base: ndarray\n+    coords: Tuple[int, ...]\n+    index: int\n+\n+    def copy(self) -> ndarray: ...\n+    def __iter__(self) -> flatiter: ...\n+    def __next__(self) -> Any: ...\n+\n+\n+class ndarray:\n+    T: ndarray\n+    data: memoryview\n+    dtype: _dtype\n+    flags: flagsobj\n+    flat: Any",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 78,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is a `flatiter` object",
        "created_at": "2018-02-18T02:54:53Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938574",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938574"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938574"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938589",
        "pull_request_review_id": 97390372,
        "id": 168938589,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODU4OQ==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype\n+\n+    str: builtins.str\n+    type: builtins.type\n+\n+    @property\n+    def base(self) -> dtype: ...\n+\n+\n+_dtype = dtype      # for ndarray type\n+\n+\n+class flagsobj:\n+    aligned: bool\n+    behaved: bool\n+    c_contiguous: bool\n+    carray: bool\n+    contiguous: bool\n+    f_contiguous: bool\n+    farray: bool\n+    fnc: bool\n+    forc: bool\n+    fortran: bool\n+    num: bool\n+    owndata: bool\n+    updateifcopy: bool\n+    writeable: bool\n+    writebackifcopy: bool\n+\n+    def __getitem__(self, key: str) -> bool: ...\n+    def __setitem__(self, key: str, value: bool) -> None: ...\n+\n+\n+class flatiter:\n+    base: ndarray\n+    coords: Tuple[int, ...]\n+    index: int\n+\n+    def copy(self) -> ndarray: ...\n+    def __iter__(self) -> flatiter: ...\n+    def __next__(self) -> Any: ...\n+\n+\n+class ndarray:\n+    T: ndarray\n+    data: memoryview\n+    dtype: _dtype\n+    flags: flagsobj\n+    flat: Any\n+    imag: ndarray\n+    real: ndarray\n+    size: int\n+    itemsize: int\n+    nbytes: int\n+    ndim: int\n+    shape: Tuple[int, ...]\n+    strides: Tuple[int, ...]\n+    ctypes: _ctypes\n+    base: Optional[ndarray]\n ",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 89,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This list is incomplete for now, so let's add `def __getattr__(self, name) -> Any: ...`.",
        "created_at": "2018-02-18T02:56:48Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938589",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938589"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938589"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938629",
        "pull_request_review_id": 97390805,
        "id": 168938629,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODYyOQ==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 30,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "JelleZijlstra",
            "id": 906600,
            "node_id": "MDQ6VXNlcjkwNjYwMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/906600?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JelleZijlstra",
            "html_url": "https://github.com/JelleZijlstra",
            "followers_url": "https://api.github.com/users/JelleZijlstra/followers",
            "following_url": "https://api.github.com/users/JelleZijlstra/following{/other_user}",
            "gists_url": "https://api.github.com/users/JelleZijlstra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JelleZijlstra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JelleZijlstra/subscriptions",
            "organizations_url": "https://api.github.com/users/JelleZijlstra/orgs",
            "repos_url": "https://api.github.com/users/JelleZijlstra/repos",
            "events_url": "https://api.github.com/users/JelleZijlstra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JelleZijlstra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I assume this should be `newbyteorder`, not `newbyteoder`?",
        "created_at": "2018-02-18T03:01:22Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938629",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938629"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938629"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938647",
        "pull_request_review_id": 97390823,
        "id": 168938647,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODY0Nw==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype\n+\n+    str: builtins.str\n+    type: builtins.type\n+\n+    @property\n+    def base(self) -> dtype: ...",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 36,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "JelleZijlstra",
            "id": 906600,
            "node_id": "MDQ6VXNlcjkwNjYwMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/906600?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JelleZijlstra",
            "html_url": "https://github.com/JelleZijlstra",
            "followers_url": "https://api.github.com/users/JelleZijlstra/followers",
            "following_url": "https://api.github.com/users/JelleZijlstra/following{/other_user}",
            "gists_url": "https://api.github.com/users/JelleZijlstra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JelleZijlstra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JelleZijlstra/subscriptions",
            "organizations_url": "https://api.github.com/users/JelleZijlstra/orgs",
            "repos_url": "https://api.github.com/users/JelleZijlstra/repos",
            "events_url": "https://api.github.com/users/JelleZijlstra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JelleZijlstra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Properties can't be assigned to unless they have a setter. With this stub, if you had `x: dtype`, mypy would allow `x.type = some_type` but not `x.base = some_dtype`. ",
        "created_at": "2018-02-18T03:04:35Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938647",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938647"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938647"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        },
        "in_reply_to_id": 168938510
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938749",
        "pull_request_review_id": 97390935,
        "id": 168938749,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODkzODc0OQ==",
        "diff_hunk": "@@ -1,8 +1,91 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    alignment: int\n+    byteorder: str\n+    char: str\n+    descr: List[Tuple[str, str]]\n+    fields: Optional[Mapping[str, Union[Tuple[dtype, int], Tuple[dtype, int, str]]]]\n+    flags: int\n+    hasobject: bool\n+    isbuiltin: int\n+    isnative: bool\n+    isalignedstruct: bool\n+    itemsize: int\n+    kind: str\n+    name: str\n+    names: Optional[Tuple[str, ...]]\n+    num: int\n+    shape: Tuple[int, ...]\n+    ndim: int\n+    subdtype: Optional[Tuple[dtype, Tuple[int, ...]]]\n+\n+\n+    def newbyteoder(self, new_order:str = ...): dtype\n+\n+    str: builtins.str\n+    type: builtins.type\n+\n+    @property\n+    def base(self) -> dtype: ...",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 36,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "cf1606439294e6b355226f79fc184aee6532c931",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK, in that case we should also convert most of the other attributes into readonly properties.",
        "created_at": "2018-02-18T03:15:54Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938749",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168938749"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168938749"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        },
        "in_reply_to_id": 168938510
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168961995",
        "pull_request_review_id": 97412944,
        "id": 168961995,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODk2MTk5NQ==",
        "diff_hunk": "@@ -1,8 +1,186 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    names: Optional[Tuple[str, ...]]\n+    updateifcopy: bool\n+    writeable: bool\n+    writebackifcopy: bool\n+\n+    @property\n+    def alignment(self) -> int: ...\n+\n+    @property\n+    def base(self) -> dtype: ...\n+\n+    @property\n+    def byteorder(self) -> str: ...\n+\n+    @property\n+    def char(self) -> str: ...\n+\n+    @property\n+    def descr(self) -> List[Union[\n+        Tuple[str, str],\n+        Tuple[str, str, Tuple[int, ...]]]]: ...",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 30,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "eac85ffe94056b91cc440babb2170fb2837c0de1",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "optional: it might be convenient to define an alias `_Shape = Tuple[int, ...]`",
        "created_at": "2018-02-18T19:12:09Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168961995",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168961995"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168961995"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168962067",
        "pull_request_review_id": 97412944,
        "id": 168962067,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODk2MjA2Nw==",
        "diff_hunk": "@@ -1,8 +1,186 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    names: Optional[Tuple[str, ...]]\n+    updateifcopy: bool\n+    writeable: bool\n+    writebackifcopy: bool",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 13,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "eac85ffe94056b91cc440babb2170fb2837c0de1",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not quite sure where these attributes came from -- I can't find any of `updateifcopy`, `writeable` and `writebackifcopy` on dtype.",
        "created_at": "2018-02-18T19:14:26Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168962067",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168962067"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168962067"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168962136",
        "pull_request_review_id": 97412944,
        "id": 168962136,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODk2MjEzNg==",
        "diff_hunk": "@@ -1,8 +1,186 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    names: Optional[Tuple[str, ...]]\n+    updateifcopy: bool\n+    writeable: bool\n+    writebackifcopy: bool",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 13,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "eac85ffe94056b91cc440babb2170fb2837c0de1",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually, these are missing down below on flagsobj.",
        "created_at": "2018-02-18T19:16:16Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168962136",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168962136"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168962136"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        },
        "in_reply_to_id": 168962067
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168975603",
        "pull_request_review_id": 97426939,
        "id": 168975603,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODk3NTYwMw==",
        "diff_hunk": "@@ -1,8 +1,186 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    names: Optional[Tuple[str, ...]]\n+    updateifcopy: bool\n+    writeable: bool\n+    writebackifcopy: bool\n+\n+    @property\n+    def alignment(self) -> int: ...\n+\n+    @property\n+    def base(self) -> dtype: ...\n+\n+    @property\n+    def byteorder(self) -> str: ...\n+\n+    @property\n+    def char(self) -> str: ...\n+\n+    @property\n+    def descr(self) -> List[Union[\n+        Tuple[str, str],\n+        Tuple[str, str, Tuple[int, ...]]]]: ...\n+\n+    @property\n+    def fields(self) -> Optional[Mapping[\n+        str,\n+        Union[Tuple[dtype, int],\n+              Tuple[dtype, int, Any]]]]: ...\n+\n+    @property\n+    def flags(self) -> int: ...\n+\n+    @property\n+    def hasobject(self) -> bool: ...\n+\n+    @property\n+    def isbuiltin(self) -> int: ...\n+\n+    @property\n+    def isnative(self) -> bool: ...\n+\n+    @property\n+    def isalignedstruct(self) -> bool: ...\n+\n+    @property\n+    def itemsize(self) -> int: ...\n+\n+    @property\n+    def kind(self) -> str: ...\n+\n+    @property\n+    def metadata(self) -> Optional[Mapping[str, Any]]: ...\n+\n+    @property\n+    def name(self) -> str: ...\n+\n+    @property\n+    def num(self) -> int: ...\n+\n+    @property\n+    def shape(self) -> Tuple[int, ...]: ...\n+\n+    @property\n+    def ndim(self) -> int: ...\n+\n+    @property\n+    def subdtype(self) -> Optional[Tuple[dtype, Tuple[int, ...]]]: ...\n+\n+    def newbyteorder(self, new_order: str = ...) -> dtype: ...\n+\n+    # Leave str and type for end to avoid having to use `builtins.str`\n+    # everywhere. See https://github.com/python/mypy/issues/3775\n+    @property\n+    def str(self) -> builtins.str: ...\n+\n+    @property\n+    def type(self) -> builtins.type: ...",
        "path": "numpy/__init__.pyi",
        "position": 84,
        "original_position": 85,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "eac85ffe94056b91cc440babb2170fb2837c0de1",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "More specifically, we  could define the `np.generic` class and switch this to `Type[generic]` (but this is also fine for now -- certainly let's save defining the full NumPy scalar type hierarchy for later).",
        "created_at": "2018-02-19T01:35:03Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168975603",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/168975603"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r168975603"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/169137176",
        "pull_request_review_id": 97615620,
        "id": 169137176,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTEzNzE3Ng==",
        "diff_hunk": "@@ -1,8 +1,186 @@\n # very simple, just enough to start running tests\n+#\n+import builtins\n+from typing import Any, Mapping, List, Optional, Tuple, Union\n \n-class ndarray: pass\n+from numpy.core._internal import _ctypes\n+\n+class dtype:\n+    names: Optional[Tuple[str, ...]]\n+    updateifcopy: bool\n+    writeable: bool\n+    writebackifcopy: bool",
        "path": "numpy/__init__.pyi",
        "position": null,
        "original_position": 13,
        "commit_id": "c84c9bc4adf783ce7114cebc218af75ad12ac63b",
        "original_commit_id": "eac85ffe94056b91cc440babb2170fb2837c0de1",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oops :blush: ",
        "created_at": "2018-02-19T17:28:30Z",
        "updated_at": "2018-02-19T17:32:12Z",
        "html_url": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r169137176",
        "pull_request_url": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/comments/169137176"
            },
            "html": {
                "href": "https://github.com/numpy/numpy-stubs/pull/9#discussion_r169137176"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/numpy/numpy-stubs/pulls/9"
            }
        },
        "in_reply_to_id": 168962067
    }
]