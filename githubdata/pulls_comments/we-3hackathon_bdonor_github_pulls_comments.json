[
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/258235315",
        "pull_request_review_id": 205458953,
        "id": 258235315,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODIzNTMxNQ==",
        "diff_hunk": "@@ -0,0 +1,13 @@\n+package com.bdonor.service.Database;",
        "path": "src/main/java/com/bdonor/service/Database/UserRepo.java",
        "position": 1,
        "original_position": 1,
        "commit_id": "683b9fea28c5b361ddcdd044aa3f221f3b9df352",
        "original_commit_id": "683b9fea28c5b361ddcdd044aa3f221f3b9df352",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Database is not a service. This should be part of account service instead.",
        "created_at": "2019-02-19T21:23:20Z",
        "updated_at": "2019-02-19T21:23:20Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/5#discussion_r258235315",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/5",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/258235315"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/5#discussion_r258235315"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/5"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/258236745",
        "pull_request_review_id": 205460695,
        "id": 258236745,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODIzNjc0NQ==",
        "diff_hunk": "@@ -0,0 +1,13 @@\n+package com.bdonor.service.Database;\n+\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.data.repository.CrudRepository;\n+\n+@SpringBootApplication",
        "path": "src/main/java/com/bdonor/service/Database/UserRepo.java",
        "position": 8,
        "original_position": 8,
        "commit_id": "683b9fea28c5b361ddcdd044aa3f221f3b9df352",
        "original_commit_id": "683b9fea28c5b361ddcdd044aa3f221f3b9df352",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this necessary?",
        "created_at": "2019-02-19T21:27:04Z",
        "updated_at": "2019-02-19T21:27:04Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/5#discussion_r258236745",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/5",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/258236745"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/5#discussion_r258236745"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/5"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/258243448",
        "pull_request_review_id": 205469191,
        "id": 258243448,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODI0MzQ0OA==",
        "diff_hunk": "@@ -0,0 +1,13 @@\n+package com.bdonor.service.Database;\n+\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.data.repository.CrudRepository;\n+\n+@SpringBootApplication",
        "path": "src/main/java/com/bdonor/service/Database/UserRepo.java",
        "position": 8,
        "original_position": 8,
        "commit_id": "683b9fea28c5b361ddcdd044aa3f221f3b9df352",
        "original_commit_id": "683b9fea28c5b361ddcdd044aa3f221f3b9df352",
        "user": {
            "login": "Sharjeel50",
            "id": 41446219,
            "node_id": "MDQ6VXNlcjQxNDQ2MjE5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/41446219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sharjeel50",
            "html_url": "https://github.com/Sharjeel50",
            "followers_url": "https://api.github.com/users/Sharjeel50/followers",
            "following_url": "https://api.github.com/users/Sharjeel50/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sharjeel50/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sharjeel50/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sharjeel50/subscriptions",
            "organizations_url": "https://api.github.com/users/Sharjeel50/orgs",
            "repos_url": "https://api.github.com/users/Sharjeel50/repos",
            "events_url": "https://api.github.com/users/Sharjeel50/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sharjeel50/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It is needed for the database to work.",
        "created_at": "2019-02-19T21:46:19Z",
        "updated_at": "2019-02-19T21:46:20Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/5#discussion_r258243448",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/5",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/258243448"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/5#discussion_r258243448"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/5"
            }
        },
        "in_reply_to_id": 258236745
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/266650189",
        "pull_request_review_id": 215863122,
        "id": 266650189,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjY1MDE4OQ==",
        "diff_hunk": "@@ -1,3 +1,3 @@\n-# bdonor\n+# bdonor mad",
        "path": "README.md",
        "position": 2,
        "original_position": 2,
        "commit_id": "5da19c7e0636cfd6084713e7b6cfde67120331f7",
        "original_commit_id": "5da19c7e0636cfd6084713e7b6cfde67120331f7",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"mad\" to be deleted",
        "created_at": "2019-03-18T21:30:43Z",
        "updated_at": "2019-03-18T21:30:43Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/12#discussion_r266650189",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/12",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/266650189"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/12#discussion_r266650189"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/12"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275479040",
        "pull_request_review_id": 226796915,
        "id": 275479040,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTQ3OTA0MA==",
        "diff_hunk": "@@ -9,30 +9,38 @@\n @Document(collection = \"AllUsers\")\n public class User {\n \n+    @Id\n+    private String _id;\n     private String bloodGroup;",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Models/User.java",
        "position": 10,
        "original_position": 6,
        "commit_id": "d05b6716be446bd684071188aa84d70311317e69",
        "original_commit_id": "485bf873be0270c2a51ff74b54e471e883f202ca",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "here, _bloodGroup",
        "created_at": "2019-04-15T18:01:25Z",
        "updated_at": "2019-04-16T15:11:47Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275479040",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275479040"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275479040"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275479163",
        "pull_request_review_id": 226797080,
        "id": 275479163,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTQ3OTE2Mw==",
        "diff_hunk": "@@ -9,30 +9,38 @@\n @Document(collection = \"AllUsers\")\n public class User {\n \n+    @Id\n+    private String _id;\n     private String bloodGroup;\n     private String firstName;",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Models/User.java",
        "position": null,
        "original_position": 7,
        "commit_id": "d05b6716be446bd684071188aa84d70311317e69",
        "original_commit_id": "485bf873be0270c2a51ff74b54e471e883f202ca",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "here, _firstName",
        "created_at": "2019-04-15T18:01:44Z",
        "updated_at": "2019-04-16T15:11:47Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275479163",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275479163"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275479163"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275480098",
        "pull_request_review_id": 226798230,
        "id": 275480098,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTQ4MDA5OA==",
        "diff_hunk": "@@ -9,30 +9,38 @@\n @Document(collection = \"AllUsers\")\n public class User {\n \n+    @Id\n+    private String _id;\n     private String bloodGroup;\n     private String firstName;\n     @Indexed(direction = IndexDirection.ASCENDING)\n     private String _surname;\n-    private String _email;\n+    private String email;\n     private String _password;\n     private String _addressline;\n     private String _postcode;\n \n-    public User(String firstName){\n-        this.firstName = firstName;\n+    public User(){}\n+\n+    public User(String email, String _password) {\n+        this.email = email;\n+        this._password = _password;\n     }\n \n-    public User(){}\n-    public User(String bloodGroup, String firstName, String _surname, String _email, String _password, String _addressline, String _postcode) {",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Models/User.java",
        "position": 44,
        "original_position": 26,
        "commit_id": "d05b6716be446bd684071188aa84d70311317e69",
        "original_commit_id": "485bf873be0270c2a51ff74b54e471e883f202ca",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "parameters inconsistent, let's use \"_\" in class variables only (it's only naming conventions but goes well with Java)",
        "created_at": "2019-04-15T18:04:20Z",
        "updated_at": "2019-04-16T15:11:47Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275480098",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275480098"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275480098"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275480996",
        "pull_request_review_id": 226799357,
        "id": 275480996,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTQ4MDk5Ng==",
        "diff_hunk": "@@ -57,12 +65,12 @@ public void set_surname(String _surname) {\n         this._surname = _surname;\n     }\n \n-    public String get_email() {\n-        return _email;\n+    public String getEmail() {\n+        return email;\n     }\n \n-    public void set_email(String _email) {\n-        this._email = _email;\n+    public void setEmail(String email) {\n+        this.email = email;\n     }\n \n     public String get_password() {",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Models/User.java",
        "position": null,
        "original_position": 61,
        "commit_id": "d05b6716be446bd684071188aa84d70311317e69",
        "original_commit_id": "485bf873be0270c2a51ff74b54e471e883f202ca",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "let's keep methods in camelCase as you did with getEmail(), same applies with set_addressline, get_postcode and so on... ",
        "created_at": "2019-04-15T18:06:46Z",
        "updated_at": "2019-04-16T15:11:47Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275480996",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275480996"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275480996"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275483107",
        "pull_request_review_id": 226801934,
        "id": 275483107,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTQ4MzEwNw==",
        "diff_hunk": "@@ -57,12 +65,12 @@ public void set_surname(String _surname) {\n         this._surname = _surname;\n     }\n \n-    public String get_email() {",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Models/User.java",
        "position": 112,
        "original_position": 49,
        "commit_id": "d05b6716be446bd684071188aa84d70311317e69",
        "original_commit_id": "485bf873be0270c2a51ff74b54e471e883f202ca",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Python style \u274c",
        "created_at": "2019-04-15T18:12:36Z",
        "updated_at": "2019-04-16T15:11:47Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275483107",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275483107"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275483107"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275483830",
        "pull_request_review_id": 226802845,
        "id": 275483830,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTQ4MzgzMA==",
        "diff_hunk": "@@ -12,44 +13,61 @@\n     @Autowired\n     private UserRepository UserRepo;\n \n-    public User createNew(String firstname){ // This works\n-        return UserRepo.save(new User(firstname));\n-    }\n+    @Autowired\n+    private BCryptPasswordEncoder bCryptPasswordEncoder;\n \n-    public User create( String bloodGroup, String firstname, String _surname, String _email, String _password, String _addressline, String _postcode ){ // This Works\n-        return UserRepo.save( new User(bloodGroup, firstname,  _surname,  _email,  _password,  _addressline,  _postcode) );\n+    public User create(String bloodGroup, String firstname, String _surname, String _email, String _password, String _addressline, String _postcode) { // This Works\n+        User user = UserRepo.findByEmail(_email);\n+        if(user != null) {\n+            System.out.println(\"User Exists\");\n+            return new User();\n+        }\n+        return UserRepo.save(new User(bloodGroup, firstname, _surname, _email, bCryptPasswordEncoder.encode(_password), _addressline, _postcode));\n     }\n \n-    public User getByfirstName(String firstName){\n+    public User getByfirstName(String firstName) {\n         return UserRepo.findByFirstName(firstName);\n     }\n \n-    public List<User> getAll(){\n+    public List<User> getAll() {\n         return UserRepo.findAll();\n     }\n \n     public User Update(String bloodGroup, String firstname, String _surname, String _email, String _password, String _addressline, String _postcode) {\n-        User SpecificUser = UserRepo.findByFirstName(firstname);\n \n+        User SpecificUser = UserRepo.findByFirstName(firstname);\n         SpecificUser.setBloodGroup(bloodGroup);\n         SpecificUser.setfirstName(firstname);\n         SpecificUser.set_surname(_surname);\n-        SpecificUser.set_email(_email);\n-        SpecificUser.set_password(_password);\n+        SpecificUser.setEmail(_email);\n+        SpecificUser.set_password(bCryptPasswordEncoder.encode(_password));\n         SpecificUser.set_addressline(_addressline);\n         SpecificUser.set_postcode(_postcode);\n \n         return UserRepo.save(SpecificUser);\n     }\n \n-    public void deleteAll(){\n+    public void deleteAll() {\n         UserRepo.deleteAll();\n-    } // This Works\n+    }\n \n-    public void deleteByfirstName(String firstname){ // This Doesnt Work\n+    public void deleteByfirstName(String firstname) {\n         User user = UserRepo.findByFirstName(firstname);\n         System.out.println(user);\n         UserRepo.delete(user);\n     }\n \n-}\n+    public boolean checkCredentials(String _email, String _password) {",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Models/AccountHelper.java",
        "position": null,
        "original_position": 73,
        "commit_id": "d05b6716be446bd684071188aa84d70311317e69",
        "original_commit_id": "485bf873be0270c2a51ff74b54e471e883f202ca",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"_\" to be removed",
        "created_at": "2019-04-15T18:14:35Z",
        "updated_at": "2019-04-16T15:11:47Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275483830",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275483830"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275483830"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275483959",
        "pull_request_review_id": 226803006,
        "id": 275483959,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTQ4Mzk1OQ==",
        "diff_hunk": "@@ -12,44 +13,61 @@\n     @Autowired\n     private UserRepository UserRepo;\n \n-    public User createNew(String firstname){ // This works\n-        return UserRepo.save(new User(firstname));\n-    }\n+    @Autowired\n+    private BCryptPasswordEncoder bCryptPasswordEncoder;\n \n-    public User create( String bloodGroup, String firstname, String _surname, String _email, String _password, String _addressline, String _postcode ){ // This Works\n-        return UserRepo.save( new User(bloodGroup, firstname,  _surname,  _email,  _password,  _addressline,  _postcode) );\n+    public User create(String bloodGroup, String firstname, String _surname, String _email, String _password, String _addressline, String _postcode) { // This Works\n+        User user = UserRepo.findByEmail(_email);\n+        if(user != null) {\n+            System.out.println(\"User Exists\");\n+            return new User();\n+        }\n+        return UserRepo.save(new User(bloodGroup, firstname, _surname, _email, bCryptPasswordEncoder.encode(_password), _addressline, _postcode));\n     }\n \n-    public User getByfirstName(String firstName){\n+    public User getByfirstName(String firstName) {\n         return UserRepo.findByFirstName(firstName);\n     }\n \n-    public List<User> getAll(){\n+    public List<User> getAll() {\n         return UserRepo.findAll();\n     }\n \n     public User Update(String bloodGroup, String firstname, String _surname, String _email, String _password, String _addressline, String _postcode) {",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Models/AccountHelper.java",
        "position": null,
        "original_position": 42,
        "commit_id": "d05b6716be446bd684071188aa84d70311317e69",
        "original_commit_id": "485bf873be0270c2a51ff74b54e471e883f202ca",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "parameters inconsistent, let's use \"_\" in class variables only (it's only naming conventions but goes well with Java)\r\n\r\n",
        "created_at": "2019-04-15T18:14:57Z",
        "updated_at": "2019-04-16T15:11:47Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275483959",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275483959"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275483959"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275484080",
        "pull_request_review_id": 226803156,
        "id": 275484080,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTQ4NDA4MA==",
        "diff_hunk": "@@ -17,74 +15,57 @@\n     @Autowired\n     private AccountHelper Service_functions;\n \n-    private UserRepository UserRepo;\n-\n-    public AccountController(UserRepository userRepo) {\n-        UserRepo = userRepo;\n-    }\n-\n-    @ResponseBody\n-    @RequestMapping(\"/CreateTwo\") // Works\n-    public String CreateTwo(@RequestParam String firstname) {\n-        User CreateUser = Service_functions.createNew(firstname);\n-        return firstname + \" Added\";\n-    }\n-\n-    @ResponseBody\n-    @RequestMapping(\"/testController\") // Works\n-    public String testResponse() {\n-        \n-        return \"Response: OK\";\n-    }\n-    @ResponseBody\n-    @GetMapping(value = \"/create/{bloodGroup}/{firstname}/{_surname}/{_email}/{_addressline}/{_postcode}/{_password}\") // Works\n+    @ResponseBody // Works\n+    @GetMapping(value = \"/create/{bloodGroup}/{firstname}/{_surname}/{_email}/{_password}/{_addressline}/{_password}\")\n     public String create( @PathVariable String bloodGroup , @PathVariable  String firstname, @PathVariable  String _surname, @PathVariable  String _email, @PathVariable  String _password, @PathVariable  String _addressline, @PathVariable  String _postcode){\n         User CreateUser = Service_functions.create(bloodGroup, firstname,  _surname,  _email,  _password,  _addressline,  _postcode);\n         System.out.println(\"this is working\");\n         return CreateUser.toString();\n     }\n \n     @ResponseBody\n-    @GetMapping(\"/getUser/{firstName}\") // now OK\n-    public String getUser( @PathVariable String firstName ){\n+    @GetMapping(\"/getUser/{firstname}\") // Works Partially - Only works for one user within database, if there are more with the same name, error is given\n+    public String getUser( @PathVariable String firstname ){\n         System.out.println(\"Working\");\n-        return Service_functions.getByfirstName(firstName).toString();\n+        return Service_functions.getByfirstName(firstname).toString();\n     }\n \n     @ResponseBody\n     @GetMapping(\"/getAll\")\n-    public String getAllUsers(){ // THIS DOESNT WORK\n+    public String getAllUsers(){ // Works\n         System.out.println(\"This Works\");\n         return Service_functions.getAll().toString();\n     }\n \n     @ResponseBody\n-    @RequestMapping(\"/updateUser/{bloodGroup}/{firstname}/{_surname}/{_email}/{_addressline}/[_postcode\")\n+    @RequestMapping(\"/updateUser/{bloodGroup}/{firstname}/{_surname}/{_email}/{_password}/{_addressline}/{_password}\") // Works Partially - Creates new user instead of updating current\n     public String updateUser( @PathVariable String bloodGroup , @PathVariable  String firstname, @PathVariable  String _surname, @PathVariable  String _email, @PathVariable  String _password, @PathVariable  String _addressline, @PathVariable  String _postcode ){\n         User Update = Service_functions.Update(bloodGroup, firstname,  _surname,  _email,  _password,  _addressline,  _postcode);\n         return Update.toString();\n     }\n \n     @ResponseBody\n-    @GetMapping(\"/deleteUser/{firstName}\")\n-    public String delete(@PathVariable(\"firstName\") String firstName ){\n-        Service_functions.deleteByfirstName(firstName);\n-        return \"Deleted\" + firstName;\n+    @GetMapping(\"/deleteUser/{firstname}\") // Works\n+    public String deleteUser(@PathVariable String firstname ){\n+        Service_functions.deleteByfirstName(firstname);\n+        return \"Deleted\" + firstname;\n     }\n \n     @ResponseBody\n-    @RequestMapping(\"/Test\")\n-    public String Test(@RequestParam String firstName){\n-        System.out.println(\"Working\");\n-        User aa = Service_functions.getByfirstName(firstName);\n-        return \"found\" + aa.toString();\n+    @GetMapping(\"/checkCredentials/{email}/{_password}\") // Error - No property email found for type User! Did you mean '_email'?\n+    public boolean checkCredentials( @PathVariable String email, @PathVariable String _password ){",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Controller/AccountController.java",
        "position": null,
        "original_position": 91,
        "commit_id": "d05b6716be446bd684071188aa84d70311317e69",
        "original_commit_id": "485bf873be0270c2a51ff74b54e471e883f202ca",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "parameters inconsistent, let's use \"_\" in class variables only (it's only naming conventions but goes well with Java)\r\n\r\n",
        "created_at": "2019-04-15T18:15:16Z",
        "updated_at": "2019-04-16T15:11:47Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275484080",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275484080"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275484080"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275484171",
        "pull_request_review_id": 226803267,
        "id": 275484171,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTQ4NDE3MQ==",
        "diff_hunk": "@@ -17,74 +15,57 @@\n     @Autowired\n     private AccountHelper Service_functions;\n \n-    private UserRepository UserRepo;\n-\n-    public AccountController(UserRepository userRepo) {\n-        UserRepo = userRepo;\n-    }\n-\n-    @ResponseBody\n-    @RequestMapping(\"/CreateTwo\") // Works\n-    public String CreateTwo(@RequestParam String firstname) {\n-        User CreateUser = Service_functions.createNew(firstname);\n-        return firstname + \" Added\";\n-    }\n-\n-    @ResponseBody\n-    @RequestMapping(\"/testController\") // Works\n-    public String testResponse() {\n-        \n-        return \"Response: OK\";\n-    }\n-    @ResponseBody\n-    @GetMapping(value = \"/create/{bloodGroup}/{firstname}/{_surname}/{_email}/{_addressline}/{_postcode}/{_password}\") // Works\n+    @ResponseBody // Works\n+    @GetMapping(value = \"/create/{bloodGroup}/{firstname}/{_surname}/{_email}/{_password}/{_addressline}/{_password}\")\n     public String create( @PathVariable String bloodGroup , @PathVariable  String firstname, @PathVariable  String _surname, @PathVariable  String _email, @PathVariable  String _password, @PathVariable  String _addressline, @PathVariable  String _postcode){\n         User CreateUser = Service_functions.create(bloodGroup, firstname,  _surname,  _email,  _password,  _addressline,  _postcode);\n         System.out.println(\"this is working\");\n         return CreateUser.toString();\n     }\n \n     @ResponseBody\n-    @GetMapping(\"/getUser/{firstName}\") // now OK\n-    public String getUser( @PathVariable String firstName ){\n+    @GetMapping(\"/getUser/{firstname}\") // Works Partially - Only works for one user within database, if there are more with the same name, error is given\n+    public String getUser( @PathVariable String firstname ){\n         System.out.println(\"Working\");\n-        return Service_functions.getByfirstName(firstName).toString();\n+        return Service_functions.getByfirstName(firstname).toString();\n     }\n \n     @ResponseBody\n     @GetMapping(\"/getAll\")\n-    public String getAllUsers(){ // THIS DOESNT WORK\n+    public String getAllUsers(){ // Works\n         System.out.println(\"This Works\");\n         return Service_functions.getAll().toString();\n     }\n \n     @ResponseBody\n-    @RequestMapping(\"/updateUser/{bloodGroup}/{firstname}/{_surname}/{_email}/{_addressline}/[_postcode\")\n+    @RequestMapping(\"/updateUser/{bloodGroup}/{firstname}/{_surname}/{_email}/{_password}/{_addressline}/{_password}\") // Works Partially - Creates new user instead of updating current\n     public String updateUser( @PathVariable String bloodGroup , @PathVariable  String firstname, @PathVariable  String _surname, @PathVariable  String _email, @PathVariable  String _password, @PathVariable  String _addressline, @PathVariable  String _postcode ){",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Controller/AccountController.java",
        "position": null,
        "original_position": 68,
        "commit_id": "d05b6716be446bd684071188aa84d70311317e69",
        "original_commit_id": "485bf873be0270c2a51ff74b54e471e883f202ca",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "parameters inconsistent, let's use \"_\" in class variables only (it's only naming conventions but goes well with Java)\r\n\r\n",
        "created_at": "2019-04-15T18:15:30Z",
        "updated_at": "2019-04-16T15:11:47Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275484171",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275484171"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275484171"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275484290",
        "pull_request_review_id": 226803407,
        "id": 275484290,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTQ4NDI5MA==",
        "diff_hunk": "@@ -17,74 +15,57 @@\n     @Autowired\n     private AccountHelper Service_functions;\n \n-    private UserRepository UserRepo;\n-\n-    public AccountController(UserRepository userRepo) {\n-        UserRepo = userRepo;\n-    }\n-\n-    @ResponseBody\n-    @RequestMapping(\"/CreateTwo\") // Works\n-    public String CreateTwo(@RequestParam String firstname) {\n-        User CreateUser = Service_functions.createNew(firstname);\n-        return firstname + \" Added\";\n-    }\n-\n-    @ResponseBody\n-    @RequestMapping(\"/testController\") // Works\n-    public String testResponse() {\n-        \n-        return \"Response: OK\";\n-    }\n-    @ResponseBody\n-    @GetMapping(value = \"/create/{bloodGroup}/{firstname}/{_surname}/{_email}/{_addressline}/{_postcode}/{_password}\") // Works\n+    @ResponseBody // Works\n+    @GetMapping(value = \"/create/{bloodGroup}/{firstname}/{_surname}/{_email}/{_password}/{_addressline}/{_password}\")\n     public String create( @PathVariable String bloodGroup , @PathVariable  String firstname, @PathVariable  String _surname, @PathVariable  String _email, @PathVariable  String _password, @PathVariable  String _addressline, @PathVariable  String _postcode){",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Controller/AccountController.java",
        "position": null,
        "original_position": 41,
        "commit_id": "d05b6716be446bd684071188aa84d70311317e69",
        "original_commit_id": "485bf873be0270c2a51ff74b54e471e883f202ca",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "parameters inconsistent, let's use \"_\" in class variables only (it's only naming conventions but goes well with Java)\r\n\r\n",
        "created_at": "2019-04-15T18:15:49Z",
        "updated_at": "2019-04-16T15:11:47Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275484290",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/24",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/275484290"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/24#discussion_r275484290"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/24"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280067760",
        "pull_request_review_id": 232566625,
        "id": 280067760,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDA2Nzc2MA==",
        "diff_hunk": "@@ -1,76 +1,111 @@\n package com.bdonor.accountservice.Controller;\n \n-import com.bdonor.accountservice.Models.AccountHelper;\n+import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper;\n import com.bdonor.accountservice.Models.User;\n-import com.bdonor.accountservice.Repository.UserRepository;\n+import com.bdonor.accountservice.Repository.DynamoRepo;\n import com.google.gson.Gson;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-import org.springframework.stereotype.Controller;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n import org.springframework.web.bind.annotation.*;\n \n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n \n-@Controller\n-@Component\n+\n+@RestController\n public class AccountController {\n \n     @Autowired\n-    private AccountHelper Service_functions;\n-\n-    @ResponseBody // Works\n-    @GetMapping(value = \"/create/{bloodGroup}/{firstname}/{surname}/{email}/{password}/{addressline}/{postcode}\")\n-    public String create( @PathVariable String bloodGroup , @PathVariable  String firstname, @PathVariable  String surname, @PathVariable  String email, @PathVariable  String password, @PathVariable  String addressline, @PathVariable  String postcode){\n-        User CreateUser = Service_functions.create(bloodGroup, firstname,  surname,  email,  password,  addressline,  postcode);\n-        System.out.println(\"this is working\");\n-        return CreateUser.toString();\n-    }\n+    private DynamoRepo dynamoRepo;\n \n-    @ResponseBody\n-    @GetMapping(\"/getUser/{firstname}\") // Works Partially - Only works for one user within database, if there are more with the same name, error is given\n-    public String getUser( @PathVariable String firstname ){\n-        System.out.println(\"Working\");\n-        return Service_functions.getByfirstName(firstname).toString();\n-    }\n+    @Autowired\n+    private DynamoDBMapper mapper;\n+\n+    @Autowired\n+    private BCryptPasswordEncoder bCryptPasswordEncoder;\n \n     @ResponseBody\n-    @GetMapping(\"/getAll\")\n-    public String getAllUsers(){ // Works\n-        System.out.println(\"This Works\");\n+    @PostMapping(value = \"/create/{bloodGroup}/{firstName}/{lastName}/{email}/{password}/{addressline}/{postcode}\")\n+    public String Register( @PathVariable String bloodGroup , @PathVariable  String firstName, @PathVariable  String lastName, @PathVariable  String email, @PathVariable  String password, @PathVariable  String addressline, @PathVariable  String postcode){\n+        User checkEmail = mapper.load(User.class, firstName, email);",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Controller/AccountController.java",
        "position": null,
        "original_position": 60,
        "commit_id": "6187d2ce7981e7af097dc7807764b3436d65d062",
        "original_commit_id": "e81f5b4d18581c56ab3e031675033d7a09cb62ef",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "https://github.com/we-3hackathon/bdonor/blob/e81f5b4d18581c56ab3e031675033d7a09cb62ef/account-service/src/main/java/com/bdonor/accountservice/Controller/AccountController.java#L36-L76\r\n\r\nPart of business logic, to be abstracted under **Model and/or Service** package",
        "created_at": "2019-05-01T13:14:37Z",
        "updated_at": "2019-05-01T14:12:20Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280067760",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/35",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280067760"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280067760"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/35"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280068780",
        "pull_request_review_id": 232567974,
        "id": 280068780,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDA2ODc4MA==",
        "diff_hunk": "@@ -1,76 +1,111 @@\n package com.bdonor.accountservice.Controller;\n \n-import com.bdonor.accountservice.Models.AccountHelper;\n+import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper;\n import com.bdonor.accountservice.Models.User;\n-import com.bdonor.accountservice.Repository.UserRepository;\n+import com.bdonor.accountservice.Repository.DynamoRepo;\n import com.google.gson.Gson;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-import org.springframework.stereotype.Controller;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n import org.springframework.web.bind.annotation.*;\n \n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n \n-@Controller\n-@Component\n+\n+@RestController\n public class AccountController {\n \n     @Autowired\n-    private AccountHelper Service_functions;\n-\n-    @ResponseBody // Works\n-    @GetMapping(value = \"/create/{bloodGroup}/{firstname}/{surname}/{email}/{password}/{addressline}/{postcode}\")\n-    public String create( @PathVariable String bloodGroup , @PathVariable  String firstname, @PathVariable  String surname, @PathVariable  String email, @PathVariable  String password, @PathVariable  String addressline, @PathVariable  String postcode){\n-        User CreateUser = Service_functions.create(bloodGroup, firstname,  surname,  email,  password,  addressline,  postcode);\n-        System.out.println(\"this is working\");\n-        return CreateUser.toString();\n-    }\n+    private DynamoRepo dynamoRepo;\n \n-    @ResponseBody\n-    @GetMapping(\"/getUser/{firstname}\") // Works Partially - Only works for one user within database, if there are more with the same name, error is given\n-    public String getUser( @PathVariable String firstname ){\n-        System.out.println(\"Working\");\n-        return Service_functions.getByfirstName(firstname).toString();\n-    }\n+    @Autowired\n+    private DynamoDBMapper mapper;\n+\n+    @Autowired\n+    private BCryptPasswordEncoder bCryptPasswordEncoder;\n \n     @ResponseBody\n-    @GetMapping(\"/getAll\")\n-    public String getAllUsers(){ // Works\n-        System.out.println(\"This Works\");\n+    @PostMapping(value = \"/create/{bloodGroup}/{firstName}/{lastName}/{email}/{password}/{addressline}/{postcode}\")\n+    public String Register( @PathVariable String bloodGroup , @PathVariable  String firstName, @PathVariable  String lastName, @PathVariable  String email, @PathVariable  String password, @PathVariable  String addressline, @PathVariable  String postcode){\n+        User checkEmail = mapper.load(User.class, firstName, email);\n+        if (checkEmail != null) {\n+            System.out.println(\"User Exists\");\n+            return \"Email in use, try again with a different email\";\n+        }\n+\n+        String URLink;\n+        String[] LatLong = {};\n+\n+        try {\n+\n+            URL url = new URL(String.format(\"http://localhost:8110/geocoding/%s/%s\", addressline, postcode)); // Had to do this stuff here as i was \"duplicate id\" error in DynamoRepo\n+            //System.out.println(url.toString());\n+            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n+            conn.setRequestMethod(\"GET\");\n+            conn.setRequestProperty(\"Accept\", \"application/String\");\n+\n+            if (conn.getResponseCode() != 200) {\n+                throw new RuntimeException(\"Failed : HTTP error code : \" + conn.getResponseCode());\n+            }\n \n-        String json = new Gson().toJson(Service_functions.getAll());\n+            String output = \"E\";\n+            BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));\n \n-        return json;\n+            System.out.println(\"Output from Server .... \\n\");\n+            while ((output = br.readLine()) != null) {\n+                URLink = output;\n+                System.out.println(URLink);\n+                LatLong = URLink.split(\",\");\n+            }\n+\n+            conn.disconnect();\n+\n+        } catch (MalformedURLException e) {\n+\n+            e.printStackTrace();\n+\n+        } catch (IOException e) {\n+\n+            e.printStackTrace();\n+        }\n+        mapper.save(new User(bloodGroup, firstName, lastName, email, bCryptPasswordEncoder.encode(password), addressline, postcode, LatLong[0], LatLong[1]));\n+        return \"User added to Dynamo Database\";\n+    }\n+    \n+    @GetMapping(value = \"/getUser/{firstName}/{email}\")\n+    public ResponseEntity<User> getUserDetails(@PathVariable String firstName, @PathVariable String email) { // Working\n+        User user = dynamoRepo.getSingleUser(firstName, email);\n+        System.out.println(user.toString());\n+        return new ResponseEntity<User>(user, HttpStatus.OK);\n     }\n \n-    @ResponseBody\n-    @RequestMapping(\"/updateUser/{bloodGroup}/{firstname}/{surname}/{email}/{password}/{addressline}/{password}\") // Works Partially - Creates new user instead of updating current\n-    public String updateUser( @PathVariable String bloodGroup , @PathVariable  String firstname, @PathVariable  String surname, @PathVariable  String email, @PathVariable  String password, @PathVariable  String addressline, @PathVariable  String postcode ){\n-        User Update = Service_functions.Update(bloodGroup, firstname,  surname,  email,  password,  addressline,  postcode);\n-        return Update.toString();\n+    @PutMapping(value = \"/updateUser\")\n+    public void updateUserDetails(@RequestBody User user) { // Working -- Not sure how i will re-encrypt new users password\n+        dynamoRepo.updateUserDetails(user);\n     }\n \n-    @ResponseBody\n-    @GetMapping(\"/deleteUser/{firstname}\") // Works\n-    public String deleteUser(@PathVariable String firstname ){\n-        Service_functions.deleteByfirstName(firstname);\n-        return \"Deleted\" + firstname;\n+    @DeleteMapping(value = \"/delete/{firstName}/{email}\")\n+    public void deleteUserDetails(@PathVariable String firstName, @PathVariable String email) { // Working\n+        User user = new User();",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Controller/AccountController.java",
        "position": 84,
        "original_position": 131,
        "commit_id": "6187d2ce7981e7af097dc7807764b3436d65d062",
        "original_commit_id": "e81f5b4d18581c56ab3e031675033d7a09cb62ef",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "https://github.com/we-3hackathon/bdonor/blob/e81f5b4d18581c56ab3e031675033d7a09cb62ef/account-service/src/main/java/com/bdonor/accountservice/Controller/AccountController.java#L95-L98",
        "created_at": "2019-05-01T13:19:15Z",
        "updated_at": "2019-05-01T14:12:20Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280068780",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/35",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280068780"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280068780"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/35"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280069726",
        "pull_request_review_id": 232569131,
        "id": 280069726,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDA2OTcyNg==",
        "diff_hunk": "@@ -1,6 +1,6 @@\n spring.application.name=account-service\n server.port=8020\n-spring.data.mongodb.host=localhost\n-spring.data.mongodb.port=27017\n-spring.data.mongodb.database=AccountServiceUsers\n+#spring.data.mongodb.host=localhost",
        "path": "account-service/src/main/resources/application.properties",
        "position": null,
        "original_position": 6,
        "commit_id": "6187d2ce7981e7af097dc7807764b3436d65d062",
        "original_commit_id": "e81f5b4d18581c56ab3e031675033d7a09cb62ef",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "https://github.com/we-3hackathon/bdonor/blob/e81f5b4d18581c56ab3e031675033d7a09cb62ef/account-service/src/main/resources/application.properties#L3-L5\r\n\r\nIf not needed, let's press the delete button",
        "created_at": "2019-05-01T13:23:18Z",
        "updated_at": "2019-05-01T14:12:20Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280069726",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/35",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280069726"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280069726"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/35"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280113041",
        "pull_request_review_id": 232625344,
        "id": 280113041,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDExMzA0MQ==",
        "diff_hunk": "@@ -28,6 +36,58 @@\n     @Autowired\n \tprivate BCryptPasswordEncoder bCryptPasswordEncoder;\n \n+    public boolean createUser(String bloodGroup, String firstName, String lastName, String email, String password, String addressline, String postcode){\n+        User checkEmail = mapper.load(User.class, firstName, email);\n+        if (checkEmail != null) {\n+            System.out.println(\"User \" + checkEmail.toString() + \"Already exists!\");\n+            return false;\n+        }\n+\n+        String URLink;\n+        String[] LatLong = {};\n+\n+        try {",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Repository/DynamoRepo.java",
        "position": 49,
        "original_position": 31,
        "commit_id": "6187d2ce7981e7af097dc7807764b3436d65d062",
        "original_commit_id": "6187d2ce7981e7af097dc7807764b3436d65d062",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "https://github.com/we-3hackathon/bdonor/blob/6187d2ce7981e7af097dc7807764b3436d65d062/account-service/src/main/java/com/bdonor/accountservice/Repository/DynamoRepo.java#L46-L80",
        "created_at": "2019-05-01T15:44:09Z",
        "updated_at": "2019-05-01T15:44:10Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280113041",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/35",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280113041"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280113041"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/35"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280113187",
        "pull_request_review_id": 232625541,
        "id": 280113187,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDExMzE4Nw==",
        "diff_hunk": "@@ -28,6 +36,58 @@\n     @Autowired\n \tprivate BCryptPasswordEncoder bCryptPasswordEncoder;\n \n+    public boolean createUser(String bloodGroup, String firstName, String lastName, String email, String password, String addressline, String postcode){\n+        User checkEmail = mapper.load(User.class, firstName, email);\n+        if (checkEmail != null) {\n+            System.out.println(\"User \" + checkEmail.toString() + \"Already exists!\");\n+            return false;\n+        }\n+\n+        String URLink;\n+        String[] LatLong = {};\n+\n+        try {",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Repository/DynamoRepo.java",
        "position": 49,
        "original_position": 31,
        "commit_id": "6187d2ce7981e7af097dc7807764b3436d65d062",
        "original_commit_id": "6187d2ce7981e7af097dc7807764b3436d65d062",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "PR35, A2 (nothing to worry about for now, future referencing only)",
        "created_at": "2019-05-01T15:44:36Z",
        "updated_at": "2019-05-01T15:44:36Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280113187",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/35",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280113187"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280113187"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/35"
            }
        },
        "in_reply_to_id": 280113041
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280069212",
        "pull_request_review_id": 232568566,
        "id": 280069212,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDA2OTIxMg==",
        "diff_hunk": "@@ -1,76 +1,111 @@\n package com.bdonor.accountservice.Controller;\n \n-import com.bdonor.accountservice.Models.AccountHelper;\n+import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper;\n import com.bdonor.accountservice.Models.User;\n-import com.bdonor.accountservice.Repository.UserRepository;\n+import com.bdonor.accountservice.Repository.DynamoRepo;\n import com.google.gson.Gson;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-import org.springframework.stereotype.Controller;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n import org.springframework.web.bind.annotation.*;\n \n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n \n-@Controller\n-@Component\n+\n+@RestController\n public class AccountController {\n \n     @Autowired\n-    private AccountHelper Service_functions;\n-\n-    @ResponseBody // Works\n-    @GetMapping(value = \"/create/{bloodGroup}/{firstname}/{surname}/{email}/{password}/{addressline}/{postcode}\")\n-    public String create( @PathVariable String bloodGroup , @PathVariable  String firstname, @PathVariable  String surname, @PathVariable  String email, @PathVariable  String password, @PathVariable  String addressline, @PathVariable  String postcode){\n-        User CreateUser = Service_functions.create(bloodGroup, firstname,  surname,  email,  password,  addressline,  postcode);\n-        System.out.println(\"this is working\");\n-        return CreateUser.toString();\n-    }\n+    private DynamoRepo dynamoRepo;\n \n-    @ResponseBody\n-    @GetMapping(\"/getUser/{firstname}\") // Works Partially - Only works for one user within database, if there are more with the same name, error is given\n-    public String getUser( @PathVariable String firstname ){\n-        System.out.println(\"Working\");\n-        return Service_functions.getByfirstName(firstname).toString();\n-    }\n+    @Autowired\n+    private DynamoDBMapper mapper;\n+\n+    @Autowired\n+    private BCryptPasswordEncoder bCryptPasswordEncoder;\n \n     @ResponseBody\n-    @GetMapping(\"/getAll\")\n-    public String getAllUsers(){ // Works\n-        System.out.println(\"This Works\");\n+    @PostMapping(value = \"/create/{bloodGroup}/{firstName}/{lastName}/{email}/{password}/{addressline}/{postcode}\")\n+    public String Register( @PathVariable String bloodGroup , @PathVariable  String firstName, @PathVariable  String lastName, @PathVariable  String email, @PathVariable  String password, @PathVariable  String addressline, @PathVariable  String postcode){\n+        User checkEmail = mapper.load(User.class, firstName, email);\n+        if (checkEmail != null) {\n+            System.out.println(\"User Exists\");\n+            return \"Email in use, try again with a different email\";\n+        }\n+\n+        String URLink;\n+        String[] LatLong = {};\n+\n+        try {\n+\n+            URL url = new URL(String.format(\"http://localhost:8110/geocoding/%s/%s\", addressline, postcode)); // Had to do this stuff here as i was \"duplicate id\" error in DynamoRepo\n+            //System.out.println(url.toString());\n+            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n+            conn.setRequestMethod(\"GET\");\n+            conn.setRequestProperty(\"Accept\", \"application/String\");\n+\n+            if (conn.getResponseCode() != 200) {\n+                throw new RuntimeException(\"Failed : HTTP error code : \" + conn.getResponseCode());\n+            }\n \n-        String json = new Gson().toJson(Service_functions.getAll());\n+            String output = \"E\";\n+            BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));\n \n-        return json;\n+            System.out.println(\"Output from Server .... \\n\");\n+            while ((output = br.readLine()) != null) {\n+                URLink = output;\n+                System.out.println(URLink);\n+                LatLong = URLink.split(\",\");\n+            }\n+\n+            conn.disconnect();\n+\n+        } catch (MalformedURLException e) {\n+\n+            e.printStackTrace();\n+\n+        } catch (IOException e) {\n+\n+            e.printStackTrace();\n+        }\n+        mapper.save(new User(bloodGroup, firstName, lastName, email, bCryptPasswordEncoder.encode(password), addressline, postcode, LatLong[0], LatLong[1]));\n+        return \"User added to Dynamo Database\";\n+    }\n+    \n+    @GetMapping(value = \"/getUser/{firstName}/{email}\")\n+    public ResponseEntity<User> getUserDetails(@PathVariable String firstName, @PathVariable String email) { // Working\n+        User user = dynamoRepo.getSingleUser(firstName, email);\n+        System.out.println(user.toString());\n+        return new ResponseEntity<User>(user, HttpStatus.OK);\n     }\n \n-    @ResponseBody\n-    @RequestMapping(\"/updateUser/{bloodGroup}/{firstname}/{surname}/{email}/{password}/{addressline}/{password}\") // Works Partially - Creates new user instead of updating current\n-    public String updateUser( @PathVariable String bloodGroup , @PathVariable  String firstname, @PathVariable  String surname, @PathVariable  String email, @PathVariable  String password, @PathVariable  String addressline, @PathVariable  String postcode ){\n-        User Update = Service_functions.Update(bloodGroup, firstname,  surname,  email,  password,  addressline,  postcode);\n-        return Update.toString();\n+    @PutMapping(value = \"/updateUser\")\n+    public void updateUserDetails(@RequestBody User user) { // Working -- Not sure how i will re-encrypt new users password\n+        dynamoRepo.updateUserDetails(user);\n     }\n \n-    @ResponseBody\n-    @GetMapping(\"/deleteUser/{firstname}\") // Works\n-    public String deleteUser(@PathVariable String firstname ){\n-        Service_functions.deleteByfirstName(firstname);\n-        return \"Deleted\" + firstname;\n+    @DeleteMapping(value = \"/delete/{firstName}/{email}\")\n+    public void deleteUserDetails(@PathVariable String firstName, @PathVariable String email) { // Working\n+        User user = new User();",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Controller/AccountController.java",
        "position": 84,
        "original_position": 131,
        "commit_id": "6187d2ce7981e7af097dc7807764b3436d65d062",
        "original_commit_id": "e81f5b4d18581c56ab3e031675033d7a09cb62ef",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "PR35, A1 (Don't worry about this one, just a code for later addressing) ",
        "created_at": "2019-05-01T13:21:15Z",
        "updated_at": "2019-05-01T15:47:52Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280069212",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/35",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/280069212"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/35#discussion_r280069212"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/35"
            }
        },
        "in_reply_to_id": 280068780
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/283445644",
        "pull_request_review_id": 236805174,
        "id": 283445644,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ0NTY0NA==",
        "diff_hunk": "@@ -32,8 +32,19 @@ public DynamoDBMapper mapper() {\n     }\n \n     public AmazonDynamoDB amazonDynamoDBConfig() {\n+        System.out.println(\"**********************************************i am running*********************************************\");",
        "path": "account-service/src/main/java/com/bdonor/accountservice/Config/DynamoDBConfig.java",
        "position": 28,
        "original_position": 28,
        "commit_id": "5b679fa99e7c426eaf02816fc348e6a0158ea123",
        "original_commit_id": "5b679fa99e7c426eaf02816fc348e6a0158ea123",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "[PR37, A1]",
        "created_at": "2019-05-13T17:07:20Z",
        "updated_at": "2019-05-13T17:07:21Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/37#discussion_r283445644",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/37",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/283445644"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/37#discussion_r283445644"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/37"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/283445830",
        "pull_request_review_id": 236805377,
        "id": 283445830,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ0NTgzMA==",
        "diff_hunk": "@@ -30,6 +30,11 @@\n             BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));\n \n             System.out.println(\"Output from Server .... \\n\");\n+\n+            // some defensive coding required here in cases:",
        "path": "account-service/src/main/java/com/bdonor/accountservice/InternalService/GoogleApiServiceHelper.java",
        "position": 29,
        "original_position": 29,
        "commit_id": "5b679fa99e7c426eaf02816fc348e6a0158ea123",
        "original_commit_id": "5b679fa99e7c426eaf02816fc348e6a0158ea123",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "[PR37,A2]",
        "created_at": "2019-05-13T17:07:45Z",
        "updated_at": "2019-05-13T17:07:45Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/37#discussion_r283445830",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/37",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/283445830"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/37#discussion_r283445830"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/37"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/308953833",
        "pull_request_review_id": 268682353,
        "id": 308953833,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODk1MzgzMw==",
        "diff_hunk": "@@ -0,0 +1,79 @@\n+package com.bdonor.accountservice.InternalService;\n+import com.bdonor.accountservice.Controller.APIKeyController;\n+import com.bdonor.accountservice.Model.User;\n+import com.google.gson.Gson;\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+import org.springframework.stereotype.Service;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Service\n+public class UsersInRange {\n+\n+    public String getRadiusPostcodes(double longitude, double latitude, int radius){\n+\n+        StringBuffer Postcodes = new StringBuffer();",
        "path": "account-service/src/main/java/com/bdonor/accountservice/InternalService/UsersInRange.java",
        "position": 23,
        "original_position": 23,
        "commit_id": "119394085afbb0e4c50ccbf0bc88d460b58b16bb",
        "original_commit_id": "fb393335caa8bee2b1bfac006f539f9961ef1d46",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "variable inconsistency Postcodes -> postcodes",
        "created_at": "2019-07-30T21:36:22Z",
        "updated_at": "2019-08-06T18:40:53Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/43#discussion_r308953833",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/43",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/308953833"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/43#discussion_r308953833"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/43"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/308963413",
        "pull_request_review_id": 268693334,
        "id": 308963413,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODk2MzQxMw==",
        "diff_hunk": "@@ -0,0 +1,79 @@\n+package com.bdonor.accountservice.InternalService;\n+import com.bdonor.accountservice.Controller.APIKeyController;\n+import com.bdonor.accountservice.Model.User;\n+import com.google.gson.Gson;\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+import org.springframework.stereotype.Service;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Service\n+public class UsersInRange {\n+\n+    public String getRadiusPostcodes(double longitude, double latitude, int radius){\n+\n+        StringBuffer Postcodes = new StringBuffer();\n+        List<User> allUsers = APIKeyController._singleDynamoRepo.getAllUsers(); // Test fails here\n+        ArrayList<User> returnedUsers = new ArrayList<>();\n+\n+        try {\n+\n+            URL url = new URL(String.format(\"https://api.postcodes.io/postcodes?lon=%s?&lat=%s?&radius=%s\",longitude,latitude,radius)); // Get Long and Lat",
        "path": "account-service/src/main/java/com/bdonor/accountservice/InternalService/UsersInRange.java",
        "position": 29,
        "original_position": 29,
        "commit_id": "119394085afbb0e4c50ccbf0bc88d460b58b16bb",
        "original_commit_id": "fb393335caa8bee2b1bfac006f539f9961ef1d46",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "URL maybe in a final variable or possible enum?",
        "created_at": "2019-07-30T22:02:33Z",
        "updated_at": "2019-08-06T18:40:53Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/43#discussion_r308963413",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/43",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/308963413"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/43#discussion_r308963413"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/43"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/309098163",
        "pull_request_review_id": 268858523,
        "id": 309098163,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTA5ODE2Mw==",
        "diff_hunk": "@@ -0,0 +1,79 @@\n+package com.bdonor.accountservice.InternalService;\n+import com.bdonor.accountservice.Controller.APIKeyController;\n+import com.bdonor.accountservice.Model.User;\n+import com.google.gson.Gson;\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+import org.springframework.stereotype.Service;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Service\n+public class UsersInRange {\n+\n+    public String getRadiusPostcodes(double longitude, double latitude, int radius){\n+\n+        StringBuffer Postcodes = new StringBuffer();\n+        List<User> allUsers = APIKeyController._singleDynamoRepo.getAllUsers(); // Test fails here\n+        ArrayList<User> returnedUsers = new ArrayList<>();\n+\n+        try {\n+\n+            URL url = new URL(String.format(\"https://api.postcodes.io/postcodes?lon=%s?&lat=%s?&radius=%s\",longitude,latitude,radius)); // Get Long and Lat\n+            HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n+            conn.setRequestMethod(\"GET\");\n+            conn.setRequestProperty(\"Accept\", \"application/String\");\n+\n+            if (conn.getResponseCode() != 200) {\n+                throw new RuntimeException(\"Failed : HTTP error code : \" + conn.getResponseCode());\n+            }\n+\n+            String output = \"E\";",
        "path": "account-service/src/main/java/com/bdonor/accountservice/InternalService/UsersInRange.java",
        "position": 38,
        "original_position": 38,
        "commit_id": "119394085afbb0e4c50ccbf0bc88d460b58b16bb",
        "original_commit_id": "fb393335caa8bee2b1bfac006f539f9961ef1d46",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Discussion: Possible memory re-use",
        "created_at": "2019-07-31T08:31:19Z",
        "updated_at": "2019-08-06T18:40:53Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/43#discussion_r309098163",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/43",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/309098163"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/43#discussion_r309098163"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/43"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/347150780",
        "pull_request_review_id": 318035143,
        "id": 347150780,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NzE1MDc4MA==",
        "diff_hunk": "@@ -0,0 +1,29 @@\n+package com.donum.accountservice.Enum;\n+\n+public enum ErrorMessage {\n+\n+    EMPTY(\"Collection empty\"),\n+    SUCCESS(\"Success\"),\n+    FAIL(\"Fail\"),\n+    DYNAMO_OFFLINE(\"Aroundhackathon@gmail.com\"),",
        "path": "account-service/src/main/java/com/donum/accountservice/Enum/ErrorMessage.java",
        "position": null,
        "original_position": 8,
        "commit_id": "ba4479cf44bb22834ae002ce51c495c942d116c7",
        "original_commit_id": "5c27237e47d3b4d2e0b7794a190af5229aaeac94",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Incorrect string ",
        "created_at": "2019-11-17T18:16:16Z",
        "updated_at": "2019-11-17T18:19:33Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/66#discussion_r347150780",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/66",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/347150780"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/66#discussion_r347150780"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/66"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/347150786",
        "pull_request_review_id": 318035149,
        "id": 347150786,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NzE1MDc4Ng==",
        "diff_hunk": "@@ -0,0 +1,29 @@\n+package com.donum.accountservice.Enum;\n+\n+public enum ErrorMessage {\n+\n+    EMPTY(\"Collection empty\"),\n+    SUCCESS(\"Success\"),\n+    FAIL(\"Fail\"),\n+    DYNAMO_OFFLINE(\"Aroundhackathon@gmail.com\"),\n+    DYNAMO_ONLINE(\"Reset Password\"),",
        "path": "account-service/src/main/java/com/donum/accountservice/Enum/ErrorMessage.java",
        "position": null,
        "original_position": 9,
        "commit_id": "ba4479cf44bb22834ae002ce51c495c942d116c7",
        "original_commit_id": "5c27237e47d3b4d2e0b7794a190af5229aaeac94",
        "user": {
            "login": "Sumite321",
            "id": 22295969,
            "node_id": "MDQ6VXNlcjIyMjk1OTY5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/22295969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumite321",
            "html_url": "https://github.com/Sumite321",
            "followers_url": "https://api.github.com/users/Sumite321/followers",
            "following_url": "https://api.github.com/users/Sumite321/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumite321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumite321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumite321/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumite321/orgs",
            "repos_url": "https://api.github.com/users/Sumite321/repos",
            "events_url": "https://api.github.com/users/Sumite321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumite321/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Incorrect string",
        "created_at": "2019-11-17T18:16:26Z",
        "updated_at": "2019-11-17T18:19:33Z",
        "html_url": "https://github.com/we-3hackathon/donum/pull/66#discussion_r347150786",
        "pull_request_url": "https://api.github.com/repos/we-3hackathon/donum/pulls/66",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/comments/347150786"
            },
            "html": {
                "href": "https://github.com/we-3hackathon/donum/pull/66#discussion_r347150786"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/we-3hackathon/donum/pulls/66"
            }
        }
    }
]