[
    {
        "id": "11513955462",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5014902,
            "login": "tesfaldet",
            "display_login": "tesfaldet",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tesfaldet",
            "avatar_url": "https://avatars.githubusercontent.com/u/5014902?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/30",
                "id": 564950590,
                "node_id": "MDU6SXNzdWU1NjQ5NTA1OTA=",
                "number": 30,
                "title": "Combine DoubleMNIST with TripleMNIST to create MultiMNIST",
                "user": {
                    "login": "tesfaldet",
                    "id": 5014902,
                    "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tesfaldet",
                    "html_url": "https://github.com/tesfaldet",
                    "followers_url": "https://api.github.com/users/tesfaldet/followers",
                    "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
                    "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
                    "repos_url": "https://api.github.com/users/tesfaldet/repos",
                    "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2020-02-13T21:07:54Z",
                "updated_at": "2020-02-13T21:08:48Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "body": "Something I wanted to do when I included the DoubleMNIST dataset. Changing DoubleMNIST to MultiMNIST and including a flag to decide whether it's Double or Triple should be relatively trivial. This enhancement should also include logic to download the TripleMNIST dataset."
            },
            "comment": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/585972512",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/30#issuecomment-585972512",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30",
                "id": 585972512,
                "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTk3MjUxMg==",
                "user": {
                    "login": "tesfaldet",
                    "id": 5014902,
                    "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tesfaldet",
                    "html_url": "https://github.com/tesfaldet",
                    "followers_url": "https://api.github.com/users/tesfaldet/followers",
                    "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
                    "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
                    "repos_url": "https://api.github.com/users/tesfaldet/repos",
                    "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2020-02-13T21:08:48Z",
                "updated_at": "2020-02-13T21:08:48Z",
                "author_association": "CONTRIBUTOR",
                "body": "(I'll take care of this enhancement, if you don't mind, just putting it up here as a reminder!)"
            }
        },
        "public": true,
        "created_at": "2020-02-13T21:08:48Z"
    },
    {
        "id": "11513948816",
        "type": "IssuesEvent",
        "actor": {
            "id": 5014902,
            "login": "tesfaldet",
            "display_login": "tesfaldet",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tesfaldet",
            "avatar_url": "https://avatars.githubusercontent.com/u/5014902?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/30/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/30",
                "id": 564950590,
                "node_id": "MDU6SXNzdWU1NjQ5NTA1OTA=",
                "number": 30,
                "title": "Combine DoubleMNIST with TripleMNIST to create MultiMNIST",
                "user": {
                    "login": "tesfaldet",
                    "id": 5014902,
                    "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tesfaldet",
                    "html_url": "https://github.com/tesfaldet",
                    "followers_url": "https://api.github.com/users/tesfaldet/followers",
                    "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
                    "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
                    "repos_url": "https://api.github.com/users/tesfaldet/repos",
                    "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2020-02-13T21:07:54Z",
                "updated_at": "2020-02-13T21:07:54Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "body": "Something I wanted to do when I included the DoubleMNIST dataset. Changing DoubleMNIST to MultiMNIST and including a flag to decide whether it's Double or Triple should be relatively trivial. This enhancement should also include logic to download the TripleMNIST dataset."
            }
        },
        "public": true,
        "created_at": "2020-02-13T21:07:54Z"
    },
    {
        "id": "11512777791",
        "type": "WatchEvent",
        "actor": {
            "id": 13574854,
            "login": "apmoore1",
            "display_login": "apmoore1",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apmoore1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13574854?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2020-02-13T18:44:54Z"
    },
    {
        "id": "11512697945",
        "type": "WatchEvent",
        "actor": {
            "id": 18236623,
            "login": "zonetrooper32",
            "display_login": "zonetrooper32",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zonetrooper32",
            "avatar_url": "https://avatars.githubusercontent.com/u/18236623?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2020-02-13T18:35:04Z"
    },
    {
        "id": "11512237042",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/29",
                "id": 564792590,
                "node_id": "MDU6SXNzdWU1NjQ3OTI1OTA=",
                "number": 29,
                "title": "Pascal5i Fewshot Segmentation",
                "user": {
                    "login": "MSiam",
                    "id": 12859863,
                    "node_id": "MDQ6VXNlcjEyODU5ODYz",
                    "avatar_url": "https://avatars0.githubusercontent.com/u/12859863?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/MSiam",
                    "html_url": "https://github.com/MSiam",
                    "followers_url": "https://api.github.com/users/MSiam/followers",
                    "following_url": "https://api.github.com/users/MSiam/following{/other_user}",
                    "gists_url": "https://api.github.com/users/MSiam/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/MSiam/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/MSiam/subscriptions",
                    "organizations_url": "https://api.github.com/users/MSiam/orgs",
                    "repos_url": "https://api.github.com/users/MSiam/repos",
                    "events_url": "https://api.github.com/users/MSiam/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/MSiam/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2020-02-13T16:12:35Z",
                "updated_at": "2020-02-13T17:38:35Z",
                "closed_at": null,
                "author_association": "NONE",
                "body": "Thanks for the great work.\r\n\r\nI am wondering if I can add a loader for pascal5i dataset as a pull request? I think it will greatly benefit the fewshot segmentation community to have it in that repo too.\r\n\r\n"
            },
            "comment": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/585880401",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/29#issuecomment-585880401",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29",
                "id": 585880401,
                "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTg4MDQwMQ==",
                "user": {
                    "login": "tristandeleu",
                    "id": 2018752,
                    "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                    "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tristandeleu",
                    "html_url": "https://github.com/tristandeleu",
                    "followers_url": "https://api.github.com/users/tristandeleu/followers",
                    "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                    "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                    "repos_url": "https://api.github.com/users/tristandeleu/repos",
                    "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2020-02-13T17:38:35Z",
                "updated_at": "2020-02-13T17:38:35Z",
                "author_association": "OWNER",
                "body": "That would be a great addition! Feel free to open a PR. Have a look at how the [Omniglot dataset](https://github.com/tristandeleu/pytorch-meta/blob/master/torchmeta/datasets/omniglot.py) works for an example of data-loader."
            }
        },
        "public": true,
        "created_at": "2020-02-13T17:38:35Z"
    },
    {
        "id": "11511436027",
        "type": "ForkEvent",
        "actor": {
            "id": 12859863,
            "login": "MSiam",
            "display_login": "MSiam",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MSiam",
            "avatar_url": "https://avatars.githubusercontent.com/u/12859863?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "forkee": {
                "id": 240304140,
                "node_id": "MDEwOlJlcG9zaXRvcnkyNDAzMDQxNDA=",
                "name": "pytorch-meta",
                "full_name": "MSiam/pytorch-meta",
                "private": false,
                "owner": {
                    "login": "MSiam",
                    "id": 12859863,
                    "node_id": "MDQ6VXNlcjEyODU5ODYz",
                    "avatar_url": "https://avatars0.githubusercontent.com/u/12859863?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/MSiam",
                    "html_url": "https://github.com/MSiam",
                    "followers_url": "https://api.github.com/users/MSiam/followers",
                    "following_url": "https://api.github.com/users/MSiam/following{/other_user}",
                    "gists_url": "https://api.github.com/users/MSiam/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/MSiam/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/MSiam/subscriptions",
                    "organizations_url": "https://api.github.com/users/MSiam/orgs",
                    "repos_url": "https://api.github.com/users/MSiam/repos",
                    "events_url": "https://api.github.com/users/MSiam/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/MSiam/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/MSiam/pytorch-meta",
                "description": "A collection of extensions and data-loaders for few-shot learning & meta-learning in PyTorch",
                "fork": true,
                "url": "https://api.github.com/repos/MSiam/pytorch-meta",
                "forks_url": "https://api.github.com/repos/MSiam/pytorch-meta/forks",
                "keys_url": "https://api.github.com/repos/MSiam/pytorch-meta/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/MSiam/pytorch-meta/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/MSiam/pytorch-meta/teams",
                "hooks_url": "https://api.github.com/repos/MSiam/pytorch-meta/hooks",
                "issue_events_url": "https://api.github.com/repos/MSiam/pytorch-meta/issues/events{/number}",
                "events_url": "https://api.github.com/repos/MSiam/pytorch-meta/events",
                "assignees_url": "https://api.github.com/repos/MSiam/pytorch-meta/assignees{/user}",
                "branches_url": "https://api.github.com/repos/MSiam/pytorch-meta/branches{/branch}",
                "tags_url": "https://api.github.com/repos/MSiam/pytorch-meta/tags",
                "blobs_url": "https://api.github.com/repos/MSiam/pytorch-meta/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/MSiam/pytorch-meta/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/MSiam/pytorch-meta/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/MSiam/pytorch-meta/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/MSiam/pytorch-meta/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/MSiam/pytorch-meta/languages",
                "stargazers_url": "https://api.github.com/repos/MSiam/pytorch-meta/stargazers",
                "contributors_url": "https://api.github.com/repos/MSiam/pytorch-meta/contributors",
                "subscribers_url": "https://api.github.com/repos/MSiam/pytorch-meta/subscribers",
                "subscription_url": "https://api.github.com/repos/MSiam/pytorch-meta/subscription",
                "commits_url": "https://api.github.com/repos/MSiam/pytorch-meta/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/MSiam/pytorch-meta/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/MSiam/pytorch-meta/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/MSiam/pytorch-meta/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/MSiam/pytorch-meta/contents/{+path}",
                "compare_url": "https://api.github.com/repos/MSiam/pytorch-meta/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/MSiam/pytorch-meta/merges",
                "archive_url": "https://api.github.com/repos/MSiam/pytorch-meta/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/MSiam/pytorch-meta/downloads",
                "issues_url": "https://api.github.com/repos/MSiam/pytorch-meta/issues{/number}",
                "pulls_url": "https://api.github.com/repos/MSiam/pytorch-meta/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/MSiam/pytorch-meta/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/MSiam/pytorch-meta/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/MSiam/pytorch-meta/labels{/name}",
                "releases_url": "https://api.github.com/repos/MSiam/pytorch-meta/releases{/id}",
                "deployments_url": "https://api.github.com/repos/MSiam/pytorch-meta/deployments",
                "created_at": "2020-02-13T16:13:58Z",
                "updated_at": "2020-02-13T15:22:04Z",
                "pushed_at": "2020-02-11T16:47:58Z",
                "git_url": "git://github.com/MSiam/pytorch-meta.git",
                "ssh_url": "git@github.com:MSiam/pytorch-meta.git",
                "clone_url": "https://github.com/MSiam/pytorch-meta.git",
                "svn_url": "https://github.com/MSiam/pytorch-meta",
                "homepage": "https://tristandeleu.github.io/pytorch-meta/",
                "size": 927,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "mit",
                    "name": "MIT License",
                    "spdx_id": "MIT",
                    "url": "https://api.github.com/licenses/mit",
                    "node_id": "MDc6TGljZW5zZTEz"
                },
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2020-02-13T16:13:58Z"
    },
    {
        "id": "11511422026",
        "type": "IssuesEvent",
        "actor": {
            "id": 12859863,
            "login": "MSiam",
            "display_login": "MSiam",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MSiam",
            "avatar_url": "https://avatars.githubusercontent.com/u/12859863?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/29/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/29",
                "id": 564792590,
                "node_id": "MDU6SXNzdWU1NjQ3OTI1OTA=",
                "number": 29,
                "title": "Pascal5i Fewshot Segmentation",
                "user": {
                    "login": "MSiam",
                    "id": 12859863,
                    "node_id": "MDQ6VXNlcjEyODU5ODYz",
                    "avatar_url": "https://avatars0.githubusercontent.com/u/12859863?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/MSiam",
                    "html_url": "https://github.com/MSiam",
                    "followers_url": "https://api.github.com/users/MSiam/followers",
                    "following_url": "https://api.github.com/users/MSiam/following{/other_user}",
                    "gists_url": "https://api.github.com/users/MSiam/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/MSiam/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/MSiam/subscriptions",
                    "organizations_url": "https://api.github.com/users/MSiam/orgs",
                    "repos_url": "https://api.github.com/users/MSiam/repos",
                    "events_url": "https://api.github.com/users/MSiam/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/MSiam/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2020-02-13T16:12:35Z",
                "updated_at": "2020-02-13T16:12:35Z",
                "closed_at": null,
                "author_association": "NONE",
                "body": "Thanks for the great work.\r\n\r\nI am wondering if I can add a loader for pascal5i dataset as a pull request? I think it will greatly benefit the fewshot segmentation community to have it in that repo too.\r\n\r\n"
            }
        },
        "public": true,
        "created_at": "2020-02-13T16:12:36Z"
    },
    {
        "id": "11510890410",
        "type": "WatchEvent",
        "actor": {
            "id": 9952015,
            "login": "Kostis-S-Z",
            "display_login": "Kostis-S-Z",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kostis-S-Z",
            "avatar_url": "https://avatars.githubusercontent.com/u/9952015?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2020-02-13T15:22:04Z"
    },
    {
        "id": "11498047380",
        "type": "ForkEvent",
        "actor": {
            "id": 37095790,
            "login": "robot-ai-machinelearning",
            "display_login": "robot-ai-machinelearning",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robot-ai-machinelearning",
            "avatar_url": "https://avatars.githubusercontent.com/u/37095790?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "forkee": {
                "id": 239993189,
                "node_id": "MDEwOlJlcG9zaXRvcnkyMzk5OTMxODk=",
                "name": "pytorch-meta",
                "full_name": "robot-ai-machinelearning/pytorch-meta",
                "private": false,
                "owner": {
                    "login": "robot-ai-machinelearning",
                    "id": 37095790,
                    "node_id": "MDQ6VXNlcjM3MDk1Nzkw",
                    "avatar_url": "https://avatars2.githubusercontent.com/u/37095790?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/robot-ai-machinelearning",
                    "html_url": "https://github.com/robot-ai-machinelearning",
                    "followers_url": "https://api.github.com/users/robot-ai-machinelearning/followers",
                    "following_url": "https://api.github.com/users/robot-ai-machinelearning/following{/other_user}",
                    "gists_url": "https://api.github.com/users/robot-ai-machinelearning/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/robot-ai-machinelearning/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/robot-ai-machinelearning/subscriptions",
                    "organizations_url": "https://api.github.com/users/robot-ai-machinelearning/orgs",
                    "repos_url": "https://api.github.com/users/robot-ai-machinelearning/repos",
                    "events_url": "https://api.github.com/users/robot-ai-machinelearning/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/robot-ai-machinelearning/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/robot-ai-machinelearning/pytorch-meta",
                "description": "A collection of extensions and data-loaders for few-shot learning & meta-learning in PyTorch",
                "fork": true,
                "url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta",
                "forks_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/forks",
                "keys_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/teams",
                "hooks_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/hooks",
                "issue_events_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/issues/events{/number}",
                "events_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/events",
                "assignees_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/assignees{/user}",
                "branches_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/branches{/branch}",
                "tags_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/tags",
                "blobs_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/languages",
                "stargazers_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/stargazers",
                "contributors_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/contributors",
                "subscribers_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/subscribers",
                "subscription_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/subscription",
                "commits_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/contents/{+path}",
                "compare_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/merges",
                "archive_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/downloads",
                "issues_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/issues{/number}",
                "pulls_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/labels{/name}",
                "releases_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/releases{/id}",
                "deployments_url": "https://api.github.com/repos/robot-ai-machinelearning/pytorch-meta/deployments",
                "created_at": "2020-02-12T11:10:34Z",
                "updated_at": "2020-02-12T11:10:34Z",
                "pushed_at": "2020-02-11T16:47:58Z",
                "git_url": "git://github.com/robot-ai-machinelearning/pytorch-meta.git",
                "ssh_url": "git@github.com:robot-ai-machinelearning/pytorch-meta.git",
                "clone_url": "https://github.com/robot-ai-machinelearning/pytorch-meta.git",
                "svn_url": "https://github.com/robot-ai-machinelearning/pytorch-meta",
                "homepage": "https://tristandeleu.github.io/pytorch-meta/",
                "size": 927,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "mit",
                    "name": "MIT License",
                    "spdx_id": "MIT",
                    "url": "https://api.github.com/licenses/mit",
                    "node_id": "MDc6TGljZW5zZTEz"
                },
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2020-02-12T11:10:35Z"
    },
    {
        "id": "11498047234",
        "type": "WatchEvent",
        "actor": {
            "id": 37095790,
            "login": "robot-ai-machinelearning",
            "display_login": "robot-ai-machinelearning",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robot-ai-machinelearning",
            "avatar_url": "https://avatars.githubusercontent.com/u/37095790?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2020-02-12T11:10:34Z"
    },
    {
        "id": "11493660260",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 21101276,
            "login": "MarcCoru",
            "display_login": "MarcCoru",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcCoru",
            "avatar_url": "https://avatars.githubusercontent.com/u/21101276?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/25",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/25/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/25/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/25/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/25",
                "id": 561976491,
                "node_id": "MDU6SXNzdWU1NjE5NzY0OTE=",
                "number": 25,
                "title": "Omniglot: Sampling classes from the same alphabet for one task",
                "user": {
                    "login": "MarcCoru",
                    "id": 21101276,
                    "node_id": "MDQ6VXNlcjIxMTAxMjc2",
                    "avatar_url": "https://avatars2.githubusercontent.com/u/21101276?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/MarcCoru",
                    "html_url": "https://github.com/MarcCoru",
                    "followers_url": "https://api.github.com/users/MarcCoru/followers",
                    "following_url": "https://api.github.com/users/MarcCoru/following{/other_user}",
                    "gists_url": "https://api.github.com/users/MarcCoru/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/MarcCoru/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/MarcCoru/subscriptions",
                    "organizations_url": "https://api.github.com/users/MarcCoru/orgs",
                    "repos_url": "https://api.github.com/users/MarcCoru/repos",
                    "events_url": "https://api.github.com/users/MarcCoru/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/MarcCoru/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2020-02-08T06:05:15Z",
                "updated_at": "2020-02-11T23:33:59Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "body": "Hi,\r\nFirst of all, thank you for developing and maintaining this repository.\r\n\r\nI looked through the code and in particular the Omniglot dataset implementation and may have found one issue:\r\n\r\nThe `OmniglotClassDataset` defines each `alphabet/character` as separate class https://github.com/tristandeleu/pytorch-meta/blob/8e4e706c6aee07d8f6ecf8491866f18c951fcfa6/torchmeta/datasets/omniglot.py#L237\r\n\r\nHence, `self.num_classes` spans the number of classes times the number of alphabets.\r\nThen the `CombinationRandomSampler` samples random indices from the entire range of classes here https://github.com/tristandeleu/pytorch-meta/blob/8e4e706c6aee07d8f6ecf8491866f18c951fcfa6/torchmeta/utils/data/sampler.py#L32\r\n\r\n**This leads to classes from different alphabets being samples in the same task**. This arguably makes the classification task easier since characters of different alphabets may be easier to separate than characters from the same alphabet.\r\n\r\nIs this property intended? One task should include samples from the same alphabet according to my understanding.\r\n\r\nThis may be solved by a custom `CombinationSubsetRandomSampler` that only chooses indices from samples of the same alphabet. This would require some additional alphabet-index information in the `OmniglotClassDataset` or `OmniglotDataset`.\r\n\r\nThanks again for creating this repository."
            },
            "comment": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/584915317",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/25#issuecomment-584915317",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/25",
                "id": 584915317,
                "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDkxNTMxNw==",
                "user": {
                    "login": "MarcCoru",
                    "id": 21101276,
                    "node_id": "MDQ6VXNlcjIxMTAxMjc2",
                    "avatar_url": "https://avatars2.githubusercontent.com/u/21101276?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/MarcCoru",
                    "html_url": "https://github.com/MarcCoru",
                    "followers_url": "https://api.github.com/users/MarcCoru/followers",
                    "following_url": "https://api.github.com/users/MarcCoru/following{/other_user}",
                    "gists_url": "https://api.github.com/users/MarcCoru/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/MarcCoru/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/MarcCoru/subscriptions",
                    "organizations_url": "https://api.github.com/users/MarcCoru/orgs",
                    "repos_url": "https://api.github.com/users/MarcCoru/repos",
                    "events_url": "https://api.github.com/users/MarcCoru/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/MarcCoru/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2020-02-11T23:33:59Z",
                "updated_at": "2020-02-11T23:33:59Z",
                "author_association": "CONTRIBUTOR",
                "body": "Hi,\r\n\r\nYes, you are right. It seems common practice to merge classes and alphabets as one class and sample tasks from different alphabets. This is from [Finn et al., 2017](https://arxiv.org/pdf/1703.03400.pdf)\r\n\r\n> For Omniglot, we randomly select 1200 characters for training, irrespective of alphabet, and use the remaining for testing\r\n\r\nThanks for clarifying.\r\n\r\n"
            }
        },
        "public": true,
        "created_at": "2020-02-11T23:33:59Z"
    },
    {
        "id": "11490328886",
        "type": "IssuesEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/26",
                "id": 562021686,
                "node_id": "MDU6SXNzdWU1NjIwMjE2ODY=",
                "number": 26,
                "title": "Reproducing results",
                "user": {
                    "login": "eugenelet",
                    "id": 13523904,
                    "node_id": "MDQ6VXNlcjEzNTIzOTA0",
                    "avatar_url": "https://avatars0.githubusercontent.com/u/13523904?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eugenelet",
                    "html_url": "https://github.com/eugenelet",
                    "followers_url": "https://api.github.com/users/eugenelet/followers",
                    "following_url": "https://api.github.com/users/eugenelet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eugenelet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eugenelet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eugenelet/subscriptions",
                    "organizations_url": "https://api.github.com/users/eugenelet/orgs",
                    "repos_url": "https://api.github.com/users/eugenelet/repos",
                    "events_url": "https://api.github.com/users/eugenelet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eugenelet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2020-02-08T13:53:05Z",
                "updated_at": "2020-02-11T16:54:22Z",
                "closed_at": "2020-02-11T16:54:21Z",
                "author_association": "CONTRIBUTOR",
                "body": "Hi there, I'd like to ask if it's possible to include tabulated data comparing different approaches using different datasets as found in [meta_dataset](https://github.com/google-research/meta-dataset#models-trained-on-ilsvrc-2012-only)? Since some papers doesn't use the same split between training, validation and testing, re-implementation is required and I don't think it's necessary. Let me know if such comparison table based on `pytorch-meta` is provided elsewhere. Thanks!"
            }
        },
        "public": true,
        "created_at": "2020-02-11T16:54:22Z"
    },
    {
        "id": "11490328804",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/26",
                "id": 562021686,
                "node_id": "MDU6SXNzdWU1NjIwMjE2ODY=",
                "number": 26,
                "title": "Reproducing results",
                "user": {
                    "login": "eugenelet",
                    "id": 13523904,
                    "node_id": "MDQ6VXNlcjEzNTIzOTA0",
                    "avatar_url": "https://avatars0.githubusercontent.com/u/13523904?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eugenelet",
                    "html_url": "https://github.com/eugenelet",
                    "followers_url": "https://api.github.com/users/eugenelet/followers",
                    "following_url": "https://api.github.com/users/eugenelet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eugenelet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eugenelet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eugenelet/subscriptions",
                    "organizations_url": "https://api.github.com/users/eugenelet/orgs",
                    "repos_url": "https://api.github.com/users/eugenelet/repos",
                    "events_url": "https://api.github.com/users/eugenelet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eugenelet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2020-02-08T13:53:05Z",
                "updated_at": "2020-02-11T16:54:21Z",
                "closed_at": "2020-02-11T16:54:21Z",
                "author_association": "CONTRIBUTOR",
                "body": "Hi there, I'd like to ask if it's possible to include tabulated data comparing different approaches using different datasets as found in [meta_dataset](https://github.com/google-research/meta-dataset#models-trained-on-ilsvrc-2012-only)? Since some papers doesn't use the same split between training, validation and testing, re-implementation is required and I don't think it's necessary. Let me know if such comparison table based on `pytorch-meta` is provided elsewhere. Thanks!"
            },
            "comment": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/584735095",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/26#issuecomment-584735095",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26",
                "id": 584735095,
                "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDczNTA5NQ==",
                "user": {
                    "login": "tristandeleu",
                    "id": 2018752,
                    "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                    "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tristandeleu",
                    "html_url": "https://github.com/tristandeleu",
                    "followers_url": "https://api.github.com/users/tristandeleu/followers",
                    "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                    "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                    "repos_url": "https://api.github.com/users/tristandeleu/repos",
                    "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2020-02-11T16:54:21Z",
                "updated_at": "2020-02-11T16:54:21Z",
                "author_association": "OWNER",
                "body": "These kinds of contributions would be great, and are welcome!\r\nI am closing this issue for now, but feel free (or anyone reading this) to open a PR if you have your own reproduction of meta-learning algorithms using Torchmeta, I would love to include it here (with links to their implementations)."
            }
        },
        "public": true,
        "created_at": "2020-02-11T16:54:22Z"
    },
    {
        "id": "11490284447",
        "type": "IssuesEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/27",
                "id": 562806230,
                "node_id": "MDU6SXNzdWU1NjI4MDYyMzA=",
                "number": 27,
                "title": "Can not pass None as argument for target_transform for a dataset.",
                "user": {
                    "login": "tesfaldet",
                    "id": 5014902,
                    "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tesfaldet",
                    "html_url": "https://github.com/tesfaldet",
                    "followers_url": "https://api.github.com/users/tesfaldet/followers",
                    "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
                    "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
                    "repos_url": "https://api.github.com/users/tesfaldet/repos",
                    "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2020-02-10T20:24:04Z",
                "updated_at": "2020-02-11T16:49:57Z",
                "closed_at": "2020-02-11T16:49:57Z",
                "author_association": "CONTRIBUTOR",
                "body": "I've been wanting to implement label-conditioning for certain meta learning tasks, and at the moment, it seems that targets always have to be transformed such that the labels are between 0 - num_classes. If I pass None, then try to fetch inputs and targets, the error below appears:\r\n\r\n`dataset = DoubleMNIST(..., target_transform=None, ...)`\r\n`dataset = ClassSplitter(dataset, ...)`\r\n`dataloader = BatchMetaDataLoader(dataset, ...)`\r\n`inputs, targets = iter(dataloader).next()['train']`\r\n\r\n`TypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'NoneType'>`\r\n\r\nI've been looking into it, and it seems that if you pass None, a `FixedCategory(None)` object is created and applied to the target over here:\r\n\r\nhttps://github.com/tristandeleu/pytorch-meta/blob/10a34d8ec6d8217517033ff2e04a3138c986e3e1/torchmeta/datasets/doublemnist.py#L243-L246\r\n\r\n`(image, target)` is returned, where `target` is changed to `(label, None)`, which eventually causes Pytorch's `default_collate` function to raise a TypeError once it gets to the `None` type.\r\n\r\nhttps://github.com/pytorch/pytorch/blob/9d94f56ce02a814fb3c9dfe3fee675420a7e7e30/torch/utils/data/_utils/collate.py#L77-L81\r\n\r\nOtherwise, if you pass a Categorical target transform, a `Compose` object containing that transform is applied to the target, returning `(image, transformed_target)`.\r\n\r\nThe DoubleMNIST dataset is just one example, as this applies to all datasets that apply a target transform. I was going to modify the check:\r\n\r\nhttps://github.com/tristandeleu/pytorch-meta/blob/10a34d8ec6d8217517033ff2e04a3138c986e3e1/torchmeta/datasets/doublemnist.py#L243\r\n\r\nto `if self.target_transform.transform is not None` but that breaks if you provide a target transform, since Compose objects don't have the `transform` property. Also, I believe the line above is redundant anyways, since a target transform always exists? Even if not provided. Maybe this can be changed somehow?\r\n"
            }
        },
        "public": true,
        "created_at": "2020-02-11T16:49:58Z"
    },
    {
        "id": "11490284390",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/27",
                "id": 562806230,
                "node_id": "MDU6SXNzdWU1NjI4MDYyMzA=",
                "number": 27,
                "title": "Can not pass None as argument for target_transform for a dataset.",
                "user": {
                    "login": "tesfaldet",
                    "id": 5014902,
                    "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tesfaldet",
                    "html_url": "https://github.com/tesfaldet",
                    "followers_url": "https://api.github.com/users/tesfaldet/followers",
                    "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
                    "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
                    "repos_url": "https://api.github.com/users/tesfaldet/repos",
                    "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2020-02-10T20:24:04Z",
                "updated_at": "2020-02-11T16:49:57Z",
                "closed_at": "2020-02-11T16:49:57Z",
                "author_association": "CONTRIBUTOR",
                "body": "I've been wanting to implement label-conditioning for certain meta learning tasks, and at the moment, it seems that targets always have to be transformed such that the labels are between 0 - num_classes. If I pass None, then try to fetch inputs and targets, the error below appears:\r\n\r\n`dataset = DoubleMNIST(..., target_transform=None, ...)`\r\n`dataset = ClassSplitter(dataset, ...)`\r\n`dataloader = BatchMetaDataLoader(dataset, ...)`\r\n`inputs, targets = iter(dataloader).next()['train']`\r\n\r\n`TypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'NoneType'>`\r\n\r\nI've been looking into it, and it seems that if you pass None, a `FixedCategory(None)` object is created and applied to the target over here:\r\n\r\nhttps://github.com/tristandeleu/pytorch-meta/blob/10a34d8ec6d8217517033ff2e04a3138c986e3e1/torchmeta/datasets/doublemnist.py#L243-L246\r\n\r\n`(image, target)` is returned, where `target` is changed to `(label, None)`, which eventually causes Pytorch's `default_collate` function to raise a TypeError once it gets to the `None` type.\r\n\r\nhttps://github.com/pytorch/pytorch/blob/9d94f56ce02a814fb3c9dfe3fee675420a7e7e30/torch/utils/data/_utils/collate.py#L77-L81\r\n\r\nOtherwise, if you pass a Categorical target transform, a `Compose` object containing that transform is applied to the target, returning `(image, transformed_target)`.\r\n\r\nThe DoubleMNIST dataset is just one example, as this applies to all datasets that apply a target transform. I was going to modify the check:\r\n\r\nhttps://github.com/tristandeleu/pytorch-meta/blob/10a34d8ec6d8217517033ff2e04a3138c986e3e1/torchmeta/datasets/doublemnist.py#L243\r\n\r\nto `if self.target_transform.transform is not None` but that breaks if you provide a target transform, since Compose objects don't have the `transform` property. Also, I believe the line above is redundant anyways, since a target transform always exists? Even if not provided. Maybe this can be changed somehow?\r\n"
            },
            "comment": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/584732933",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/27#issuecomment-584732933",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27",
                "id": 584732933,
                "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDczMjkzMw==",
                "user": {
                    "login": "tristandeleu",
                    "id": 2018752,
                    "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                    "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tristandeleu",
                    "html_url": "https://github.com/tristandeleu",
                    "followers_url": "https://api.github.com/users/tristandeleu/followers",
                    "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                    "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                    "repos_url": "https://api.github.com/users/tristandeleu/repos",
                    "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2020-02-11T16:49:57Z",
                "updated_at": "2020-02-11T16:49:57Z",
                "author_association": "OWNER",
                "body": "Perfect, glad to hear that! I've made a new release (1.3.3) with this new default.\r\nThe inner workings of the library can be a bit confusing, and it is unfortunately not as documented as I would have liked."
            }
        },
        "public": true,
        "created_at": "2020-02-11T16:49:57Z"
    },
    {
        "id": "11490264621",
        "type": "PushEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "push_id": 4616614129,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "35f4cc222a3727390f988e9ef7ec78545ac0a0fd",
            "before": "ca269276a6b210b72e65be0d4cde0629485b1140",
            "commits": [
                {
                    "sha": "35f4cc222a3727390f988e9ef7ec78545ac0a0fd",
                    "author": {
                        "email": "tristan.deleu@gmail.com",
                        "name": "Tristan Deleu"
                    },
                    "message": "Bump version to 1.3.3",
                    "distinct": true,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/35f4cc222a3727390f988e9ef7ec78545ac0a0fd"
                }
            ]
        },
        "public": true,
        "created_at": "2020-02-11T16:47:59Z"
    },
    {
        "id": "11490250842",
        "type": "DeleteEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "ref": "task/default-target-transform",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2020-02-11T16:46:38Z"
    },
    {
        "id": "11490250116",
        "type": "PushEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "push_id": 4616606693,
            "size": 2,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "ca269276a6b210b72e65be0d4cde0629485b1140",
            "before": "10a34d8ec6d8217517033ff2e04a3138c986e3e1",
            "commits": [
                {
                    "sha": "4a455ab1afffd76595c62293d2ec8e4b4a29f7b2",
                    "author": {
                        "email": "tristan.deleu@gmail.com",
                        "name": "Tristan Deleu"
                    },
                    "message": "Use a well behaved default target_transform for default_collate",
                    "distinct": false,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/4a455ab1afffd76595c62293d2ec8e4b4a29f7b2"
                },
                {
                    "sha": "ca269276a6b210b72e65be0d4cde0629485b1140",
                    "author": {
                        "email": "tristandeleu@users.noreply.github.com",
                        "name": "Tristan Deleu"
                    },
                    "message": "Merge pull request #28 from tristandeleu/task/default-target-transform\n\nUse a well-behaved default target_transform for default_collate",
                    "distinct": true,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/ca269276a6b210b72e65be0d4cde0629485b1140"
                }
            ]
        },
        "public": true,
        "created_at": "2020-02-11T16:46:34Z"
    },
    {
        "id": "11490249958",
        "type": "PullRequestEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "closed",
            "number": 28,
            "pull_request": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28",
                "id": 373386072,
                "node_id": "MDExOlB1bGxSZXF1ZXN0MzczMzg2MDcy",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/pull/28",
                "diff_url": "https://github.com/tristandeleu/pytorch-meta/pull/28.diff",
                "patch_url": "https://github.com/tristandeleu/pytorch-meta/pull/28.patch",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28",
                "number": 28,
                "state": "closed",
                "locked": false,
                "title": "Use a well-behaved default target_transform for default_collate",
                "user": {
                    "login": "tristandeleu",
                    "id": 2018752,
                    "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                    "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tristandeleu",
                    "html_url": "https://github.com/tristandeleu",
                    "followers_url": "https://api.github.com/users/tristandeleu/followers",
                    "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                    "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                    "repos_url": "https://api.github.com/users/tristandeleu/repos",
                    "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": " - Use a default `target_transform` which is well-behaved for the `default_collate` function (i.e. which converts class augmentations to integers)\r\n - Addresses #27 @tesfaldet ",
                "created_at": "2020-02-10T22:28:11Z",
                "updated_at": "2020-02-11T16:46:32Z",
                "closed_at": "2020-02-11T16:46:32Z",
                "merged_at": "2020-02-11T16:46:32Z",
                "merge_commit_sha": "ca269276a6b210b72e65be0d4cde0629485b1140",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "commits_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28/commits",
                "review_comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28/comments",
                "review_comment_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28/comments",
                "statuses_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/statuses/4a455ab1afffd76595c62293d2ec8e4b4a29f7b2",
                "head": {
                    "label": "tristandeleu:task/default-target-transform",
                    "ref": "task/default-target-transform",
                    "sha": "4a455ab1afffd76595c62293d2ec8e4b4a29f7b2",
                    "user": {
                        "login": "tristandeleu",
                        "id": 2018752,
                        "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                        "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/tristandeleu",
                        "html_url": "https://github.com/tristandeleu",
                        "followers_url": "https://api.github.com/users/tristandeleu/followers",
                        "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                        "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                        "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                        "repos_url": "https://api.github.com/users/tristandeleu/repos",
                        "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 160432571,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjA0MzI1NzE=",
                        "name": "pytorch-meta",
                        "full_name": "tristandeleu/pytorch-meta",
                        "private": false,
                        "owner": {
                            "login": "tristandeleu",
                            "id": 2018752,
                            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/tristandeleu",
                            "html_url": "https://github.com/tristandeleu",
                            "followers_url": "https://api.github.com/users/tristandeleu/followers",
                            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                            "repos_url": "https://api.github.com/users/tristandeleu/repos",
                            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/tristandeleu/pytorch-meta",
                        "description": "A collection of extensions and data-loaders for few-shot learning & meta-learning in PyTorch",
                        "fork": false,
                        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                        "forks_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/forks",
                        "keys_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/teams",
                        "hooks_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/hooks",
                        "issue_events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/events",
                        "assignees_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/tags",
                        "blobs_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/languages",
                        "stargazers_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/stargazers",
                        "contributors_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/contributors",
                        "subscribers_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/subscribers",
                        "subscription_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/subscription",
                        "commits_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/merges",
                        "archive_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/downloads",
                        "issues_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/labels{/name}",
                        "releases_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/deployments",
                        "created_at": "2018-12-04T23:36:45Z",
                        "updated_at": "2020-02-10T18:36:20Z",
                        "pushed_at": "2020-02-11T16:46:32Z",
                        "git_url": "git://github.com/tristandeleu/pytorch-meta.git",
                        "ssh_url": "git@github.com:tristandeleu/pytorch-meta.git",
                        "clone_url": "https://github.com/tristandeleu/pytorch-meta.git",
                        "svn_url": "https://github.com/tristandeleu/pytorch-meta",
                        "homepage": "https://tristandeleu.github.io/pytorch-meta/",
                        "size": 926,
                        "stargazers_count": 537,
                        "watchers_count": 537,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "forks_count": 56,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 9,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "forks": 56,
                        "open_issues": 9,
                        "watchers": 537,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "tristandeleu:master",
                    "ref": "master",
                    "sha": "10a34d8ec6d8217517033ff2e04a3138c986e3e1",
                    "user": {
                        "login": "tristandeleu",
                        "id": 2018752,
                        "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                        "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/tristandeleu",
                        "html_url": "https://github.com/tristandeleu",
                        "followers_url": "https://api.github.com/users/tristandeleu/followers",
                        "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                        "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                        "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                        "repos_url": "https://api.github.com/users/tristandeleu/repos",
                        "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 160432571,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjA0MzI1NzE=",
                        "name": "pytorch-meta",
                        "full_name": "tristandeleu/pytorch-meta",
                        "private": false,
                        "owner": {
                            "login": "tristandeleu",
                            "id": 2018752,
                            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/tristandeleu",
                            "html_url": "https://github.com/tristandeleu",
                            "followers_url": "https://api.github.com/users/tristandeleu/followers",
                            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                            "repos_url": "https://api.github.com/users/tristandeleu/repos",
                            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/tristandeleu/pytorch-meta",
                        "description": "A collection of extensions and data-loaders for few-shot learning & meta-learning in PyTorch",
                        "fork": false,
                        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                        "forks_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/forks",
                        "keys_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/teams",
                        "hooks_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/hooks",
                        "issue_events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/events",
                        "assignees_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/tags",
                        "blobs_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/languages",
                        "stargazers_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/stargazers",
                        "contributors_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/contributors",
                        "subscribers_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/subscribers",
                        "subscription_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/subscription",
                        "commits_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/merges",
                        "archive_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/downloads",
                        "issues_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/labels{/name}",
                        "releases_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/deployments",
                        "created_at": "2018-12-04T23:36:45Z",
                        "updated_at": "2020-02-10T18:36:20Z",
                        "pushed_at": "2020-02-11T16:46:32Z",
                        "git_url": "git://github.com/tristandeleu/pytorch-meta.git",
                        "ssh_url": "git@github.com:tristandeleu/pytorch-meta.git",
                        "clone_url": "https://github.com/tristandeleu/pytorch-meta.git",
                        "svn_url": "https://github.com/tristandeleu/pytorch-meta",
                        "homepage": "https://tristandeleu.github.io/pytorch-meta/",
                        "size": 926,
                        "stargazers_count": 537,
                        "watchers_count": 537,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "forks_count": 56,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 9,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "forks": 56,
                        "open_issues": 9,
                        "watchers": 537,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28"
                    },
                    "html": {
                        "href": "https://github.com/tristandeleu/pytorch-meta/pull/28"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/statuses/4a455ab1afffd76595c62293d2ec8e4b4a29f7b2"
                    }
                },
                "author_association": "OWNER",
                "merged": true,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": {
                    "login": "tristandeleu",
                    "id": 2018752,
                    "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                    "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tristandeleu",
                    "html_url": "https://github.com/tristandeleu",
                    "followers_url": "https://api.github.com/users/tristandeleu/followers",
                    "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                    "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                    "repos_url": "https://api.github.com/users/tristandeleu/repos",
                    "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "comments": 1,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 33,
                "deletions": 2,
                "changed_files": 4
            }
        },
        "public": true,
        "created_at": "2020-02-11T16:46:33Z"
    },
    {
        "id": "11490068546",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5014902,
            "login": "tesfaldet",
            "display_login": "tesfaldet",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tesfaldet",
            "avatar_url": "https://avatars.githubusercontent.com/u/5014902?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/27",
                "id": 562806230,
                "node_id": "MDU6SXNzdWU1NjI4MDYyMzA=",
                "number": 27,
                "title": "Can not pass None as argument for target_transform for a dataset.",
                "user": {
                    "login": "tesfaldet",
                    "id": 5014902,
                    "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tesfaldet",
                    "html_url": "https://github.com/tesfaldet",
                    "followers_url": "https://api.github.com/users/tesfaldet/followers",
                    "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
                    "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
                    "repos_url": "https://api.github.com/users/tesfaldet/repos",
                    "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2020-02-10T20:24:04Z",
                "updated_at": "2020-02-11T16:28:55Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "body": "I've been wanting to implement label-conditioning for certain meta learning tasks, and at the moment, it seems that targets always have to be transformed such that the labels are between 0 - num_classes. If I pass None, then try to fetch inputs and targets, the error below appears:\r\n\r\n`dataset = DoubleMNIST(..., target_transform=None, ...)`\r\n`dataset = ClassSplitter(dataset, ...)`\r\n`dataloader = BatchMetaDataLoader(dataset, ...)`\r\n`inputs, targets = iter(dataloader).next()['train']`\r\n\r\n`TypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'NoneType'>`\r\n\r\nI've been looking into it, and it seems that if you pass None, a `FixedCategory(None)` object is created and applied to the target over here:\r\n\r\nhttps://github.com/tristandeleu/pytorch-meta/blob/10a34d8ec6d8217517033ff2e04a3138c986e3e1/torchmeta/datasets/doublemnist.py#L243-L246\r\n\r\n`(image, target)` is returned, where `target` is changed to `(label, None)`, which eventually causes Pytorch's `default_collate` function to raise a TypeError once it gets to the `None` type.\r\n\r\nhttps://github.com/pytorch/pytorch/blob/9d94f56ce02a814fb3c9dfe3fee675420a7e7e30/torch/utils/data/_utils/collate.py#L77-L81\r\n\r\nOtherwise, if you pass a Categorical target transform, a `Compose` object containing that transform is applied to the target, returning `(image, transformed_target)`.\r\n\r\nThe DoubleMNIST dataset is just one example, as this applies to all datasets that apply a target transform. I was going to modify the check:\r\n\r\nhttps://github.com/tristandeleu/pytorch-meta/blob/10a34d8ec6d8217517033ff2e04a3138c986e3e1/torchmeta/datasets/doublemnist.py#L243\r\n\r\nto `if self.target_transform.transform is not None` but that breaks if you provide a target transform, since Compose objects don't have the `transform` property. Also, I believe the line above is redundant anyways, since a target transform always exists? Even if not provided. Maybe this can be changed somehow?\r\n"
            },
            "comment": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/584722292",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/27#issuecomment-584722292",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27",
                "id": 584722292,
                "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDcyMjI5Mg==",
                "user": {
                    "login": "tesfaldet",
                    "id": 5014902,
                    "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tesfaldet",
                    "html_url": "https://github.com/tesfaldet",
                    "followers_url": "https://api.github.com/users/tesfaldet/followers",
                    "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
                    "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
                    "repos_url": "https://api.github.com/users/tesfaldet/repos",
                    "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2020-02-11T16:28:55Z",
                "updated_at": "2020-02-11T16:28:55Z",
                "author_association": "CONTRIBUTOR",
                "body": "It seems your PR solves the issue on my end! I'm curious about how it all works, but that'll take some more time digging and tracing through the code. Thanks for the quick response!"
            }
        },
        "public": true,
        "created_at": "2020-02-11T16:28:56Z"
    },
    {
        "id": "11490036099",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5014902,
            "login": "tesfaldet",
            "display_login": "tesfaldet",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tesfaldet",
            "avatar_url": "https://avatars.githubusercontent.com/u/5014902?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/pull/28",
                "id": 562867204,
                "node_id": "MDExOlB1bGxSZXF1ZXN0MzczMzg2MDcy",
                "number": 28,
                "title": "Use a well-behaved default target_transform for default_collate",
                "user": {
                    "login": "tristandeleu",
                    "id": 2018752,
                    "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                    "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tristandeleu",
                    "html_url": "https://github.com/tristandeleu",
                    "followers_url": "https://api.github.com/users/tristandeleu/followers",
                    "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                    "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                    "repos_url": "https://api.github.com/users/tristandeleu/repos",
                    "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2020-02-10T22:28:11Z",
                "updated_at": "2020-02-11T16:25:54Z",
                "closed_at": null,
                "author_association": "OWNER",
                "pull_request": {
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28",
                    "html_url": "https://github.com/tristandeleu/pytorch-meta/pull/28",
                    "diff_url": "https://github.com/tristandeleu/pytorch-meta/pull/28.diff",
                    "patch_url": "https://github.com/tristandeleu/pytorch-meta/pull/28.patch"
                },
                "body": " - Use a default `target_transform` which is well-behaved for the `default_collate` function (i.e. which converts class augmentations to integers)\r\n - Addresses #27 @tesfaldet "
            },
            "comment": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/584720671",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/pull/28#issuecomment-584720671",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28",
                "id": 584720671,
                "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDcyMDY3MQ==",
                "user": {
                    "login": "tesfaldet",
                    "id": 5014902,
                    "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tesfaldet",
                    "html_url": "https://github.com/tesfaldet",
                    "followers_url": "https://api.github.com/users/tesfaldet/followers",
                    "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
                    "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
                    "repos_url": "https://api.github.com/users/tesfaldet/repos",
                    "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2020-02-11T16:25:54Z",
                "updated_at": "2020-02-11T16:25:54Z",
                "author_association": "CONTRIBUTOR",
                "body": "Just tried it and it works perfectly for me!"
            }
        },
        "public": true,
        "created_at": "2020-02-11T16:25:55Z"
    },
    {
        "id": "11484071229",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 13523904,
            "login": "eugenelet",
            "display_login": "eugenelet",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eugenelet",
            "avatar_url": "https://avatars.githubusercontent.com/u/13523904?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/26",
                "id": 562021686,
                "node_id": "MDU6SXNzdWU1NjIwMjE2ODY=",
                "number": 26,
                "title": "Reproducing results",
                "user": {
                    "login": "eugenelet",
                    "id": 13523904,
                    "node_id": "MDQ6VXNlcjEzNTIzOTA0",
                    "avatar_url": "https://avatars0.githubusercontent.com/u/13523904?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eugenelet",
                    "html_url": "https://github.com/eugenelet",
                    "followers_url": "https://api.github.com/users/eugenelet/followers",
                    "following_url": "https://api.github.com/users/eugenelet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eugenelet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eugenelet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eugenelet/subscriptions",
                    "organizations_url": "https://api.github.com/users/eugenelet/orgs",
                    "repos_url": "https://api.github.com/users/eugenelet/repos",
                    "events_url": "https://api.github.com/users/eugenelet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eugenelet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2020-02-08T13:53:05Z",
                "updated_at": "2020-02-11T02:10:55Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "body": "Hi there, I'd like to ask if it's possible to include tabulated data comparing different approaches using different datasets as found in [meta_dataset](https://github.com/google-research/meta-dataset#models-trained-on-ilsvrc-2012-only)? Since some papers doesn't use the same split between training, validation and testing, re-implementation is required and I don't think it's necessary. Let me know if such comparison table based on `pytorch-meta` is provided elsewhere. Thanks!"
            },
            "comment": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/584449732",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/26#issuecomment-584449732",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/26",
                "id": 584449732,
                "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDQ0OTczMg==",
                "user": {
                    "login": "eugenelet",
                    "id": 13523904,
                    "node_id": "MDQ6VXNlcjEzNTIzOTA0",
                    "avatar_url": "https://avatars0.githubusercontent.com/u/13523904?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eugenelet",
                    "html_url": "https://github.com/eugenelet",
                    "followers_url": "https://api.github.com/users/eugenelet/followers",
                    "following_url": "https://api.github.com/users/eugenelet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eugenelet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eugenelet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eugenelet/subscriptions",
                    "organizations_url": "https://api.github.com/users/eugenelet/orgs",
                    "repos_url": "https://api.github.com/users/eugenelet/repos",
                    "events_url": "https://api.github.com/users/eugenelet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eugenelet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2020-02-11T02:10:55Z",
                "updated_at": "2020-02-11T02:10:55Z",
                "author_association": "CONTRIBUTOR",
                "body": "Hi! Thanks for the reply. I'm thinking that the results of the implementations would be sufficient. Probably an empty table provided for researchers that uses Torchmeta to contribute to if they made a re-implementation of some algorithms using Torchmeta. This would encourage the quick adoption of Torchmeta in their meta-learning pipeline for publication purpose."
            }
        },
        "public": true,
        "created_at": "2020-02-11T02:10:55Z"
    },
    {
        "id": "11482914577",
        "type": "PullRequestEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "opened",
            "number": 28,
            "pull_request": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28",
                "id": 373386072,
                "node_id": "MDExOlB1bGxSZXF1ZXN0MzczMzg2MDcy",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/pull/28",
                "diff_url": "https://github.com/tristandeleu/pytorch-meta/pull/28.diff",
                "patch_url": "https://github.com/tristandeleu/pytorch-meta/pull/28.patch",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28",
                "number": 28,
                "state": "open",
                "locked": false,
                "title": "Use a well-behaved default target_transform for default_collate",
                "user": {
                    "login": "tristandeleu",
                    "id": 2018752,
                    "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                    "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tristandeleu",
                    "html_url": "https://github.com/tristandeleu",
                    "followers_url": "https://api.github.com/users/tristandeleu/followers",
                    "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                    "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                    "repos_url": "https://api.github.com/users/tristandeleu/repos",
                    "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": " - Use a default `target_transform` which is well-behaved for the `default_collate` function (i.e. which converts class augmentations to integers)\r\n - Addresses #27 @tesfaldet ",
                "created_at": "2020-02-10T22:28:11Z",
                "updated_at": "2020-02-10T22:28:11Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "commits_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28/commits",
                "review_comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28/comments",
                "review_comment_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28/comments",
                "statuses_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/statuses/4a455ab1afffd76595c62293d2ec8e4b4a29f7b2",
                "head": {
                    "label": "tristandeleu:task/default-target-transform",
                    "ref": "task/default-target-transform",
                    "sha": "4a455ab1afffd76595c62293d2ec8e4b4a29f7b2",
                    "user": {
                        "login": "tristandeleu",
                        "id": 2018752,
                        "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                        "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/tristandeleu",
                        "html_url": "https://github.com/tristandeleu",
                        "followers_url": "https://api.github.com/users/tristandeleu/followers",
                        "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                        "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                        "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                        "repos_url": "https://api.github.com/users/tristandeleu/repos",
                        "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 160432571,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjA0MzI1NzE=",
                        "name": "pytorch-meta",
                        "full_name": "tristandeleu/pytorch-meta",
                        "private": false,
                        "owner": {
                            "login": "tristandeleu",
                            "id": 2018752,
                            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/tristandeleu",
                            "html_url": "https://github.com/tristandeleu",
                            "followers_url": "https://api.github.com/users/tristandeleu/followers",
                            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                            "repos_url": "https://api.github.com/users/tristandeleu/repos",
                            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/tristandeleu/pytorch-meta",
                        "description": "A collection of extensions and data-loaders for few-shot learning & meta-learning in PyTorch",
                        "fork": false,
                        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                        "forks_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/forks",
                        "keys_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/teams",
                        "hooks_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/hooks",
                        "issue_events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/events",
                        "assignees_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/tags",
                        "blobs_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/languages",
                        "stargazers_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/stargazers",
                        "contributors_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/contributors",
                        "subscribers_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/subscribers",
                        "subscription_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/subscription",
                        "commits_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/merges",
                        "archive_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/downloads",
                        "issues_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/labels{/name}",
                        "releases_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/deployments",
                        "created_at": "2018-12-04T23:36:45Z",
                        "updated_at": "2020-02-10T18:36:20Z",
                        "pushed_at": "2020-02-10T22:26:31Z",
                        "git_url": "git://github.com/tristandeleu/pytorch-meta.git",
                        "ssh_url": "git@github.com:tristandeleu/pytorch-meta.git",
                        "clone_url": "https://github.com/tristandeleu/pytorch-meta.git",
                        "svn_url": "https://github.com/tristandeleu/pytorch-meta",
                        "homepage": "https://tristandeleu.github.io/pytorch-meta/",
                        "size": 924,
                        "stargazers_count": 537,
                        "watchers_count": 537,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "forks_count": 56,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 10,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "forks": 56,
                        "open_issues": 10,
                        "watchers": 537,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "tristandeleu:master",
                    "ref": "master",
                    "sha": "10a34d8ec6d8217517033ff2e04a3138c986e3e1",
                    "user": {
                        "login": "tristandeleu",
                        "id": 2018752,
                        "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                        "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/tristandeleu",
                        "html_url": "https://github.com/tristandeleu",
                        "followers_url": "https://api.github.com/users/tristandeleu/followers",
                        "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                        "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                        "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                        "repos_url": "https://api.github.com/users/tristandeleu/repos",
                        "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 160432571,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNjA0MzI1NzE=",
                        "name": "pytorch-meta",
                        "full_name": "tristandeleu/pytorch-meta",
                        "private": false,
                        "owner": {
                            "login": "tristandeleu",
                            "id": 2018752,
                            "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                            "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/tristandeleu",
                            "html_url": "https://github.com/tristandeleu",
                            "followers_url": "https://api.github.com/users/tristandeleu/followers",
                            "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                            "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                            "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                            "repos_url": "https://api.github.com/users/tristandeleu/repos",
                            "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/tristandeleu/pytorch-meta",
                        "description": "A collection of extensions and data-loaders for few-shot learning & meta-learning in PyTorch",
                        "fork": false,
                        "url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                        "forks_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/forks",
                        "keys_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/teams",
                        "hooks_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/hooks",
                        "issue_events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/events",
                        "assignees_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/tags",
                        "blobs_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/languages",
                        "stargazers_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/stargazers",
                        "contributors_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/contributors",
                        "subscribers_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/subscribers",
                        "subscription_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/subscription",
                        "commits_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/merges",
                        "archive_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/downloads",
                        "issues_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/labels{/name}",
                        "releases_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/deployments",
                        "created_at": "2018-12-04T23:36:45Z",
                        "updated_at": "2020-02-10T18:36:20Z",
                        "pushed_at": "2020-02-10T22:26:31Z",
                        "git_url": "git://github.com/tristandeleu/pytorch-meta.git",
                        "ssh_url": "git@github.com:tristandeleu/pytorch-meta.git",
                        "clone_url": "https://github.com/tristandeleu/pytorch-meta.git",
                        "svn_url": "https://github.com/tristandeleu/pytorch-meta",
                        "homepage": "https://tristandeleu.github.io/pytorch-meta/",
                        "size": 924,
                        "stargazers_count": 537,
                        "watchers_count": 537,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "forks_count": 56,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 10,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "forks": 56,
                        "open_issues": 10,
                        "watchers": 537,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28"
                    },
                    "html": {
                        "href": "https://github.com/tristandeleu/pytorch-meta/pull/28"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/28/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/pulls/28/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/tristandeleu/pytorch-meta/statuses/4a455ab1afffd76595c62293d2ec8e4b4a29f7b2"
                    }
                },
                "author_association": "OWNER",
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 33,
                "deletions": 2,
                "changed_files": 4
            }
        },
        "public": true,
        "created_at": "2020-02-10T22:28:12Z"
    },
    {
        "id": "11482902662",
        "type": "CreateEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "ref": "task/default-target-transform",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "A collection of extensions and data-loaders for few-shot learning & meta-learning in PyTorch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2020-02-10T22:26:32Z"
    },
    {
        "id": "11482595512",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/27",
                "id": 562806230,
                "node_id": "MDU6SXNzdWU1NjI4MDYyMzA=",
                "number": 27,
                "title": "Can not pass None as argument for target_transform for a dataset.",
                "user": {
                    "login": "tesfaldet",
                    "id": 5014902,
                    "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tesfaldet",
                    "html_url": "https://github.com/tesfaldet",
                    "followers_url": "https://api.github.com/users/tesfaldet/followers",
                    "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
                    "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
                    "repos_url": "https://api.github.com/users/tesfaldet/repos",
                    "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2020-02-10T20:24:04Z",
                "updated_at": "2020-02-10T21:46:13Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "body": "I've been wanting to implement label-conditioning for certain meta learning tasks, and at the moment, it seems that targets always have to be transformed such that the labels are between 0 - num_classes. If I pass None, then try to fetch inputs and targets, the error below appears:\r\n\r\n`dataset = DoubleMNIST(..., target_transform=None, ...)`\r\n`dataset = ClassSplitter(dataset, ...)`\r\n`dataloader = BatchMetaDataLoader(dataset, ...)`\r\n`inputs, targets = iter(dataloader).next()['train']`\r\n\r\n`TypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'NoneType'>`\r\n\r\nI've been looking into it, and it seems that if you pass None, a `FixedCategory(None)` object is created and applied to the target over here:\r\n\r\nhttps://github.com/tristandeleu/pytorch-meta/blob/10a34d8ec6d8217517033ff2e04a3138c986e3e1/torchmeta/datasets/doublemnist.py#L243-L246\r\n\r\n`(image, target)` is returned, where `target` is changed to `(label, None)`, which eventually causes Pytorch's `default_collate` function to raise a TypeError once it gets to the `None` type.\r\n\r\nhttps://github.com/pytorch/pytorch/blob/9d94f56ce02a814fb3c9dfe3fee675420a7e7e30/torch/utils/data/_utils/collate.py#L77-L81\r\n\r\nOtherwise, if you pass a Categorical target transform, a `Compose` object containing that transform is applied to the target, returning `(image, transformed_target)`.\r\n\r\nThe DoubleMNIST dataset is just one example, as this applies to all datasets that apply a target transform. I was going to modify the check:\r\n\r\nhttps://github.com/tristandeleu/pytorch-meta/blob/10a34d8ec6d8217517033ff2e04a3138c986e3e1/torchmeta/datasets/doublemnist.py#L243\r\n\r\nto `if self.target_transform.transform is not None` but that breaks if you provide a target transform, since Compose objects don't have the `transform` property. Also, I believe the line above is redundant anyways, since a target transform always exists? Even if not provided. Maybe this can be changed somehow?\r\n"
            },
            "comment": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/comments/584373037",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/27#issuecomment-584373037",
                "issue_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27",
                "id": 584373037,
                "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDM3MzAzNw==",
                "user": {
                    "login": "tristandeleu",
                    "id": 2018752,
                    "node_id": "MDQ6VXNlcjIwMTg3NTI=",
                    "avatar_url": "https://avatars1.githubusercontent.com/u/2018752?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tristandeleu",
                    "html_url": "https://github.com/tristandeleu",
                    "followers_url": "https://api.github.com/users/tristandeleu/followers",
                    "following_url": "https://api.github.com/users/tristandeleu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tristandeleu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tristandeleu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tristandeleu/subscriptions",
                    "organizations_url": "https://api.github.com/users/tristandeleu/orgs",
                    "repos_url": "https://api.github.com/users/tristandeleu/repos",
                    "events_url": "https://api.github.com/users/tristandeleu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tristandeleu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2020-02-10T21:46:13Z",
                "updated_at": "2020-02-10T21:46:13Z",
                "author_association": "OWNER",
                "body": "> `(image, target)` is returned, where `target` is changed to `(label, None)`, which eventually causes Pytorch's `default_collate` function to raise a TypeError once it gets to the `None` type.\r\n\r\nThis implicit transformation of `target` is to handle the class augmentations. That's indeed a bad default behavior that it crashes with `target_transform=None`. One solution could be to have a default target transform that is reasonable (in that it can handle the class augmentations) and that works with `BatchMetaDataLoader` (for example have a default target transform that maps the labels to integers)."
            }
        },
        "public": true,
        "created_at": "2020-02-10T21:46:14Z"
    },
    {
        "id": "11481941872",
        "type": "IssuesEvent",
        "actor": {
            "id": 5014902,
            "login": "tesfaldet",
            "display_login": "tesfaldet",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tesfaldet",
            "avatar_url": "https://avatars.githubusercontent.com/u/5014902?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27",
                "repository_url": "https://api.github.com/repos/tristandeleu/pytorch-meta",
                "labels_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/labels{/name}",
                "comments_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/comments",
                "events_url": "https://api.github.com/repos/tristandeleu/pytorch-meta/issues/27/events",
                "html_url": "https://github.com/tristandeleu/pytorch-meta/issues/27",
                "id": 562806230,
                "node_id": "MDU6SXNzdWU1NjI4MDYyMzA=",
                "number": 27,
                "title": "Can not pass None as argument for target_transform for a dataset.",
                "user": {
                    "login": "tesfaldet",
                    "id": 5014902,
                    "node_id": "MDQ6VXNlcjUwMTQ5MDI=",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/5014902?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tesfaldet",
                    "html_url": "https://github.com/tesfaldet",
                    "followers_url": "https://api.github.com/users/tesfaldet/followers",
                    "following_url": "https://api.github.com/users/tesfaldet/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tesfaldet/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tesfaldet/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tesfaldet/subscriptions",
                    "organizations_url": "https://api.github.com/users/tesfaldet/orgs",
                    "repos_url": "https://api.github.com/users/tesfaldet/repos",
                    "events_url": "https://api.github.com/users/tesfaldet/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tesfaldet/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2020-02-10T20:24:04Z",
                "updated_at": "2020-02-10T20:24:04Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "body": "I've been wanting to implement label-conditioning for certain meta learning tasks, and at the moment, it seems that targets always have to be transformed such that the labels are between 0 - num_classes. If I pass None, then try to fetch inputs and targets, the error below appears:\r\n\r\n`dataset = DoubleMNIST(..., target_transform=None, ...)`\r\n`dataset = ClassSplitter(dataset, ...)`\r\n`dataloader = BatchMetaDataLoader(dataset, ...)`\r\n`inputs, targets = iter(dataloader).next()['train']`\r\n\r\n`TypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'NoneType'>`\r\n\r\nI've been looking into it, and it seems that if you pass None, a `FixedCategory(None)` object is created and applied to the target over here:\r\n\r\nhttps://github.com/tristandeleu/pytorch-meta/blob/10a34d8ec6d8217517033ff2e04a3138c986e3e1/torchmeta/datasets/doublemnist.py#L243-L246\r\n\r\n`(image, target)` is returned, where `target` is changed to `(label, None)`, which eventually causes Pytorch's `default_collate` function to raise a TypeError once it gets to the `None` type.\r\n\r\nhttps://github.com/pytorch/pytorch/blob/9d94f56ce02a814fb3c9dfe3fee675420a7e7e30/torch/utils/data/_utils/collate.py#L77-L81\r\n\r\nOtherwise, if you pass a Categorical target transform, a `Compose` object containing that transform is applied to the target, returning `(image, transformed_target)`.\r\n\r\nThe DoubleMNIST dataset is just one example, as this applies to all datasets that apply a target transform. I was going to modify the check:\r\n\r\nhttps://github.com/tristandeleu/pytorch-meta/blob/10a34d8ec6d8217517033ff2e04a3138c986e3e1/torchmeta/datasets/doublemnist.py#L243\r\n\r\nto `if self.target_transform.transform is not None` but that breaks if you provide a target transform, since Compose objects don't have the `transform` property. Also, I believe the line above is redundant anyways, since a target transform always exists? Even if not provided. Maybe this can be changed somehow?\r\n"
            }
        },
        "public": true,
        "created_at": "2020-02-10T20:24:05Z"
    },
    {
        "id": "11481156529",
        "type": "PushEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "push_id": 4611739220,
            "size": 8,
            "distinct_size": 0,
            "ref": "refs/heads/develop",
            "head": "10a34d8ec6d8217517033ff2e04a3138c986e3e1",
            "before": "3607189400924d3750aa1d5658be2dfffc7419b0",
            "commits": [
                {
                    "sha": "0f67e10afa90aa5ffed98f76f3a730c2c73cc642",
                    "author": {
                        "email": "tristan.deleu@gmail.com",
                        "name": "Tristan Deleu"
                    },
                    "message": "Update version of dependencies",
                    "distinct": false,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/0f67e10afa90aa5ffed98f76f3a730c2c73cc642"
                },
                {
                    "sha": "049f5ca72b439d00ca55d31eb9687138f5d1a33e",
                    "author": {
                        "email": "tristan.deleu@gmail.com",
                        "name": "Tristan Deleu"
                    },
                    "message": "Bump version to 1.3.0",
                    "distinct": false,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/049f5ca72b439d00ca55d31eb9687138f5d1a33e"
                },
                {
                    "sha": "8e4e706c6aee07d8f6ecf8491866f18c951fcfa6",
                    "author": {
                        "email": "tristan.deleu@gmail.com",
                        "name": "Tristan Deleu"
                    },
                    "message": "Update README and License to 2020",
                    "distinct": false,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/8e4e706c6aee07d8f6ecf8491866f18c951fcfa6"
                },
                {
                    "sha": "d5b92da167ca953f3cc2186ca16beff755584155",
                    "author": {
                        "email": "marc.russwurm@tum.de",
                        "name": "Marc Ru\u00dfwurm"
                    },
                    "message": "forwarded sampler instance from BatchMetaDataLoader to MetaDataLoader",
                    "distinct": false,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/d5b92da167ca953f3cc2186ca16beff755584155"
                },
                {
                    "sha": "d4c96dc771742a2235d14d804cc017ba88fded27",
                    "author": {
                        "email": "tristandeleu@users.noreply.github.com",
                        "name": "Tristan Deleu"
                    },
                    "message": "Merge pull request #24 from MarcCoru/master\n\nforwarded sampler instance from BatchMetaDataLoader to MetaDataLoader",
                    "distinct": false,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/d4c96dc771742a2235d14d804cc017ba88fded27"
                },
                {
                    "sha": "83c792b4e480ff0acb275212d31253597f16bd3a",
                    "author": {
                        "email": "tristan.deleu@gmail.com",
                        "name": "Tristan Deleu"
                    },
                    "message": "Refactor helper functions for datasets",
                    "distinct": false,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/83c792b4e480ff0acb275212d31253597f16bd3a"
                },
                {
                    "sha": "5bc8638f1f640724a6f03aafd3b7606595d308d8",
                    "author": {
                        "email": "tristan.deleu@gmail.com",
                        "name": "Tristan Deleu"
                    },
                    "message": "Bump version to 1.3.1",
                    "distinct": false,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/5bc8638f1f640724a6f03aafd3b7606595d308d8"
                },
                {
                    "sha": "10a34d8ec6d8217517033ff2e04a3138c986e3e1",
                    "author": {
                        "email": "tristan.deleu@gmail.com",
                        "name": "Tristan Deleu"
                    },
                    "message": "Fix incompatibility between torchvision 0.5 and Pillow 7.0.0",
                    "distinct": false,
                    "url": "https://api.github.com/repos/tristandeleu/pytorch-meta/commits/10a34d8ec6d8217517033ff2e04a3138c986e3e1"
                }
            ]
        },
        "public": true,
        "created_at": "2020-02-10T18:49:19Z"
    },
    {
        "id": "11481153161",
        "type": "DeleteEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "ref": "dataset/cub",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2020-02-10T18:48:55Z"
    },
    {
        "id": "11481149780",
        "type": "DeleteEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "ref": "dataset/tcga/blacklist",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2020-02-10T18:48:30Z"
    },
    {
        "id": "11481149619",
        "type": "DeleteEvent",
        "actor": {
            "id": 2018752,
            "login": "tristandeleu",
            "display_login": "tristandeleu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristandeleu",
            "avatar_url": "https://avatars.githubusercontent.com/u/2018752?"
        },
        "repo": {
            "id": 160432571,
            "name": "tristandeleu/pytorch-meta",
            "url": "https://api.github.com/repos/tristandeleu/pytorch-meta"
        },
        "payload": {
            "ref": "new_tcga",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2020-02-10T18:48:29Z"
    }
]